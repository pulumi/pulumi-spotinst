{
    "name": "spotinst",
    "description": "A Pulumi package for creating and managing spotinst cloud resources.",
    "keywords": [
        "pulumi",
        "spotinst"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`spotinst` Terraform Provider](https://github.com/spotinst/terraform-provider-spotinst).",
    "repository": "https://github.com/pulumi/pulumi-spotinst",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "namespaces": {
                "aws": "Aws",
                "azure": "Azure",
                "ecs": "Ecs",
                "gcp": "Gcp",
                "gke": "Gke",
                "index": "Index",
                "spark": "Spark",
                "spotinst": "SpotInst"
            },
            "compatibility": "tfbridge20"
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing spotinst cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/spotinst/terraform-provider-spotinst)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-spotinst` repo](https://github.com/pulumi/pulumi-spotinst/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-spotinst` repo](https://github.com/spotinst/terraform-provider-spotinst/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/spotinst/terraform-provider-spotinst)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-spotinst` repo](https://github.com/pulumi/pulumi-spotinst/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-spotinst` repo](https://github.com/spotinst/terraform-provider-spotinst/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "account": {
                "type": "string",
                "description": "Spotinst Account ID\n"
            },
            "featureFlags": {
                "type": "string",
                "description": "Spotinst SDK Feature Flags\n"
            },
            "token": {
                "type": "string",
                "description": "Spotinst Personal API Access Token\n"
            }
        }
    },
    "types": {
        "spotinst:aws/BeanstalkDeploymentPreferences:BeanstalkDeploymentPreferences": {
            "properties": {
                "automaticRoll": {
                    "type": "boolean",
                    "description": "Should roll perform automatically\n"
                },
                "batchSizePercentage": {
                    "type": "integer",
                    "description": "Percent size of each batch\n"
                },
                "gracePeriod": {
                    "type": "integer",
                    "description": "Amount of time to wait between batches\n"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/BeanstalkDeploymentPreferencesStrategy:BeanstalkDeploymentPreferencesStrategy"
                    },
                    "description": "Strategy parameters\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/BeanstalkDeploymentPreferencesStrategy:BeanstalkDeploymentPreferencesStrategy": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action to take\n"
                },
                "shouldDrainInstances": {
                    "type": "boolean",
                    "description": "Bool value if to wait to drain instance\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/BeanstalkManagedActions:BeanstalkManagedActions": {
            "properties": {
                "platformUpdate": {
                    "$ref": "#/types/spotinst:aws/BeanstalkManagedActionsPlatformUpdate:BeanstalkManagedActionsPlatformUpdate",
                    "description": "Platform Update parameters\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/BeanstalkManagedActionsPlatformUpdate:BeanstalkManagedActionsPlatformUpdate": {
            "properties": {
                "performAt": {
                    "type": "string",
                    "description": "Actions to perform (options: timeWindow, never)\n"
                },
                "timeWindow": {
                    "type": "string",
                    "description": "Time Window for when action occurs ex. Mon:23:50-Tue:00:20\n"
                },
                "updateLevel": {
                    "type": "string",
                    "description": "Level to update\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/BeanstalkScheduledTask:BeanstalkScheduledTask": {
            "properties": {
                "adjustment": {
                    "type": "string",
                    "description": "The number of instances to add or remove.\n"
                },
                "adjustmentPercentage": {
                    "type": "string",
                    "description": "The percentage of instances to add or remove.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "batchSizePercentage": {
                    "type": "string",
                    "description": "The percentage size of each batch in the scheduled deployment roll.\n"
                },
                "cronExpression": {
                    "type": "string",
                    "description": "A valid cron expression. The cron is running in UTC time zone and is in [Unix cron format](https://en.wikipedia.org/wiki/Cron).\n"
                },
                "frequency": {
                    "type": "string",
                    "description": "The recurrence frequency to run this task. Supported values are `\"hourly\"`, `\"daily\"`, `\"weekly\"` and `\"continuous\"`.\n"
                },
                "gracePeriod": {
                    "type": "string",
                    "description": "The period of time (seconds) to wait before checking a batch's health after it's deployment.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Setting the task to being enabled or disabled.\n"
                },
                "maxCapacity": {
                    "type": "string",
                    "description": "The maximum number of instances the group should have.\n"
                },
                "minCapacity": {
                    "type": "string",
                    "description": "The minimum number of instances the group should have.\n"
                },
                "scaleMaxCapacity": {
                    "type": "string",
                    "description": "The maximum number of instances the group should have.\n"
                },
                "scaleMinCapacity": {
                    "type": "string",
                    "description": "The minimum number of instances the group should have.\n"
                },
                "scaleTargetCapacity": {
                    "type": "string",
                    "description": "The desired number of instances the group should have.\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "Set a start time for one time tasks.\n"
                },
                "targetCapacity": {
                    "type": "string",
                    "description": "The desired number of instances the group should have.\n"
                },
                "taskType": {
                    "type": "string",
                    "description": "The task type to run. Supported task types are: `\"scale\"`, `\"backup_ami\"`, `\"roll\"`, `\"scaleUp\"`, `\"percentageScaleUp\"`, `\"scaleDown\"`, `\"percentageScaleDown\"`, `\"statefulUpdateCapacity\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "taskType"
            ]
        },
        "spotinst:aws/ElastigroupCpuOptions:ElastigroupCpuOptions": {
            "properties": {
                "threadsPerCore": {
                    "type": "integer",
                    "description": "The ability to define the number of threads per core in instances that allow this.\n"
                }
            },
            "type": "object",
            "required": [
                "threadsPerCore"
            ]
        },
        "spotinst:aws/ElastigroupEbsBlockDevice:ElastigroupEbsBlockDevice": {
            "properties": {
                "deleteOnTermination": {
                    "type": "boolean",
                    "description": "Whether the volume should be destroyed on instance termination.\n"
                },
                "deviceName": {
                    "type": "string",
                    "description": "The name of the device to mount.\n"
                },
                "encrypted": {
                    "type": "boolean",
                    "description": "Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume.\n"
                },
                "iops": {
                    "type": "integer",
                    "description": "The amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). This must be set with a `volume_type` of `\"io1\"`.\n"
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "ID for a user managed CMK under which the EBS Volume is encrypted\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "The Snapshot ID to mount.\n"
                },
                "throughput": {
                    "type": "integer",
                    "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that `volume_type` = gp3.\n\nModifying any `ebs_block_device` currently requires resource replacement.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "The size of the volume in gigabytes.\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "The type of volume. Can be `\"standard\"`, `\"gp2\"`, `\"gp3\"`, `\"io1\"`, `\"st1\"` or `\"sc1\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "deviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteOnTermination",
                        "deviceName",
                        "encrypted",
                        "volumeType"
                    ]
                }
            }
        },
        "spotinst:aws/ElastigroupEphemeralBlockDevice:ElastigroupEphemeralBlockDevice": {
            "properties": {
                "deviceName": {
                    "type": "string",
                    "description": "The name of the block device to mount on the instance.\n"
                },
                "virtualName": {
                    "type": "string",
                    "description": "The [Instance Store Device Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)\n(e.g. `\"ephemeral0\"`).\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "type": "object",
            "required": [
                "deviceName",
                "virtualName"
            ]
        },
        "spotinst:aws/ElastigroupImage:ElastigroupImage": {
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupImageImage:ElastigroupImageImage"
                    }
                }
            },
            "type": "object",
            "required": [
                "images"
            ]
        },
        "spotinst:aws/ElastigroupImageImage:ElastigroupImageImage": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The group ID.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "spotinst:aws/ElastigroupInstanceTypesWeight:ElastigroupInstanceTypesWeight": {
            "properties": {
                "instanceType": {
                    "type": "string",
                    "description": "Name of instance type (String).\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Weight per instance type (Integer).\n"
                }
            },
            "type": "object",
            "required": [
                "instanceType",
                "weight"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationBeanstalk:ElastigroupIntegrationBeanstalk": {
            "properties": {
                "deploymentPreferences": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationBeanstalkDeploymentPreferences:ElastigroupIntegrationBeanstalkDeploymentPreferences",
                    "description": "Preferences when performing a roll\n"
                },
                "environmentId": {
                    "type": "string"
                },
                "managedActions": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationBeanstalkManagedActions:ElastigroupIntegrationBeanstalkManagedActions",
                    "description": "Managed Actions parameters\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationBeanstalkDeploymentPreferences:ElastigroupIntegrationBeanstalkDeploymentPreferences": {
            "properties": {
                "automaticRoll": {
                    "type": "boolean",
                    "description": "Should roll perform automatically\n"
                },
                "batchSizePercentage": {
                    "type": "integer",
                    "description": "The percentage size of each batch in the scheduled deployment roll.\n"
                },
                "gracePeriod": {
                    "type": "integer",
                    "description": "The period of time (seconds) to wait before checking a batch's health after it's deployment.\n"
                },
                "strategy": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategy:ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategy",
                    "description": "Strategy parameters\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategy:ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategy": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action to take when scale up according to step's threshold is needed.\n"
                },
                "shouldDrainInstances": {
                    "type": "boolean",
                    "description": "Bool value if to wait to drain instance\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationBeanstalkManagedActions:ElastigroupIntegrationBeanstalkManagedActions": {
            "properties": {
                "platformUpdate": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdate:ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdate",
                    "description": "Platform Update parameters\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdate:ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdate": {
            "properties": {
                "performAt": {
                    "type": "string",
                    "description": "In the event of a fallback to On-Demand instances, select the time period to revert back to Spot. Supported Arguments – always (default), timeWindow, never. For timeWindow or never to be valid the group must have availabilityOriented OR persistence defined.\n"
                },
                "timeWindow": {
                    "type": "string",
                    "description": "Time Window for when action occurs ex. Mon:23:50-Tue:00:20\n"
                },
                "updateLevel": {
                    "type": "string",
                    "description": "Level to update\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationCodedeploy:ElastigroupIntegrationCodedeploy": {
            "properties": {
                "cleanupOnFailure": {
                    "type": "boolean",
                    "description": "Cleanup automatically after a failed deploy.\n"
                },
                "deploymentGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationCodedeployDeploymentGroup:ElastigroupIntegrationCodedeployDeploymentGroup"
                    },
                    "description": "Specify the deployment groups details.\n"
                },
                "terminateInstanceOnFailure": {
                    "type": "boolean",
                    "description": "Terminate the instance automatically after a failed deploy.\n"
                }
            },
            "type": "object",
            "required": [
                "cleanupOnFailure",
                "deploymentGroups",
                "terminateInstanceOnFailure"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationCodedeployDeploymentGroup:ElastigroupIntegrationCodedeployDeploymentGroup": {
            "properties": {
                "applicationName": {
                    "type": "string",
                    "description": "The application name.\n"
                },
                "deploymentGroupName": {
                    "type": "string",
                    "description": "The deployment group name.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "type": "object",
            "required": [
                "applicationName",
                "deploymentGroupName"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm": {
            "properties": {
                "autoscaleCooldown": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n"
                },
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationDockerSwarmAutoscaleDown:ElastigroupIntegrationDockerSwarmAutoscaleDown",
                    "description": "Settings for scale down actions.\n"
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationDockerSwarmAutoscaleHeadroom:ElastigroupIntegrationDockerSwarmAutoscaleHeadroom",
                    "description": "An option to set compute reserve for the cluster.\n"
                },
                "autoscaleIsEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether the auto scaling feature is enabled.\n"
                },
                "masterHost": {
                    "type": "string",
                    "description": "The URL for the Nomad master host.\n"
                },
                "masterPort": {
                    "type": "integer",
                    "description": "The network port for the master host.\n"
                }
            },
            "type": "object",
            "required": [
                "masterHost",
                "masterPort"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationDockerSwarmAutoscaleDown:ElastigroupIntegrationDockerSwarmAutoscaleDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n"
                },
                "maxScaleDownPercentage": {
                    "type": "number",
                    "description": "Represents the maximum percent to scale-down. Number between 1-100.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationDockerSwarmAutoscaleHeadroom:ElastigroupIntegrationDockerSwarmAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "How much CPU (MHz) to allocate for headroom unit.\n"
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "How much Memory allocate for headroom unit.\n"
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "How many units of headroom to allocate.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationEcs:ElastigroupIntegrationEcs": {
            "properties": {
                "autoscaleAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationEcsAutoscaleAttribute:ElastigroupIntegrationEcsAutoscaleAttribute"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n"
                },
                "autoscaleCooldown": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n"
                },
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationEcsAutoscaleDown:ElastigroupIntegrationEcsAutoscaleDown",
                    "description": "Settings for scale down actions.\n"
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationEcsAutoscaleHeadroom:ElastigroupIntegrationEcsAutoscaleHeadroom",
                    "description": "An option to set compute reserve for the cluster.\n"
                },
                "autoscaleIsAutoConfig": {
                    "type": "boolean",
                    "description": "Enabling the automatic k8s auto-scaler functionality. For more information please see: [Kubernetes auto scaler](https://api.spotinst.com/integration-docs/elastigroup/container-management/kubernetes/autoscaler/).\n"
                },
                "autoscaleIsEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether the auto scaling feature is enabled.\n"
                },
                "autoscaleScaleDownNonServiceTasks": {
                    "type": "boolean",
                    "description": "Determines whether to scale down non-service tasks.\n"
                },
                "batch": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationEcsBatch:ElastigroupIntegrationEcsBatch",
                    "description": "Batch configuration object:\n"
                },
                "clusterName": {
                    "type": "string",
                    "description": "The name of the EC2 Container Service cluster.\n"
                }
            },
            "type": "object",
            "required": [
                "clusterName"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationEcsAutoscaleAttribute:ElastigroupIntegrationEcsAutoscaleAttribute": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "description": "The dimension value.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationEcsAutoscaleDown:ElastigroupIntegrationEcsAutoscaleDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n"
                },
                "maxScaleDownPercentage": {
                    "type": "number",
                    "description": "Represents the maximum percent to scale-down. Number between 1-100.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationEcsAutoscaleHeadroom:ElastigroupIntegrationEcsAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "How much CPU (MHz) to allocate for headroom unit.\n"
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "How much Memory allocate for headroom unit.\n"
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "How many units of headroom to allocate.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationEcsBatch:ElastigroupIntegrationEcsBatch": {
            "properties": {
                "jobQueueNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of strings.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "type": "object",
            "required": [
                "jobQueueNames"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationGitlab:ElastigroupIntegrationGitlab": {
            "properties": {
                "runner": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationGitlabRunner:ElastigroupIntegrationGitlabRunner",
                    "description": "Settings for Gitlab runner.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationGitlabRunner:ElastigroupIntegrationGitlabRunner": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether the scaling policy described in this block is enabled.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes": {
            "properties": {
                "apiServer": {
                    "type": "string",
                    "description": "The public IP of the DC/OS Master.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "autoscaleCooldown": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n"
                },
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationKubernetesAutoscaleDown:ElastigroupIntegrationKubernetesAutoscaleDown",
                    "description": "Settings for scale down actions.\n"
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationKubernetesAutoscaleHeadroom:ElastigroupIntegrationKubernetesAutoscaleHeadroom",
                    "description": "An option to set compute reserve for the cluster.\n"
                },
                "autoscaleIsAutoConfig": {
                    "type": "boolean",
                    "description": "Enabling the automatic k8s auto-scaler functionality. For more information please see: [Kubernetes auto scaler](https://api.spotinst.com/integration-docs/elastigroup/container-management/kubernetes/autoscaler/).\n"
                },
                "autoscaleIsEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether the auto scaling feature is enabled.\n"
                },
                "autoscaleLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationKubernetesAutoscaleLabel:ElastigroupIntegrationKubernetesAutoscaleLabel"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "clusterIdentifier": {
                    "type": "string"
                },
                "integrationMode": {
                    "type": "string",
                    "description": "Valid values: `\"saas\"`, `\"pod\"`.\n"
                },
                "token": {
                    "type": "string",
                    "description": "Kubernetes Token\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationKubernetesAutoscaleDown:ElastigroupIntegrationKubernetesAutoscaleDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n"
                },
                "maxScaleDownPercentage": {
                    "type": "number",
                    "description": "Represents the maximum percent to scale-down. Number between 1-100.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationKubernetesAutoscaleHeadroom:ElastigroupIntegrationKubernetesAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "How much CPU (MHz) to allocate for headroom unit.\n"
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "How much Memory allocate for headroom unit.\n"
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "How many units of headroom to allocate.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationKubernetesAutoscaleLabel:ElastigroupIntegrationKubernetesAutoscaleLabel": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "description": "The dimension value.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationMesosphere:ElastigroupIntegrationMesosphere": {
            "properties": {
                "apiServer": {
                    "type": "string",
                    "description": "The public IP of the DC/OS Master.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "type": "object",
            "required": [
                "apiServer"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime": {
            "properties": {
                "deploymentId": {
                    "type": "string",
                    "description": "The deployment id you want to get\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "type": "object",
            "required": [
                "deploymentId"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationNomad:ElastigroupIntegrationNomad": {
            "properties": {
                "aclToken": {
                    "type": "string",
                    "description": "Nomad ACL Token\n"
                },
                "autoscaleConstraints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationNomadAutoscaleConstraint:ElastigroupIntegrationNomadAutoscaleConstraint"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "autoscaleCooldown": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n"
                },
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationNomadAutoscaleDown:ElastigroupIntegrationNomadAutoscaleDown",
                    "description": "Settings for scale down actions.\n"
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationNomadAutoscaleHeadroom:ElastigroupIntegrationNomadAutoscaleHeadroom",
                    "description": "An option to set compute reserve for the cluster.\n"
                },
                "autoscaleIsEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether the auto scaling feature is enabled.\n"
                },
                "masterHost": {
                    "type": "string",
                    "description": "The URL for the Nomad master host.\n"
                },
                "masterPort": {
                    "type": "integer",
                    "description": "The network port for the master host.\n"
                }
            },
            "type": "object",
            "required": [
                "masterHost",
                "masterPort"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationNomadAutoscaleConstraint:ElastigroupIntegrationNomadAutoscaleConstraint": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "description": "The dimension value.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationNomadAutoscaleDown:ElastigroupIntegrationNomadAutoscaleDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationNomadAutoscaleHeadroom:ElastigroupIntegrationNomadAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "How much CPU (MHz) to allocate for headroom unit.\n"
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "How much Memory allocate for headroom unit.\n"
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "How many units of headroom to allocate.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationRancher:ElastigroupIntegrationRancher": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The access key of the Rancher API.\n"
                },
                "masterHost": {
                    "type": "string",
                    "description": "The URL for the Nomad master host.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The secret key of the Rancher API.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The Rancher version. Must be `\"1\"` or `\"2\"`. If this field is omitted, it’s assumed that the Rancher cluster is version 1. Note that Kubernetes is required when using Rancher version 2^.\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "masterHost",
                "secretKey"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationRoute53:ElastigroupIntegrationRoute53": {
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRoute53Domain:ElastigroupIntegrationRoute53Domain"
                    },
                    "description": "Collection of one or more domains to register.\n"
                }
            },
            "type": "object",
            "required": [
                "domains"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationRoute53Domain:ElastigroupIntegrationRoute53Domain": {
            "properties": {
                "hostedZoneId": {
                    "type": "string",
                    "description": "The id associated with a hosted zone.\n"
                },
                "recordSetType": {
                    "type": "string",
                    "description": "The type of the record set. Valid values: `\"a\"`, `\"cname\"`.\n"
                },
                "recordSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRoute53DomainRecordSet:ElastigroupIntegrationRoute53DomainRecordSet"
                    },
                    "description": "Collection of records containing authoritative DNS information for the specified domain name.\n"
                },
                "spotinstAcctId": {
                    "type": "string",
                    "description": "The Spotinst account ID that is linked to the AWS account that holds the Route 53 Hosted Zone ID. The default is the user Spotinst account provided as a URL parameter.\n"
                }
            },
            "type": "object",
            "required": [
                "hostedZoneId",
                "recordSets"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationRoute53DomainRecordSet:ElastigroupIntegrationRoute53DomainRecordSet": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "usePublicDns": {
                    "type": "boolean",
                    "description": "Designates whether the DNS address should be exposed to connections outside the VPC.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "usePublicIp": {
                    "type": "boolean",
                    "description": "Designates whether the IP address should be exposed to connections outside the VPC.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/ElastigroupItf:ElastigroupItf": {
            "properties": {
                "defaultStaticTargetGroup": {
                    "$ref": "#/types/spotinst:aws/ElastigroupItfDefaultStaticTargetGroup:ElastigroupItfDefaultStaticTargetGroup"
                },
                "fixedTargetGroups": {
                    "type": "boolean"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupItfLoadBalancer:ElastigroupItfLoadBalancer"
                    }
                },
                "migrationHealthinessThreshold": {
                    "type": "integer"
                },
                "targetGroupConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupItfTargetGroupConfig:ElastigroupItfTargetGroupConfig"
                    }
                },
                "weightStrategy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "fixedTargetGroups",
                "loadBalancers",
                "targetGroupConfigs",
                "weightStrategy"
            ]
        },
        "spotinst:aws/ElastigroupItfDefaultStaticTargetGroup:ElastigroupItfDefaultStaticTargetGroup": {
            "properties": {
                "arn": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "arn",
                "percentage"
            ]
        },
        "spotinst:aws/ElastigroupItfLoadBalancer:ElastigroupItfLoadBalancer": {
            "properties": {
                "listenerRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupItfLoadBalancerListenerRule:ElastigroupItfLoadBalancerListenerRule"
                    }
                },
                "loadBalancerArn": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "listenerRules",
                "loadBalancerArn"
            ]
        },
        "spotinst:aws/ElastigroupItfLoadBalancerListenerRule:ElastigroupItfLoadBalancerListenerRule": {
            "properties": {
                "ruleArn": {
                    "type": "string"
                },
                "staticTargetGroup": {
                    "$ref": "#/types/spotinst:aws/ElastigroupItfLoadBalancerListenerRuleStaticTargetGroup:ElastigroupItfLoadBalancerListenerRuleStaticTargetGroup"
                }
            },
            "type": "object",
            "required": [
                "ruleArn"
            ]
        },
        "spotinst:aws/ElastigroupItfLoadBalancerListenerRuleStaticTargetGroup:ElastigroupItfLoadBalancerListenerRuleStaticTargetGroup": {
            "properties": {
                "arn": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "arn",
                "percentage"
            ]
        },
        "spotinst:aws/ElastigroupItfTargetGroupConfig:ElastigroupItfTargetGroupConfig": {
            "properties": {
                "healthCheckIntervalSeconds": {
                    "type": "integer"
                },
                "healthCheckPath": {
                    "type": "string"
                },
                "healthCheckPort": {
                    "type": "string"
                },
                "healthCheckProtocol": {
                    "type": "string"
                },
                "healthCheckTimeoutSeconds": {
                    "type": "integer"
                },
                "healthyThresholdCount": {
                    "type": "integer"
                },
                "matchers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupItfTargetGroupConfigMatcher:ElastigroupItfTargetGroupConfigMatcher"
                    }
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "protocolVersion": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupItfTargetGroupConfigTag:ElastigroupItfTargetGroupConfigTag"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n"
                },
                "unhealthyThresholdCount": {
                    "type": "integer"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "healthCheckPath",
                "port",
                "protocol",
                "vpcId"
            ]
        },
        "spotinst:aws/ElastigroupItfTargetGroupConfigMatcher:ElastigroupItfTargetGroupConfigMatcher": {
            "properties": {
                "grpcCode": {
                    "type": "string"
                },
                "httpCode": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupItfTargetGroupConfigTag:ElastigroupItfTargetGroupConfigTag": {
            "properties": {
                "tagKey": {
                    "type": "string"
                },
                "tagValue": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tagKey"
            ]
        },
        "spotinst:aws/ElastigroupMetadataOptions:ElastigroupMetadataOptions": {
            "properties": {
                "httpPutResponseHopLimit": {
                    "type": "integer",
                    "description": "The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Valid values: Integers from `1` to `64`.\n"
                },
                "httpTokens": {
                    "type": "string",
                    "description": "The state of token usage for your instance metadata requests. Valid values: `optional` or `required`.\n"
                },
                "instanceMetadataTags": {
                    "type": "string",
                    "description": "Indicates whether access to instance tags from the instance metadata is enabled or disabled. Can’t be null.\n"
                }
            },
            "type": "object",
            "required": [
                "httpTokens"
            ]
        },
        "spotinst:aws/ElastigroupMultaiTargetSet:ElastigroupMultaiTargetSet": {
            "properties": {
                "balancerId": {
                    "type": "string",
                    "description": "ID of Multai Load Balancer.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "targetSetId": {
                    "type": "string",
                    "description": "ID of Multai target set.\n"
                }
            },
            "type": "object",
            "required": [
                "balancerId",
                "targetSetId"
            ]
        },
        "spotinst:aws/ElastigroupMultipleMetrics:ElastigroupMultipleMetrics": {
            "properties": {
                "expressions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupMultipleMetricsExpression:ElastigroupMultipleMetricsExpression"
                    },
                    "description": "Array of objects (Expression config)\n"
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupMultipleMetricsMetric:ElastigroupMultipleMetricsMetric"
                    },
                    "description": "Array of objects (Metric config)\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupMultipleMetricsExpression:ElastigroupMultipleMetricsExpression": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "An expression consisting of the metric names listed in the 'metrics' array.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                }
            },
            "type": "object",
            "required": [
                "expression",
                "name"
            ]
        },
        "spotinst:aws/ElastigroupMultipleMetricsMetric:ElastigroupMultipleMetricsMetric": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupMultipleMetricsMetricDimension:ElastigroupMultipleMetricsMetricDimension"
                    },
                    "description": "A list of dimensions describing qualities of the metric.\n"
                },
                "extendedStatistic": {
                    "type": "string",
                    "description": "Percentile statistic. Valid values: `\"p0.1\"` - `\"p100\"`.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the metric, with or without spaces.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace for the alarm's associated metric.\n"
                },
                "statistic": {
                    "type": "string",
                    "description": "The metric statistics to return. For information about specific statistics go to [Statistics](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/index.html?CHAP_TerminologyandKeyConcepts.html#Statistic) in the Amazon CloudWatch Developer Guide.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for the alarm's associated metric. Valid values: `\"percent`, `\"seconds\"`, `\"microseconds\"`, `\"milliseconds\"`, `\"bytes\"`, `\"kilobytes\"`, `\"megabytes\"`, `\"gigabytes\"`, `\"terabytes\"`, `\"bits\"`, `\"kilobits\"`, `\"megabits\"`, `\"gigabits\"`, `\"terabits\"`, `\"count\"`, `\"bytes/second\"`, `\"kilobytes/second\"`, `\"megabytes/second\"`, `\"gigabytes/second\"`, `\"terabytes/second\"`, `\"bits/second\"`, `\"kilobits/second\"`, `\"megabits/second\"`, `\"gigabits/second\"`, `\"terabits/second\"`, `\"count/second\"`, `\"none\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "name",
                "namespace"
            ]
        },
        "spotinst:aws/ElastigroupMultipleMetricsMetricDimension:ElastigroupMultipleMetricsMetricDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The dimension value.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/ElastigroupNetworkInterface:ElastigroupNetworkInterface": {
            "properties": {
                "associateIpv6Address": {
                    "type": "boolean",
                    "description": "Indicates whether to assign IPV6 addresses to your instance. Requires a subnet with IPV6 CIDR block ranges.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "associatePublicIpAddress": {
                    "type": "boolean",
                    "description": "Indicates whether to assign a public IP address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one.\n"
                },
                "deleteOnTermination": {
                    "type": "boolean",
                    "description": "Whether the volume should be destroyed on instance termination.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The group description.\n"
                },
                "deviceIndex": {
                    "type": "string",
                    "description": "The index of the device on the instance for the network interface attachment.\n"
                },
                "networkInterfaceId": {
                    "type": "string",
                    "description": "The ID of the network interface.\n"
                },
                "privateIpAddress": {
                    "type": "string",
                    "description": "The private IP address of the network interface.\n"
                },
                "secondaryPrivateIpAddressCount": {
                    "type": "string",
                    "description": "The number of secondary private IP addresses.\n"
                }
            },
            "type": "object",
            "required": [
                "deviceIndex"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteOnTermination",
                        "deviceIndex"
                    ]
                }
            }
        },
        "spotinst:aws/ElastigroupResourceRequirement:ElastigroupResourceRequirement": {
            "properties": {
                "excludedInstanceFamilies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance families to exclude\n"
                },
                "excludedInstanceGenerations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance generations to exclude\n"
                },
                "excludedInstanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types to exclude\n"
                },
                "requiredGpuMaximum": {
                    "type": "integer",
                    "description": "Required maximum instance GPU (\u003c=16)\n"
                },
                "requiredGpuMinimum": {
                    "type": "integer",
                    "description": "Required minimum instance GPU (\u003e=1)\n"
                },
                "requiredMemoryMaximum": {
                    "type": "integer",
                    "description": "Required maximum instance memory (\u003c=512)\n"
                },
                "requiredMemoryMinimum": {
                    "type": "integer",
                    "description": "Required minimum instance memory (\u003e=1)\n"
                },
                "requiredVcpuMaximum": {
                    "type": "integer",
                    "description": "Required maximum instance vCPU (\u003c=64)\n"
                },
                "requiredVcpuMinimum": {
                    "type": "integer",
                    "description": "Required minimum instance vCPU (\u003e=1)\n"
                }
            },
            "type": "object",
            "required": [
                "requiredMemoryMaximum",
                "requiredMemoryMinimum",
                "requiredVcpuMaximum",
                "requiredVcpuMinimum"
            ]
        },
        "spotinst:aws/ElastigroupResourceTagSpecification:ElastigroupResourceTagSpecification": {
            "properties": {
                "shouldTagAmis": {
                    "type": "boolean",
                    "description": "Tag specification for AMI resources.\n"
                },
                "shouldTagEnis": {
                    "type": "boolean",
                    "description": "Tag specification for ENI resources.\n"
                },
                "shouldTagSnapshots": {
                    "type": "boolean",
                    "description": "Tag specification for Snapshot resources.\n"
                },
                "shouldTagVolumes": {
                    "type": "boolean",
                    "description": "Tag specification for Volume resources.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupRevertToSpot:ElastigroupRevertToSpot": {
            "properties": {
                "performAt": {
                    "type": "string",
                    "description": "In the event of a fallback to On-Demand instances, select the time period to revert back to Spot. Supported Arguments – always (default), timeWindow, never. For timeWindow or never to be valid the group must have availabilityOriented OR persistence defined.\n"
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specify a list of time windows for to execute revertToSpot strategy. Time window format: `ddd:hh:mm-ddd:hh:mm`. Example: `Mon:03:00-Wed:02:30`\n"
                }
            },
            "type": "object",
            "required": [
                "performAt"
            ]
        },
        "spotinst:aws/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "The type of action to perform for scaling. Valid values: `\"adjustment\"`, `\"percentageAdjustment\"`, `\"setMaxTarget\"`, `\"setMinTarget\"`, `\"updateCapacity\"`. If a `step_adjustment` object is defined, then it cannot be specified.\n"
                },
                "adjustment": {
                    "type": "string",
                    "description": "The number of instances to add/remove to/from the target capacity when scale is needed. Can be used as advanced expression for scaling of instances to add/remove to/from the target capacity when scale is needed. You can see more information here: Advanced expression. Example value: `\"MAX(currCapacity / 5, value * 10)\"`\n"
                },
                "cooldown": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start. If this parameter is not specified, the default cooldown period for the group applies.\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension"
                    },
                    "description": "A list of dimensions describing qualities of the metric.\n"
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether the scaling policy described in this block is enabled.\n"
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "description": ". The number of the desired target (and maximum) capacity\n"
                },
                "maximum": {
                    "type": "string",
                    "description": "The maximal number of instances to have in the group.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the metric, with or without spaces.\n"
                },
                "minTargetCapacity": {
                    "type": "string",
                    "description": ". The number of the desired target (and minimum) capacity\n"
                },
                "minimum": {
                    "type": "string",
                    "description": "The minimal number of instances to have in the group.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace for the alarm's associated metric.\n"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use in order to determine if the scaling policy is applicable. Valid values: `\"gt\"`, `\"gte\"`, `\"lt\"`, `\"lte\"`.\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The granularity, in seconds, of the returned datapoints. Period must be at least 60 seconds and must be a multiple of 60.\n"
                },
                "policyName": {
                    "type": "string",
                    "description": "The name of the policy.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The source of the metric. Valid values: `\"cloudWatch\"`, `\"spectrum\"`.\n"
                },
                "statistic": {
                    "type": "string",
                    "description": "The metric statistics to return. For information about specific statistics go to [Statistics](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/index.html?CHAP_TerminologyandKeyConcepts.html#Statistic) in the Amazon CloudWatch Developer Guide.\n"
                },
                "stepAdjustments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingDownPolicyStepAdjustment:ElastigroupScalingDownPolicyStepAdjustment"
                    }
                },
                "target": {
                    "type": "string",
                    "description": "The target number of instances to have in the group.\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The value against which the specified statistic is compared in order to determine if a step should be applied.\n\n\nIf you do not specify an action type, you can only use – `adjustment`, `minTargetCapacity`, `maxTargetCapacity`.\nWhile using action_type, please also set the following:\n\nWhen using `adjustment`           – set the field `adjustment`\nWhen using `updateCapacity`       – set the fields `minimum`, `maximum`, and `target`\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for the alarm's associated metric. Valid values: `\"percent`, `\"seconds\"`, `\"microseconds\"`, `\"milliseconds\"`, `\"bytes\"`, `\"kilobytes\"`, `\"megabytes\"`, `\"gigabytes\"`, `\"terabytes\"`, `\"bits\"`, `\"kilobits\"`, `\"megabits\"`, `\"gigabits\"`, `\"terabits\"`, `\"count\"`, `\"bytes/second\"`, `\"kilobytes/second\"`, `\"megabytes/second\"`, `\"gigabytes/second\"`, `\"terabytes/second\"`, `\"bits/second\"`, `\"kilobits/second\"`, `\"megabits/second\"`, `\"gigabits/second\"`, `\"terabits/second\"`, `\"count/second\"`, `\"none\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "source"
                    ]
                }
            }
        },
        "spotinst:aws/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The dimension value.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/ElastigroupScalingDownPolicyStepAdjustment:ElastigroupScalingDownPolicyStepAdjustment": {
            "properties": {
                "action": {
                    "$ref": "#/types/spotinst:aws/ElastigroupScalingDownPolicyStepAdjustmentAction:ElastigroupScalingDownPolicyStepAdjustmentAction",
                    "description": "The action to take when scale up according to step's threshold is needed.\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "The value against which the specified statistic is compared in order to determine if a step should be applied.\n\n\nIf you do not specify an action type, you can only use – `adjustment`, `minTargetCapacity`, `maxTargetCapacity`.\nWhile using action_type, please also set the following:\n\nWhen using `adjustment`           – set the field `adjustment`\nWhen using `updateCapacity`       – set the fields `minimum`, `maximum`, and `target`\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "threshold"
            ]
        },
        "spotinst:aws/ElastigroupScalingDownPolicyStepAdjustmentAction:ElastigroupScalingDownPolicyStepAdjustmentAction": {
            "properties": {
                "adjustment": {
                    "type": "string",
                    "description": "The number of instances to add/remove to/from the target capacity when scale is needed. Can be used as advanced expression for scaling of instances to add/remove to/from the target capacity when scale is needed. You can see more information here: Advanced expression. Example value: `\"MAX(currCapacity / 5, value * 10)\"`\n"
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "description": ". The number of the desired target (and maximum) capacity\n"
                },
                "maximum": {
                    "type": "string",
                    "description": "The maximal number of instances to have in the group.\n"
                },
                "minTargetCapacity": {
                    "type": "string",
                    "description": ". The number of the desired target (and minimum) capacity\n"
                },
                "minimum": {
                    "type": "string",
                    "description": "The minimal number of instances to have in the group.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The target number of instances to have in the group.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the action to take when scale up is needed. Valid types: `\"adjustment\"`, `\"updateCapacity\"`, `\"setMaxTarget\"`, `\"percentageAdjustment\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "spotinst:aws/ElastigroupScalingStrategy:ElastigroupScalingStrategy": {
            "properties": {
                "terminateAtEndOfBillingHour": {
                    "type": "boolean",
                    "description": "Specify whether to terminate instances at the end of each billing hour.\n"
                },
                "terminationPolicy": {
                    "type": "string",
                    "description": "Determines whether to terminate the newest instances when performing a scaling action. Valid values: `\"default\"`, `\"newestInstance\"`.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupScalingTargetPolicy:ElastigroupScalingTargetPolicy": {
            "properties": {
                "cooldown": {
                    "type": "integer",
                    "description": "Integer the amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start. If this parameter is not specified, the default cooldown period for the group applies.\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingTargetPolicyDimension:ElastigroupScalingTargetPolicyDimension"
                    },
                    "description": "A list of dimensions describing qualities of the metric.\n"
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n"
                },
                "maxCapacityPerScale": {
                    "type": "string",
                    "description": "String, restrict the maximal number of instances which can be added in each scale-up action.\n\n`scaling_target_policies` support predictive scaling:\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "String, the name of the metric, with or without spaces.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "String, the namespace for the alarm's associated metric.\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The granularity, in seconds, of the returned datapoints. Period must be at least 60 seconds and must be a multiple of 60.\n"
                },
                "policyName": {
                    "type": "string",
                    "description": "String, the name of the policy.\n"
                },
                "predictiveMode": {
                    "type": "string",
                    "description": "Start a metric prediction process to determine the expected target metric value within the next two days. See [Predictive Autoscaling](https://api.spotinst.com/elastigroup-for-aws/concepts/scaling-concepts/predictive-autoscaling/) documentation for more info. Valid values: `FORECAST_AND_SCALE`, `FORECAST_ONLY`.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "source": {
                    "type": "string",
                    "description": "String, the source of the metric. Valid values: `\"cloudWatch\"`, `\"spectrum\"`.\n"
                },
                "statistic": {
                    "type": "string",
                    "description": "String, the metric statistics to return. For information about specific statistics go to [Statistics](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/index.html?CHAP_TerminologyandKeyConcepts.html#Statistic) in the Amazon CloudWatch Developer Guide.\n"
                },
                "target": {
                    "type": "number",
                    "description": "The target number of instances to have in the group.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "String, tThe unit for the alarm's associated metric. Valid values: `\"percent`, `\"seconds\"`, `\"microseconds\"`, `\"milliseconds\"`, `\"bytes\"`, `\"kilobytes\"`, `\"megabytes\"`, `\"gigabytes\"`, `\"terabytes\"`, `\"bits\"`, `\"kilobits\"`, `\"megabits\"`, `\"gigabits\"`, `\"terabits\"`, `\"count\"`, `\"bytes/second\"`, `\"kilobytes/second\"`, `\"megabytes/second\"`, `\"gigabytes/second\"`, `\"terabytes/second\"`, `\"bits/second\"`, `\"kilobits/second\"`, `\"megabits/second\"`, `\"gigabits/second\"`, `\"terabits/second\"`, `\"count/second\"`, `\"none\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "metricName",
                        "namespace",
                        "policyName",
                        "source",
                        "target"
                    ]
                }
            }
        },
        "spotinst:aws/ElastigroupScalingTargetPolicyDimension:ElastigroupScalingTargetPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The dimension value.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "The type of action to perform for scaling. Valid values: `\"adjustment\"`, `\"percentageAdjustment\"`, `\"setMaxTarget\"`, `\"setMinTarget\"`, `\"updateCapacity\"`. If a `step_adjustment` object is defined, then it cannot be specified.\n"
                },
                "adjustment": {
                    "type": "string",
                    "description": "The number of instances to add/remove to/from the target capacity when scale is needed. Can be used as advanced expression for scaling of instances to add/remove to/from the target capacity when scale is needed. You can see more information here: Advanced expression. Example value: `\"MAX(currCapacity / 5, value * 10)\"`\n"
                },
                "cooldown": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start. If this parameter is not specified, the default cooldown period for the group applies.\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension"
                    },
                    "description": "A list of dimensions describing qualities of the metric.\n"
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether the scaling policy described in this block is enabled.\n"
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "description": ". The number of the desired target (and maximum) capacity\n"
                },
                "maximum": {
                    "type": "string",
                    "description": "The maximal number of instances to have in the group.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the metric, with or without spaces.\n"
                },
                "minTargetCapacity": {
                    "type": "string",
                    "description": ". The number of the desired target (and minimum) capacity\n"
                },
                "minimum": {
                    "type": "string",
                    "description": "The minimal number of instances to have in the group.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace for the alarm's associated metric.\n"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use in order to determine if the scaling policy is applicable. Valid values: `\"gt\"`, `\"gte\"`, `\"lt\"`, `\"lte\"`.\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The granularity, in seconds, of the returned datapoints. Period must be at least 60 seconds and must be a multiple of 60.\n"
                },
                "policyName": {
                    "type": "string",
                    "description": "The name of the policy.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The source of the metric. Valid values: `\"cloudWatch\"`, `\"spectrum\"`.\n"
                },
                "statistic": {
                    "type": "string",
                    "description": "The metric statistics to return. For information about specific statistics go to [Statistics](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/index.html?CHAP_TerminologyandKeyConcepts.html#Statistic) in the Amazon CloudWatch Developer Guide.\n"
                },
                "stepAdjustments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingUpPolicyStepAdjustment:ElastigroupScalingUpPolicyStepAdjustment"
                    }
                },
                "target": {
                    "type": "string",
                    "description": "The target number of instances to have in the group.\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The value against which the specified statistic is compared in order to determine if a step should be applied.\n\n\nIf you do not specify an action type, you can only use – `adjustment`, `minTargetCapacity`, `maxTargetCapacity`.\nWhile using action_type, please also set the following:\n\nWhen using `adjustment`           – set the field `adjustment`\nWhen using `setMinTarget`         – set the field `min_target_capacity`\nWhen using `updateCapacity`       – set the fields `minimum`, `maximum`, and `target`\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for the alarm's associated metric. Valid values: `\"percent`, `\"seconds\"`, `\"microseconds\"`, `\"milliseconds\"`, `\"bytes\"`, `\"kilobytes\"`, `\"megabytes\"`, `\"gigabytes\"`, `\"terabytes\"`, `\"bits\"`, `\"kilobits\"`, `\"megabits\"`, `\"gigabits\"`, `\"terabits\"`, `\"count\"`, `\"bytes/second\"`, `\"kilobytes/second\"`, `\"megabytes/second\"`, `\"gigabytes/second\"`, `\"terabytes/second\"`, `\"bits/second\"`, `\"kilobits/second\"`, `\"megabits/second\"`, `\"gigabits/second\"`, `\"terabits/second\"`, `\"count/second\"`, `\"none\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "source"
                    ]
                }
            }
        },
        "spotinst:aws/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The dimension value.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/ElastigroupScalingUpPolicyStepAdjustment:ElastigroupScalingUpPolicyStepAdjustment": {
            "properties": {
                "action": {
                    "$ref": "#/types/spotinst:aws/ElastigroupScalingUpPolicyStepAdjustmentAction:ElastigroupScalingUpPolicyStepAdjustmentAction",
                    "description": "The action to take when scale up according to step's threshold is needed.\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "The value against which the specified statistic is compared in order to determine if a step should be applied.\n\n\nIf you do not specify an action type, you can only use – `adjustment`, `minTargetCapacity`, `maxTargetCapacity`.\nWhile using action_type, please also set the following:\n\nWhen using `adjustment`           – set the field `adjustment`\nWhen using `updateCapacity`       – set the fields `minimum`, `maximum`, and `target`\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "threshold"
            ]
        },
        "spotinst:aws/ElastigroupScalingUpPolicyStepAdjustmentAction:ElastigroupScalingUpPolicyStepAdjustmentAction": {
            "properties": {
                "adjustment": {
                    "type": "string",
                    "description": "The number of instances to add/remove to/from the target capacity when scale is needed. Can be used as advanced expression for scaling of instances to add/remove to/from the target capacity when scale is needed. You can see more information here: Advanced expression. Example value: `\"MAX(currCapacity / 5, value * 10)\"`\n"
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "description": ". The number of the desired target (and maximum) capacity\n"
                },
                "maximum": {
                    "type": "string",
                    "description": "The maximal number of instances to have in the group.\n"
                },
                "minTargetCapacity": {
                    "type": "string",
                    "description": ". The number of the desired target (and minimum) capacity\n"
                },
                "minimum": {
                    "type": "string",
                    "description": "The minimal number of instances to have in the group.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The target number of instances to have in the group.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the action to take when scale up is needed. Valid types: `\"adjustment\"`, `\"updateCapacity\"`, `\"setMaxTarget\"`, `\"percentageAdjustment\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "spotinst:aws/ElastigroupScheduledTask:ElastigroupScheduledTask": {
            "properties": {
                "adjustment": {
                    "type": "string",
                    "description": "The number of instances to add or remove.\n"
                },
                "adjustmentPercentage": {
                    "type": "string",
                    "description": "The percentage of instances to add or remove.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "batchSizePercentage": {
                    "type": "string",
                    "description": "The percentage size of each batch in the scheduled deployment roll.\n"
                },
                "cronExpression": {
                    "type": "string",
                    "description": "A valid cron expression. The cron is running in UTC time zone and is in [Unix cron format](https://en.wikipedia.org/wiki/Cron).\n"
                },
                "frequency": {
                    "type": "string",
                    "description": "The recurrence frequency to run this task. Supported values are `\"hourly\"`, `\"daily\"`, `\"weekly\"` and `\"continuous\"`.\n"
                },
                "gracePeriod": {
                    "type": "string",
                    "description": "The period of time (seconds) to wait before checking a batch's health after it's deployment.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Setting the task to being enabled or disabled.\n"
                },
                "maxCapacity": {
                    "type": "string",
                    "description": "The maximum number of instances the group should have.\n"
                },
                "minCapacity": {
                    "type": "string",
                    "description": "The minimum number of instances the group should have.\n"
                },
                "scaleMaxCapacity": {
                    "type": "string",
                    "description": "The maximum number of instances the group should have.\n"
                },
                "scaleMinCapacity": {
                    "type": "string",
                    "description": "The minimum number of instances the group should have.\n"
                },
                "scaleTargetCapacity": {
                    "type": "string",
                    "description": "The desired number of instances the group should have.\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "Set a start time for one time tasks.\n"
                },
                "targetCapacity": {
                    "type": "string",
                    "description": "The desired number of instances the group should have.\n"
                },
                "taskType": {
                    "type": "string",
                    "description": "The task type to run. Supported task types are: `\"scale\"`, `\"backup_ami\"`, `\"roll\"`, `\"scaleUp\"`, `\"percentageScaleUp\"`, `\"scaleDown\"`, `\"percentageScaleDown\"`, `\"statefulUpdateCapacity\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "taskType"
            ]
        },
        "spotinst:aws/ElastigroupSignal:ElastigroupSignal": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the signal defined for the group. Valid Values: `\"INSTANCE_READY\"`, `\"INSTANCE_READY_TO_SHUTDOWN\"`\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The signals defined timeout- default is 40 minutes (1800 seconds).\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/ElastigroupStatefulDeallocation:ElastigroupStatefulDeallocation": {
            "properties": {
                "shouldDeleteImages": {
                    "type": "boolean",
                    "description": "For stateful groups: remove persistent images.\n"
                },
                "shouldDeleteNetworkInterfaces": {
                    "type": "boolean",
                    "description": "For stateful groups: remove network interfaces.\n"
                },
                "shouldDeleteSnapshots": {
                    "type": "boolean",
                    "description": "For stateful groups: remove snapshots.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "shouldDeleteVolumes": {
                    "type": "boolean",
                    "description": "For stateful groups: remove persistent volumes.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupStatefulInstanceAction:ElastigroupStatefulInstanceAction": {
            "properties": {
                "statefulInstanceId": {
                    "type": "string",
                    "description": "String, Stateful Instance ID on which the action should be performed.\n"
                },
                "type": {
                    "type": "string",
                    "description": "String, Action type. Supported action types: `pause`, `resume`, `recycle`, `deallocate`.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "type": "object",
            "required": [
                "statefulInstanceId",
                "type"
            ]
        },
        "spotinst:aws/ElastigroupTag:ElastigroupTag": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "description": "The dimension value.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy": {
            "properties": {
                "autoApplyTags": {
                    "type": "boolean",
                    "description": "Enables updates to tags without rolling the group when set to `true`.\n"
                },
                "rollConfig": {
                    "$ref": "#/types/spotinst:aws/ElastigroupUpdatePolicyRollConfig:ElastigroupUpdatePolicyRollConfig",
                    "description": "While used, you can control whether the group should perform a deployment after an update to the configuration.\n"
                },
                "shouldResumeStateful": {
                    "type": "boolean",
                    "description": "This will apply resuming action for Stateful instances in the Elastigroup upon scale up or capacity changes. Example usage will be for Elastigroups that will have scheduling rules to set a target capacity of 0 instances in the night and automatically restore the same state of the instances in the morning.\n"
                },
                "shouldRoll": {
                    "type": "boolean",
                    "description": "Sets the enablement of the roll option.\n"
                }
            },
            "type": "object",
            "required": [
                "shouldResumeStateful",
                "shouldRoll"
            ]
        },
        "spotinst:aws/ElastigroupUpdatePolicyRollConfig:ElastigroupUpdatePolicyRollConfig": {
            "properties": {
                "batchSizePercentage": {
                    "type": "integer",
                    "description": "The percentage size of each batch in the scheduled deployment roll.\n"
                },
                "gracePeriod": {
                    "type": "integer",
                    "description": "The period of time (seconds) to wait before checking a batch's health after it's deployment.\n"
                },
                "healthCheckType": {
                    "type": "string",
                    "description": "The service that will perform health checks for the instance. Valid values: `\"ELB\"`, `\"HCS\"`, `\"TARGET_GROUP\"`, `\"MLB\"`, `\"EC2\"`, `\"MULTAI_TARGET_SET\"`, `\"MLB_RUNTIME\"`, `\"K8S_NODE\"`, `\"NOMAD_NODE\"`, `\"ECS_CLUSTER_INSTANCE\"`.\n"
                },
                "strategy": {
                    "$ref": "#/types/spotinst:aws/ElastigroupUpdatePolicyRollConfigStrategy:ElastigroupUpdatePolicyRollConfigStrategy",
                    "description": "Strategy parameters\n"
                },
                "waitForRollPercentage": {
                    "type": "number",
                    "description": "For use with `should_roll`. Sets minimum % of roll required to complete before continuing the plan. Required if `wait_for_roll_timeout` is set.\n"
                },
                "waitForRollTimeout": {
                    "type": "integer",
                    "description": "For use with `should_roll`. Sets how long to wait for the deployed % of a roll to exceed `wait_for_roll_percentage` before continuing the plan. Required if `wait_for_roll_percentage` is set.\n"
                }
            },
            "type": "object",
            "required": [
                "batchSizePercentage"
            ]
        },
        "spotinst:aws/ElastigroupUpdatePolicyRollConfigStrategy:ElastigroupUpdatePolicyRollConfigStrategy": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action to take when scale up according to step's threshold is needed.\n"
                },
                "batchMinHealthyPercentage": {
                    "type": "integer",
                    "description": "Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the deployment will fail. Range `1` - `100`.\n"
                },
                "onFailure": {
                    "$ref": "#/types/spotinst:aws/ElastigroupUpdatePolicyRollConfigStrategyOnFailure:ElastigroupUpdatePolicyRollConfigStrategyOnFailure",
                    "description": "Set detach options to the deployment.\n"
                },
                "shouldDrainInstances": {
                    "type": "boolean",
                    "description": "Bool value if to wait to drain instance\n"
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "spotinst:aws/ElastigroupUpdatePolicyRollConfigStrategyOnFailure:ElastigroupUpdatePolicyRollConfigStrategyOnFailure": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "The type of action to perform for scaling. Valid values: `\"adjustment\"`, `\"percentageAdjustment\"`, `\"setMaxTarget\"`, `\"setMinTarget\"`, `\"updateCapacity\"`. If a `step_adjustment` object is defined, then it cannot be specified.\n"
                },
                "batchNum": {
                    "type": "integer"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                },
                "shouldDecrementTargetCapacity": {
                    "type": "boolean",
                    "description": "Decrementing the group target capacity after detaching the instances.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "shouldHandleAllBatches": {
                    "type": "boolean",
                    "description": "Indicator if the action should apply to all batches of the deployment or only the latest batch.\n"
                }
            },
            "type": "object",
            "required": [
                "actionType"
            ]
        },
        "spotinst:aws/ManagedInstanceBlockDeviceMapping:ManagedInstanceBlockDeviceMapping": {
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "ebs": {
                    "$ref": "#/types/spotinst:aws/ManagedInstanceBlockDeviceMappingEbs:ManagedInstanceBlockDeviceMappingEbs"
                }
            },
            "type": "object",
            "required": [
                "deviceName"
            ]
        },
        "spotinst:aws/ManagedInstanceBlockDeviceMappingEbs:ManagedInstanceBlockDeviceMappingEbs": {
            "properties": {
                "deleteOnTermination": {
                    "type": "boolean"
                },
                "iops": {
                    "type": "integer"
                },
                "throughput": {
                    "type": "integer"
                },
                "volumeSize": {
                    "type": "integer"
                },
                "volumeType": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteOnTermination",
                        "volumeType"
                    ]
                }
            }
        },
        "spotinst:aws/ManagedInstanceDelete:ManagedInstanceDelete": {
            "properties": {
                "amiBackupShouldDeleteImages": {
                    "type": "boolean"
                },
                "deallocationConfigShouldDeleteImages": {
                    "type": "boolean"
                },
                "shouldDeleteNetworkInterfaces": {
                    "type": "boolean"
                },
                "shouldDeleteSnapshots": {
                    "type": "boolean"
                },
                "shouldDeleteVolumes": {
                    "type": "boolean"
                },
                "shouldTerminateInstance": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ManagedInstanceIntegrationRoute53:ManagedInstanceIntegrationRoute53": {
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceIntegrationRoute53Domain:ManagedInstanceIntegrationRoute53Domain"
                    }
                }
            },
            "type": "object",
            "required": [
                "domains"
            ]
        },
        "spotinst:aws/ManagedInstanceIntegrationRoute53Domain:ManagedInstanceIntegrationRoute53Domain": {
            "properties": {
                "hostedZoneId": {
                    "type": "string"
                },
                "recordSetType": {
                    "type": "string"
                },
                "recordSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceIntegrationRoute53DomainRecordSet:ManagedInstanceIntegrationRoute53DomainRecordSet"
                    }
                },
                "spotinstAcctId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "hostedZoneId",
                "recordSets"
            ]
        },
        "spotinst:aws/ManagedInstanceIntegrationRoute53DomainRecordSet:ManagedInstanceIntegrationRoute53DomainRecordSet": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "usePublicDns": {
                    "type": "boolean"
                },
                "usePublicIp": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/ManagedInstanceLoadBalancer:ManagedInstanceLoadBalancer": {
            "properties": {
                "arn": {
                    "type": "string"
                },
                "autoWeight": {
                    "type": "boolean"
                },
                "azAwareness": {
                    "type": "boolean"
                },
                "balancerId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "targetSetId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "spotinst:aws/ManagedInstanceManagedInstanceAction:ManagedInstanceManagedInstanceAction": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "spotinst:aws/ManagedInstanceNetworkInterface:ManagedInstanceNetworkInterface": {
            "properties": {
                "associateIpv6Address": {
                    "type": "boolean"
                },
                "associatePublicIpAddress": {
                    "type": "boolean"
                },
                "deviceIndex": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deviceIndex"
            ]
        },
        "spotinst:aws/ManagedInstanceResourceTagSpecification:ManagedInstanceResourceTagSpecification": {
            "properties": {
                "shouldTagAmis": {
                    "type": "boolean"
                },
                "shouldTagEnis": {
                    "type": "boolean"
                },
                "shouldTagSnapshots": {
                    "type": "boolean"
                },
                "shouldTagVolumes": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "spotinst:aws/ManagedInstanceRevertToSpot:ManagedInstanceRevertToSpot": {
            "properties": {
                "performAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "performAt"
            ]
        },
        "spotinst:aws/ManagedInstanceScheduledTask:ManagedInstanceScheduledTask": {
            "properties": {
                "cronExpression": {
                    "type": "string"
                },
                "frequency": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "startTime": {
                    "type": "string"
                },
                "taskType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "taskType"
            ]
        },
        "spotinst:aws/ManagedInstanceTag:ManagedInstanceTag": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "spotinst:aws/MrScalarApplication:MrScalarApplication": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Arguments for EMR to pass to the application.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The MrScaler name.\n"
                },
                "version": {
                    "type": "string",
                    "description": "T he version of the application.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/MrScalarBootstrapActionsFile:MrScalarBootstrapActionsFile": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "S3 Bucket name for bootstrap actions.\n"
                },
                "key": {
                    "type": "string",
                    "description": "S3 key for bootstrap actions.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "key"
            ]
        },
        "spotinst:aws/MrScalarConfigurationsFile:MrScalarConfigurationsFile": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "S3 Bucket name for bootstrap actions.\n"
                },
                "key": {
                    "type": "string",
                    "description": "S3 key for bootstrap actions.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "key"
            ]
        },
        "spotinst:aws/MrScalarCoreEbsBlockDevice:MrScalarCoreEbsBlockDevice": {
            "properties": {
                "iops": {
                    "type": "integer",
                    "description": "IOPS for the volume. Required in some volume types, such as io1.\n"
                },
                "sizeInGb": {
                    "type": "integer",
                    "description": "Size of the volume, in GBs.\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "volume type. Allowed values are 'gp2', 'io1' and others.\n"
                },
                "volumesPerInstance": {
                    "type": "integer",
                    "description": "Amount of volumes per instance in the core group.\n"
                }
            },
            "type": "object",
            "required": [
                "sizeInGb",
                "volumeType"
            ]
        },
        "spotinst:aws/MrScalarCoreScalingDownPolicy:MrScalarCoreScalingDownPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "The type of action to perform. Allowed values are : 'adjustment', 'setMinTarget', 'setMaxTarget', 'updateCapacity', 'percentageAdjustment'\n"
                },
                "adjustment": {
                    "type": "string",
                    "description": "The number of instances to add/remove to/from the target capacity when scale is needed.\n"
                },
                "cooldown": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.\n"
                },
                "dimensions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A mapping of dimensions describing qualities of the metric.\n"
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n"
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "description": "Max target capacity for scale down.\n"
                },
                "maximum": {
                    "type": "string",
                    "description": "The maximum to set when scale is needed.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the metric in CloudWatch which the statement will be based on.\n"
                },
                "minTargetCapacity": {
                    "type": "string",
                    "description": "Min target capacity for scale up.\n"
                },
                "minimum": {
                    "type": "string",
                    "description": "The minimum to set when scale is needed.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "Must contain the value: `AWS/ElasticMapReduce`.\n"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use in order to determine if the policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The time window in seconds over which the statistic is applied.\n"
                },
                "policyName": {
                    "type": "string",
                    "description": "The name of the policy.\n"
                },
                "statistic": {
                    "type": "string",
                    "description": "The aggregation method of the given metric. Valid Values: `average` | `sum` | `sampleCount` | `maximum` | `minimum`\n"
                },
                "target": {
                    "type": "string",
                    "description": "The number of instances to set when scale is needed.\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The value that the specified statistic is compared to.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for a given metric. Valid Values: `seconds` | `microseconds` | `milliseconds` | `bytes` | `kilobytes` | `megabytes` | `gigabytes` | `terabytes` | `bits` | `kilobits` | `megabits` | `gigabits` | `terabits` | `percent` | `count` | `bytes/second` | `kilobytes/second` | `megabytes/second` | `gigabytes/second` | `terabytes/second` | `bits/second` | `kilobits/second` | `megabits/second` | `gigabits/second` | `terabits/second` | `count/second` | `none`\n"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:aws/MrScalarCoreScalingUpPolicy:MrScalarCoreScalingUpPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "The type of action to perform. Allowed values are : 'adjustment', 'setMinTarget', 'setMaxTarget', 'updateCapacity', 'percentageAdjustment'\n"
                },
                "adjustment": {
                    "type": "string",
                    "description": "The number of instances to add/remove to/from the target capacity when scale is needed.\n"
                },
                "cooldown": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.\n"
                },
                "dimensions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A mapping of dimensions describing qualities of the metric.\n"
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n"
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "description": "Max target capacity for scale down.\n"
                },
                "maximum": {
                    "type": "string",
                    "description": "The maximum to set when scale is needed.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the metric in CloudWatch which the statement will be based on.\n"
                },
                "minTargetCapacity": {
                    "type": "string",
                    "description": "Min target capacity for scale up.\n"
                },
                "minimum": {
                    "type": "string",
                    "description": "The minimum to set when scale is needed.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "Must contain the value: `AWS/ElasticMapReduce`.\n"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use in order to determine if the policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The time window in seconds over which the statistic is applied.\n"
                },
                "policyName": {
                    "type": "string",
                    "description": "The name of the policy.\n"
                },
                "statistic": {
                    "type": "string",
                    "description": "The aggregation method of the given metric. Valid Values: `average` | `sum` | `sampleCount` | `maximum` | `minimum`\n"
                },
                "target": {
                    "type": "string",
                    "description": "The number of instances to set when scale is needed.\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The value that the specified statistic is compared to.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for a given metric. Valid Values: `seconds` | `microseconds` | `milliseconds` | `bytes` | `kilobytes` | `megabytes` | `gigabytes` | `terabytes` | `bits` | `kilobits` | `megabits` | `gigabits` | `terabits` | `percent` | `count` | `bytes/second` | `kilobytes/second` | `megabytes/second` | `gigabytes/second` | `terabytes/second` | `bits/second` | `kilobits/second` | `megabits/second` | `gigabits/second` | `terabits/second` | `count/second` | `none`\n"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:aws/MrScalarInstanceWeight:MrScalarInstanceWeight": {
            "properties": {
                "instanceType": {
                    "type": "string",
                    "description": "The type of the instance.\n"
                },
                "weightedCapacity": {
                    "type": "integer",
                    "description": "The weight given to the associated instance type.\n"
                }
            },
            "type": "object",
            "required": [
                "instanceType",
                "weightedCapacity"
            ]
        },
        "spotinst:aws/MrScalarMasterEbsBlockDevice:MrScalarMasterEbsBlockDevice": {
            "properties": {
                "iops": {
                    "type": "integer",
                    "description": "IOPS for the volume. Required in some volume types, such as io1.\n"
                },
                "sizeInGb": {
                    "type": "integer",
                    "description": "Size of the volume, in GBs.\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "volume type. Allowed values are 'gp2', 'io1' and others.\n"
                },
                "volumesPerInstance": {
                    "type": "integer",
                    "description": "Amount of volumes per instance in the core group.\n"
                }
            },
            "type": "object",
            "required": [
                "sizeInGb",
                "volumeType"
            ]
        },
        "spotinst:aws/MrScalarProvisioningTimeout:MrScalarProvisioningTimeout": {
            "properties": {
                "timeout": {
                    "type": "integer",
                    "description": "The amount of time (minutes) after which the cluster is automatically terminated if it's still in provisioning status. Minimum: '15'.\n"
                },
                "timeoutAction": {
                    "type": "string",
                    "description": "The action to take if the timeout is exceeded. Valid values: `terminate`, `terminateAndRetry`.\n"
                }
            },
            "type": "object",
            "required": [
                "timeout",
                "timeoutAction"
            ]
        },
        "spotinst:aws/MrScalarScheduledTask:MrScalarScheduledTask": {
            "properties": {
                "cron": {
                    "type": "string",
                    "description": "A cron expression representing the schedule for the task.\n"
                },
                "desiredCapacity": {
                    "type": "string",
                    "description": "New desired capacity for the elastigroup.\n"
                },
                "instanceGroupType": {
                    "type": "string",
                    "description": "Select the EMR instance groups to execute the scheduled task on. Valid values: `task`.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Enable/Disable the specified scheduling task.\n"
                },
                "maxCapacity": {
                    "type": "string",
                    "description": "New max capacity for the elastigroup.\n"
                },
                "minCapacity": {
                    "type": "string",
                    "description": "New min capacity for the elastigroup.\n"
                },
                "taskType": {
                    "type": "string",
                    "description": "The type of task to be scheduled. Valid values: `setCapacity`.\n"
                }
            },
            "type": "object",
            "required": [
                "cron",
                "instanceGroupType",
                "taskType"
            ]
        },
        "spotinst:aws/MrScalarStepsFile:MrScalarStepsFile": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "S3 Bucket name for bootstrap actions.\n"
                },
                "key": {
                    "type": "string",
                    "description": "S3 key for bootstrap actions.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "key"
            ]
        },
        "spotinst:aws/MrScalarTag:MrScalarTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "S3 key for bootstrap actions.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Tag value.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:aws/MrScalarTaskEbsBlockDevice:MrScalarTaskEbsBlockDevice": {
            "properties": {
                "iops": {
                    "type": "integer",
                    "description": "IOPS for the volume. Required in some volume types, such as io1.\n"
                },
                "sizeInGb": {
                    "type": "integer",
                    "description": "Size of the volume, in GBs.\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "volume type. Allowed values are 'gp2', 'io1' and others.\n"
                },
                "volumesPerInstance": {
                    "type": "integer",
                    "description": "Amount of volumes per instance in the core group.\n"
                }
            },
            "type": "object",
            "required": [
                "sizeInGb",
                "volumeType"
            ]
        },
        "spotinst:aws/MrScalarTaskScalingDownPolicy:MrScalarTaskScalingDownPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "The type of action to perform. Allowed values are : 'adjustment', 'setMinTarget', 'setMaxTarget', 'updateCapacity', 'percentageAdjustment'\n"
                },
                "adjustment": {
                    "type": "string",
                    "description": "The number of instances to add/remove to/from the target capacity when scale is needed.\n"
                },
                "cooldown": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.\n"
                },
                "dimensions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A mapping of dimensions describing qualities of the metric.\n"
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n"
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "description": "Max target capacity for scale down.\n"
                },
                "maximum": {
                    "type": "string",
                    "description": "The maximum to set when scale is needed.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the metric in CloudWatch which the statement will be based on.\n"
                },
                "minTargetCapacity": {
                    "type": "string",
                    "description": "Min target capacity for scale up.\n"
                },
                "minimum": {
                    "type": "string",
                    "description": "The minimum to set when scale is needed.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "Must contain the value: `AWS/ElasticMapReduce`.\n"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use in order to determine if the policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The time window in seconds over which the statistic is applied.\n"
                },
                "policyName": {
                    "type": "string",
                    "description": "The name of the policy.\n"
                },
                "statistic": {
                    "type": "string",
                    "description": "The aggregation method of the given metric. Valid Values: `average` | `sum` | `sampleCount` | `maximum` | `minimum`\n"
                },
                "target": {
                    "type": "string",
                    "description": "The number of instances to set when scale is needed.\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The value that the specified statistic is compared to.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for a given metric. Valid Values: `seconds` | `microseconds` | `milliseconds` | `bytes` | `kilobytes` | `megabytes` | `gigabytes` | `terabytes` | `bits` | `kilobits` | `megabits` | `gigabits` | `terabits` | `percent` | `count` | `bytes/second` | `kilobytes/second` | `megabytes/second` | `gigabytes/second` | `terabytes/second` | `bits/second` | `kilobits/second` | `megabits/second` | `gigabits/second` | `terabits/second` | `count/second` | `none`\n"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:aws/MrScalarTaskScalingUpPolicy:MrScalarTaskScalingUpPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "The type of action to perform. Allowed values are : 'adjustment', 'setMinTarget', 'setMaxTarget', 'updateCapacity', 'percentageAdjustment'\n"
                },
                "adjustment": {
                    "type": "string",
                    "description": "The number of instances to add/remove to/from the target capacity when scale is needed.\n"
                },
                "cooldown": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.\n"
                },
                "dimensions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A mapping of dimensions describing qualities of the metric.\n"
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n"
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "description": "Max target capacity for scale down.\n"
                },
                "maximum": {
                    "type": "string",
                    "description": "The maximum to set when scale is needed.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the metric in CloudWatch which the statement will be based on.\n"
                },
                "minTargetCapacity": {
                    "type": "string",
                    "description": "Min target capacity for scale up.\n"
                },
                "minimum": {
                    "type": "string",
                    "description": "The minimum to set when scale is needed.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "Must contain the value: `AWS/ElasticMapReduce`.\n"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use in order to determine if the policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The time window in seconds over which the statistic is applied.\n"
                },
                "policyName": {
                    "type": "string",
                    "description": "The name of the policy.\n"
                },
                "statistic": {
                    "type": "string",
                    "description": "The aggregation method of the given metric. Valid Values: `average` | `sum` | `sampleCount` | `maximum` | `minimum`\n"
                },
                "target": {
                    "type": "string",
                    "description": "The number of instances to set when scale is needed.\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The value that the specified statistic is compared to.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for a given metric. Valid Values: `seconds` | `microseconds` | `milliseconds` | `bytes` | `kilobytes` | `megabytes` | `gigabytes` | `terabytes` | `bits` | `kilobits` | `megabits` | `gigabits` | `terabits` | `percent` | `count` | `bytes/second` | `kilobytes/second` | `megabytes/second` | `gigabytes/second` | `terabytes/second` | `bits/second` | `kilobits/second` | `megabits/second` | `gigabits/second` | `terabits/second` | `count/second` | `none`\n"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:aws/MrScalarTerminationPolicy:MrScalarTerminationPolicy": {
            "properties": {
                "statements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTerminationPolicyStatement:MrScalarTerminationPolicyStatement"
                    }
                }
            },
            "type": "object",
            "required": [
                "statements"
            ]
        },
        "spotinst:aws/MrScalarTerminationPolicyStatement:MrScalarTerminationPolicyStatement": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the metric in CloudWatch which the statement will be based on.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "Must contain the value: `AWS/ElasticMapReduce`.\n"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use in order to determine if the policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The time window in seconds over which the statistic is applied.\n"
                },
                "statistic": {
                    "type": "string",
                    "description": "The aggregation method of the given metric. Valid Values: `average` | `sum` | `sampleCount` | `maximum` | `minimum`\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The value that the specified statistic is compared to.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for a given metric. Valid Values: `seconds` | `microseconds` | `milliseconds` | `bytes` | `kilobytes` | `megabytes` | `gigabytes` | `terabytes` | `bits` | `kilobits` | `megabits` | `gigabits` | `terabits` | `percent` | `count` | `bytes/second` | `kilobytes/second` | `megabytes/second` | `gigabytes/second` | `terabytes/second` | `bits/second` | `kilobits/second` | `megabits/second` | `gigabits/second` | `terabits/second` | `count/second` | `none`\n"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "threshold"
            ]
        },
        "spotinst:aws/OceanAutoscaler:OceanAutoscaler": {
            "properties": {
                "autoHeadroomPercentage": {
                    "type": "integer"
                },
                "autoscaleCooldown": {
                    "type": "integer"
                },
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:aws/OceanAutoscalerAutoscaleDown:OceanAutoscalerAutoscaleDown"
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:aws/OceanAutoscalerAutoscaleHeadroom:OceanAutoscalerAutoscaleHeadroom"
                },
                "autoscaleIsAutoConfig": {
                    "type": "boolean"
                },
                "autoscaleIsEnabled": {
                    "type": "boolean"
                },
                "enableAutomaticAndManualHeadroom": {
                    "type": "boolean"
                },
                "extendedResourceDefinitions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceLimits": {
                    "$ref": "#/types/spotinst:aws/OceanAutoscalerResourceLimits:OceanAutoscalerResourceLimits"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanAutoscalerAutoscaleDown:OceanAutoscalerAutoscaleDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer"
                },
                "maxScaleDownPercentage": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanAutoscalerAutoscaleHeadroom:OceanAutoscalerAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer"
                },
                "gpuPerUnit": {
                    "type": "integer"
                },
                "memoryPerUnit": {
                    "type": "integer"
                },
                "numOfUnits": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanAutoscalerResourceLimits:OceanAutoscalerResourceLimits": {
            "properties": {
                "maxMemoryGib": {
                    "type": "integer",
                    "description": "Maximum amount of Memory (GiB).\n"
                },
                "maxVcpu": {
                    "type": "integer",
                    "description": "Maximum number of vcpus available.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanBlockDeviceMapping:OceanBlockDeviceMapping": {
            "properties": {
                "deviceName": {
                    "type": "string",
                    "description": "String. Set device name. (Example: `/dev/xvda`).\n"
                },
                "ebs": {
                    "$ref": "#/types/spotinst:aws/OceanBlockDeviceMappingEbs:OceanBlockDeviceMappingEbs",
                    "description": "Object. Set Elastic Block Store properties .\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanBlockDeviceMappingEbs:OceanBlockDeviceMappingEbs": {
            "properties": {
                "deleteOnTermination": {
                    "type": "boolean",
                    "description": "Boolean. Flag to delete the EBS on instance termination.\n"
                },
                "dynamicIops": {
                    "$ref": "#/types/spotinst:aws/OceanBlockDeviceMappingEbsDynamicIops:OceanBlockDeviceMappingEbsDynamicIops",
                    "description": "Set dynamic IOPS properties. When using this object, you cannot use the `iops` attribute. You must use one or the other.\n"
                },
                "dynamicVolumeSize": {
                    "$ref": "#/types/spotinst:aws/OceanBlockDeviceMappingEbsDynamicVolumeSize:OceanBlockDeviceMappingEbsDynamicVolumeSize",
                    "description": "Object. Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n"
                },
                "encrypted": {
                    "type": "boolean",
                    "description": "Boolean. Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume.\n"
                },
                "iops": {
                    "type": "integer",
                    "description": "Must be greater than or equal to 0.\n"
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "String. Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "(Optional) String. The Snapshot ID to mount by.\n"
                },
                "throughput": {
                    "type": "integer",
                    "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that `volume_type` = `gp3`.\n"
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "Int. The size, in GB of the volume.\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "String. The type of the volume. (Example: `gp2`).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteOnTermination",
                        "encrypted",
                        "volumeType"
                    ]
                }
            }
        },
        "spotinst:aws/OceanBlockDeviceMappingEbsDynamicIops:OceanBlockDeviceMappingEbsDynamicIops": {
            "properties": {
                "baseSize": {
                    "type": "integer",
                    "description": "Initial size for IOPS.\n"
                },
                "resource": {
                    "type": "string"
                },
                "sizePerResourceUnit": {
                    "type": "integer",
                    "description": "Additional size per resource unit (in IOPS). (Example: `baseSize=50`, `sizePerResourceUnit=20`, and an instance with 2 CPU is launched; its IOPS size will be: 90).\n"
                }
            },
            "type": "object",
            "required": [
                "baseSize",
                "resource",
                "sizePerResourceUnit"
            ]
        },
        "spotinst:aws/OceanBlockDeviceMappingEbsDynamicVolumeSize:OceanBlockDeviceMappingEbsDynamicVolumeSize": {
            "properties": {
                "baseSize": {
                    "type": "integer",
                    "description": "Initial size for IOPS.\n"
                },
                "resource": {
                    "type": "string"
                },
                "sizePerResourceUnit": {
                    "type": "integer",
                    "description": "Additional size per resource unit (in IOPS). (Example: `baseSize=50`, `sizePerResourceUnit=20`, and an instance with 2 CPU is launched; its IOPS size will be: 90).\n"
                }
            },
            "type": "object",
            "required": [
                "baseSize",
                "resource",
                "sizePerResourceUnit"
            ]
        },
        "spotinst:aws/OceanClusterOrientation:OceanClusterOrientation": {
            "properties": {
                "availabilityVsCost": {
                    "type": "string",
                    "description": "You can control the approach that Ocean takes while launching nodes by configuring this value. Possible values: `costOriented`,`balanced`,`cheapest`.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanFilters:OceanFilters": {
            "properties": {
                "architectures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will support at least one of the architectures from this list.\n"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will belong to one of the categories types from this list.\n"
                },
                "diskTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will have one of the disk type from this list.\n"
                },
                "excludeFamilies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Types belonging to a family from the ExcludeFamilies will not be available for scaling (asterisk wildcard is also supported). For example, C* will exclude instance types from these families: c5, c4, c4a, etc.\n"
                },
                "excludeMetal": {
                    "type": "boolean",
                    "description": "In case excludeMetal is set to true, metal types will not be available for scaling.\n"
                },
                "hypervisors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will have a hypervisor type from this list.\n"
                },
                "includeFamilies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Types belonging to a family from the IncludeFamilies will be available for scaling (asterisk wildcard is also supported). For example, C* will include instance types from these families: c5, c4, c4a, etc.\n"
                },
                "isEnaSupported": {
                    "type": "string",
                    "description": "Ena is supported or not.\n"
                },
                "maxGpu": {
                    "type": "integer",
                    "description": "Maximum total number of GPUs.\n"
                },
                "maxMemoryGib": {
                    "type": "number",
                    "description": "Maximum amount of Memory (GiB).\n"
                },
                "maxNetworkPerformance": {
                    "type": "integer",
                    "description": "Maximum Bandwidth in Gib/s of network performance.\n"
                },
                "maxVcpu": {
                    "type": "integer",
                    "description": "Maximum number of vcpus available.\n"
                },
                "minEnis": {
                    "type": "integer",
                    "description": "Minimum number of network interfaces (ENIs).\n"
                },
                "minGpu": {
                    "type": "integer",
                    "description": "Minimum total number of GPUs.\n"
                },
                "minMemoryGib": {
                    "type": "number",
                    "description": "Minimum amount of Memory (GiB).\n"
                },
                "minNetworkPerformance": {
                    "type": "integer",
                    "description": "Minimum Bandwidth in Gib/s of network performance.\n"
                },
                "minVcpu": {
                    "type": "integer",
                    "description": "Minimum number of vcpus available.\n"
                },
                "rootDeviceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will have a root device types from this list.\n"
                },
                "virtualizationTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will support at least one of the virtualization types from this list.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanInstanceMetadataOptions:OceanInstanceMetadataOptions": {
            "properties": {
                "httpPutResponseHopLimit": {
                    "type": "integer",
                    "description": "An integer from 1 through 64. The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further the instance metadata requests can travel.\n"
                },
                "httpTokens": {
                    "type": "string",
                    "description": "Determines if a signed token is required or not. Valid values: `optional` or `required`.\n"
                }
            },
            "type": "object",
            "required": [
                "httpTokens"
            ]
        },
        "spotinst:aws/OceanLaunchSpecAutoscaleDown:OceanLaunchSpecAutoscaleDown": {
            "properties": {
                "maxScaleDownPercentage": {
                    "type": "number",
                    "description": "The maximum percentage allowed to scale down in a single scaling action on the nodes running in a specific VNG. Allowed only if maxScaleDownPercentage is set to null at the cluster level. Number between [0.1-100].\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of CPUs to allocate for each headroom unit. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n"
                },
                "gpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of GPUS to allocate for each headroom unit.\n"
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the amount of memory (MiB) to allocate for each headroom unit.\n"
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU, memory and GPU.\n"
                }
            },
            "type": "object",
            "required": [
                "numOfUnits"
            ]
        },
        "spotinst:aws/OceanLaunchSpecAutoscaleHeadroomsAutomatic:OceanLaunchSpecAutoscaleHeadroomsAutomatic": {
            "properties": {
                "autoHeadroomPercentage": {
                    "type": "integer",
                    "description": "Number between 0-200 to control the headroom % of the specific Virtual Node Group. Effective when cluster.autoScaler.headroom.automatic.`is_enabled` = true is set on the Ocean cluster.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLaunchSpecBlockDeviceMapping:OceanLaunchSpecBlockDeviceMapping": {
            "properties": {
                "deviceName": {
                    "type": "string",
                    "description": "String. Set device name. (Example: `/dev/xvda`).\n"
                },
                "ebs": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecBlockDeviceMappingEbs:OceanLaunchSpecBlockDeviceMappingEbs",
                    "description": "Object. Set Elastic Block Store properties .\n"
                },
                "noDevice": {
                    "type": "string",
                    "description": "String. Suppresses the specified device included in the block device mapping of the AMI.\n"
                },
                "virtualName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLaunchSpecBlockDeviceMappingEbs:OceanLaunchSpecBlockDeviceMappingEbs": {
            "properties": {
                "deleteOnTermination": {
                    "type": "boolean",
                    "description": "Boolean. Flag to delete the EBS on instance termination.\n"
                },
                "dynamicVolumeSize": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSize:OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSize",
                    "description": "Object. Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n"
                },
                "encrypted": {
                    "type": "boolean",
                    "description": "Boolean. Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume.\n"
                },
                "iops": {
                    "type": "integer",
                    "description": "Int. The number of I/O operations per second (IOPS) that the volume supports.\n"
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "String. Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "(Optional) String. The Snapshot ID to mount by.\n"
                },
                "throughput": {
                    "type": "integer",
                    "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that `volume_type` = `gp3`.\n"
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "Int. The size, in GB of the volume.\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "String. The type of the volume. (Example: `gp2`).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteOnTermination",
                        "encrypted",
                        "volumeType"
                    ]
                }
            }
        },
        "spotinst:aws/OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSize:OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSize": {
            "properties": {
                "baseSize": {
                    "type": "integer",
                    "description": "Int. Initial size for volume. (Example: 50)\n"
                },
                "resource": {
                    "type": "string",
                    "description": "String. Resource type to increase volume size dynamically by. (Valid values: `CPU`)\n"
                },
                "sizePerResourceUnit": {
                    "type": "integer",
                    "description": "Int. Additional size (in GB) per resource unit. (Example: `baseSize=50`, `sizePerResourceUnit=20`, and instance with 2 CPU is launched; its total disk size will be: 90GB)\n"
                }
            },
            "type": "object",
            "required": [
                "baseSize",
                "resource",
                "sizePerResourceUnit"
            ]
        },
        "spotinst:aws/OceanLaunchSpecCreateOptions:OceanLaunchSpecCreateOptions": {
            "properties": {
                "initialNodes": {
                    "type": "integer",
                    "description": "When set to an integer greater than 0, a corresponding amount of nodes will be launched from the created Virtual Node Group. The parameter is recommended in case the use_as_template_only (in spotinst.aws.Ocean resource) is set to true during Ocean resource creation.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLaunchSpecDeleteOptions:OceanLaunchSpecDeleteOptions": {
            "properties": {
                "deleteNodes": {
                    "type": "boolean",
                    "description": "When set to \"true\", all instances belonging to the deleted launch specification will be drained, detached, and terminated.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "When set to `true`, delete even if it is the last Virtual Node Group (also, the default Virtual Node Group must be configured with `useAsTemlateOnly = true`). Should be set at creation or update, but will be used only at deletion.\n"
                }
            },
            "type": "object",
            "required": [
                "forceDelete"
            ]
        },
        "spotinst:aws/OceanLaunchSpecElasticIpPool:OceanLaunchSpecElasticIpPool": {
            "properties": {
                "tagSelector": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecElasticIpPoolTagSelector:OceanLaunchSpecElasticIpPoolTagSelector",
                    "description": "A key-value pair, which defines an Elastic IP from the customer pool. Can be null.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLaunchSpecElasticIpPoolTagSelector:OceanLaunchSpecElasticIpPoolTagSelector": {
            "properties": {
                "tagKey": {
                    "type": "string",
                    "description": "Elastic IP tag key. The Virtual Node Group will consider all Elastic IPs tagged with this tag as a part of the Elastic IP pool to use.\n"
                },
                "tagValue": {
                    "type": "string",
                    "description": "Elastic IP tag value. Can be null.\n"
                }
            },
            "type": "object",
            "required": [
                "tagKey"
            ]
        },
        "spotinst:aws/OceanLaunchSpecImage:OceanLaunchSpecImage": {
            "properties": {
                "imageId": {
                    "type": "string",
                    "description": "Identifier of the image in AWS. Valid values: any string which is not empty or null.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLaunchSpecInstanceMetadataOptions:OceanLaunchSpecInstanceMetadataOptions": {
            "properties": {
                "httpPutResponseHopLimit": {
                    "type": "integer",
                    "description": "An integer from 1 through 64. The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further the instance metadata requests can travel.\n"
                },
                "httpTokens": {
                    "type": "string",
                    "description": "Determines if a signed token is required or not. Valid values: `optional` or `required`.\n"
                }
            },
            "type": "object",
            "required": [
                "httpTokens"
            ]
        },
        "spotinst:aws/OceanLaunchSpecInstanceTypesFilters:OceanLaunchSpecInstanceTypesFilters": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will belong to one of the categories types from this list. Valid values: `Accelerated_computing`, `Compute_optimized`, `General_purpose`, `Memory_optimized`, `Storage_optimized`.\n"
                },
                "diskTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will have one of the disk type from this list. Valid values: `NVMe`, `EBS`, `SSD`, `HDD`.\n"
                },
                "excludeFamilies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Types belonging to a family from the ExcludeFamilies will not be available for scaling (asterisk wildcard is also supported). For example, C* will exclude instance types from these families: c5, c4, c4a, etc.\n"
                },
                "excludeMetal": {
                    "type": "boolean",
                    "description": "In case excludeMetal is set to true, metal types will not be available for scaling.\n"
                },
                "hypervisors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will have a hypervisor type from this list. Valid values: `nitro`, `xen`.\n"
                },
                "includeFamilies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Types belonging to a family from the IncludeFamilies will be available for scaling (asterisk wildcard is also supported). For example, C* will include instance types from these families: c5, c4, c4a, etc.\n"
                },
                "isEnaSupported": {
                    "type": "string",
                    "description": "Ena is supported or not.\n"
                },
                "maxGpu": {
                    "type": "integer",
                    "description": "Maximum total number of GPUs.\n"
                },
                "maxMemoryGib": {
                    "type": "number",
                    "description": "Maximum amount of Memory (GiB).\n"
                },
                "maxNetworkPerformance": {
                    "type": "integer",
                    "description": "Maximum Bandwidth in Gib/s of network performance.\n"
                },
                "maxVcpu": {
                    "type": "integer",
                    "description": "Maximum number of vcpus available.\n"
                },
                "minEnis": {
                    "type": "integer",
                    "description": "Minimum number of network interfaces (ENIs).\n"
                },
                "minGpu": {
                    "type": "integer",
                    "description": "Minimum total number of GPUs.\n"
                },
                "minMemoryGib": {
                    "type": "number",
                    "description": "Minimum amount of Memory (GiB).\n"
                },
                "minNetworkPerformance": {
                    "type": "integer",
                    "description": "Minimum Bandwidth in Gib/s of network performance.\n"
                },
                "minVcpu": {
                    "type": "integer",
                    "description": "Minimum number of vcpus available.\n"
                },
                "rootDeviceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will have a root device types from this list. Valid values: `ebs`, or `instance-store`.\n"
                },
                "virtualizationTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will support at least one of the virtualization types from this list. Valid values: `hvm`, `paravirtual`.\n\n\n\u003ca id=\"update-policy\"\u003e\u003c/a\u003e\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLaunchSpecLabel:OceanLaunchSpecLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The taint key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The taint value.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:aws/OceanLaunchSpecResourceLimit:OceanLaunchSpecResourceLimit": {
            "properties": {
                "maxInstanceCount": {
                    "type": "integer",
                    "description": "Set a maximum number of instances per Virtual Node Group. Can be null. If set, value must be greater than or equal to 0.\n"
                },
                "minInstanceCount": {
                    "type": "integer",
                    "description": "Set a minimum number of instances per Virtual Node Group. Can be null. If set, value must be greater than or equal to 0.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLaunchSpecSchedulingShutdownHours:OceanLaunchSpecSchedulingShutdownHours": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Flag to enable or disable the shutdown hours mechanism. When False, the mechanism is deactivated, and the virtual node group remains in its current state.\n"
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The times that the shutdown hours will apply.\n"
                }
            },
            "type": "object",
            "required": [
                "timeWindows"
            ]
        },
        "spotinst:aws/OceanLaunchSpecSchedulingTask:OceanLaunchSpecSchedulingTask": {
            "properties": {
                "cronExpression": {
                    "type": "string",
                    "description": "A valid cron expression. For example : \" * * * * * \". The cron job runs in UTC time and is in Unix cron format.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Flag to enable or disable the shutdown hours mechanism. When False, the mechanism is deactivated, and the virtual node group remains in its current state.\n"
                },
                "taskHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecSchedulingTaskTaskHeadroom:OceanLaunchSpecSchedulingTaskTaskHeadroom"
                    },
                    "description": "The config of this scheduled task. Depends on the value of taskType.\n"
                },
                "taskType": {
                    "type": "string",
                    "description": "The activity that you are scheduling. Valid values: \"manualHeadroomUpdate\".\n"
                }
            },
            "type": "object",
            "required": [
                "cronExpression",
                "isEnabled",
                "taskType"
            ]
        },
        "spotinst:aws/OceanLaunchSpecSchedulingTaskTaskHeadroom:OceanLaunchSpecSchedulingTaskTaskHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of CPUs to allocate for each headroom unit. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n"
                },
                "gpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of GPUS to allocate for each headroom unit.\n"
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the amount of memory (MiB) to allocate for each headroom unit.\n"
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU, memory and GPU.\n"
                }
            },
            "type": "object",
            "required": [
                "numOfUnits"
            ]
        },
        "spotinst:aws/OceanLaunchSpecStrategy:OceanLaunchSpecStrategy": {
            "properties": {
                "spotPercentage": {
                    "type": "integer",
                    "description": "The desired percentage of the Spot instances out of all running instances for this VNG. Only available when the field is not set in the cluster directly (cluster.strategy.spotPercentage).\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLaunchSpecTag:OceanLaunchSpecTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The taint key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The taint value.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:aws/OceanLaunchSpecTaint:OceanLaunchSpecTaint": {
            "properties": {
                "effect": {
                    "type": "string",
                    "description": "The effect of the taint. Valid values: `\"NoSchedule\"`, `\"PreferNoSchedule\"`, `\"NoExecute\"`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The taint key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The taint value.\n"
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "value"
            ]
        },
        "spotinst:aws/OceanLaunchSpecUpdatePolicy:OceanLaunchSpecUpdatePolicy": {
            "properties": {
                "rollConfig": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecUpdatePolicyRollConfig:OceanLaunchSpecUpdatePolicyRollConfig"
                },
                "shouldRoll": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "shouldRoll"
            ]
        },
        "spotinst:aws/OceanLaunchSpecUpdatePolicyRollConfig:OceanLaunchSpecUpdatePolicyRollConfig": {
            "properties": {
                "batchSizePercentage": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "batchSizePercentage"
            ]
        },
        "spotinst:aws/OceanLoadBalancer:OceanLoadBalancer": {
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "Required if type is set to `TARGET_GROUP`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Required if type is set to `CLASSIC`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Can be set to `CLASSIC` or `TARGET_GROUP`\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLogging:OceanLogging": {
            "properties": {
                "export": {
                    "$ref": "#/types/spotinst:aws/OceanLoggingExport:OceanLoggingExport",
                    "description": "Logging Export configuration.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLoggingExport:OceanLoggingExport": {
            "properties": {
                "s3s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLoggingExportS3:OceanLoggingExportS3"
                    },
                    "description": "Exports your cluster's logs to the S3 bucket and subdir configured on the S3 data integration given.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLoggingExportS3:OceanLoggingExportS3": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The identifier of The S3 data integration to export the logs to.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "spotinst:aws/OceanResourceTagSpecification:OceanResourceTagSpecification": {
            "properties": {
                "shouldTagVolumes": {
                    "type": "boolean",
                    "description": "Specify if Volume resources will be tagged with Virtual Node Group tags or Ocean tags.\n"
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanScheduledTask:OceanScheduledTask": {
            "properties": {
                "shutdownHours": {
                    "$ref": "#/types/spotinst:aws/OceanScheduledTaskShutdownHours:OceanScheduledTaskShutdownHours"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanScheduledTaskTask:OceanScheduledTaskTask"
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanScheduledTaskShutdownHours:OceanScheduledTaskShutdownHours": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "timeWindows"
            ]
        },
        "spotinst:aws/OceanScheduledTaskTask:OceanScheduledTaskTask": {
            "properties": {
                "cronExpression": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "taskType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cronExpression",
                "isEnabled",
                "taskType"
            ]
        },
        "spotinst:aws/OceanTag:OceanTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The tag value.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:aws/OceanUpdatePolicy:OceanUpdatePolicy": {
            "properties": {
                "autoApplyTags": {
                    "type": "boolean"
                },
                "conditionedRoll": {
                    "type": "boolean"
                },
                "rollConfig": {
                    "$ref": "#/types/spotinst:aws/OceanUpdatePolicyRollConfig:OceanUpdatePolicyRollConfig"
                },
                "shouldRoll": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "shouldRoll"
            ]
        },
        "spotinst:aws/OceanUpdatePolicyRollConfig:OceanUpdatePolicyRollConfig": {
            "properties": {
                "batchMinHealthyPercentage": {
                    "type": "integer"
                },
                "batchSizePercentage": {
                    "type": "integer"
                },
                "launchSpecIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "respectPdb": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "batchSizePercentage"
            ]
        },
        "spotinst:aws/SuspensionSuspension:SuspensionSuspension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of process to suspend. Valid values: `\"AUTO_HEALING\" , \"OUT_OF_STRATEGY\", \"PREVENTIVE_REPLACEMENT\", \"REVERT_PREFERRED\", or \"SCHEDULING\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:azure/ElastigroupHealthCheck:ElastigroupHealthCheck": {
            "properties": {
                "autoHealing": {
                    "type": "boolean"
                },
                "gracePeriod": {
                    "type": "integer"
                },
                "healthCheckType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "healthCheckType"
            ]
        },
        "spotinst:azure/ElastigroupImage:ElastigroupImage": {
            "properties": {
                "customs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupImageCustom:ElastigroupImageCustom"
                    }
                },
                "marketplaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupImageMarketplace:ElastigroupImageMarketplace"
                    }
                }
            },
            "type": "object"
        },
        "spotinst:azure/ElastigroupImageCustom:ElastigroupImageCustom": {
            "properties": {
                "imageName": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "Name of the Azure Resource Group where the Managed Service Identity is located.\n"
                }
            },
            "type": "object",
            "required": [
                "imageName",
                "resourceGroupName"
            ]
        },
        "spotinst:azure/ElastigroupImageMarketplace:ElastigroupImageMarketplace": {
            "properties": {
                "offer": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "offer",
                "publisher",
                "sku"
            ]
        },
        "spotinst:azure/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes": {
            "properties": {
                "clusterIdentifier": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clusterIdentifier"
            ]
        },
        "spotinst:azure/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime": {
            "properties": {
                "deploymentId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deploymentId"
            ]
        },
        "spotinst:azure/ElastigroupLoadBalancer:ElastigroupLoadBalancer": {
            "properties": {
                "autoWeight": {
                    "type": "boolean"
                },
                "balancerId": {
                    "type": "string"
                },
                "targetSetId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "spotinst:azure/ElastigroupLogin:ElastigroupLogin": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "sshPublicKey": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "userName"
            ]
        },
        "spotinst:azure/ElastigroupManagedServiceIdentity:ElastigroupManagedServiceIdentity": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Managed Service Identity.\n"
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "Name of the Azure Resource Group where the Managed Service Identity is located.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "resourceGroupName"
            ]
        },
        "spotinst:azure/ElastigroupNetwork:ElastigroupNetwork": {
            "properties": {
                "additionalIpConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupNetworkAdditionalIpConfig:ElastigroupNetworkAdditionalIpConfig"
                    }
                },
                "assignPublicIp": {
                    "type": "boolean"
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "Name of the Azure Resource Group where the Managed Service Identity is located.\n"
                },
                "subnetName": {
                    "type": "string"
                },
                "virtualNetworkName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "resourceGroupName",
                "subnetName",
                "virtualNetworkName"
            ]
        },
        "spotinst:azure/ElastigroupNetworkAdditionalIpConfig:ElastigroupNetworkAdditionalIpConfig": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Managed Service Identity.\n"
                },
                "privateIpVersion": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:azure/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy": {
            "properties": {
                "actionType": {
                    "type": "string"
                },
                "adjustment": {
                    "type": "string"
                },
                "cooldown": {
                    "type": "integer"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension"
                    }
                },
                "evaluationPeriods": {
                    "type": "integer"
                },
                "maxTargetCapacity": {
                    "type": "string"
                },
                "maximum": {
                    "type": "string"
                },
                "metricName": {
                    "type": "string"
                },
                "minTargetCapacity": {
                    "type": "string"
                },
                "minimum": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "policyName": {
                    "type": "string"
                },
                "statistic": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "threshold": {
                    "type": "number"
                },
                "unit": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "statistic",
                        "threshold"
                    ]
                }
            }
        },
        "spotinst:azure/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Managed Service Identity.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Tag Value for Vms in Elastigroup.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:azure/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy": {
            "properties": {
                "actionType": {
                    "type": "string"
                },
                "adjustment": {
                    "type": "string"
                },
                "cooldown": {
                    "type": "integer"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension"
                    }
                },
                "evaluationPeriods": {
                    "type": "integer"
                },
                "maxTargetCapacity": {
                    "type": "string"
                },
                "maximum": {
                    "type": "string"
                },
                "metricName": {
                    "type": "string"
                },
                "minTargetCapacity": {
                    "type": "string"
                },
                "minimum": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "policyName": {
                    "type": "string"
                },
                "statistic": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "threshold": {
                    "type": "number"
                },
                "unit": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "statistic",
                        "threshold"
                    ]
                }
            }
        },
        "spotinst:azure/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Managed Service Identity.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Tag Value for Vms in Elastigroup.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:azure/ElastigroupScheduledTask:ElastigroupScheduledTask": {
            "properties": {
                "adjustment": {
                    "type": "string"
                },
                "adjustmentPercentage": {
                    "type": "string"
                },
                "batchSizePercentage": {
                    "type": "string"
                },
                "cronExpression": {
                    "type": "string"
                },
                "gracePeriod": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "scaleMaxCapacity": {
                    "type": "string"
                },
                "scaleMinCapacity": {
                    "type": "string"
                },
                "scaleTargetCapacity": {
                    "type": "string"
                },
                "taskType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cronExpression",
                "taskType"
            ]
        },
        "spotinst:azure/ElastigroupStrategy:ElastigroupStrategy": {
            "properties": {
                "drainingTimeout": {
                    "type": "integer"
                },
                "lowPriorityPercentage": {
                    "type": "integer"
                },
                "odCount": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "spotinst:azure/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy": {
            "properties": {
                "rollConfig": {
                    "$ref": "#/types/spotinst:azure/ElastigroupUpdatePolicyRollConfig:ElastigroupUpdatePolicyRollConfig"
                },
                "shouldRoll": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "shouldRoll"
            ]
        },
        "spotinst:azure/ElastigroupUpdatePolicyRollConfig:ElastigroupUpdatePolicyRollConfig": {
            "properties": {
                "batchSizePercentage": {
                    "type": "integer"
                },
                "gracePeriod": {
                    "type": "integer"
                },
                "healthCheckType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "batchSizePercentage"
            ]
        },
        "spotinst:azure/OceanAutoscaler:OceanAutoscaler": {
            "properties": {
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:azure/OceanAutoscalerAutoscaleDown:OceanAutoscalerAutoscaleDown",
                    "description": "Auto Scaling scale down operations.\n"
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:azure/OceanAutoscalerAutoscaleHeadroom:OceanAutoscalerAutoscaleHeadroom",
                    "description": "Spare Resource Capacity Management feature enables fast assignment of Pods without having to wait for new resources to be launched.\n"
                },
                "autoscaleIsEnabled": {
                    "type": "boolean",
                    "description": "Enable the Ocean Kubernetes Autoscaler.\n"
                },
                "resourceLimits": {
                    "$ref": "#/types/spotinst:azure/OceanAutoscalerResourceLimits:OceanAutoscalerResourceLimits",
                    "description": "Optionally set upper and lower bounds on the resource usage of the cluster.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "autoscaleDown",
                        "autoscaleHeadroom",
                        "autoscaleIsEnabled",
                        "resourceLimits"
                    ]
                }
            }
        },
        "spotinst:azure/OceanAutoscalerAutoscaleDown:OceanAutoscalerAutoscaleDown": {
            "properties": {
                "maxScaleDownPercentage": {
                    "type": "number",
                    "description": "Would represent the maximum % to scale-down.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "maxScaleDownPercentage"
                    ]
                }
            }
        },
        "spotinst:azure/OceanAutoscalerAutoscaleHeadroom:OceanAutoscalerAutoscaleHeadroom": {
            "properties": {
                "automatic": {
                    "$ref": "#/types/spotinst:azure/OceanAutoscalerAutoscaleHeadroomAutomatic:OceanAutoscalerAutoscaleHeadroomAutomatic",
                    "description": "Automatic headroom configuration.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "automatic"
                    ]
                }
            }
        },
        "spotinst:azure/OceanAutoscalerAutoscaleHeadroomAutomatic:OceanAutoscalerAutoscaleHeadroomAutomatic": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Enable automatic headroom. When set to `true`, Ocean configures and optimizes headroom automatically.\n"
                },
                "percentage": {
                    "type": "integer",
                    "description": "Optionally set a number between 0-100 to control the percentage of total cluster resources dedicated to headroom. Relevant when `isEnabled` is toggled on.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isEnabled",
                        "percentage"
                    ]
                }
            }
        },
        "spotinst:azure/OceanAutoscalerResourceLimits:OceanAutoscalerResourceLimits": {
            "properties": {
                "maxMemoryGib": {
                    "type": "integer",
                    "description": "The maximum memory in GiB units that can be allocated to the cluster.\n"
                },
                "maxVcpu": {
                    "type": "integer",
                    "description": "The maximum cpu in vCpu units that can be allocated to the cluster.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "maxMemoryGib"
                    ]
                }
            }
        },
        "spotinst:azure/OceanExtension:OceanExtension": {
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "description": "API version of the extension.\n"
                },
                "minorVersionAutoUpgrade": {
                    "type": "boolean",
                    "description": "Toggles whether auto upgrades are allowed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Load Balancer.\n"
                },
                "publisher": {
                    "type": "string",
                    "description": "Image publisher.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of load balancer. Supported value: `loadBalancer`\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiVersion",
                        "minorVersionAutoUpgrade",
                        "name",
                        "publisher",
                        "type"
                    ]
                }
            }
        },
        "spotinst:azure/OceanHealth:OceanHealth": {
            "properties": {
                "gracePeriod": {
                    "type": "integer",
                    "description": "The amount of time to wait, in seconds, from the moment the instance has launched before monitoring its health checks.\n"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanImage:OceanImage": {
            "properties": {
                "marketplaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanImageMarketplace:OceanImageMarketplace"
                    },
                    "description": "Select an image from Azure's Marketplace image catalogue.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "marketplaces"
                    ]
                }
            }
        },
        "spotinst:azure/OceanImageMarketplace:OceanImageMarketplace": {
            "properties": {
                "offer": {
                    "type": "string",
                    "description": "Image name.\n"
                },
                "publisher": {
                    "type": "string",
                    "description": "Image publisher.\n"
                },
                "sku": {
                    "type": "string",
                    "description": "Image Stock Keeping Unit (which is the specific version of the image).\n"
                },
                "version": {
                    "type": "string",
                    "description": "Image version.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "offer",
                        "publisher",
                        "sku",
                        "version"
                    ]
                }
            }
        },
        "spotinst:azure/OceanLoadBalancer:OceanLoadBalancer": {
            "properties": {
                "backendPoolNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Names of the Backend Pools to register the Cluster VMs to. Each Backend Pool is a separate load balancer.\n"
                },
                "loadBalancerSku": {
                    "type": "string",
                    "description": "Supported values: `Standard`, `Basic`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Load Balancer.\n"
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "The Resource Group name of the Load Balancer.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of load balancer. Supported value: `loadBalancer`\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "backendPoolNames",
                        "loadBalancerSku",
                        "name",
                        "resourceGroupName",
                        "type"
                    ]
                }
            }
        },
        "spotinst:azure/OceanManagedServiceIdentity:OceanManagedServiceIdentity": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Load Balancer.\n"
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "The Resource Group name of the Load Balancer.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "resourceGroupName"
            ]
        },
        "spotinst:azure/OceanNetwork:OceanNetwork": {
            "properties": {
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanNetworkNetworkInterface:OceanNetworkNetworkInterface"
                    },
                    "description": "A list of virtual network interfaces. The publicIpSku must be identical between all the network interfaces. One network interface must be set as the primary.\n"
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "The Resource Group name of the Load Balancer.\n"
                },
                "virtualNetworkName": {
                    "type": "string",
                    "description": "Virtual network.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "networkInterfaces",
                        "resourceGroupName",
                        "virtualNetworkName"
                    ]
                }
            }
        },
        "spotinst:azure/OceanNetworkNetworkInterface:OceanNetworkNetworkInterface": {
            "properties": {
                "additionalIpConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanNetworkNetworkInterfaceAdditionalIpConfig:OceanNetworkNetworkInterfaceAdditionalIpConfig"
                    },
                    "description": "Additional configuration of network interface. The name fields between all the `additional_ip_config` must be unique.\n"
                },
                "assignPublicIp": {
                    "type": "boolean",
                    "description": "Assign public IP.\n"
                },
                "isPrimary": {
                    "type": "boolean",
                    "description": "Defines whether the network interface is primary or not.\n"
                },
                "securityGroup": {
                    "$ref": "#/types/spotinst:azure/OceanNetworkNetworkInterfaceSecurityGroup:OceanNetworkNetworkInterfaceSecurityGroup"
                },
                "subnetName": {
                    "type": "string",
                    "description": "Subnet name.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "additionalIpConfigs",
                        "assignPublicIp",
                        "isPrimary",
                        "securityGroup",
                        "subnetName"
                    ]
                }
            }
        },
        "spotinst:azure/OceanNetworkNetworkInterfaceAdditionalIpConfig:OceanNetworkNetworkInterfaceAdditionalIpConfig": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Load Balancer.\n"
                },
                "privateIpVersion": {
                    "type": "string",
                    "description": "Supported values: `IPv4`, `IPv6`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "privateIpVersion"
                    ]
                }
            }
        },
        "spotinst:azure/OceanNetworkNetworkInterfaceSecurityGroup:OceanNetworkNetworkInterfaceSecurityGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Load Balancer.\n"
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "The Resource Group name of the Load Balancer.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "resourceGroupName"
                    ]
                }
            }
        },
        "spotinst:azure/OceanNpAutoscaler:OceanNpAutoscaler": {
            "properties": {
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:azure/OceanNpAutoscalerAutoscaleDown:OceanNpAutoscalerAutoscaleDown"
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:azure/OceanNpAutoscalerAutoscaleHeadroom:OceanNpAutoscalerAutoscaleHeadroom"
                },
                "autoscaleIsEnabled": {
                    "type": "boolean"
                },
                "resourceLimits": {
                    "$ref": "#/types/spotinst:azure/OceanNpAutoscalerResourceLimits:OceanNpAutoscalerResourceLimits"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanNpAutoscalerAutoscaleDown:OceanNpAutoscalerAutoscaleDown": {
            "properties": {
                "maxScaleDownPercentage": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanNpAutoscalerAutoscaleHeadroom:OceanNpAutoscalerAutoscaleHeadroom": {
            "properties": {
                "automatic": {
                    "$ref": "#/types/spotinst:azure/OceanNpAutoscalerAutoscaleHeadroomAutomatic:OceanNpAutoscalerAutoscaleHeadroomAutomatic"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanNpAutoscalerAutoscaleHeadroomAutomatic:OceanNpAutoscalerAutoscaleHeadroomAutomatic": {
            "properties": {
                "percentage": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanNpAutoscalerResourceLimits:OceanNpAutoscalerResourceLimits": {
            "properties": {
                "maxMemoryGib": {
                    "type": "integer"
                },
                "maxVcpu": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanNpFilters:OceanNpFilters": {
            "properties": {
                "acceleratedNetworking": {
                    "type": "string"
                },
                "architectures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "diskPerformance": {
                    "type": "string"
                },
                "excludeSeries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxGpu": {
                    "type": "number"
                },
                "maxMemoryGib": {
                    "type": "number"
                },
                "maxVcpu": {
                    "type": "integer"
                },
                "minDisk": {
                    "type": "integer"
                },
                "minGpu": {
                    "type": "number"
                },
                "minMemoryGib": {
                    "type": "number"
                },
                "minNics": {
                    "type": "integer"
                },
                "minVcpu": {
                    "type": "integer"
                },
                "series": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vmTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanNpHeadroom:OceanNpHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer"
                },
                "gpuPerUnit": {
                    "type": "integer"
                },
                "memoryPerUnit": {
                    "type": "integer"
                },
                "numOfUnits": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanNpHealth:OceanNpHealth": {
            "properties": {
                "gracePeriod": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanNpScheduling:OceanNpScheduling": {
            "properties": {
                "shutdownHours": {
                    "$ref": "#/types/spotinst:azure/OceanNpSchedulingShutdownHours:OceanNpSchedulingShutdownHours"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanNpSchedulingShutdownHours:OceanNpSchedulingShutdownHours": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "timeWindows"
            ]
        },
        "spotinst:azure/OceanNpTaint:OceanNpTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "value"
            ]
        },
        "spotinst:azure/OceanNpVirtualNodeGroupFilters:OceanNpVirtualNodeGroupFilters": {
            "properties": {
                "acceleratedNetworking": {
                    "type": "string"
                },
                "architectures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "diskPerformance": {
                    "type": "string"
                },
                "excludeSeries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxGpu": {
                    "type": "number"
                },
                "maxMemoryGib": {
                    "type": "number"
                },
                "maxVcpu": {
                    "type": "integer"
                },
                "minDisk": {
                    "type": "integer"
                },
                "minGpu": {
                    "type": "number"
                },
                "minMemoryGib": {
                    "type": "number"
                },
                "minNics": {
                    "type": "integer"
                },
                "minVcpu": {
                    "type": "integer"
                },
                "series": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vmTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanNpVirtualNodeGroupHeadroom:OceanNpVirtualNodeGroupHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer"
                },
                "gpuPerUnit": {
                    "type": "integer"
                },
                "memoryPerUnit": {
                    "type": "integer"
                },
                "numOfUnits": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanNpVirtualNodeGroupTaint:OceanNpVirtualNodeGroupTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "value"
            ]
        },
        "spotinst:azure/OceanOsDisk:OceanOsDisk": {
            "properties": {
                "sizeGb": {
                    "type": "integer",
                    "description": "The size of the OS disk in GB.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of load balancer. Supported value: `loadBalancer`\n"
                }
            },
            "type": "object",
            "required": [
                "sizeGb"
            ]
        },
        "spotinst:azure/OceanStrategy:OceanStrategy": {
            "properties": {
                "fallbackToOndemand": {
                    "type": "boolean",
                    "description": "If no spot instance markets are available, enable Ocean to launch on-demand instances instead.\n"
                },
                "spotPercentage": {
                    "type": "integer",
                    "description": "Percentage of Spot VMs to maintain.\n"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanTag:OceanTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Tag key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Tag value.\n"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanVirtualNodeGroupAutoscale:OceanVirtualNodeGroupAutoscale": {
            "properties": {
                "autoHeadroomPercentage": {
                    "type": "integer",
                    "description": "Number between 0-200 to control the headroom % of the specific Virtual Node Group. Effective when `cluster.autoScaler.headroom.automatic.is_enabled` = true is set on the Ocean cluster.\n"
                },
                "autoscaleHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupAutoscaleAutoscaleHeadroom:OceanVirtualNodeGroupAutoscaleAutoscaleHeadroom"
                    }
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanVirtualNodeGroupAutoscaleAutoscaleHeadroom:OceanVirtualNodeGroupAutoscaleAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "Configure the number of CPUs to allocate for the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n"
                },
                "gpuPerUnit": {
                    "type": "integer",
                    "description": "How many GPU cores should be allocated for headroom unit.\n"
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "Configure the amount of memory (MiB) to allocate the headroom.\n"
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "The number of headroom units to maintain, where each unit has the defined CPU, memory and GPU.\n"
                }
            },
            "type": "object",
            "required": [
                "numOfUnits"
            ]
        },
        "spotinst:azure/OceanVirtualNodeGroupLabel:OceanVirtualNodeGroupLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Tag Key for Vms in the cluster.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Tag Value for VMs in the cluster.\n"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "spotinst:azure/OceanVirtualNodeGroupLaunchSpecification:OceanVirtualNodeGroupLaunchSpecification": {
            "properties": {
                "maxPods": {
                    "type": "integer",
                    "description": "The maximum number of pods per node in an AKS cluster.\n"
                },
                "osDisk": {
                    "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupLaunchSpecificationOsDisk:OceanVirtualNodeGroupLaunchSpecificationOsDisk",
                    "description": "Specify OS disk specification other than default.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupLaunchSpecificationTag:OceanVirtualNodeGroupLaunchSpecificationTag"
                    },
                    "description": "Additional key-value pairs to be used to tag the VMs in the virtual node group.\n"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanVirtualNodeGroupLaunchSpecificationOsDisk:OceanVirtualNodeGroupLaunchSpecificationOsDisk": {
            "properties": {
                "sizeGb": {
                    "type": "integer",
                    "description": "The size of the OS disk in GB, Required if dataDisks is specified.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the OS disk. Valid values: `\"Standard_LRS\"`, `\"Premium_LRS\"`, `\"StandardSSD_LRS\"`.\n"
                },
                "utilizeEphemeralStorage": {
                    "type": "boolean",
                    "description": "Flag to enable/disable the Ephemeral OS Disk utilization.\n"
                }
            },
            "type": "object",
            "required": [
                "sizeGb"
            ]
        },
        "spotinst:azure/OceanVirtualNodeGroupLaunchSpecificationTag:OceanVirtualNodeGroupLaunchSpecificationTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Tag Key for Vms in the cluster.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Tag Value for VMs in the cluster.\n"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanVirtualNodeGroupResourceLimit:OceanVirtualNodeGroupResourceLimit": {
            "properties": {
                "maxInstanceCount": {
                    "type": "integer",
                    "description": "Option to set a maximum number of instances per virtual node group. If set, value must be greater than or equal to 0.\n"
                }
            },
            "type": "object"
        },
        "spotinst:azure/OceanVirtualNodeGroupTaint:OceanVirtualNodeGroupTaint": {
            "properties": {
                "effect": {
                    "type": "string",
                    "description": "The effect of the taint. Valid values: `\"NoSchedule\"`, `\"PreferNoSchedule\"`, `\"NoExecute\"`, `\"PreferNoExecute\"`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Tag Key for Vms in the cluster.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Tag Value for VMs in the cluster.\n"
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "value"
            ]
        },
        "spotinst:azure/OceanVmSize:OceanVmSize": {
            "properties": {
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "VM types allowed in the Ocean cluster.\n"
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanAutoscaler:OceanAutoscaler": {
            "properties": {
                "autoHeadroomPercentage": {
                    "type": "integer",
                    "description": "The auto-headroom percentage. Set a number between 0-200 to control the headroom % of the cluster. Relevant when `isAutoConfig`= true.\n"
                },
                "cooldown": {
                    "type": "integer",
                    "description": "Cooldown period between scaling actions.\n"
                },
                "down": {
                    "$ref": "#/types/spotinst:ecs/OceanAutoscalerDown:OceanAutoscalerDown",
                    "description": "Auto Scaling scale down operations.\n"
                },
                "enableAutomaticAndManualHeadroom": {
                    "type": "boolean",
                    "description": "When set to true, both automatic and per custom launch specification manual headroom to be saved concurrently and independently in the cluster. prerequisite: isAutoConfig must be true\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "headroom": {
                    "$ref": "#/types/spotinst:ecs/OceanAutoscalerHeadroom:OceanAutoscalerHeadroom",
                    "description": "Spare resource capacity management enabling fast assignment of tasks without waiting for new resources to launch.\n"
                },
                "isAutoConfig": {
                    "type": "boolean",
                    "description": "Automatically configure and optimize headroom resources.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Enable the Ocean ECS autoscaler.\n"
                },
                "resourceLimits": {
                    "$ref": "#/types/spotinst:ecs/OceanAutoscalerResourceLimits:OceanAutoscalerResourceLimits",
                    "description": "Optionally set upper and lower bounds on the resource usage of the cluster.\n"
                },
                "shouldScaleDownNonServiceTasks": {
                    "type": "boolean",
                    "description": "Option to scale down non-service tasks. If not set, Ocean does not scale down standalone tasks.\n"
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanAutoscalerDown:OceanAutoscalerDown": {
            "properties": {
                "maxScaleDownPercentage": {
                    "type": "number",
                    "description": "Would represent the maximum % to scale-down. Number between 1-100.\n"
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanAutoscalerHeadroom:OceanAutoscalerHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n"
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the amount of memory (MB) to allocate the headroom.\n"
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n"
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanAutoscalerResourceLimits:OceanAutoscalerResourceLimits": {
            "properties": {
                "maxMemoryGib": {
                    "type": "integer",
                    "description": "Maximum amount of Memory (GiB).\n"
                },
                "maxVcpu": {
                    "type": "integer",
                    "description": "Maximum number of vcpus available.\n"
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanBlockDeviceMapping:OceanBlockDeviceMapping": {
            "properties": {
                "deviceName": {
                    "type": "string",
                    "description": "String. Set device name. Example: `/dev/xvda1`.\n"
                },
                "ebs": {
                    "$ref": "#/types/spotinst:ecs/OceanBlockDeviceMappingEbs:OceanBlockDeviceMappingEbs",
                    "description": "Object. Set Elastic Block Store properties.\n"
                },
                "noDevice": {
                    "type": "string",
                    "description": "String. Suppresses the specified device included in the block device mapping of the AMI.\n"
                },
                "virtualName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deviceName"
            ]
        },
        "spotinst:ecs/OceanBlockDeviceMappingEbs:OceanBlockDeviceMappingEbs": {
            "properties": {
                "deleteOnTermination": {
                    "type": "boolean",
                    "description": "Boolean. Toggles EBS deletion upon instance termination.\n"
                },
                "dynamicVolumeSize": {
                    "$ref": "#/types/spotinst:ecs/OceanBlockDeviceMappingEbsDynamicVolumeSize:OceanBlockDeviceMappingEbsDynamicVolumeSize",
                    "description": "Object. Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n"
                },
                "encrypted": {
                    "type": "boolean",
                    "description": "Boolean. Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume.\n"
                },
                "iops": {
                    "type": "integer",
                    "description": "Int. The number of I/O operations per second (IOPS) that the volume supports.\n"
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "String. Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "(Optional) String. The snapshot ID to mount by.\n"
                },
                "throughput": {
                    "type": "integer",
                    "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that `volume_type` = gp3.\n"
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "Int. The size (in GB) of the volume.\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "String. The type of the volume. Example: `gp2`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteOnTermination",
                        "encrypted",
                        "volumeType"
                    ]
                }
            }
        },
        "spotinst:ecs/OceanBlockDeviceMappingEbsDynamicVolumeSize:OceanBlockDeviceMappingEbsDynamicVolumeSize": {
            "properties": {
                "baseSize": {
                    "type": "integer",
                    "description": "Int. Initial size for volume. Example: `50`.\n"
                },
                "resource": {
                    "type": "string",
                    "description": "String. Resource type to increase volume size dynamically by. Valid values: `CPU`.\n"
                },
                "sizePerResourceUnit": {
                    "type": "integer",
                    "description": "Int. Additional size (in GB) per resource unit. Example: When the `baseSize=50`, `sizePerResourceUnit=20`, and instance with two CPUs is launched, its total disk size will be: 90GB.\n"
                }
            },
            "type": "object",
            "required": [
                "baseSize",
                "resource",
                "sizePerResourceUnit"
            ]
        },
        "spotinst:ecs/OceanClusterOrientation:OceanClusterOrientation": {
            "properties": {
                "availabilityVsCost": {
                    "type": "string",
                    "description": "You can control the approach that Ocean takes while launching nodes by configuring this value. Possible values: `costOriented`,`balanced`,`cheapest`.\n"
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanFilters:OceanFilters": {
            "properties": {
                "architectures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will support at least one of the architectures from this list.\n"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will belong to one of the categories types from this list.\n"
                },
                "diskTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will have one of the disk type from this list.\n"
                },
                "excludeFamilies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Types belonging to a family from the ExcludeFamilies will not be available for scaling (asterisk wildcard is also supported). For example, C* will exclude instance types from these families: c5, c4, c4a, etc.\n"
                },
                "excludeMetal": {
                    "type": "boolean",
                    "description": "In case excludeMetal is set to true, metal types will not be available for scaling.\n"
                },
                "hypervisors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will have a hypervisor type from this list.\n"
                },
                "includeFamilies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Types belonging to a family from the IncludeFamilies will be available for scaling (asterisk wildcard is also supported). For example, C* will include instance types from these families: c5, c4, c4a, etc.\n"
                },
                "isEnaSupported": {
                    "type": "string",
                    "description": "Ena is supported or not.\n"
                },
                "maxGpu": {
                    "type": "integer",
                    "description": "Maximum total number of GPUs.\n"
                },
                "maxMemoryGib": {
                    "type": "number",
                    "description": "Maximum amount of Memory (GiB).\n"
                },
                "maxNetworkPerformance": {
                    "type": "integer",
                    "description": "Maximum Bandwidth in Gib/s of network performance.\n"
                },
                "maxVcpu": {
                    "type": "integer",
                    "description": "Maximum number of vcpus available.\n"
                },
                "minEnis": {
                    "type": "integer",
                    "description": "Minimum number of network interfaces (ENIs).\n"
                },
                "minGpu": {
                    "type": "integer",
                    "description": "Minimum total number of GPUs.\n"
                },
                "minMemoryGib": {
                    "type": "number",
                    "description": "Minimum amount of Memory (GiB).\n"
                },
                "minNetworkPerformance": {
                    "type": "integer",
                    "description": "Minimum Bandwidth in Gib/s of network performance.\n"
                },
                "minVcpu": {
                    "type": "integer",
                    "description": "Minimum number of vcpus available.\n"
                },
                "rootDeviceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will have a root device types from this list.\n"
                },
                "virtualizationTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The filtered instance types will support at least one of the virtualization types from this list.\n"
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanInstanceMetadataOptions:OceanInstanceMetadataOptions": {
            "properties": {
                "httpPutResponseHopLimit": {
                    "type": "integer",
                    "description": "An integer from 1 through 64. The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further the instance metadata requests can travel.\n"
                },
                "httpTokens": {
                    "type": "string",
                    "description": "Determines if a signed token is required or not. Valid values: `optional` or `required`.\n"
                }
            },
            "type": "object",
            "required": [
                "httpTokens"
            ]
        },
        "spotinst:ecs/OceanLaunchSpecAttribute:OceanLaunchSpecAttribute": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The label key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The label value.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:ecs/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of CPUs to allocate for each headroom unit. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n"
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the amount of memory (MiB) to allocate for each headroom unit.\n"
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU, memory and GPU.\n"
                }
            },
            "type": "object",
            "required": [
                "numOfUnits"
            ]
        },
        "spotinst:ecs/OceanLaunchSpecBlockDeviceMapping:OceanLaunchSpecBlockDeviceMapping": {
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "ebs": {
                    "$ref": "#/types/spotinst:ecs/OceanLaunchSpecBlockDeviceMappingEbs:OceanLaunchSpecBlockDeviceMappingEbs"
                },
                "noDevice": {
                    "type": "string"
                },
                "virtualName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deviceName"
            ]
        },
        "spotinst:ecs/OceanLaunchSpecBlockDeviceMappingEbs:OceanLaunchSpecBlockDeviceMappingEbs": {
            "properties": {
                "deleteOnTermination": {
                    "type": "boolean"
                },
                "dynamicVolumeSize": {
                    "$ref": "#/types/spotinst:ecs/OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSize:OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSize"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "iops": {
                    "type": "integer"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "snapshotId": {
                    "type": "string"
                },
                "throughput": {
                    "type": "integer"
                },
                "volumeSize": {
                    "type": "integer"
                },
                "volumeType": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteOnTermination",
                        "encrypted",
                        "volumeType"
                    ]
                }
            }
        },
        "spotinst:ecs/OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSize:OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSize": {
            "properties": {
                "baseSize": {
                    "type": "integer"
                },
                "resource": {
                    "type": "string"
                },
                "sizePerResourceUnit": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "baseSize",
                "resource",
                "sizePerResourceUnit"
            ]
        },
        "spotinst:ecs/OceanLaunchSpecImage:OceanLaunchSpecImage": {
            "properties": {
                "imageId": {
                    "type": "string",
                    "description": "Identifier of the image in AWS. Valid values: any string which is not empty or null.\n"
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanLaunchSpecInstanceMetadataOptions:OceanLaunchSpecInstanceMetadataOptions": {
            "properties": {
                "httpPutResponseHopLimit": {
                    "type": "integer",
                    "description": "An integer from 1 through 64. The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further the instance metadata requests can travel.\n"
                },
                "httpTokens": {
                    "type": "string",
                    "description": "Determines if a signed token is required or not. Valid values: `optional` or `required`.\n"
                }
            },
            "type": "object",
            "required": [
                "httpTokens"
            ]
        },
        "spotinst:ecs/OceanLaunchSpecSchedulingTask:OceanLaunchSpecSchedulingTask": {
            "properties": {
                "cronExpression": {
                    "type": "string",
                    "description": "A valid cron expression. For example : \" * * * * * \". The cron job runs in UTC time and is in Unix cron format.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Describes whether the task is enabled. When True, the task runs. When False, it does not run.\n"
                },
                "taskHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecSchedulingTaskTaskHeadroom:OceanLaunchSpecSchedulingTaskTaskHeadroom"
                    },
                    "description": "The config of this scheduled task. Depends on the value of taskType.\n"
                },
                "taskType": {
                    "type": "string",
                    "description": "The activity that you are scheduling. Valid values: \"manualHeadroomUpdate\".\n"
                }
            },
            "type": "object",
            "required": [
                "cronExpression",
                "isEnabled",
                "taskType"
            ]
        },
        "spotinst:ecs/OceanLaunchSpecSchedulingTaskTaskHeadroom:OceanLaunchSpecSchedulingTaskTaskHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of CPUs to allocate for each headroom unit. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n"
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the amount of memory (MiB) to allocate for each headroom unit.\n"
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU, memory and GPU.\n"
                }
            },
            "type": "object",
            "required": [
                "numOfUnits"
            ]
        },
        "spotinst:ecs/OceanLaunchSpecStrategy:OceanLaunchSpecStrategy": {
            "properties": {
                "spotPercentage": {
                    "type": "integer",
                    "description": "When set, Ocean will proactively try to maintain as close as possible to the percentage of Spot instances out of all the Virtual Node Group instances.\n\n\u003ca id=\"block-devices\"\u003e\u003c/a\u003e\n"
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanLaunchSpecTag:OceanLaunchSpecTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The label key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The label value.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:ecs/OceanLogging:OceanLogging": {
            "properties": {
                "export": {
                    "$ref": "#/types/spotinst:ecs/OceanLoggingExport:OceanLoggingExport",
                    "description": "Logging Export configuration.\n"
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanLoggingExport:OceanLoggingExport": {
            "properties": {
                "s3s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLoggingExportS3:OceanLoggingExportS3"
                    },
                    "description": "Exports your cluster's logs to the S3 bucket and subdir configured on the S3 data integration given.\n"
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanLoggingExportS3:OceanLoggingExportS3": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The identifier of The S3 data integration to export the logs to.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "spotinst:ecs/OceanOptimizeImages:OceanOptimizeImages": {
            "properties": {
                "performAt": {
                    "type": "string",
                    "description": "String. Valid values: \"always\" \"never\" \"timeWindow\".\n"
                },
                "shouldOptimizeEcsAmi": {
                    "type": "boolean",
                    "description": "Boolean. Enable auto image (AMI) update for the ECS container instances. The auto update applies for ECS-Optimized AMIs.\n"
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of strings. Set time windows for image update, at least one time window. Each string is in the format of ddd:hh:mm-ddd:hh:mm ddd. Time windows should not overlap.\n"
                }
            },
            "type": "object",
            "required": [
                "performAt",
                "shouldOptimizeEcsAmi"
            ]
        },
        "spotinst:ecs/OceanScheduledTask:OceanScheduledTask": {
            "properties": {
                "shutdownHours": {
                    "$ref": "#/types/spotinst:ecs/OceanScheduledTaskShutdownHours:OceanScheduledTaskShutdownHours",
                    "description": "Set shutdown hours for cluster object.\n"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanScheduledTaskTask:OceanScheduledTaskTask"
                    },
                    "description": "The scheduling tasks for the cluster.\n"
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanScheduledTaskShutdownHours:OceanScheduledTaskShutdownHours": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Enable the Ocean ECS autoscaler.\n"
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of strings. Set time windows for image update, at least one time window. Each string is in the format of ddd:hh:mm-ddd:hh:mm ddd. Time windows should not overlap.\n"
                }
            },
            "type": "object",
            "required": [
                "timeWindows"
            ]
        },
        "spotinst:ecs/OceanScheduledTaskTask:OceanScheduledTaskTask": {
            "properties": {
                "cronExpression": {
                    "type": "string",
                    "description": "A valid cron expression. The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of `frequency` or `cronExpression` should be used at a time. Required for `cluster.scheduling.tasks` object. Example: `0 1 * * *`.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Enable the Ocean ECS autoscaler.\n"
                },
                "taskType": {
                    "type": "string",
                    "description": "Valid values: \"clusterRoll\". Required for `cluster.scheduling.tasks object`. Example: `clusterRoll`.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n\n\u003ca id=\"attributes-reference\"\u003e\u003c/a\u003e\n"
                }
            },
            "type": "object",
            "required": [
                "cronExpression",
                "isEnabled",
                "taskType"
            ]
        },
        "spotinst:ecs/OceanTag:OceanTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The tag value.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:ecs/OceanUpdatePolicy:OceanUpdatePolicy": {
            "properties": {
                "autoApplyTags": {
                    "type": "boolean",
                    "description": "will update instance tags on the fly without rolling the cluster.\n"
                },
                "conditionedRoll": {
                    "type": "boolean",
                    "description": "Spot will perform a cluster Roll in accordance with a relevant modification of the cluster’s settings. When set to true , only specific changes in the cluster’s configuration will trigger a cluster roll (such as AMI, Key Pair, user data, instance types, load balancers, etc).\n"
                },
                "rollConfig": {
                    "$ref": "#/types/spotinst:ecs/OceanUpdatePolicyRollConfig:OceanUpdatePolicyRollConfig"
                },
                "shouldRoll": {
                    "type": "boolean",
                    "description": "Enables the roll.\n"
                }
            },
            "type": "object",
            "required": [
                "shouldRoll"
            ]
        },
        "spotinst:ecs/OceanUpdatePolicyRollConfig:OceanUpdatePolicyRollConfig": {
            "properties": {
                "batchMinHealthyPercentage": {
                    "type": "integer",
                    "description": "Default: 50. Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "batchSizePercentage": {
                    "type": "integer",
                    "description": "Sets the percentage of the instances to deploy in each batch.\n"
                }
            },
            "type": "object",
            "required": [
                "batchSizePercentage"
            ]
        },
        "spotinst:gcp/ElastigroupBackendService:ElastigroupBackendService": {
            "properties": {
                "locationType": {
                    "type": "string",
                    "description": "Sets which location the backend services will be active. Valid values: `regional`, `global`.\n"
                },
                "namedPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupBackendServiceNamedPort:ElastigroupBackendServiceNamedPort"
                    },
                    "description": "Describes a named port and a list of ports.\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "Use when `location_type` is \"regional\". Set the traffic for the backend service to either between the instances in the vpc or to traffic from the internet. Valid values: `INTERNAL`, `EXTERNAL`.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the backend service.\n"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ]
        },
        "spotinst:gcp/ElastigroupBackendServiceNamedPort:ElastigroupBackendServiceNamedPort": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of ports.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "ports"
            ]
        },
        "spotinst:gcp/ElastigroupDisk:ElastigroupDisk": {
            "properties": {
                "autoDelete": {
                    "type": "boolean",
                    "description": "Specifies whether the disk will be auto-deleted when the instance is deleted.\n"
                },
                "boot": {
                    "type": "boolean",
                    "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.\n"
                },
                "deviceName": {
                    "type": "string",
                    "description": "Specifies a unique device name of your choice.\n"
                },
                "initializeParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupDiskInitializeParam:ElastigroupDiskInitializeParam"
                    },
                    "description": "Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance.\n"
                },
                "interface": {
                    "type": "string",
                    "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY.\n"
                },
                "source": {
                    "type": "string",
                    "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only applicable for persistent disks.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the type of disk, either SCRATCH or PERSISTENT.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gcp/ElastigroupDiskInitializeParam:ElastigroupDiskInitializeParam": {
            "properties": {
                "diskSizeGb": {
                    "type": "string",
                    "description": "Specifies disk size in gigabytes. Must be in increments of 2.\n"
                },
                "diskType": {
                    "type": "string",
                    "description": "Specifies the disk type to use to create the instance. Valid values: pd-ssd, local-ssd.\n"
                },
                "sourceImage": {
                    "type": "string",
                    "description": "A source image used to create the disk. You can provide a private (custom) image, and Compute Engine will use the corresponding image from your project.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "type": "object",
            "required": [
                "sourceImage"
            ]
        },
        "spotinst:gcp/ElastigroupGpu:ElastigroupGpu": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of GPUs. Must be 0, 2, 4, 6, 8.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of GPU instance. Valid values: `nvidia-tesla-v100`, `nvidia-tesla-p100`, `nvidia-tesla-k80`.\n"
                }
            },
            "type": "object",
            "required": [
                "count",
                "type"
            ]
        },
        "spotinst:gcp/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom": {
            "properties": {
                "memoryGib": {
                    "type": "integer",
                    "description": "The memory (in GiB) in the custom instance types. GCP has a number of limitations on accepted memory values.For more information, see the GCP documentation (here.)[https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#specifications]\n"
                },
                "vcpu": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "memoryGib",
                "vcpu"
            ]
        },
        "spotinst:gcp/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm": {
            "properties": {
                "masterHost": {
                    "type": "string",
                    "description": "IP or FQDN of one of your swarm managers.\n"
                },
                "masterPort": {
                    "type": "integer",
                    "description": "Network port used by your swarm.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "type": "object",
            "required": [
                "masterHost",
                "masterPort"
            ]
        },
        "spotinst:gcp/ElastigroupIntegrationGke:ElastigroupIntegrationGke": {
            "properties": {
                "autoUpdate": {
                    "type": "boolean"
                },
                "autoscaleCooldown": {
                    "type": "integer"
                },
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationGkeAutoscaleDown:ElastigroupIntegrationGkeAutoscaleDown"
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationGkeAutoscaleHeadroom:ElastigroupIntegrationGkeAutoscaleHeadroom"
                },
                "autoscaleIsAutoConfig": {
                    "type": "boolean"
                },
                "autoscaleIsEnabled": {
                    "type": "boolean"
                },
                "autoscaleLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationGkeAutoscaleLabel:ElastigroupIntegrationGkeAutoscaleLabel"
                    }
                },
                "clusterId": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "spotinst:gcp/ElastigroupIntegrationGkeAutoscaleDown:ElastigroupIntegrationGkeAutoscaleDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "Number of consecutive periods in which the threshold must be met in order to trigger a scaling action.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gcp/ElastigroupIntegrationGkeAutoscaleHeadroom:ElastigroupIntegrationGkeAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer"
                },
                "memoryPerUnit": {
                    "type": "integer"
                },
                "numOfUnits": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "spotinst:gcp/ElastigroupIntegrationGkeAutoscaleLabel:ElastigroupIntegrationGkeAutoscaleLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Labels key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Labels value.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:gcp/ElastigroupLabel:ElastigroupLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Labels key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Labels value.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:gcp/ElastigroupMetadata:ElastigroupMetadata": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Labels key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Labels value.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:gcp/ElastigroupNetworkInterface:ElastigroupNetworkInterface": {
            "properties": {
                "accessConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupNetworkInterfaceAccessConfig:ElastigroupNetworkInterfaceAccessConfig"
                    },
                    "description": "Array of configurations.\n"
                },
                "aliasIpRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupNetworkInterfaceAliasIpRange:ElastigroupNetworkInterfaceAliasIpRange"
                    }
                },
                "network": {
                    "type": "string",
                    "description": "Network resource for this group.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "spotinst:gcp/ElastigroupNetworkInterfaceAccessConfig:ElastigroupNetworkInterfaceAccessConfig": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the type of disk, either SCRATCH or PERSISTENT.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gcp/ElastigroupNetworkInterfaceAliasIpRange:ElastigroupNetworkInterfaceAliasIpRange": {
            "properties": {
                "ipCidrRange": {
                    "type": "string"
                },
                "subnetworkRangeName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipCidrRange",
                "subnetworkRangeName"
            ]
        },
        "spotinst:gcp/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "Type of scaling action to take when the scaling policy is triggered. Valid values: \"adjustment\", \"setMinTarget\", \"updateCapacity\", \"percentageAdjustment\"\n"
                },
                "adjustment": {
                    "type": "integer",
                    "description": "Value to which the action type will be adjusted. Required if using \"numeric\" or \"percentageAdjustment\" action types.\n"
                },
                "cooldown": {
                    "type": "integer",
                    "description": "Time (seconds) to wait after a scaling action before resuming monitoring.\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension"
                    },
                    "description": "A list of dimensions describing qualities of the metric.\n"
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "Number of consecutive periods in which the threshold must be met in order to trigger a scaling action.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "Metric to monitor. Valid values: \"Percentage CPU\", \"Network In\", \"Network Out\", \"Disk Read Bytes\", \"Disk Write Bytes\", \"Disk Write Operations/Sec\", \"Disk Read Operations/Sec\".\n"
                },
                "namespace": {
                    "type": "string"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator used to evaluate the threshold against the current metric value. Valid values: \"gt\" (greater than), \"get\" (greater-than or equal), \"lt\" (less than), \"lte\" (less than or equal).\n"
                },
                "period": {
                    "type": "integer",
                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.\n"
                },
                "policyName": {
                    "type": "string",
                    "description": "Name of scaling policy.\n"
                },
                "source": {
                    "type": "string",
                    "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only applicable for persistent disks.\n"
                },
                "statistic": {
                    "type": "string",
                    "description": "Statistic by which to evaluate the selected metric. Valid values: \"AVERAGE\", \"SAMPLE_COUNT\", \"SUM\", \"MINIMUM\", \"MAXIMUM\", \"PERCENTILE\", \"COUNT\".\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The value at which the scaling action is triggered.\n"
                },
                "unit": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "source",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:gcp/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Labels value.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:gcp/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "Type of scaling action to take when the scaling policy is triggered. Valid values: \"adjustment\", \"setMinTarget\", \"updateCapacity\", \"percentageAdjustment\"\n"
                },
                "adjustment": {
                    "type": "integer",
                    "description": "Value to which the action type will be adjusted. Required if using \"numeric\" or \"percentageAdjustment\" action types.\n"
                },
                "cooldown": {
                    "type": "integer",
                    "description": "Time (seconds) to wait after a scaling action before resuming monitoring.\n"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension"
                    },
                    "description": "A list of dimensions describing qualities of the metric.\n"
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "Number of consecutive periods in which the threshold must be met in order to trigger a scaling action.\n"
                },
                "metricName": {
                    "type": "string",
                    "description": "Metric to monitor. Valid values: \"Percentage CPU\", \"Network In\", \"Network Out\", \"Disk Read Bytes\", \"Disk Write Bytes\", \"Disk Write Operations/Sec\", \"Disk Read Operations/Sec\".\n"
                },
                "namespace": {
                    "type": "string"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator used to evaluate the threshold against the current metric value. Valid values: \"gt\" (greater than), \"get\" (greater-than or equal), \"lt\" (less than), \"lte\" (less than or equal).\n"
                },
                "period": {
                    "type": "integer",
                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.\n"
                },
                "policyName": {
                    "type": "string",
                    "description": "Name of scaling policy.\n"
                },
                "source": {
                    "type": "string",
                    "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only applicable for persistent disks.\n"
                },
                "statistic": {
                    "type": "string",
                    "description": "Statistic by which to evaluate the selected metric. Valid values: \"AVERAGE\", \"SAMPLE_COUNT\", \"SUM\", \"MINIMUM\", \"MAXIMUM\", \"PERCENTILE\", \"COUNT\".\n"
                },
                "threshold": {
                    "type": "number",
                    "description": "The value at which the scaling action is triggered.\n"
                },
                "unit": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "source",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:gcp/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Labels value.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:gcp/ElastigroupScheduledTask:ElastigroupScheduledTask": {
            "properties": {
                "cronExpression": {
                    "type": "string",
                    "description": "A valid cron expression. The cron is running in UTC time zone and is in [Unix cron format](https://en.wikipedia.org/wiki/Cron).\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Setting the task to being enabled or disabled.\n"
                },
                "maxCapacity": {
                    "type": "string",
                    "description": "The maximum number of instances the group should have.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "minCapacity": {
                    "type": "string",
                    "description": "The minimum number of instances the group should have.\n"
                },
                "targetCapacity": {
                    "type": "string",
                    "description": "The desired number of instances the group should have.\n"
                },
                "taskType": {
                    "type": "string",
                    "description": "The task type to run. Valid values: `\"setCapacity\"`.\n"
                }
            },
            "type": "object",
            "required": [
                "taskType"
            ]
        },
        "spotinst:gcp/ElastigroupSubnet:ElastigroupSubnet": {
            "properties": {
                "region": {
                    "type": "string",
                    "description": "The region for the group of subnets.\n"
                },
                "subnetNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of the subnets in the region.\n"
                }
            },
            "type": "object",
            "required": [
                "region",
                "subnetNames"
            ]
        },
        "spotinst:gke/ElastigroupBackendService:ElastigroupBackendService": {
            "properties": {
                "locationType": {
                    "type": "string"
                },
                "namedPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupBackendServiceNamedPort:ElastigroupBackendServiceNamedPort"
                    }
                },
                "scheme": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ]
        },
        "spotinst:gke/ElastigroupBackendServiceNamedPort:ElastigroupBackendServiceNamedPort": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "ports"
            ]
        },
        "spotinst:gke/ElastigroupDisk:ElastigroupDisk": {
            "properties": {
                "autoDelete": {
                    "type": "boolean"
                },
                "boot": {
                    "type": "boolean"
                },
                "deviceName": {
                    "type": "string"
                },
                "initializeParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupDiskInitializeParam:ElastigroupDiskInitializeParam"
                    }
                },
                "interface": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "spotinst:gke/ElastigroupDiskInitializeParam:ElastigroupDiskInitializeParam": {
            "properties": {
                "diskSizeGb": {
                    "type": "string"
                },
                "diskType": {
                    "type": "string"
                },
                "sourceImage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceImage"
            ]
        },
        "spotinst:gke/ElastigroupGpu:ElastigroupGpu": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "count",
                "type"
            ]
        },
        "spotinst:gke/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom": {
            "properties": {
                "memoryGib": {
                    "type": "integer"
                },
                "vcpu": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "memoryGib",
                "vcpu"
            ]
        },
        "spotinst:gke/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm": {
            "properties": {
                "masterHost": {
                    "type": "string"
                },
                "masterPort": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "masterHost",
                "masterPort"
            ]
        },
        "spotinst:gke/ElastigroupIntegrationGke:ElastigroupIntegrationGke": {
            "properties": {
                "autoUpdate": {
                    "type": "boolean"
                },
                "autoscaleCooldown": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n"
                },
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:gke/ElastigroupIntegrationGkeAutoscaleDown:ElastigroupIntegrationGkeAutoscaleDown",
                    "description": "Enabling scale down.\n"
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:gke/ElastigroupIntegrationGkeAutoscaleHeadroom:ElastigroupIntegrationGkeAutoscaleHeadroom",
                    "description": "Headroom for the cluster.\n"
                },
                "autoscaleIsAutoConfig": {
                    "type": "boolean"
                },
                "autoscaleIsEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether the auto scaling feature is enabled.\n"
                },
                "autoscaleLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupIntegrationGkeAutoscaleLabel:ElastigroupIntegrationGkeAutoscaleLabel"
                    },
                    "description": "Labels to assign to the resource.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The name of the GKE cluster you wish to import.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of your GKE cluster.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gke/ElastigroupIntegrationGkeAutoscaleDown:ElastigroupIntegrationGkeAutoscaleDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "Amount of cooldown evaluation periods for scale down.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gke/ElastigroupIntegrationGkeAutoscaleHeadroom:ElastigroupIntegrationGkeAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "Cpu units for compute.\n"
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "RAM units for compute.\n"
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "Amount of units for compute.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gke/ElastigroupIntegrationGkeAutoscaleLabel:ElastigroupIntegrationGkeAutoscaleLabel": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:gke/ElastigroupLabel:ElastigroupLabel": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:gke/ElastigroupMetadata:ElastigroupMetadata": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:gke/ElastigroupNetworkInterface:ElastigroupNetworkInterface": {
            "properties": {
                "accessConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupNetworkInterfaceAccessConfig:ElastigroupNetworkInterfaceAccessConfig"
                    }
                },
                "aliasIpRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupNetworkInterfaceAliasIpRange:ElastigroupNetworkInterfaceAliasIpRange"
                    }
                },
                "network": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "spotinst:gke/ElastigroupNetworkInterfaceAccessConfig:ElastigroupNetworkInterfaceAccessConfig": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "spotinst:gke/ElastigroupNetworkInterfaceAliasIpRange:ElastigroupNetworkInterfaceAliasIpRange": {
            "properties": {
                "ipCidrRange": {
                    "type": "string"
                },
                "subnetworkRangeName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipCidrRange",
                "subnetworkRangeName"
            ]
        },
        "spotinst:gke/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy": {
            "properties": {
                "actionType": {
                    "type": "string"
                },
                "adjustment": {
                    "type": "integer"
                },
                "cooldown": {
                    "type": "integer"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension"
                    }
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "Amount of cooldown evaluation periods for scale down.\n"
                },
                "metricName": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "policyName": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "statistic": {
                    "type": "string"
                },
                "threshold": {
                    "type": "number"
                },
                "unit": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "source",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:gke/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:gke/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy": {
            "properties": {
                "actionType": {
                    "type": "string"
                },
                "adjustment": {
                    "type": "integer"
                },
                "cooldown": {
                    "type": "integer"
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension"
                    }
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "Amount of cooldown evaluation periods for scale down.\n"
                },
                "metricName": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "policyName": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "statistic": {
                    "type": "string"
                },
                "threshold": {
                    "type": "number"
                },
                "unit": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "source",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:gke/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:gke/OceanImportAutoscaler:OceanImportAutoscaler": {
            "properties": {
                "autoHeadroomPercentage": {
                    "type": "integer",
                    "description": "Optionally set the auto headroom percentage, set a number between 0-200 to control the headroom % from the cluster. Relevant when isAutoConfig=true.\n"
                },
                "cooldown": {
                    "type": "integer",
                    "description": "Cooldown period between scaling actions.\n"
                },
                "down": {
                    "$ref": "#/types/spotinst:gke/OceanImportAutoscalerDown:OceanImportAutoscalerDown",
                    "description": "Auto Scaling scale down operations.\n"
                },
                "enableAutomaticAndManualHeadroom": {
                    "type": "boolean",
                    "description": "enables automatic and manual headroom to work in parallel. When set to false, automatic headroom overrides all other headroom definitions manually configured, whether they are at cluster or VNG level.\n"
                },
                "headroom": {
                    "$ref": "#/types/spotinst:gke/OceanImportAutoscalerHeadroom:OceanImportAutoscalerHeadroom",
                    "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n"
                },
                "isAutoConfig": {
                    "type": "boolean",
                    "description": "Automatically configure and optimize headroom resources.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Enable the Ocean Kubernetes Autoscaler.\n"
                },
                "resourceLimits": {
                    "$ref": "#/types/spotinst:gke/OceanImportAutoscalerResourceLimits:OceanImportAutoscalerResourceLimits",
                    "description": "Optionally set upper and lower bounds on the resource usage of the cluster.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanImportAutoscalerDown:OceanImportAutoscalerDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of evaluation periods that should accumulate before a scale down action takes place.\n"
                },
                "maxScaleDownPercentage": {
                    "type": "number",
                    "description": "Would represent the maximum % to scale-down. Number between 1-100.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanImportAutoscalerHeadroom:OceanImportAutoscalerHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n"
                },
                "gpuPerUnit": {
                    "type": "integer",
                    "description": "How much GPU allocate for headroom unit.\n"
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the amount of memory (MiB) to allocate the headroom.\n"
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanImportAutoscalerResourceLimits:OceanImportAutoscalerResourceLimits": {
            "properties": {
                "maxMemoryGib": {
                    "type": "integer",
                    "description": "The maximum memory in GiB units that can be allocated to the cluster.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n\u003ca id=\"strategy\"\u003e\u003c/a\u003e\n"
                },
                "maxVcpu": {
                    "type": "integer",
                    "description": "The maximum cpu in vCpu units that can be allocated to the cluster.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanImportBackendService:OceanImportBackendService": {
            "properties": {
                "locationType": {
                    "type": "string",
                    "description": "Sets which location the backend services will be active. Valid values: `regional`, `global`.\n"
                },
                "namedPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanImportBackendServiceNamedPort:OceanImportBackendServiceNamedPort"
                    }
                },
                "scheme": {
                    "type": "string",
                    "description": "Use when `location_type` is `regional`. Set the traffic for the backend service to either between the instances in the vpc or to traffic from the internet. Valid values: `INTERNAL`, `EXTERNAL`.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the backend service.\n"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ]
        },
        "spotinst:gke/OceanImportBackendServiceNamedPort:OceanImportBackendServiceNamedPort": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of ports.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "ports"
            ]
        },
        "spotinst:gke/OceanImportScheduledTask:OceanImportScheduledTask": {
            "properties": {
                "shutdownHours": {
                    "$ref": "#/types/spotinst:gke/OceanImportScheduledTaskShutdownHours:OceanImportScheduledTaskShutdownHours",
                    "description": "Set shutdown hours for cluster object.\n"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanImportScheduledTaskTask:OceanImportScheduledTaskTask"
                    },
                    "description": "The scheduling tasks for the cluster.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanImportScheduledTaskShutdownHours:OceanImportScheduledTaskShutdownHours": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Enable the Ocean Kubernetes Autoscaler.\n"
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set time windows for shutdown hours. specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59. Time windows should not overlap. required on cluster.scheduling.isEnabled = True. API Times are in UTC\nExample: Fri:15:30-Wed:14:30\n"
                }
            },
            "type": "object",
            "required": [
                "timeWindows"
            ]
        },
        "spotinst:gke/OceanImportScheduledTaskTask:OceanImportScheduledTaskTask": {
            "properties": {
                "cronExpression": {
                    "type": "string",
                    "description": "A valid cron expression. For example : \" * * * * * \".The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of ‘frequency’ or ‘cronExpression’ should be used at a time. Required for cluster.scheduling.tasks object\nExample: 0 1 * * *\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Enable the Ocean Kubernetes Autoscaler.\n"
                },
                "taskParameters": {
                    "$ref": "#/types/spotinst:gke/OceanImportScheduledTaskTaskTaskParameters:OceanImportScheduledTaskTaskTaskParameters"
                },
                "taskType": {
                    "type": "string",
                    "description": "Valid values: \"clusterRoll\". Required for cluster.scheduling.tasks object.\n"
                }
            },
            "type": "object",
            "required": [
                "cronExpression",
                "isEnabled",
                "taskType"
            ]
        },
        "spotinst:gke/OceanImportScheduledTaskTaskTaskParameters:OceanImportScheduledTaskTaskTaskParameters": {
            "properties": {
                "clusterRoll": {
                    "$ref": "#/types/spotinst:gke/OceanImportScheduledTaskTaskTaskParametersClusterRoll:OceanImportScheduledTaskTaskTaskParametersClusterRoll"
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanImportScheduledTaskTaskTaskParametersClusterRoll:OceanImportScheduledTaskTaskTaskParametersClusterRoll": {
            "properties": {
                "batchMinHealthyPercentage": {
                    "type": "integer"
                },
                "batchSizePercentage": {
                    "type": "integer",
                    "description": "Value in % to set size of batch in roll. Valid values are 0-100\nExample: 20.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "comment": {
                    "type": "string"
                },
                "respectPdb": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanImportShieldedInstanceConfig:OceanImportShieldedInstanceConfig": {
            "properties": {
                "enableIntegrityMonitoring": {
                    "type": "boolean",
                    "description": "Boolean. Enable the integrity monitoring parameter on the GCP instances.\n"
                },
                "enableSecureBoot": {
                    "type": "boolean",
                    "description": "Boolean. Enable the secure boot parameter on the GCP instances.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enableIntegrityMonitoring",
                        "enableSecureBoot"
                    ]
                }
            }
        },
        "spotinst:gke/OceanImportStrategy:OceanImportStrategy": {
            "properties": {
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The draining timeout (in seconds) before terminating the instance.\n"
                },
                "preemptiblePercentage": {
                    "type": "integer"
                },
                "provisioningModel": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanImportUpdatePolicy:OceanImportUpdatePolicy": {
            "properties": {
                "conditionedRoll": {
                    "type": "boolean"
                },
                "rollConfig": {
                    "$ref": "#/types/spotinst:gke/OceanImportUpdatePolicyRollConfig:OceanImportUpdatePolicyRollConfig"
                },
                "shouldRoll": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "shouldRoll"
            ]
        },
        "spotinst:gke/OceanImportUpdatePolicyRollConfig:OceanImportUpdatePolicyRollConfig": {
            "properties": {
                "batchMinHealthyPercentage": {
                    "type": "integer"
                },
                "batchSizePercentage": {
                    "type": "integer",
                    "description": "Value in % to set size of batch in roll. Valid values are 0-100\nExample: 20.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "launchSpecIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "respectPdb": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "batchSizePercentage"
            ]
        },
        "spotinst:gke/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of CPUs to allocate for each headroom unit. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n"
                },
                "gpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of GPUS to allocate for each headroom unit.\n"
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the amount of memory (MiB) to allocate for each headroom unit.\n"
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU, memory and GPU.\n"
                }
            },
            "type": "object",
            "required": [
                "numOfUnits"
            ]
        },
        "spotinst:gke/OceanLaunchSpecAutoscaleHeadroomsAutomatic:OceanLaunchSpecAutoscaleHeadroomsAutomatic": {
            "properties": {
                "autoHeadroomPercentage": {
                    "type": "integer",
                    "description": "Number between 0-200 to control the headroom % of the specific Virtual Node Group. Effective when cluster.autoScaler.headroom.automatic.`is_enabled` = true is set on the Ocean cluster.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanLaunchSpecLabel:OceanLaunchSpecLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The label key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The label value.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "key",
                        "value"
                    ]
                }
            }
        },
        "spotinst:gke/OceanLaunchSpecMetadata:OceanLaunchSpecMetadata": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The label key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The label value.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "key",
                        "value"
                    ]
                }
            }
        },
        "spotinst:gke/OceanLaunchSpecNetworkInterface:OceanLaunchSpecNetworkInterface": {
            "properties": {
                "accessConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecNetworkInterfaceAccessConfig:OceanLaunchSpecNetworkInterfaceAccessConfig"
                    },
                    "description": "The network protocol of the VNG.\n"
                },
                "aliasIpRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecNetworkInterfaceAliasIpRange:OceanLaunchSpecNetworkInterfaceAliasIpRange"
                    },
                    "description": "use the imported node pool’s associated aliasIpRange to assign secondary IP addresses to the nodes. Cannot be changed after VNG creation.\n"
                },
                "network": {
                    "type": "string",
                    "description": "The name of the network.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Use a network resource from a different project. Set the project identifier to use its network resource. This parameter is relevant only if the network resource is in a different project.\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "spotinst:gke/OceanLaunchSpecNetworkInterfaceAccessConfig:OceanLaunchSpecNetworkInterfaceAccessConfig": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the access configuration.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the access configuration.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanLaunchSpecNetworkInterfaceAliasIpRange:OceanLaunchSpecNetworkInterfaceAliasIpRange": {
            "properties": {
                "ipCidrRange": {
                    "type": "string",
                    "description": "specify the IP address range in CIDR notation that can be used for the alias IP addresses associated with the imported node pool.\n"
                },
                "subnetworkRangeName": {
                    "type": "string",
                    "description": "specify the IP address range for the subnet secondary IP range.\n\n\u003ca id=\"update-policy\"\u003e\u003c/a\u003e\n"
                }
            },
            "type": "object",
            "required": [
                "ipCidrRange",
                "subnetworkRangeName"
            ]
        },
        "spotinst:gke/OceanLaunchSpecResourceLimits:OceanLaunchSpecResourceLimits": {
            "properties": {
                "maxInstanceCount": {
                    "type": "integer",
                    "description": "Option to set a maximum number of instances per virtual node group. Can be null. If set, the value must be greater than or equal to 0.\n"
                },
                "minInstanceCount": {
                    "type": "integer",
                    "description": "Option to set a minimum number of instances per virtual node group. Can be null. If set, the value must be greater than or equal to 0.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanLaunchSpecSchedulingTask:OceanLaunchSpecSchedulingTask": {
            "properties": {
                "cronExpression": {
                    "type": "string",
                    "description": "A valid cron expression. For example : \" * * * * * \". The cron job runs in UTC time and is in Unix cron format.\n"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Describes whether the task is enabled. When True, the task runs. When False, it does not run.\n"
                },
                "taskHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecSchedulingTaskTaskHeadroom:OceanLaunchSpecSchedulingTaskTaskHeadroom"
                    },
                    "description": "The config of this scheduled task. Depends on the value of taskType.\n"
                },
                "taskType": {
                    "type": "string",
                    "description": "The activity that you are scheduling. Valid values: \"manualHeadroomUpdate\".\n"
                }
            },
            "type": "object",
            "required": [
                "cronExpression",
                "isEnabled",
                "taskType"
            ]
        },
        "spotinst:gke/OceanLaunchSpecSchedulingTaskTaskHeadroom:OceanLaunchSpecSchedulingTaskTaskHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of CPUs to allocate for each headroom unit. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n"
                },
                "gpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of GPUS to allocate for each headroom unit.\n"
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the amount of memory (MiB) to allocate for each headroom unit.\n"
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU, memory and GPU.\n"
                }
            },
            "type": "object",
            "required": [
                "numOfUnits"
            ]
        },
        "spotinst:gke/OceanLaunchSpecShieldedInstanceConfig:OceanLaunchSpecShieldedInstanceConfig": {
            "properties": {
                "enableIntegrityMonitoring": {
                    "type": "boolean",
                    "description": "Boolean. Enable the integrity monitoring parameter on the GCP instances.\n"
                },
                "enableSecureBoot": {
                    "type": "boolean",
                    "description": "Boolean. Enable the secure boot parameter on the GCP instances.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enableIntegrityMonitoring",
                        "enableSecureBoot"
                    ]
                }
            }
        },
        "spotinst:gke/OceanLaunchSpecStorage:OceanLaunchSpecStorage": {
            "properties": {
                "localSsdCount": {
                    "type": "integer",
                    "description": "Defines the number of local SSDs to be attached per node for this VNG.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "localSsdCount"
                    ]
                }
            }
        },
        "spotinst:gke/OceanLaunchSpecStrategy:OceanLaunchSpecStrategy": {
            "properties": {
                "preemptiblePercentage": {
                    "type": "integer",
                    "description": "Defines the desired preemptible percentage for this launch specification.\n"
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanLaunchSpecTaint:OceanLaunchSpecTaint": {
            "properties": {
                "effect": {
                    "type": "string",
                    "description": "The effect of the taint. Valid values: `\"NoSchedule\"`, `\"PreferNoSchedule\"`, `\"NoExecute\"`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The label key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The label value.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "effect",
                        "key",
                        "value"
                    ]
                }
            }
        },
        "spotinst:gke/OceanLaunchSpecUpdatePolicy:OceanLaunchSpecUpdatePolicy": {
            "properties": {
                "rollConfig": {
                    "$ref": "#/types/spotinst:gke/OceanLaunchSpecUpdatePolicyRollConfig:OceanLaunchSpecUpdatePolicyRollConfig"
                },
                "shouldRoll": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "shouldRoll"
            ]
        },
        "spotinst:gke/OceanLaunchSpecUpdatePolicyRollConfig:OceanLaunchSpecUpdatePolicyRollConfig": {
            "properties": {
                "batchSizePercentage": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "batchSizePercentage"
            ]
        },
        "spotinst:index/DataIntegrationS3:DataIntegrationS3": {
            "properties": {
                "bucketName": {
                    "type": "string"
                },
                "subdir": {
                    "type": "string",
                    "description": "The subdirectory in which your files will be stored within the bucket. Adds the prefix subdir/ to new objects' keys. Can't be null or contain '/'.\n"
                }
            },
            "type": "object",
            "required": [
                "bucketName"
            ]
        },
        "spotinst:index/ElastigroupAzureV3Image:ElastigroupAzureV3Image": {
            "properties": {
                "customs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/ElastigroupAzureV3ImageCustom:ElastigroupAzureV3ImageCustom"
                    }
                },
                "marketplaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/ElastigroupAzureV3ImageMarketplace:ElastigroupAzureV3ImageMarketplace"
                    }
                }
            },
            "type": "object"
        },
        "spotinst:index/ElastigroupAzureV3ImageCustom:ElastigroupAzureV3ImageCustom": {
            "properties": {
                "imageName": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "imageName",
                "resourceGroupName"
            ]
        },
        "spotinst:index/ElastigroupAzureV3ImageMarketplace:ElastigroupAzureV3ImageMarketplace": {
            "properties": {
                "offer": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "offer",
                "publisher",
                "sku",
                "version"
            ]
        },
        "spotinst:index/ElastigroupAzureV3Login:ElastigroupAzureV3Login": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "sshPublicKey": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "userName"
            ]
        },
        "spotinst:index/ElastigroupAzureV3ManagedServiceIdentity:ElastigroupAzureV3ManagedServiceIdentity": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "resourceGroupName"
            ]
        },
        "spotinst:index/ElastigroupAzureV3Network:ElastigroupAzureV3Network": {
            "properties": {
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/ElastigroupAzureV3NetworkNetworkInterface:ElastigroupAzureV3NetworkNetworkInterface"
                    }
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "virtualNetworkName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "networkInterfaces",
                "resourceGroupName",
                "virtualNetworkName"
            ]
        },
        "spotinst:index/ElastigroupAzureV3NetworkNetworkInterface:ElastigroupAzureV3NetworkNetworkInterface": {
            "properties": {
                "additionalIpConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/ElastigroupAzureV3NetworkNetworkInterfaceAdditionalIpConfig:ElastigroupAzureV3NetworkNetworkInterfaceAdditionalIpConfig"
                    }
                },
                "applicationSecurityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/ElastigroupAzureV3NetworkNetworkInterfaceApplicationSecurityGroup:ElastigroupAzureV3NetworkNetworkInterfaceApplicationSecurityGroup"
                    }
                },
                "assignPublicIp": {
                    "type": "boolean"
                },
                "isPrimary": {
                    "type": "boolean"
                },
                "subnetName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "assignPublicIp",
                "isPrimary",
                "subnetName"
            ]
        },
        "spotinst:index/ElastigroupAzureV3NetworkNetworkInterfaceAdditionalIpConfig:ElastigroupAzureV3NetworkNetworkInterfaceAdditionalIpConfig": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "privateIpVersion": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:index/ElastigroupAzureV3NetworkNetworkInterfaceApplicationSecurityGroup:ElastigroupAzureV3NetworkNetworkInterfaceApplicationSecurityGroup": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "resourceGroupName"
            ]
        },
        "spotinst:index/ElastigroupAzureV3Tag:ElastigroupAzureV3Tag": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:index/HealthCheckCheck:HealthCheckCheck": {
            "properties": {
                "endPoint": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The destination for the request.\n"
                },
                "healthy": {
                    "type": "integer",
                    "description": "The number of consecutive successful health checks that must occur before declaring an instance healthy.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The amount of time (in seconds) between each health check (minimum: 10).\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the Spotinst HCS (default: 80).\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol to use to connect with the instance. Valid values: http, https.\n"
                },
                "timeOut": {
                    "type": "integer"
                },
                "timeout": {
                    "type": "integer",
                    "description": "the amount of time (in seconds) to wait when receiving a response from the health check.\n"
                },
                "unhealthy": {
                    "type": "integer",
                    "description": "The number of consecutive failed health checks that must occur before declaring an instance unhealthy.\n"
                }
            },
            "type": "object",
            "required": [
                "healthy",
                "interval",
                "port",
                "protocol",
                "unhealthy"
            ]
        },
        "spotinst:index/StatefulNodeAzureAttachDataDisk:StatefulNodeAzureAttachDataDisk": {
            "properties": {
                "dataDiskName": {
                    "type": "string"
                },
                "dataDiskResourceGroupName": {
                    "type": "string"
                },
                "lun": {
                    "type": "integer"
                },
                "sizeGb": {
                    "type": "integer"
                },
                "storageAccountType": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataDiskName",
                "dataDiskResourceGroupName",
                "sizeGb",
                "storageAccountType"
            ]
        },
        "spotinst:index/StatefulNodeAzureBootDiagnostic:StatefulNodeAzureBootDiagnostic": {
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                },
                "storageUrl": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isEnabled",
                        "storageUrl",
                        "type"
                    ]
                }
            }
        },
        "spotinst:index/StatefulNodeAzureDataDisk:StatefulNodeAzureDataDisk": {
            "properties": {
                "lun": {
                    "type": "integer"
                },
                "sizeGb": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "lun",
                "sizeGb",
                "type"
            ]
        },
        "spotinst:index/StatefulNodeAzureDelete:StatefulNodeAzureDelete": {
            "properties": {
                "diskShouldDeallocate": {
                    "type": "boolean"
                },
                "diskTtlInHours": {
                    "type": "integer"
                },
                "networkShouldDeallocate": {
                    "type": "boolean"
                },
                "networkTtlInHours": {
                    "type": "integer"
                },
                "publicIpShouldDeallocate": {
                    "type": "boolean"
                },
                "publicIpTtlInHours": {
                    "type": "integer"
                },
                "shouldTerminateVm": {
                    "type": "boolean"
                },
                "snapshotShouldDeallocate": {
                    "type": "boolean"
                },
                "snapshotTtlInHours": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "diskShouldDeallocate",
                "networkShouldDeallocate",
                "publicIpShouldDeallocate",
                "shouldTerminateVm",
                "snapshotShouldDeallocate"
            ]
        },
        "spotinst:index/StatefulNodeAzureDetachDataDisk:StatefulNodeAzureDetachDataDisk": {
            "properties": {
                "dataDiskName": {
                    "type": "string"
                },
                "dataDiskResourceGroupName": {
                    "type": "string"
                },
                "shouldDeallocate": {
                    "type": "boolean"
                },
                "ttlInHours": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "dataDiskName",
                "dataDiskResourceGroupName",
                "shouldDeallocate"
            ]
        },
        "spotinst:index/StatefulNodeAzureExtension:StatefulNodeAzureExtension": {
            "properties": {
                "apiVersion": {
                    "type": "string"
                },
                "minorVersionAutoUpgrade": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "protectedSettings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "publicSettings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "publisher": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiVersion",
                "minorVersionAutoUpgrade",
                "name",
                "publisher",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiVersion",
                        "minorVersionAutoUpgrade",
                        "name",
                        "protectedSettings",
                        "publicSettings",
                        "publisher",
                        "type"
                    ]
                }
            }
        },
        "spotinst:index/StatefulNodeAzureHealth:StatefulNodeAzureHealth": {
            "properties": {
                "autoHealing": {
                    "type": "boolean"
                },
                "gracePeriod": {
                    "type": "integer"
                },
                "healthCheckTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unhealthyDuration": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "autoHealing",
                "healthCheckTypes"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "autoHealing",
                        "gracePeriod",
                        "healthCheckTypes",
                        "unhealthyDuration"
                    ]
                }
            }
        },
        "spotinst:index/StatefulNodeAzureImage:StatefulNodeAzureImage": {
            "properties": {
                "customImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureImageCustomImage:StatefulNodeAzureImageCustomImage"
                    }
                },
                "galleries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureImageGallery:StatefulNodeAzureImageGallery"
                    }
                },
                "marketplaceImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureImageMarketplaceImage:StatefulNodeAzureImageMarketplaceImage"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "customImages",
                        "galleries",
                        "marketplaceImages"
                    ]
                }
            }
        },
        "spotinst:index/StatefulNodeAzureImageCustomImage:StatefulNodeAzureImageCustomImage": {
            "properties": {
                "customImageResourceGroupName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "customImageResourceGroupName",
                "name"
            ]
        },
        "spotinst:index/StatefulNodeAzureImageGallery:StatefulNodeAzureImageGallery": {
            "properties": {
                "galleryName": {
                    "type": "string"
                },
                "galleryResourceGroupName": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "versionName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "galleryName",
                "galleryResourceGroupName",
                "imageName",
                "versionName"
            ]
        },
        "spotinst:index/StatefulNodeAzureImageMarketplaceImage:StatefulNodeAzureImageMarketplaceImage": {
            "properties": {
                "offer": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "offer",
                "publisher",
                "sku",
                "version"
            ]
        },
        "spotinst:index/StatefulNodeAzureImportVm:StatefulNodeAzureImportVm": {
            "properties": {
                "drainingTimeout": {
                    "type": "integer"
                },
                "originalVmName": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "resourcesRetentionTime": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "originalVmName",
                "resourceGroupName"
            ]
        },
        "spotinst:index/StatefulNodeAzureLoadBalancer:StatefulNodeAzureLoadBalancer": {
            "properties": {
                "backendPoolNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "backendPoolNames",
                "name",
                "resourceGroupName",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "backendPoolNames",
                        "name",
                        "resourceGroupName",
                        "sku",
                        "type"
                    ]
                }
            }
        },
        "spotinst:index/StatefulNodeAzureLogin:StatefulNodeAzureLogin": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "sshPublicKey": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "userName"
            ]
        },
        "spotinst:index/StatefulNodeAzureManagedServiceIdentity:StatefulNodeAzureManagedServiceIdentity": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "resourceGroupName"
            ]
        },
        "spotinst:index/StatefulNodeAzureNetwork:StatefulNodeAzureNetwork": {
            "properties": {
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureNetworkNetworkInterface:StatefulNodeAzureNetworkNetworkInterface"
                    }
                },
                "networkResourceGroupName": {
                    "type": "string"
                },
                "virtualNetworkName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "networkInterfaces",
                "networkResourceGroupName",
                "virtualNetworkName"
            ]
        },
        "spotinst:index/StatefulNodeAzureNetworkNetworkInterface:StatefulNodeAzureNetworkNetworkInterface": {
            "properties": {
                "additionalIpConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfiguration:StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfiguration"
                    }
                },
                "applicationSecurityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroup:StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroup"
                    }
                },
                "assignPublicIp": {
                    "type": "boolean"
                },
                "enableIpForwarding": {
                    "type": "boolean"
                },
                "isPrimary": {
                    "type": "boolean"
                },
                "networkSecurityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroup:StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroup"
                    }
                },
                "privateIpAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicIpSku": {
                    "type": "string"
                },
                "publicIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureNetworkNetworkInterfacePublicIp:StatefulNodeAzureNetworkNetworkInterfacePublicIp"
                    }
                },
                "subnetName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "isPrimary",
                "subnetName"
            ]
        },
        "spotinst:index/StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfiguration:StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfiguration": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "privateIpAddressVersion": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "privateIpAddressVersion"
            ]
        },
        "spotinst:index/StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroup:StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroup": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "networkResourceGroupName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "networkResourceGroupName"
            ]
        },
        "spotinst:index/StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroup:StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroup": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "networkResourceGroupName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "spotinst:index/StatefulNodeAzureNetworkNetworkInterfacePublicIp:StatefulNodeAzureNetworkNetworkInterfacePublicIp": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "networkResourceGroupName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "networkResourceGroupName"
            ]
        },
        "spotinst:index/StatefulNodeAzureOsDisk:StatefulNodeAzureOsDisk": {
            "properties": {
                "sizeGb": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "spotinst:index/StatefulNodeAzureProximityPlacementGroup:StatefulNodeAzureProximityPlacementGroup": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "resourceGroupName"
            ]
        },
        "spotinst:index/StatefulNodeAzureSchedulingTask:StatefulNodeAzureSchedulingTask": {
            "properties": {
                "cronExpression": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cronExpression",
                "isEnabled",
                "type"
            ]
        },
        "spotinst:index/StatefulNodeAzureSecret:StatefulNodeAzureSecret": {
            "properties": {
                "sourceVaults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureSecretSourceVault:StatefulNodeAzureSecretSourceVault"
                    }
                },
                "vaultCertificates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureSecretVaultCertificate:StatefulNodeAzureSecretVaultCertificate"
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceVaults",
                "vaultCertificates"
            ]
        },
        "spotinst:index/StatefulNodeAzureSecretSourceVault:StatefulNodeAzureSecretSourceVault": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "resourceGroupName"
            ]
        },
        "spotinst:index/StatefulNodeAzureSecretVaultCertificate:StatefulNodeAzureSecretVaultCertificate": {
            "properties": {
                "certificateStore": {
                    "type": "string"
                },
                "certificateUrl": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "spotinst:index/StatefulNodeAzureSecurity:StatefulNodeAzureSecurity": {
            "properties": {
                "secureBootEnabled": {
                    "type": "boolean"
                },
                "securityType": {
                    "type": "string"
                },
                "vtpmEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "spotinst:index/StatefulNodeAzureSignal:StatefulNodeAzureSignal": {
            "properties": {
                "timeout": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "timeout",
                "type"
            ]
        },
        "spotinst:index/StatefulNodeAzureStrategy:StatefulNodeAzureStrategy": {
            "properties": {
                "capacityReservations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureStrategyCapacityReservation:StatefulNodeAzureStrategyCapacityReservation"
                    }
                },
                "drainingTimeout": {
                    "type": "integer"
                },
                "fallbackToOnDemand": {
                    "type": "boolean"
                },
                "optimizationWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "preferredLifeCycle": {
                    "type": "string"
                },
                "revertToSpot": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureStrategyRevertToSpot:StatefulNodeAzureStrategyRevertToSpot"
                }
            },
            "type": "object",
            "required": [
                "fallbackToOnDemand"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "drainingTimeout",
                        "fallbackToOnDemand",
                        "preferredLifeCycle",
                        "revertToSpot"
                    ]
                }
            }
        },
        "spotinst:index/StatefulNodeAzureStrategyCapacityReservation:StatefulNodeAzureStrategyCapacityReservation": {
            "properties": {
                "capacityReservationGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureStrategyCapacityReservationCapacityReservationGroup:StatefulNodeAzureStrategyCapacityReservationCapacityReservationGroup"
                    }
                },
                "shouldUtilize": {
                    "type": "boolean"
                },
                "utilizationStrategy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "shouldUtilize",
                "utilizationStrategy"
            ]
        },
        "spotinst:index/StatefulNodeAzureStrategyCapacityReservationCapacityReservationGroup:StatefulNodeAzureStrategyCapacityReservationCapacityReservationGroup": {
            "properties": {
                "crgName": {
                    "type": "string"
                },
                "crgResourceGroupName": {
                    "type": "string"
                },
                "crgShouldPrioritize": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "crgName",
                "crgResourceGroupName"
            ]
        },
        "spotinst:index/StatefulNodeAzureStrategyRevertToSpot:StatefulNodeAzureStrategyRevertToSpot": {
            "properties": {
                "performAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "performAt"
            ]
        },
        "spotinst:index/StatefulNodeAzureTag:StatefulNodeAzureTag": {
            "properties": {
                "tagKey": {
                    "type": "string"
                },
                "tagValue": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tagKey"
            ]
        },
        "spotinst:index/StatefulNodeAzureUpdateState:StatefulNodeAzureUpdateState": {
            "properties": {
                "state": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "state"
            ]
        },
        "spotinst:organization/PolicyPolicyContent:PolicyPolicyContent": {
            "properties": {
                "statements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:organization/PolicyPolicyContentStatement:PolicyPolicyContentStatement"
                    },
                    "description": "List of permissions statements.\n"
                }
            },
            "type": "object",
            "required": [
                "statements"
            ]
        },
        "spotinst:organization/PolicyPolicyContentStatement:PolicyPolicyContentStatement": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set a list of required actions for this permissions statement.\nFull list of actions can be found in [https://docs.spot.io/account-user-management/user-management/access-policies-actions/](https://docs.spot.io/account-user-management/user-management/access-policies-actions/).\n"
                },
                "effect": {
                    "type": "string",
                    "description": "Valid values \"ALLOW\", \"DENY\".\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set a list of resources IDs. In order to include all resources in this statement - use \"*\".\n"
                }
            },
            "type": "object",
            "required": [
                "actions",
                "effect",
                "resources"
            ]
        },
        "spotinst:organization/ProgrammaticUserAccount:ProgrammaticUserAccount": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Account ID the programmatic user will have access to.\n"
                },
                "accountRole": {
                    "type": "string",
                    "description": "(Enum: `\"viewer\", \"editor\") Role to be associated with the\nprogrammatic user for this account.\n"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "accountRole"
            ]
        },
        "spotinst:organization/ProgrammaticUserPolicy:ProgrammaticUserPolicy": {
            "properties": {
                "policyAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the accounts that the policy should be\nenforced for the user.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "Policy ID the programmatic user will have access to.\n"
                }
            },
            "type": "object",
            "required": [
                "policyAccountIds",
                "policyId"
            ]
        },
        "spotinst:organization/UserGroupPolicy:UserGroupPolicy": {
            "properties": {
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of accounts to register with the assigned under the\ngiven group (should be existing accounts only).\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "A policy to register under the given group\n(should be existing policy only).\n"
                }
            },
            "type": "object",
            "required": [
                "accountIds",
                "policyId"
            ]
        },
        "spotinst:organization/UserPolicy:UserPolicy": {
            "properties": {
                "policyAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policyId": {
                    "type": "string",
                    "description": "A policy to register under the given group\n(should be existing policy only).\n"
                }
            },
            "type": "object",
            "required": [
                "policyAccountIds",
                "policyId"
            ]
        },
        "spotinst:spark/OceanCompute:OceanCompute": {
            "properties": {
                "createVngs": {
                    "type": "boolean",
                    "description": "- Enable/disable the creation of Ocean Spark VNGs during cluster creation.\n"
                },
                "useTaints": {
                    "type": "boolean",
                    "description": "- Enable/disable Ocean Spark taints on the Ocean Spark VNGs. By default, Ocean Spark uses taints to prevent non-Spark workloads from running on Ocean Spark VNGs.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createVngs",
                        "useTaints"
                    ]
                }
            }
        },
        "spotinst:spark/OceanIngress:OceanIngress": {
            "properties": {
                "controller": {
                    "$ref": "#/types/spotinst:spark/OceanIngressController:OceanIngressController"
                },
                "customEndpoint": {
                    "$ref": "#/types/spotinst:spark/OceanIngressCustomEndpoint:OceanIngressCustomEndpoint"
                },
                "loadBalancer": {
                    "$ref": "#/types/spotinst:spark/OceanIngressLoadBalancer:OceanIngressLoadBalancer"
                },
                "privateLink": {
                    "$ref": "#/types/spotinst:spark/OceanIngressPrivateLink:OceanIngressPrivateLink"
                },
                "serviceAnnotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- **DEPRECATED**: Use `load_balancer.service_annotations` instead.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "serviceAnnotations"
                    ]
                }
            }
        },
        "spotinst:spark/OceanIngressController:OceanIngressController": {
            "properties": {
                "managed": {
                    "type": "boolean",
                    "description": "- Should an ingress controller managed by Ocean for Apache Spark be installed on the cluster.\n"
                }
            },
            "type": "object"
        },
        "spotinst:spark/OceanIngressCustomEndpoint:OceanIngressCustomEndpoint": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "- The address the Ocean for Apache Spark control plane will use when addressing the cluster.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "- Should the Ocean for Apache Spark control plane address the cluster using a custom endpoint. Use this to specify the DNS address of an externally provisioned (unmanaged) load balancer.\n"
                }
            },
            "type": "object"
        },
        "spotinst:spark/OceanIngressLoadBalancer:OceanIngressLoadBalancer": {
            "properties": {
                "managed": {
                    "type": "boolean",
                    "description": "- Should an ingress controller managed by Ocean for Apache Spark be installed on the cluster.\n"
                },
                "serviceAnnotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "- Annotations to add to the ingress controller load balancer service. This is useful to configure properties of the managed load balancer, like the nature of the load balancer (e.g. ELB, NLB, ALB on AWS), the security groups, or various timeouts.\n"
                },
                "targetGroupArn": {
                    "type": "string",
                    "description": "- The ARN of a target group that the Ocean for Apache Spark ingress controller will be bound to. Set this to use an existing load balancer with Ocean for Apache Spark. Has no effect if using a managed load balancer. Only available on AWS.\n"
                }
            },
            "type": "object"
        },
        "spotinst:spark/OceanIngressPrivateLink:OceanIngressPrivateLink": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "- Should the Ocean for Apache Spark control plane address the cluster using a custom endpoint. Use this to specify the DNS address of an externally provisioned (unmanaged) load balancer.\n"
                },
                "vpcEndpointService": {
                    "type": "string",
                    "description": "- The name of the VPC Endpoint Service the Ocean for Apache Spark control plane should bind to.\n"
                }
            },
            "type": "object"
        },
        "spotinst:spark/OceanLogCollection:OceanLogCollection": {
            "properties": {
                "collectAppLogs": {
                    "type": "boolean",
                    "description": "- Enable/Disable collecting driver and executor logs. When enabled, logs are stored by NetApp and can be downloaded from the Spot console web interface. The logs are deleted after 30 days.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "collectAppLogs"
                    ]
                }
            }
        },
        "spotinst:spark/OceanSpark:OceanSpark": {
            "properties": {
                "additionalAppNamespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "- List of Kubernetes namespaces that should be configured to run Spark applications, in addition to the default Spark application namespace `spark-apps`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "additionalAppNamespaces"
                    ]
                }
            }
        },
        "spotinst:spark/OceanWebhook:OceanWebhook": {
            "properties": {
                "hostNetworkPorts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "- List of ports allowed to use on the host network - if empty default is `25554`.\n"
                },
                "useHostNetwork": {
                    "type": "boolean",
                    "description": "- Enable/disable host networking for the Spark Operator. Host networking can be useful when using custom CNI plugins like Calico on EKS.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hostNetworkPorts",
                        "useHostNetwork"
                    ]
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the spotinst package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "account": {
                "type": "string",
                "description": "Spotinst Account ID\n"
            },
            "featureFlags": {
                "type": "string",
                "description": "Spotinst SDK Feature Flags\n"
            },
            "token": {
                "type": "string",
                "description": "Spotinst Personal API Access Token\n"
            }
        },
        "inputProperties": {
            "account": {
                "type": "string",
                "description": "Spotinst Account ID\n"
            },
            "featureFlags": {
                "type": "string",
                "description": "Spotinst SDK Feature Flags\n"
            },
            "token": {
                "type": "string",
                "description": "Spotinst Personal API Access Token\n"
            }
        }
    },
    "resources": {
        "spotinst:aws/account:Account": {
            "description": "Provides a Spotinst account resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\n// Create a Account\nconst myAwsAcct = new spotinst.aws.Account(\"myAwsAcct\", {});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\n# Create a Account\nmy_aws_acct = spotinst.aws.Account(\"myAwsAcct\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a Account\n    var myAwsAcct = new SpotInst.Aws.Account(\"myAwsAcct\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewAccount(ctx, \"myAwsAcct\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.aws.Account;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myAwsAcct = new Account(\"myAwsAcct\");\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a Account\n  myAwsAcct:\n    type: spotinst:aws:Account\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Provide a name for your account. The account name must contain at least one character that is a-z or A-Z.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Provide a name for your account. The account name must contain at least one character that is a-z or A-Z.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Account resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Provide a name for your account. The account name must contain at least one character that is a-z or A-Z.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "spotinst:aws/beanstalk:Beanstalk": {
            "description": "Provides a Spotinst AWS group resource using Elastic Beanstalk.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst elastigoup_aws_beanstalk = new spotinst.aws.Beanstalk(\"elastigoup-aws-beanstalk\", {\n    beanstalkEnvironmentId: \"e-example\",\n    beanstalkEnvironmentName: \"example-env\",\n    deploymentPreferences: {\n        automaticRoll: true,\n        batchSizePercentage: 100,\n        gracePeriod: 90,\n        strategies: [{\n            action: \"REPLACE_SERVER\",\n            shouldDrainInstances: true,\n        }],\n    },\n    desiredCapacity: 0,\n    instanceTypesSpots: [\n        \"t2.micro\",\n        \"t2.medium\",\n        \"t2.large\",\n    ],\n    managedActions: {\n        platformUpdate: {\n            performAt: \"timeWindow\",\n            timeWindow: \"Mon:23:50-Tue:00:20\",\n            updateLevel: \"minorAndPatch\",\n        },\n    },\n    maxSize: 1,\n    minSize: 0,\n    product: \"Linux/UNIX\",\n    region: \"us-west-2\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nelastigoup_aws_beanstalk = spotinst.aws.Beanstalk(\"elastigoup-aws-beanstalk\",\n    beanstalk_environment_id=\"e-example\",\n    beanstalk_environment_name=\"example-env\",\n    deployment_preferences=spotinst.aws.BeanstalkDeploymentPreferencesArgs(\n        automatic_roll=True,\n        batch_size_percentage=100,\n        grace_period=90,\n        strategies=[spotinst.aws.BeanstalkDeploymentPreferencesStrategyArgs(\n            action=\"REPLACE_SERVER\",\n            should_drain_instances=True,\n        )],\n    ),\n    desired_capacity=0,\n    instance_types_spots=[\n        \"t2.micro\",\n        \"t2.medium\",\n        \"t2.large\",\n    ],\n    managed_actions=spotinst.aws.BeanstalkManagedActionsArgs(\n        platform_update=spotinst.aws.BeanstalkManagedActionsPlatformUpdateArgs(\n            perform_at=\"timeWindow\",\n            time_window=\"Mon:23:50-Tue:00:20\",\n            update_level=\"minorAndPatch\",\n        ),\n    ),\n    max_size=1,\n    min_size=0,\n    product=\"Linux/UNIX\",\n    region=\"us-west-2\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var elastigoup_aws_beanstalk = new SpotInst.Aws.Beanstalk(\"elastigoup-aws-beanstalk\", new()\n    {\n        BeanstalkEnvironmentId = \"e-example\",\n        BeanstalkEnvironmentName = \"example-env\",\n        DeploymentPreferences = new SpotInst.Aws.Inputs.BeanstalkDeploymentPreferencesArgs\n        {\n            AutomaticRoll = true,\n            BatchSizePercentage = 100,\n            GracePeriod = 90,\n            Strategies = new[]\n            {\n                new SpotInst.Aws.Inputs.BeanstalkDeploymentPreferencesStrategyArgs\n                {\n                    Action = \"REPLACE_SERVER\",\n                    ShouldDrainInstances = true,\n                },\n            },\n        },\n        DesiredCapacity = 0,\n        InstanceTypesSpots = new[]\n        {\n            \"t2.micro\",\n            \"t2.medium\",\n            \"t2.large\",\n        },\n        ManagedActions = new SpotInst.Aws.Inputs.BeanstalkManagedActionsArgs\n        {\n            PlatformUpdate = new SpotInst.Aws.Inputs.BeanstalkManagedActionsPlatformUpdateArgs\n            {\n                PerformAt = \"timeWindow\",\n                TimeWindow = \"Mon:23:50-Tue:00:20\",\n                UpdateLevel = \"minorAndPatch\",\n            },\n        },\n        MaxSize = 1,\n        MinSize = 0,\n        Product = \"Linux/UNIX\",\n        Region = \"us-west-2\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewBeanstalk(ctx, \"elastigoup-aws-beanstalk\", \u0026aws.BeanstalkArgs{\n\t\t\tBeanstalkEnvironmentId:   pulumi.String(\"e-example\"),\n\t\t\tBeanstalkEnvironmentName: pulumi.String(\"example-env\"),\n\t\t\tDeploymentPreferences: \u0026aws.BeanstalkDeploymentPreferencesArgs{\n\t\t\t\tAutomaticRoll:       pulumi.Bool(true),\n\t\t\t\tBatchSizePercentage: pulumi.Int(100),\n\t\t\t\tGracePeriod:         pulumi.Int(90),\n\t\t\t\tStrategies: aws.BeanstalkDeploymentPreferencesStrategyArray{\n\t\t\t\t\t\u0026aws.BeanstalkDeploymentPreferencesStrategyArgs{\n\t\t\t\t\t\tAction:               pulumi.String(\"REPLACE_SERVER\"),\n\t\t\t\t\t\tShouldDrainInstances: pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tDesiredCapacity: pulumi.Int(0),\n\t\t\tInstanceTypesSpots: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"t2.micro\"),\n\t\t\t\tpulumi.String(\"t2.medium\"),\n\t\t\t\tpulumi.String(\"t2.large\"),\n\t\t\t},\n\t\t\tManagedActions: \u0026aws.BeanstalkManagedActionsArgs{\n\t\t\t\tPlatformUpdate: \u0026aws.BeanstalkManagedActionsPlatformUpdateArgs{\n\t\t\t\t\tPerformAt:   pulumi.String(\"timeWindow\"),\n\t\t\t\t\tTimeWindow:  pulumi.String(\"Mon:23:50-Tue:00:20\"),\n\t\t\t\t\tUpdateLevel: pulumi.String(\"minorAndPatch\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tMaxSize: pulumi.Int(1),\n\t\t\tMinSize: pulumi.Int(0),\n\t\t\tProduct: pulumi.String(\"Linux/UNIX\"),\n\t\t\tRegion:  pulumi.String(\"us-west-2\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.aws.Beanstalk;\nimport com.pulumi.spotinst.aws.BeanstalkArgs;\nimport com.pulumi.spotinst.aws.inputs.BeanstalkDeploymentPreferencesArgs;\nimport com.pulumi.spotinst.aws.inputs.BeanstalkManagedActionsArgs;\nimport com.pulumi.spotinst.aws.inputs.BeanstalkManagedActionsPlatformUpdateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var elastigoup_aws_beanstalk = new Beanstalk(\"elastigoup-aws-beanstalk\", BeanstalkArgs.builder()        \n            .beanstalkEnvironmentId(\"e-example\")\n            .beanstalkEnvironmentName(\"example-env\")\n            .deploymentPreferences(BeanstalkDeploymentPreferencesArgs.builder()\n                .automaticRoll(true)\n                .batchSizePercentage(100)\n                .gracePeriod(90)\n                .strategies(BeanstalkDeploymentPreferencesStrategyArgs.builder()\n                    .action(\"REPLACE_SERVER\")\n                    .shouldDrainInstances(true)\n                    .build())\n                .build())\n            .desiredCapacity(0)\n            .instanceTypesSpots(            \n                \"t2.micro\",\n                \"t2.medium\",\n                \"t2.large\")\n            .managedActions(BeanstalkManagedActionsArgs.builder()\n                .platformUpdate(BeanstalkManagedActionsPlatformUpdateArgs.builder()\n                    .performAt(\"timeWindow\")\n                    .timeWindow(\"Mon:23:50-Tue:00:20\")\n                    .updateLevel(\"minorAndPatch\")\n                    .build())\n                .build())\n            .maxSize(1)\n            .minSize(0)\n            .product(\"Linux/UNIX\")\n            .region(\"us-west-2\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  elastigoup-aws-beanstalk:\n    type: spotinst:aws:Beanstalk\n    properties:\n      beanstalkEnvironmentId: e-example\n      beanstalkEnvironmentName: example-env\n      deploymentPreferences:\n        automaticRoll: true\n        batchSizePercentage: 100\n        gracePeriod: 90\n        strategies:\n          - action: REPLACE_SERVER\n            shouldDrainInstances: true\n      desiredCapacity: 0\n      instanceTypesSpots:\n        - t2.micro\n        - t2.medium\n        - t2.large\n      managedActions:\n        platformUpdate:\n          performAt: timeWindow\n          timeWindow: Mon:23:50-Tue:00:20\n          updateLevel: minorAndPatch\n      maxSize: 1\n      minSize: 0\n      product: Linux/UNIX\n      region: us-west-2\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "beanstalkEnvironmentId": {
                    "type": "string",
                    "description": "The id of an existing Beanstalk environment.\n"
                },
                "beanstalkEnvironmentName": {
                    "type": "string",
                    "description": "The name of an existing Beanstalk environment.\n"
                },
                "deploymentPreferences": {
                    "$ref": "#/types/spotinst:aws/BeanstalkDeploymentPreferences:BeanstalkDeploymentPreferences",
                    "description": "Preferences when performing a roll\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "instanceTypesSpots": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more instance types. To maximize the availability of Spot instances, select as many instance types as possible.\n"
                },
                "maintenance": {
                    "type": "string"
                },
                "managedActions": {
                    "$ref": "#/types/spotinst:aws/BeanstalkManagedActions:BeanstalkManagedActions",
                    "description": "Managed Actions parameters\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "product": {
                    "type": "string",
                    "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`.\nFor EC2 Classic instances:  `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region your group will be created in. Cannot be changed after the group has been created.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/BeanstalkScheduledTask:BeanstalkScheduledTask"
                    }
                }
            },
            "required": [
                "desiredCapacity",
                "instanceTypesSpots",
                "maxSize",
                "minSize",
                "name",
                "product",
                "region"
            ],
            "inputProperties": {
                "beanstalkEnvironmentId": {
                    "type": "string",
                    "description": "The id of an existing Beanstalk environment.\n"
                },
                "beanstalkEnvironmentName": {
                    "type": "string",
                    "description": "The name of an existing Beanstalk environment.\n"
                },
                "deploymentPreferences": {
                    "$ref": "#/types/spotinst:aws/BeanstalkDeploymentPreferences:BeanstalkDeploymentPreferences",
                    "description": "Preferences when performing a roll\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "instanceTypesSpots": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more instance types. To maximize the availability of Spot instances, select as many instance types as possible.\n"
                },
                "maintenance": {
                    "type": "string"
                },
                "managedActions": {
                    "$ref": "#/types/spotinst:aws/BeanstalkManagedActions:BeanstalkManagedActions",
                    "description": "Managed Actions parameters\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "product": {
                    "type": "string",
                    "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`.\nFor EC2 Classic instances:  `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region your group will be created in. Cannot be changed after the group has been created.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/BeanstalkScheduledTask:BeanstalkScheduledTask"
                    }
                }
            },
            "requiredInputs": [
                "desiredCapacity",
                "instanceTypesSpots",
                "maxSize",
                "minSize",
                "product",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Beanstalk resources.\n",
                "properties": {
                    "beanstalkEnvironmentId": {
                        "type": "string",
                        "description": "The id of an existing Beanstalk environment.\n"
                    },
                    "beanstalkEnvironmentName": {
                        "type": "string",
                        "description": "The name of an existing Beanstalk environment.\n"
                    },
                    "deploymentPreferences": {
                        "$ref": "#/types/spotinst:aws/BeanstalkDeploymentPreferences:BeanstalkDeploymentPreferences",
                        "description": "Preferences when performing a roll\n"
                    },
                    "desiredCapacity": {
                        "type": "integer",
                        "description": "The desired number of instances the group should have at any time.\n"
                    },
                    "instanceTypesSpots": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more instance types. To maximize the availability of Spot instances, select as many instance types as possible.\n"
                    },
                    "maintenance": {
                        "type": "string"
                    },
                    "managedActions": {
                        "$ref": "#/types/spotinst:aws/BeanstalkManagedActions:BeanstalkManagedActions",
                        "description": "Managed Actions parameters\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The maximum number of instances the group should have at any time.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The minimum number of instances the group should have at any time.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name.\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`.\nFor EC2 Classic instances:  `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The AWS region your group will be created in. Cannot be changed after the group has been created.\n"
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/BeanstalkScheduledTask:BeanstalkScheduledTask"
                        }
                    }
                },
                "type": "object"
            }
        },
        "spotinst:aws/credentials:Credentials": {
            "description": "Provides a Spotinst credential AWS resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\n// set credential AWS\nconst credential = new spotinst.aws.Credentials(\"credential\", {\n    accountid: \"act-123456\",\n    iamrole: \"arn:aws:iam::1234567890:role/Spot_Iam_Role\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\n# set credential AWS\ncredential = spotinst.aws.Credentials(\"credential\",\n    accountid=\"act-123456\",\n    iamrole=\"arn:aws:iam::1234567890:role/Spot_Iam_Role\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // set credential AWS\n    var credential = new SpotInst.Aws.Credentials(\"credential\", new()\n    {\n        Accountid = \"act-123456\",\n        Iamrole = \"arn:aws:iam::1234567890:role/Spot_Iam_Role\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewCredentials(ctx, \"credential\", \u0026aws.CredentialsArgs{\n\t\t\tAccountid: pulumi.String(\"act-123456\"),\n\t\t\tIamrole:   pulumi.String(\"arn:aws:iam::1234567890:role/Spot_Iam_Role\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.aws.Credentials;\nimport com.pulumi.spotinst.aws.CredentialsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var credential = new Credentials(\"credential\", CredentialsArgs.builder()        \n            .accountid(\"act-123456\")\n            .iamrole(\"arn:aws:iam::1234567890:role/Spot_Iam_Role\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # set credential AWS\n  credential:\n    type: spotinst:aws:Credentials\n    properties:\n      accountid: act-123456\n      iamrole: arn:aws:iam::1234567890:role/Spot_Iam_Role\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "iamrole": {
                    "type": "string",
                    "description": "Provide the IAM Role ARN connected to another AWS account 922761411349 and with the latest Spot Policy - https://docs.spot.io/administration/api/spot-policy-in-aws\n"
                }
            },
            "required": [
                "accountId",
                "iamrole"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "iamrole": {
                    "type": "string",
                    "description": "Provide the IAM Role ARN connected to another AWS account 922761411349 and with the latest Spot Policy - https://docs.spot.io/administration/api/spot-policy-in-aws\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accountId",
                "iamrole"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Credentials resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "iamrole": {
                        "type": "string",
                        "description": "Provide the IAM Role ARN connected to another AWS account 922761411349 and with the latest Spot Policy - https://docs.spot.io/administration/api/spot-policy-in-aws\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "spotinst:aws/elastigroup:Elastigroup": {
            "description": "Provides a Spotinst AWS group resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.aws.Elastigroup;\nimport com.pulumi.spotinst.aws.ElastigroupArgs;\nimport com.pulumi.spotinst.aws.inputs.ElastigroupCpuOptionsArgs;\nimport com.pulumi.spotinst.aws.inputs.ElastigroupInstanceTypesWeightArgs;\nimport com.pulumi.spotinst.aws.inputs.ElastigroupMetadataOptionsArgs;\nimport com.pulumi.spotinst.aws.inputs.ElastigroupResourceRequirementArgs;\nimport com.pulumi.spotinst.aws.inputs.ElastigroupResourceTagSpecificationArgs;\nimport com.pulumi.spotinst.aws.inputs.ElastigroupScalingDownPolicyArgs;\nimport com.pulumi.spotinst.aws.inputs.ElastigroupScalingStrategyArgs;\nimport com.pulumi.spotinst.aws.inputs.ElastigroupScalingUpPolicyArgs;\nimport com.pulumi.spotinst.aws.inputs.ElastigroupTagArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var default_elastigroup = new Elastigroup(\"default-elastigroup\", ElastigroupArgs.builder()        \n            .capacityUnit(\"weight\")\n            .cpuCredits(\"unlimited\")\n            .cpuOptions(ElastigroupCpuOptionsArgs.builder()\n                .threadsPerCore(1)\n                .build())\n            .description(\"created by Pulumi\")\n            .desiredCapacity(0)\n            .ebsOptimized(false)\n            .enableMonitoring(false)\n            .fallbackToOndemand(false)\n            .iamInstanceProfile(\"iam-profile\")\n            .imageId(\"ami-a27d8fda\")\n            .instanceTypesOndemand(\"m3.2xlarge\")\n            .instanceTypesPreferredSpots(\"m3.xlarge\")\n            .instanceTypesSpots(            \n                \"m3.xlarge\",\n                \"m3.2xlarge\")\n            .instanceTypesWeights(            \n                ElastigroupInstanceTypesWeightArgs.builder()\n                    .instanceType(\"m3.xlarge\")\n                    .weight(10)\n                    .build(),\n                ElastigroupInstanceTypesWeightArgs.builder()\n                    .instanceType(\"m3.2xlarge\")\n                    .weight(16)\n                    .build())\n            .keyName(\"my-key.ssh\")\n            .lifecycle(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .maxSize(0)\n            .metadataOptions(ElastigroupMetadataOptionsArgs.builder()\n                .httpPutResponseHopLimit(10)\n                .httpTokens(\"optional\")\n                .instanceMetadataTags(\"enabled\")\n                .build())\n            .minSize(0)\n            .minimumInstanceLifetime(12)\n            .onDemandTypes(\"c3.large\")\n            .orientation(\"balanced\")\n            .placementTenancy(\"default\")\n            .product(\"Linux/UNIX\")\n            .region(\"us-west-2\")\n            .resourceRequirements(ElastigroupResourceRequirementArgs.builder()\n                .excludedInstanceFamilies(                \n                    \"a\",\n                    \"m\")\n                .excludedInstanceGenerations(                \n                    \"1\",\n                    \"2\")\n                .excludedInstanceTypes(\"m3.large\")\n                .requiredGpuMaximum(16)\n                .requiredGpuMinimum(1)\n                .requiredMemoryMaximum(512)\n                .requiredMemoryMinimum(1)\n                .requiredVcpuMaximum(64)\n                .requiredVcpuMinimum(1)\n                .build())\n            .resourceTagSpecifications(ElastigroupResourceTagSpecificationArgs.builder()\n                .shouldTagAmis(true)\n                .shouldTagEnis(true)\n                .shouldTagSnapshots(true)\n                .shouldTagVolumes(true)\n                .build())\n            .scalingDownPolicies(ElastigroupScalingDownPolicyArgs.builder()\n                .adjustment(1)\n                .cooldown(300)\n                .evaluationPeriods(10)\n                .metricName(\"DefaultQueuesDepth\")\n                .namespace(\"custom\")\n                .period(60)\n                .policyName(\"Default Scaling Down Policy\")\n                .statistic(\"average\")\n                .threshold(10)\n                .unit(\"none\")\n                .build())\n            .scalingStrategies(ElastigroupScalingStrategyArgs.builder()\n                .terminateAtEndOfBillingHour(true)\n                .terminationPolicy(\"default\")\n                .build())\n            .scalingUpPolicies(ElastigroupScalingUpPolicyArgs.builder()\n                .adjustment(1)\n                .cooldown(300)\n                .evaluationPeriods(5)\n                .metricName(\"DefaultQueuesDepth\")\n                .namespace(\"custom\")\n                .period(60)\n                .policyName(\"Default Scaling Up Policy\")\n                .statistic(\"average\")\n                .threshold(100)\n                .unit(\"none\")\n                .build())\n            .securityGroups(\"sg-123456\")\n            .subnetIds(            \n                \"sb-123456\",\n                \"sb-456789\")\n            .tags(            \n                ElastigroupTagArgs.builder()\n                    .key(\"Env\")\n                    .value(\"production\")\n                    .build(),\n                ElastigroupTagArgs.builder()\n                    .key(\"Name\")\n                    .value(\"default-production\")\n                    .build(),\n                ElastigroupTagArgs.builder()\n                    .key(\"Project\")\n                    .value(\"app_v2\")\n                    .build())\n            .userData(\"echo hello world\")\n            .waitForCapacity(5)\n            .waitForCapacityTimeout(300)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create an Elastigroup\n  default-elastigroup:\n    type: spotinst:aws:Elastigroup\n    properties:\n      capacityUnit: weight\n      cpuCredits: unlimited\n      cpuOptions:\n        threadsPerCore: 1\n      description: created by Pulumi\n      desiredCapacity: 0\n      ebsOptimized: false\n      enableMonitoring: false\n      fallbackToOndemand: false\n      iamInstanceProfile: iam-profile\n      imageId: ami-a27d8fda\n      instanceTypesOndemand: m3.2xlarge\n      instanceTypesPreferredSpots:\n        - m3.xlarge\n      instanceTypesSpots:\n        - m3.xlarge\n        - m3.2xlarge\n      instanceTypesWeights:\n        - instanceType: m3.xlarge\n          weight: 10\n        - instanceType: m3.2xlarge\n          weight: 16\n      keyName: my-key.ssh\n      lifecycle:\n        ignoreChanges:\n          - desiredCapacity\n      maxSize: 0\n      metadataOptions:\n        httpPutResponseHopLimit: 10\n        httpTokens: optional\n        instanceMetadataTags: enabled\n      minSize: 0\n      minimumInstanceLifetime: 12\n      onDemandTypes:\n        - c3.large\n      orientation: balanced\n      placementTenancy: default\n      product: Linux/UNIX\n      region: us-west-2\n      resourceRequirements:\n        - excludedInstanceFamilies:\n            - a\n            - m\n          excludedInstanceGenerations:\n            - '1'\n            - '2'\n          excludedInstanceTypes:\n            - m3.large\n          requiredGpuMaximum: 16\n          requiredGpuMinimum: 1\n          requiredMemoryMaximum: 512\n          requiredMemoryMinimum: 1\n          requiredVcpuMaximum: 64\n          requiredVcpuMinimum: 1\n      resourceTagSpecifications:\n        - shouldTagAmis: true\n          shouldTagEnis: true\n          shouldTagSnapshots: true\n          shouldTagVolumes: true\n      scalingDownPolicies:\n        - adjustment: 1\n          cooldown: 300\n          evaluationPeriods: 10\n          metricName: DefaultQueuesDepth\n          namespace: custom\n          period: 60\n          policyName: Default Scaling Down Policy\n          statistic: average\n          threshold: 10\n          unit: none\n      scalingStrategies:\n        - terminateAtEndOfBillingHour: true\n          terminationPolicy: default\n      scalingUpPolicies:\n        - adjustment: 1\n          cooldown: 300\n          evaluationPeriods: 5\n          metricName: DefaultQueuesDepth\n          namespace: custom\n          period: 60\n          policyName: Default Scaling Up Policy\n          statistic: average\n          threshold: 100\n          unit: none\n      securityGroups:\n        - sg-123456\n      subnetIds:\n        - sb-123456\n        - sb-456789\n      tags:\n        - key: Env\n          value: production\n        - key: Name\n          value: default-production\n        - key: Project\n          value: app_v2\n      userData: echo hello world\n      waitForCapacity: 5\n      waitForCapacityTimeout: 300\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.\nNote: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:\n`availability_zones = [\"us-east-1a:subnet-123456:ClusterI03\"]`\n"
                },
                "blockDevicesMode": {
                    "type": "string",
                    "description": "String, determine the way we attach the data volumes to the data devices, possible values: `\"reattach\"` and `\"onLaunch\"` (default is onLaunch).\n"
                },
                "capacityUnit": {
                    "type": "string",
                    "description": "The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs. Valid values: `instance`, `weight`.\n"
                },
                "considerOdPricing": {
                    "type": "boolean"
                },
                "cpuCredits": {
                    "type": "string",
                    "description": "Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.\n"
                },
                "cpuOptions": {
                    "$ref": "#/types/spotinst:aws/ElastigroupCpuOptions:ElastigroupCpuOptions",
                    "description": "The CPU options for the instances that are launched within the group:\n"
                },
                "description": {
                    "type": "string",
                    "description": "The group description.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                },
                "ebsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupEbsBlockDevice:ElastigroupEbsBlockDevice"
                    }
                },
                "ebsOptimized": {
                    "type": "boolean",
                    "description": "Enable high bandwidth connectivity between instances and AWS’s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.\n"
                },
                "elasticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.\n"
                },
                "elasticLoadBalancers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Elastic Load Balancers names (ELB).\n"
                },
                "enableMonitoring": {
                    "type": "boolean",
                    "description": "Indicates whether monitoring is enabled for the instance.\n"
                },
                "ephemeralBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupEphemeralBlockDevice:ElastigroupEphemeralBlockDevice"
                    }
                },
                "fallbackToOndemand": {
                    "type": "boolean",
                    "description": "In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.\n"
                },
                "healthCheckGracePeriod": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n"
                },
                "healthCheckType": {
                    "type": "string",
                    "description": "The service that will perform health checks for the instance. Valid values: `\"ELB\"`, `\"HCS\"`, `\"TARGET_GROUP\"`, `\"MLB\"`, `\"EC2\"`, `\"MULTAI_TARGET_SET\"`, `\"MLB_RUNTIME\"`, `\"K8S_NODE\"`, `\"NOMAD_NODE\"`, `\"ECS_CLUSTER_INSTANCE\"`.\n"
                },
                "healthCheckUnhealthyDurationBeforeReplacement": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "The ID of the AMI used to launch the instance.\n"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupImage:ElastigroupImage"
                    },
                    "description": "An array of image objects. \nNote: Elastigroup can be configured with either imageId or images, but not both.\n"
                },
                "immediateOdRecoverThreshold": {
                    "type": "integer"
                },
                "instanceTypesOndemand": {
                    "type": "string",
                    "description": "The type of instance determines your instance's CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).\n"
                },
                "instanceTypesPreferredSpots": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.\n"
                },
                "instanceTypesSpots": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more instance types. Note: Cannot be defined if 'resourceRequirements' is defined.\n"
                },
                "instanceTypesWeights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupInstanceTypesWeight:ElastigroupInstanceTypesWeight"
                    },
                    "description": "List of weights per instance type for weighted groups. Each object in the list should have the following attributes:\n"
                },
                "integrationBeanstalk": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationBeanstalk:ElastigroupIntegrationBeanstalk"
                },
                "integrationCodedeploy": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationCodedeploy:ElastigroupIntegrationCodedeploy",
                    "description": "Describes the [Code Deploy](https://aws.amazon.com/documentation/codedeploy/?id=docs_gateway) integration.\n"
                },
                "integrationDockerSwarm": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm",
                    "description": "Describes the [Docker Swarm](https://api.spotinst.com/integration-docs/elastigroup/container-management/docker-swarm/docker-swarm-integration/) integration.\n"
                },
                "integrationEcs": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationEcs:ElastigroupIntegrationEcs",
                    "description": "Describes the [EC2 Container Service](https://aws.amazon.com/documentation/ecs/?id=docs_gateway) integration.\n"
                },
                "integrationGitlab": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationGitlab:ElastigroupIntegrationGitlab",
                    "description": "Describes the [Gitlab](https://api.spotinst.com/integration-docs/gitlab/) integration.\n"
                },
                "integrationKubernetes": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes",
                    "description": "Describes the [Kubernetes](https://kubernetes.io/) integration.\n"
                },
                "integrationMesosphere": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationMesosphere:ElastigroupIntegrationMesosphere",
                    "description": "Describes the [Mesosphere](https://mesosphere.com/) integration.\n"
                },
                "integrationMultaiRuntime": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime",
                    "description": "Describes the [Multai Runtime](https://spotinst.com/) integration.\n"
                },
                "integrationNomad": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationNomad:ElastigroupIntegrationNomad",
                    "description": "Describes the [Nomad](https://www.nomadproject.io/) integration.\n"
                },
                "integrationRancher": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRancher:ElastigroupIntegrationRancher",
                    "description": "Describes the [Rancher](http://rancherlabs.com/) integration.\n"
                },
                "integrationRoute53": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRoute53:ElastigroupIntegrationRoute53",
                    "description": "Describes the [Route53](https://aws.amazon.com/documentation/route53/?id=docs_gateway) integration.\n"
                },
                "itfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupItf:ElastigroupItf"
                    }
                },
                "keyName": {
                    "type": "string",
                    "description": "The key name that should be used for the instance.\n"
                },
                "lifetimePeriod": {
                    "type": "string"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "metadataOptions": {
                    "$ref": "#/types/spotinst:aws/ElastigroupMetadataOptions:ElastigroupMetadataOptions",
                    "description": "Data that used to configure or manage the running instances:\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "minimumInstanceLifetime": {
                    "type": "integer",
                    "description": "Defines the preferred minimum instance lifetime in hours. Markets which comply with this preference will be prioritized. Optional values: 1, 3, 6, 12, 24.\n"
                },
                "multaiTargetSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupMultaiTargetSet:ElastigroupMultaiTargetSet"
                    },
                    "description": "Set of targets to register.\n"
                },
                "multipleMetrics": {
                    "$ref": "#/types/spotinst:aws/ElastigroupMultipleMetrics:ElastigroupMultipleMetrics"
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                    }
                },
                "onDemandTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Available ondemand instance types. Note: Either ondemand or onDemandTypes must be defined, but not both.\n"
                },
                "ondemandCount": {
                    "type": "integer",
                    "description": "Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.\n"
                },
                "orientation": {
                    "type": "string",
                    "description": "Select a prediction strategy. Valid values: `balanced`, `costOriented`, `equalAzDistribution`, `availabilityOriented`. You can read more in our documentation.\n"
                },
                "persistBlockDevices": {
                    "type": "boolean",
                    "description": "Boolean, should the instance maintain its Data volumes.\n"
                },
                "persistPrivateIp": {
                    "type": "boolean",
                    "description": "Boolean, should the instance maintain its private IP.\n"
                },
                "persistRootDevice": {
                    "type": "boolean",
                    "description": "Boolean, should the instance maintain its root device volumes.\n"
                },
                "placementTenancy": {
                    "type": "string",
                    "description": "Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used. Valid values: \"default\", \"dedicated\" .\n"
                },
                "preferredAvailabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.\nNote: Must be a sublist of `availability_zones` and `orientation` value must not be `\"equalAzDistribution\"`.\n"
                },
                "privateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Private IPs to associate to the group instances.(e.g. \"172.1.1.0\"). Please note: This setting will only apply if persistence.persist_private_ip is set to true.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "product": {
                    "type": "string",
                    "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`.\nFor EC2 Classic instances:  `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region your group will be created in.\nNote: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).\n"
                },
                "resourceRequirements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupResourceRequirement:ElastigroupResourceRequirement"
                    },
                    "description": "Required instance attributes. Instance types will be selected based on these requirements.\n"
                },
                "resourceTagSpecifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupResourceTagSpecification:ElastigroupResourceTagSpecification"
                    },
                    "description": "User will specify which resources should be tagged with group tags.\n"
                },
                "revertToSpot": {
                    "$ref": "#/types/spotinst:aws/ElastigroupRevertToSpot:ElastigroupRevertToSpot",
                    "description": "Hold settings for strategy correction – replacing On-Demand for Spot instances. Supported Values: `\"never\"`, `\"always\"`, `\"timeWindow\"`\n"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    }
                },
                "scalingStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingStrategy:ElastigroupScalingStrategy"
                    },
                    "description": "Set termination policy.\n"
                },
                "scalingTargetPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingTargetPolicy:ElastigroupScalingTargetPolicy"
                    }
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    }
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScheduledTask:ElastigroupScheduledTask"
                    }
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of associated security group IDS.\n"
                },
                "shutdownScript": {
                    "type": "string",
                    "description": "The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n"
                },
                "signals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupSignal:ElastigroupSignal"
                    }
                },
                "spotPercentage": {
                    "type": "integer",
                    "description": "The percentage of Spot instances that would spin up from the `desired_capacity` number.\n"
                },
                "statefulDeallocation": {
                    "$ref": "#/types/spotinst:aws/ElastigroupStatefulDeallocation:ElastigroupStatefulDeallocation"
                },
                "statefulInstanceActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupStatefulInstanceAction:ElastigroupStatefulInstanceAction"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Strings of subnet identifiers.\nNote: When this parameter is set, `availability_zones` should be left unused.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupTag:ElastigroupTag"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n"
                },
                "targetGroupArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Target Group ARNs to register the instances to.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:aws/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy"
                },
                "userData": {
                    "type": "string",
                    "description": "The user data to provide when launching the instance.\n"
                },
                "utilizeCommitments": {
                    "type": "boolean"
                },
                "utilizeReservedInstances": {
                    "type": "boolean",
                    "description": "In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.\n"
                },
                "waitForCapacity": {
                    "type": "integer",
                    "description": "Minimum number of instances in a 'HEALTHY' status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.\n"
                },
                "waitForCapacityTimeout": {
                    "type": "integer",
                    "description": "Time (seconds) to wait for instances to report a 'HEALTHY' status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.\n"
                }
            },
            "required": [
                "capacityUnit",
                "drainingTimeout",
                "ebsOptimized",
                "fallbackToOndemand",
                "maxSize",
                "minSize",
                "name",
                "orientation",
                "product",
                "securityGroups"
            ],
            "inputProperties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.\nNote: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:\n`availability_zones = [\"us-east-1a:subnet-123456:ClusterI03\"]`\n"
                },
                "blockDevicesMode": {
                    "type": "string",
                    "description": "String, determine the way we attach the data volumes to the data devices, possible values: `\"reattach\"` and `\"onLaunch\"` (default is onLaunch).\n"
                },
                "capacityUnit": {
                    "type": "string",
                    "description": "The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs. Valid values: `instance`, `weight`.\n"
                },
                "considerOdPricing": {
                    "type": "boolean"
                },
                "cpuCredits": {
                    "type": "string",
                    "description": "Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.\n"
                },
                "cpuOptions": {
                    "$ref": "#/types/spotinst:aws/ElastigroupCpuOptions:ElastigroupCpuOptions",
                    "description": "The CPU options for the instances that are launched within the group:\n"
                },
                "description": {
                    "type": "string",
                    "description": "The group description.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                },
                "ebsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupEbsBlockDevice:ElastigroupEbsBlockDevice"
                    }
                },
                "ebsOptimized": {
                    "type": "boolean",
                    "description": "Enable high bandwidth connectivity between instances and AWS’s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.\n"
                },
                "elasticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.\n"
                },
                "elasticLoadBalancers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Elastic Load Balancers names (ELB).\n"
                },
                "enableMonitoring": {
                    "type": "boolean",
                    "description": "Indicates whether monitoring is enabled for the instance.\n"
                },
                "ephemeralBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupEphemeralBlockDevice:ElastigroupEphemeralBlockDevice"
                    }
                },
                "fallbackToOndemand": {
                    "type": "boolean",
                    "description": "In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.\n"
                },
                "healthCheckGracePeriod": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n"
                },
                "healthCheckType": {
                    "type": "string",
                    "description": "The service that will perform health checks for the instance. Valid values: `\"ELB\"`, `\"HCS\"`, `\"TARGET_GROUP\"`, `\"MLB\"`, `\"EC2\"`, `\"MULTAI_TARGET_SET\"`, `\"MLB_RUNTIME\"`, `\"K8S_NODE\"`, `\"NOMAD_NODE\"`, `\"ECS_CLUSTER_INSTANCE\"`.\n"
                },
                "healthCheckUnhealthyDurationBeforeReplacement": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "The ID of the AMI used to launch the instance.\n"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupImage:ElastigroupImage"
                    },
                    "description": "An array of image objects. \nNote: Elastigroup can be configured with either imageId or images, but not both.\n"
                },
                "immediateOdRecoverThreshold": {
                    "type": "integer"
                },
                "instanceTypesOndemand": {
                    "type": "string",
                    "description": "The type of instance determines your instance's CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).\n"
                },
                "instanceTypesPreferredSpots": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.\n"
                },
                "instanceTypesSpots": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more instance types. Note: Cannot be defined if 'resourceRequirements' is defined.\n"
                },
                "instanceTypesWeights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupInstanceTypesWeight:ElastigroupInstanceTypesWeight"
                    },
                    "description": "List of weights per instance type for weighted groups. Each object in the list should have the following attributes:\n"
                },
                "integrationBeanstalk": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationBeanstalk:ElastigroupIntegrationBeanstalk"
                },
                "integrationCodedeploy": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationCodedeploy:ElastigroupIntegrationCodedeploy",
                    "description": "Describes the [Code Deploy](https://aws.amazon.com/documentation/codedeploy/?id=docs_gateway) integration.\n"
                },
                "integrationDockerSwarm": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm",
                    "description": "Describes the [Docker Swarm](https://api.spotinst.com/integration-docs/elastigroup/container-management/docker-swarm/docker-swarm-integration/) integration.\n"
                },
                "integrationEcs": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationEcs:ElastigroupIntegrationEcs",
                    "description": "Describes the [EC2 Container Service](https://aws.amazon.com/documentation/ecs/?id=docs_gateway) integration.\n"
                },
                "integrationGitlab": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationGitlab:ElastigroupIntegrationGitlab",
                    "description": "Describes the [Gitlab](https://api.spotinst.com/integration-docs/gitlab/) integration.\n"
                },
                "integrationKubernetes": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes",
                    "description": "Describes the [Kubernetes](https://kubernetes.io/) integration.\n"
                },
                "integrationMesosphere": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationMesosphere:ElastigroupIntegrationMesosphere",
                    "description": "Describes the [Mesosphere](https://mesosphere.com/) integration.\n"
                },
                "integrationMultaiRuntime": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime",
                    "description": "Describes the [Multai Runtime](https://spotinst.com/) integration.\n"
                },
                "integrationNomad": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationNomad:ElastigroupIntegrationNomad",
                    "description": "Describes the [Nomad](https://www.nomadproject.io/) integration.\n"
                },
                "integrationRancher": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRancher:ElastigroupIntegrationRancher",
                    "description": "Describes the [Rancher](http://rancherlabs.com/) integration.\n"
                },
                "integrationRoute53": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRoute53:ElastigroupIntegrationRoute53",
                    "description": "Describes the [Route53](https://aws.amazon.com/documentation/route53/?id=docs_gateway) integration.\n"
                },
                "itfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupItf:ElastigroupItf"
                    }
                },
                "keyName": {
                    "type": "string",
                    "description": "The key name that should be used for the instance.\n"
                },
                "lifetimePeriod": {
                    "type": "string"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "metadataOptions": {
                    "$ref": "#/types/spotinst:aws/ElastigroupMetadataOptions:ElastigroupMetadataOptions",
                    "description": "Data that used to configure or manage the running instances:\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "minimumInstanceLifetime": {
                    "type": "integer",
                    "description": "Defines the preferred minimum instance lifetime in hours. Markets which comply with this preference will be prioritized. Optional values: 1, 3, 6, 12, 24.\n"
                },
                "multaiTargetSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupMultaiTargetSet:ElastigroupMultaiTargetSet"
                    },
                    "description": "Set of targets to register.\n"
                },
                "multipleMetrics": {
                    "$ref": "#/types/spotinst:aws/ElastigroupMultipleMetrics:ElastigroupMultipleMetrics"
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                    }
                },
                "onDemandTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Available ondemand instance types. Note: Either ondemand or onDemandTypes must be defined, but not both.\n"
                },
                "ondemandCount": {
                    "type": "integer",
                    "description": "Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.\n"
                },
                "orientation": {
                    "type": "string",
                    "description": "Select a prediction strategy. Valid values: `balanced`, `costOriented`, `equalAzDistribution`, `availabilityOriented`. You can read more in our documentation.\n"
                },
                "persistBlockDevices": {
                    "type": "boolean",
                    "description": "Boolean, should the instance maintain its Data volumes.\n"
                },
                "persistPrivateIp": {
                    "type": "boolean",
                    "description": "Boolean, should the instance maintain its private IP.\n"
                },
                "persistRootDevice": {
                    "type": "boolean",
                    "description": "Boolean, should the instance maintain its root device volumes.\n"
                },
                "placementTenancy": {
                    "type": "string",
                    "description": "Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used. Valid values: \"default\", \"dedicated\" .\n"
                },
                "preferredAvailabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.\nNote: Must be a sublist of `availability_zones` and `orientation` value must not be `\"equalAzDistribution\"`.\n"
                },
                "privateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Private IPs to associate to the group instances.(e.g. \"172.1.1.0\"). Please note: This setting will only apply if persistence.persist_private_ip is set to true.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "product": {
                    "type": "string",
                    "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`.\nFor EC2 Classic instances:  `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region your group will be created in.\nNote: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).\n"
                },
                "resourceRequirements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupResourceRequirement:ElastigroupResourceRequirement"
                    },
                    "description": "Required instance attributes. Instance types will be selected based on these requirements.\n"
                },
                "resourceTagSpecifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupResourceTagSpecification:ElastigroupResourceTagSpecification"
                    },
                    "description": "User will specify which resources should be tagged with group tags.\n"
                },
                "revertToSpot": {
                    "$ref": "#/types/spotinst:aws/ElastigroupRevertToSpot:ElastigroupRevertToSpot",
                    "description": "Hold settings for strategy correction – replacing On-Demand for Spot instances. Supported Values: `\"never\"`, `\"always\"`, `\"timeWindow\"`\n"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    }
                },
                "scalingStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingStrategy:ElastigroupScalingStrategy"
                    },
                    "description": "Set termination policy.\n"
                },
                "scalingTargetPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingTargetPolicy:ElastigroupScalingTargetPolicy"
                    }
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    }
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScheduledTask:ElastigroupScheduledTask"
                    }
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of associated security group IDS.\n"
                },
                "shutdownScript": {
                    "type": "string",
                    "description": "The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n"
                },
                "signals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupSignal:ElastigroupSignal"
                    }
                },
                "spotPercentage": {
                    "type": "integer",
                    "description": "The percentage of Spot instances that would spin up from the `desired_capacity` number.\n"
                },
                "statefulDeallocation": {
                    "$ref": "#/types/spotinst:aws/ElastigroupStatefulDeallocation:ElastigroupStatefulDeallocation"
                },
                "statefulInstanceActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupStatefulInstanceAction:ElastigroupStatefulInstanceAction"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Strings of subnet identifiers.\nNote: When this parameter is set, `availability_zones` should be left unused.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupTag:ElastigroupTag"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n"
                },
                "targetGroupArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Target Group ARNs to register the instances to.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:aws/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy"
                },
                "userData": {
                    "type": "string",
                    "description": "The user data to provide when launching the instance.\n"
                },
                "utilizeCommitments": {
                    "type": "boolean"
                },
                "utilizeReservedInstances": {
                    "type": "boolean",
                    "description": "In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.\n"
                },
                "waitForCapacity": {
                    "type": "integer",
                    "description": "Minimum number of instances in a 'HEALTHY' status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.\n"
                },
                "waitForCapacityTimeout": {
                    "type": "integer",
                    "description": "Time (seconds) to wait for instances to report a 'HEALTHY' status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.\n"
                }
            },
            "requiredInputs": [
                "fallbackToOndemand",
                "orientation",
                "product",
                "securityGroups"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Elastigroup resources.\n",
                "properties": {
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.\nNote: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:\n`availability_zones = [\"us-east-1a:subnet-123456:ClusterI03\"]`\n"
                    },
                    "blockDevicesMode": {
                        "type": "string",
                        "description": "String, determine the way we attach the data volumes to the data devices, possible values: `\"reattach\"` and `\"onLaunch\"` (default is onLaunch).\n"
                    },
                    "capacityUnit": {
                        "type": "string",
                        "description": "The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs. Valid values: `instance`, `weight`.\n"
                    },
                    "considerOdPricing": {
                        "type": "boolean"
                    },
                    "cpuCredits": {
                        "type": "string",
                        "description": "Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.\n"
                    },
                    "cpuOptions": {
                        "$ref": "#/types/spotinst:aws/ElastigroupCpuOptions:ElastigroupCpuOptions",
                        "description": "The CPU options for the instances that are launched within the group:\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The group description.\n"
                    },
                    "desiredCapacity": {
                        "type": "integer",
                        "description": "The desired number of instances the group should have at any time.\n"
                    },
                    "drainingTimeout": {
                        "type": "integer",
                        "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                    },
                    "ebsBlockDevices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupEbsBlockDevice:ElastigroupEbsBlockDevice"
                        }
                    },
                    "ebsOptimized": {
                        "type": "boolean",
                        "description": "Enable high bandwidth connectivity between instances and AWS’s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.\n"
                    },
                    "elasticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.\n"
                    },
                    "elasticLoadBalancers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Elastic Load Balancers names (ELB).\n"
                    },
                    "enableMonitoring": {
                        "type": "boolean",
                        "description": "Indicates whether monitoring is enabled for the instance.\n"
                    },
                    "ephemeralBlockDevices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupEphemeralBlockDevice:ElastigroupEphemeralBlockDevice"
                        }
                    },
                    "fallbackToOndemand": {
                        "type": "boolean",
                        "description": "In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.\n"
                    },
                    "healthCheckGracePeriod": {
                        "type": "integer",
                        "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n"
                    },
                    "healthCheckType": {
                        "type": "string",
                        "description": "The service that will perform health checks for the instance. Valid values: `\"ELB\"`, `\"HCS\"`, `\"TARGET_GROUP\"`, `\"MLB\"`, `\"EC2\"`, `\"MULTAI_TARGET_SET\"`, `\"MLB_RUNTIME\"`, `\"K8S_NODE\"`, `\"NOMAD_NODE\"`, `\"ECS_CLUSTER_INSTANCE\"`.\n"
                    },
                    "healthCheckUnhealthyDurationBeforeReplacement": {
                        "type": "integer",
                        "description": "The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).\n"
                    },
                    "iamInstanceProfile": {
                        "type": "string",
                        "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "The ID of the AMI used to launch the instance.\n"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupImage:ElastigroupImage"
                        },
                        "description": "An array of image objects. \nNote: Elastigroup can be configured with either imageId or images, but not both.\n"
                    },
                    "immediateOdRecoverThreshold": {
                        "type": "integer"
                    },
                    "instanceTypesOndemand": {
                        "type": "string",
                        "description": "The type of instance determines your instance's CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).\n"
                    },
                    "instanceTypesPreferredSpots": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.\n"
                    },
                    "instanceTypesSpots": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more instance types. Note: Cannot be defined if 'resourceRequirements' is defined.\n"
                    },
                    "instanceTypesWeights": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupInstanceTypesWeight:ElastigroupInstanceTypesWeight"
                        },
                        "description": "List of weights per instance type for weighted groups. Each object in the list should have the following attributes:\n"
                    },
                    "integrationBeanstalk": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationBeanstalk:ElastigroupIntegrationBeanstalk"
                    },
                    "integrationCodedeploy": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationCodedeploy:ElastigroupIntegrationCodedeploy",
                        "description": "Describes the [Code Deploy](https://aws.amazon.com/documentation/codedeploy/?id=docs_gateway) integration.\n"
                    },
                    "integrationDockerSwarm": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm",
                        "description": "Describes the [Docker Swarm](https://api.spotinst.com/integration-docs/elastigroup/container-management/docker-swarm/docker-swarm-integration/) integration.\n"
                    },
                    "integrationEcs": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationEcs:ElastigroupIntegrationEcs",
                        "description": "Describes the [EC2 Container Service](https://aws.amazon.com/documentation/ecs/?id=docs_gateway) integration.\n"
                    },
                    "integrationGitlab": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationGitlab:ElastigroupIntegrationGitlab",
                        "description": "Describes the [Gitlab](https://api.spotinst.com/integration-docs/gitlab/) integration.\n"
                    },
                    "integrationKubernetes": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes",
                        "description": "Describes the [Kubernetes](https://kubernetes.io/) integration.\n"
                    },
                    "integrationMesosphere": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationMesosphere:ElastigroupIntegrationMesosphere",
                        "description": "Describes the [Mesosphere](https://mesosphere.com/) integration.\n"
                    },
                    "integrationMultaiRuntime": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime",
                        "description": "Describes the [Multai Runtime](https://spotinst.com/) integration.\n"
                    },
                    "integrationNomad": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationNomad:ElastigroupIntegrationNomad",
                        "description": "Describes the [Nomad](https://www.nomadproject.io/) integration.\n"
                    },
                    "integrationRancher": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRancher:ElastigroupIntegrationRancher",
                        "description": "Describes the [Rancher](http://rancherlabs.com/) integration.\n"
                    },
                    "integrationRoute53": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRoute53:ElastigroupIntegrationRoute53",
                        "description": "Describes the [Route53](https://aws.amazon.com/documentation/route53/?id=docs_gateway) integration.\n"
                    },
                    "itfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupItf:ElastigroupItf"
                        }
                    },
                    "keyName": {
                        "type": "string",
                        "description": "The key name that should be used for the instance.\n"
                    },
                    "lifetimePeriod": {
                        "type": "string"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The maximum number of instances the group should have at any time.\n"
                    },
                    "metadataOptions": {
                        "$ref": "#/types/spotinst:aws/ElastigroupMetadataOptions:ElastigroupMetadataOptions",
                        "description": "Data that used to configure or manage the running instances:\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The minimum number of instances the group should have at any time.\n"
                    },
                    "minimumInstanceLifetime": {
                        "type": "integer",
                        "description": "Defines the preferred minimum instance lifetime in hours. Markets which comply with this preference will be prioritized. Optional values: 1, 3, 6, 12, 24.\n"
                    },
                    "multaiTargetSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupMultaiTargetSet:ElastigroupMultaiTargetSet"
                        },
                        "description": "Set of targets to register.\n"
                    },
                    "multipleMetrics": {
                        "$ref": "#/types/spotinst:aws/ElastigroupMultipleMetrics:ElastigroupMultipleMetrics"
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name.\n"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                        }
                    },
                    "onDemandTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Available ondemand instance types. Note: Either ondemand or onDemandTypes must be defined, but not both.\n"
                    },
                    "ondemandCount": {
                        "type": "integer",
                        "description": "Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.\n"
                    },
                    "orientation": {
                        "type": "string",
                        "description": "Select a prediction strategy. Valid values: `balanced`, `costOriented`, `equalAzDistribution`, `availabilityOriented`. You can read more in our documentation.\n"
                    },
                    "persistBlockDevices": {
                        "type": "boolean",
                        "description": "Boolean, should the instance maintain its Data volumes.\n"
                    },
                    "persistPrivateIp": {
                        "type": "boolean",
                        "description": "Boolean, should the instance maintain its private IP.\n"
                    },
                    "persistRootDevice": {
                        "type": "boolean",
                        "description": "Boolean, should the instance maintain its root device volumes.\n"
                    },
                    "placementTenancy": {
                        "type": "string",
                        "description": "Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used. Valid values: \"default\", \"dedicated\" .\n"
                    },
                    "preferredAvailabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.\nNote: Must be a sublist of `availability_zones` and `orientation` value must not be `\"equalAzDistribution\"`.\n"
                    },
                    "privateIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Private IPs to associate to the group instances.(e.g. \"172.1.1.0\"). Please note: This setting will only apply if persistence.persist_private_ip is set to true.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`.\nFor EC2 Classic instances:  `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The AWS region your group will be created in.\nNote: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).\n"
                    },
                    "resourceRequirements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupResourceRequirement:ElastigroupResourceRequirement"
                        },
                        "description": "Required instance attributes. Instance types will be selected based on these requirements.\n"
                    },
                    "resourceTagSpecifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupResourceTagSpecification:ElastigroupResourceTagSpecification"
                        },
                        "description": "User will specify which resources should be tagged with group tags.\n"
                    },
                    "revertToSpot": {
                        "$ref": "#/types/spotinst:aws/ElastigroupRevertToSpot:ElastigroupRevertToSpot",
                        "description": "Hold settings for strategy correction – replacing On-Demand for Spot instances. Supported Values: `\"never\"`, `\"always\"`, `\"timeWindow\"`\n"
                    },
                    "scalingDownPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                        }
                    },
                    "scalingStrategies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupScalingStrategy:ElastigroupScalingStrategy"
                        },
                        "description": "Set termination policy.\n"
                    },
                    "scalingTargetPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupScalingTargetPolicy:ElastigroupScalingTargetPolicy"
                        }
                    },
                    "scalingUpPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                        }
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupScheduledTask:ElastigroupScheduledTask"
                        }
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of associated security group IDS.\n"
                    },
                    "shutdownScript": {
                        "type": "string",
                        "description": "The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n"
                    },
                    "signals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupSignal:ElastigroupSignal"
                        }
                    },
                    "spotPercentage": {
                        "type": "integer",
                        "description": "The percentage of Spot instances that would spin up from the `desired_capacity` number.\n"
                    },
                    "statefulDeallocation": {
                        "$ref": "#/types/spotinst:aws/ElastigroupStatefulDeallocation:ElastigroupStatefulDeallocation"
                    },
                    "statefulInstanceActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupStatefulInstanceAction:ElastigroupStatefulInstanceAction"
                        }
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Strings of subnet identifiers.\nNote: When this parameter is set, `availability_zones` should be left unused.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupTag:ElastigroupTag"
                        },
                        "description": "A key/value mapping of tags to assign to the resource.\n"
                    },
                    "targetGroupArns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Target Group ARNs to register the instances to.\n"
                    },
                    "updatePolicy": {
                        "$ref": "#/types/spotinst:aws/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy"
                    },
                    "userData": {
                        "type": "string",
                        "description": "The user data to provide when launching the instance.\n"
                    },
                    "utilizeCommitments": {
                        "type": "boolean"
                    },
                    "utilizeReservedInstances": {
                        "type": "boolean",
                        "description": "In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.\n"
                    },
                    "waitForCapacity": {
                        "type": "integer",
                        "description": "Minimum number of instances in a 'HEALTHY' status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.\n"
                    },
                    "waitForCapacityTimeout": {
                        "type": "integer",
                        "description": "Time (seconds) to wait for instances to report a 'HEALTHY' status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:aws/managedInstance:ManagedInstance": {
            "properties": {
                "autoHealing": {
                    "type": "boolean"
                },
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceBlockDeviceMapping:ManagedInstanceBlockDeviceMapping"
                    }
                },
                "blockDevicesMode": {
                    "type": "string"
                },
                "cpuCredits": {
                    "type": "string"
                },
                "deletes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceDelete:ManagedInstanceDelete"
                    }
                },
                "description": {
                    "type": "string"
                },
                "drainingTimeout": {
                    "type": "integer"
                },
                "ebsOptimized": {
                    "type": "boolean"
                },
                "elasticIp": {
                    "type": "string"
                },
                "enableMonitoring": {
                    "type": "boolean"
                },
                "fallBackToOd": {
                    "type": "boolean"
                },
                "gracePeriod": {
                    "type": "integer"
                },
                "healthCheckType": {
                    "type": "string"
                },
                "iamInstanceProfile": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "instanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "integrationRoute53": {
                    "$ref": "#/types/spotinst:aws/ManagedInstanceIntegrationRoute53:ManagedInstanceIntegrationRoute53"
                },
                "keyPair": {
                    "type": "string"
                },
                "lifeCycle": {
                    "type": "string"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceLoadBalancer:ManagedInstanceLoadBalancer"
                    }
                },
                "managedInstanceAction": {
                    "$ref": "#/types/spotinst:aws/ManagedInstanceManagedInstanceAction:ManagedInstanceManagedInstanceAction"
                },
                "minimumInstanceLifetime": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceNetworkInterface:ManagedInstanceNetworkInterface"
                    }
                },
                "optimizationWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "orientation": {
                    "type": "string"
                },
                "persistBlockDevices": {
                    "type": "boolean"
                },
                "persistPrivateIp": {
                    "type": "boolean"
                },
                "persistRootDevice": {
                    "type": "boolean"
                },
                "placementTenancy": {
                    "type": "string"
                },
                "preferredType": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "product": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "resourceTagSpecifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceResourceTagSpecification:ManagedInstanceResourceTagSpecification"
                    }
                },
                "revertToSpot": {
                    "$ref": "#/types/spotinst:aws/ManagedInstanceRevertToSpot:ManagedInstanceRevertToSpot"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceScheduledTask:ManagedInstanceScheduledTask"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shutdownScript": {
                    "type": "string"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceTag:ManagedInstanceTag"
                    }
                },
                "unhealthyDuration": {
                    "type": "integer"
                },
                "userData": {
                    "type": "string"
                },
                "utilizeReservedInstances": {
                    "type": "boolean"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "ebsOptimized",
                "imageId",
                "instanceTypes",
                "name",
                "persistBlockDevices",
                "product",
                "subnetIds",
                "vpcId"
            ],
            "inputProperties": {
                "autoHealing": {
                    "type": "boolean"
                },
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceBlockDeviceMapping:ManagedInstanceBlockDeviceMapping"
                    }
                },
                "blockDevicesMode": {
                    "type": "string"
                },
                "cpuCredits": {
                    "type": "string"
                },
                "deletes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceDelete:ManagedInstanceDelete"
                    }
                },
                "description": {
                    "type": "string"
                },
                "drainingTimeout": {
                    "type": "integer"
                },
                "ebsOptimized": {
                    "type": "boolean"
                },
                "elasticIp": {
                    "type": "string"
                },
                "enableMonitoring": {
                    "type": "boolean"
                },
                "fallBackToOd": {
                    "type": "boolean"
                },
                "gracePeriod": {
                    "type": "integer"
                },
                "healthCheckType": {
                    "type": "string"
                },
                "iamInstanceProfile": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "instanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "integrationRoute53": {
                    "$ref": "#/types/spotinst:aws/ManagedInstanceIntegrationRoute53:ManagedInstanceIntegrationRoute53"
                },
                "keyPair": {
                    "type": "string"
                },
                "lifeCycle": {
                    "type": "string"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceLoadBalancer:ManagedInstanceLoadBalancer"
                    }
                },
                "managedInstanceAction": {
                    "$ref": "#/types/spotinst:aws/ManagedInstanceManagedInstanceAction:ManagedInstanceManagedInstanceAction"
                },
                "minimumInstanceLifetime": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceNetworkInterface:ManagedInstanceNetworkInterface"
                    }
                },
                "optimizationWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "orientation": {
                    "type": "string"
                },
                "persistBlockDevices": {
                    "type": "boolean"
                },
                "persistPrivateIp": {
                    "type": "boolean"
                },
                "persistRootDevice": {
                    "type": "boolean"
                },
                "placementTenancy": {
                    "type": "string"
                },
                "preferredType": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "product": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "resourceTagSpecifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceResourceTagSpecification:ManagedInstanceResourceTagSpecification"
                    }
                },
                "revertToSpot": {
                    "$ref": "#/types/spotinst:aws/ManagedInstanceRevertToSpot:ManagedInstanceRevertToSpot"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceScheduledTask:ManagedInstanceScheduledTask"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shutdownScript": {
                    "type": "string"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceTag:ManagedInstanceTag"
                    }
                },
                "unhealthyDuration": {
                    "type": "integer"
                },
                "userData": {
                    "type": "string"
                },
                "utilizeReservedInstances": {
                    "type": "boolean"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "imageId",
                "instanceTypes",
                "persistBlockDevices",
                "product",
                "subnetIds",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagedInstance resources.\n",
                "properties": {
                    "autoHealing": {
                        "type": "boolean"
                    },
                    "blockDeviceMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ManagedInstanceBlockDeviceMapping:ManagedInstanceBlockDeviceMapping"
                        }
                    },
                    "blockDevicesMode": {
                        "type": "string"
                    },
                    "cpuCredits": {
                        "type": "string"
                    },
                    "deletes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ManagedInstanceDelete:ManagedInstanceDelete"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "drainingTimeout": {
                        "type": "integer"
                    },
                    "ebsOptimized": {
                        "type": "boolean"
                    },
                    "elasticIp": {
                        "type": "string"
                    },
                    "enableMonitoring": {
                        "type": "boolean"
                    },
                    "fallBackToOd": {
                        "type": "boolean"
                    },
                    "gracePeriod": {
                        "type": "integer"
                    },
                    "healthCheckType": {
                        "type": "string"
                    },
                    "iamInstanceProfile": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "instanceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "integrationRoute53": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceIntegrationRoute53:ManagedInstanceIntegrationRoute53"
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "lifeCycle": {
                        "type": "string"
                    },
                    "loadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ManagedInstanceLoadBalancer:ManagedInstanceLoadBalancer"
                        }
                    },
                    "managedInstanceAction": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceManagedInstanceAction:ManagedInstanceManagedInstanceAction"
                    },
                    "minimumInstanceLifetime": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ManagedInstanceNetworkInterface:ManagedInstanceNetworkInterface"
                        }
                    },
                    "optimizationWindows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "orientation": {
                        "type": "string"
                    },
                    "persistBlockDevices": {
                        "type": "boolean"
                    },
                    "persistPrivateIp": {
                        "type": "boolean"
                    },
                    "persistRootDevice": {
                        "type": "boolean"
                    },
                    "placementTenancy": {
                        "type": "string"
                    },
                    "preferredType": {
                        "type": "string"
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceTagSpecifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ManagedInstanceResourceTagSpecification:ManagedInstanceResourceTagSpecification"
                        }
                    },
                    "revertToSpot": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceRevertToSpot:ManagedInstanceRevertToSpot"
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ManagedInstanceScheduledTask:ManagedInstanceScheduledTask"
                        }
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shutdownScript": {
                        "type": "string"
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ManagedInstanceTag:ManagedInstanceTag"
                        }
                    },
                    "unhealthyDuration": {
                        "type": "integer"
                    },
                    "userData": {
                        "type": "string"
                    },
                    "utilizeReservedInstances": {
                        "type": "boolean"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:aws/mrScalar:MrScalar": {
            "description": "Provides a Spotinst AWS MrScaler resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### New Strategy\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst sample_MrScaler_01 = new spotinst.aws.MrScalar(\"sample-MrScaler-01\", {\n    additionalInfo: \"{'test':'more information'}\",\n    additionalPrimarySecurityGroups: [\"sg-456321\"],\n    additionalReplicaSecurityGroups: [\"sg-123654\"],\n    applications: [\n        {\n            name: \"Ganglia\",\n            version: \"1.0\",\n        },\n        {\n            name: \"Hadoop\",\n        },\n        {\n            args: [\n                \"fake\",\n                \"args\",\n            ],\n            name: \"Pig\",\n        },\n    ],\n    availabilityZones: [\"us-west-2a:subnet-123456\"],\n    bootstrapActionsFiles: [{\n        bucket: \"sample-emr-test\",\n        key: \"bootstrap-actions.json\",\n    }],\n    configurationsFiles: [{\n        bucket: \"example-bucket\",\n        key: \"configurations.json\",\n    }],\n    coreDesiredCapacity: 1,\n    coreEbsBlockDevices: [{\n        sizeInGb: 40,\n        volumeType: \"gp2\",\n        volumesPerInstance: 2,\n    }],\n    coreEbsOptimized: false,\n    coreInstanceTypes: [\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    coreLifecycle: \"ON_DEMAND\",\n    coreMaxSize: 1,\n    coreMinSize: 1,\n    coreUnit: \"instance\",\n    customAmiId: \"ami-123456\",\n    description: \"Testing MrScaler creation\",\n    ec2KeyName: \"test-key\",\n    instanceWeights: [\n        {\n            instanceType: \"t2.small\",\n            weightedCapacity: 10,\n        },\n        {\n            instanceType: \"t2.medium\",\n            weightedCapacity: 90,\n        },\n    ],\n    jobFlowRole: \"EMR_EC2_ExampleRole\",\n    keepJobFlowAlive: true,\n    logUri: \"s3://example-logs\",\n    managedPrimarySecurityGroup: \"sg-123456\",\n    managedReplicaSecurityGroup: \"sg-987654\",\n    masterEbsBlockDevices: [{\n        sizeInGb: 30,\n        volumeType: \"gp2\",\n        volumesPerInstance: 1,\n    }],\n    masterEbsOptimized: true,\n    masterInstanceTypes: [\"c3.xlarge\"],\n    masterLifecycle: \"SPOT\",\n    masterTarget: 1,\n    provisioningTimeout: {\n        timeout: 15,\n        timeoutAction: \"terminateAndRetry\",\n    },\n    region: \"us-west-2\",\n    releaseLabel: \"emr-5.17.0\",\n    repoUpgradeOnBoot: \"NONE\",\n    retries: 2,\n    securityConfig: \"example-config\",\n    serviceAccessSecurityGroup: \"access-example\",\n    serviceRole: \"example-role\",\n    stepsFiles: [{\n        bucket: \"example-bucket\",\n        key: \"steps.json\",\n    }],\n    strategy: \"new\",\n    tags: [{\n        key: \"Creator\",\n        value: \"Pulumi\",\n    }],\n    taskDesiredCapacity: 1,\n    taskEbsBlockDevices: [{\n        sizeInGb: 40,\n        volumeType: \"gp2\",\n        volumesPerInstance: 2,\n    }],\n    taskEbsOptimized: false,\n    taskInstanceTypes: [\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    taskLifecycle: \"SPOT\",\n    taskMaxSize: 30,\n    taskMinSize: 0,\n    taskUnit: \"instance\",\n    terminationProtected: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nsample__mr_scaler_01 = spotinst.aws.MrScalar(\"sample-MrScaler-01\",\n    additional_info=\"{'test':'more information'}\",\n    additional_primary_security_groups=[\"sg-456321\"],\n    additional_replica_security_groups=[\"sg-123654\"],\n    applications=[\n        spotinst.aws.MrScalarApplicationArgs(\n            name=\"Ganglia\",\n            version=\"1.0\",\n        ),\n        spotinst.aws.MrScalarApplicationArgs(\n            name=\"Hadoop\",\n        ),\n        spotinst.aws.MrScalarApplicationArgs(\n            args=[\n                \"fake\",\n                \"args\",\n            ],\n            name=\"Pig\",\n        ),\n    ],\n    availability_zones=[\"us-west-2a:subnet-123456\"],\n    bootstrap_actions_files=[spotinst.aws.MrScalarBootstrapActionsFileArgs(\n        bucket=\"sample-emr-test\",\n        key=\"bootstrap-actions.json\",\n    )],\n    configurations_files=[spotinst.aws.MrScalarConfigurationsFileArgs(\n        bucket=\"example-bucket\",\n        key=\"configurations.json\",\n    )],\n    core_desired_capacity=1,\n    core_ebs_block_devices=[spotinst.aws.MrScalarCoreEbsBlockDeviceArgs(\n        size_in_gb=40,\n        volume_type=\"gp2\",\n        volumes_per_instance=2,\n    )],\n    core_ebs_optimized=False,\n    core_instance_types=[\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    core_lifecycle=\"ON_DEMAND\",\n    core_max_size=1,\n    core_min_size=1,\n    core_unit=\"instance\",\n    custom_ami_id=\"ami-123456\",\n    description=\"Testing MrScaler creation\",\n    ec2_key_name=\"test-key\",\n    instance_weights=[\n        spotinst.aws.MrScalarInstanceWeightArgs(\n            instance_type=\"t2.small\",\n            weighted_capacity=10,\n        ),\n        spotinst.aws.MrScalarInstanceWeightArgs(\n            instance_type=\"t2.medium\",\n            weighted_capacity=90,\n        ),\n    ],\n    job_flow_role=\"EMR_EC2_ExampleRole\",\n    keep_job_flow_alive=True,\n    log_uri=\"s3://example-logs\",\n    managed_primary_security_group=\"sg-123456\",\n    managed_replica_security_group=\"sg-987654\",\n    master_ebs_block_devices=[spotinst.aws.MrScalarMasterEbsBlockDeviceArgs(\n        size_in_gb=30,\n        volume_type=\"gp2\",\n        volumes_per_instance=1,\n    )],\n    master_ebs_optimized=True,\n    master_instance_types=[\"c3.xlarge\"],\n    master_lifecycle=\"SPOT\",\n    master_target=1,\n    provisioning_timeout=spotinst.aws.MrScalarProvisioningTimeoutArgs(\n        timeout=15,\n        timeout_action=\"terminateAndRetry\",\n    ),\n    region=\"us-west-2\",\n    release_label=\"emr-5.17.0\",\n    repo_upgrade_on_boot=\"NONE\",\n    retries=2,\n    security_config=\"example-config\",\n    service_access_security_group=\"access-example\",\n    service_role=\"example-role\",\n    steps_files=[spotinst.aws.MrScalarStepsFileArgs(\n        bucket=\"example-bucket\",\n        key=\"steps.json\",\n    )],\n    strategy=\"new\",\n    tags=[spotinst.aws.MrScalarTagArgs(\n        key=\"Creator\",\n        value=\"Pulumi\",\n    )],\n    task_desired_capacity=1,\n    task_ebs_block_devices=[spotinst.aws.MrScalarTaskEbsBlockDeviceArgs(\n        size_in_gb=40,\n        volume_type=\"gp2\",\n        volumes_per_instance=2,\n    )],\n    task_ebs_optimized=False,\n    task_instance_types=[\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    task_lifecycle=\"SPOT\",\n    task_max_size=30,\n    task_min_size=0,\n    task_unit=\"instance\",\n    termination_protected=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var sample_MrScaler_01 = new SpotInst.Aws.MrScalar(\"sample-MrScaler-01\", new()\n    {\n        AdditionalInfo = \"{'test':'more information'}\",\n        AdditionalPrimarySecurityGroups = new[]\n        {\n            \"sg-456321\",\n        },\n        AdditionalReplicaSecurityGroups = new[]\n        {\n            \"sg-123654\",\n        },\n        Applications = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarApplicationArgs\n            {\n                Name = \"Ganglia\",\n                Version = \"1.0\",\n            },\n            new SpotInst.Aws.Inputs.MrScalarApplicationArgs\n            {\n                Name = \"Hadoop\",\n            },\n            new SpotInst.Aws.Inputs.MrScalarApplicationArgs\n            {\n                Args = new[]\n                {\n                    \"fake\",\n                    \"args\",\n                },\n                Name = \"Pig\",\n            },\n        },\n        AvailabilityZones = new[]\n        {\n            \"us-west-2a:subnet-123456\",\n        },\n        BootstrapActionsFiles = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarBootstrapActionsFileArgs\n            {\n                Bucket = \"sample-emr-test\",\n                Key = \"bootstrap-actions.json\",\n            },\n        },\n        ConfigurationsFiles = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarConfigurationsFileArgs\n            {\n                Bucket = \"example-bucket\",\n                Key = \"configurations.json\",\n            },\n        },\n        CoreDesiredCapacity = 1,\n        CoreEbsBlockDevices = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarCoreEbsBlockDeviceArgs\n            {\n                SizeInGb = 40,\n                VolumeType = \"gp2\",\n                VolumesPerInstance = 2,\n            },\n        },\n        CoreEbsOptimized = false,\n        CoreInstanceTypes = new[]\n        {\n            \"c3.xlarge\",\n            \"c4.xlarge\",\n        },\n        CoreLifecycle = \"ON_DEMAND\",\n        CoreMaxSize = 1,\n        CoreMinSize = 1,\n        CoreUnit = \"instance\",\n        CustomAmiId = \"ami-123456\",\n        Description = \"Testing MrScaler creation\",\n        Ec2KeyName = \"test-key\",\n        InstanceWeights = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarInstanceWeightArgs\n            {\n                InstanceType = \"t2.small\",\n                WeightedCapacity = 10,\n            },\n            new SpotInst.Aws.Inputs.MrScalarInstanceWeightArgs\n            {\n                InstanceType = \"t2.medium\",\n                WeightedCapacity = 90,\n            },\n        },\n        JobFlowRole = \"EMR_EC2_ExampleRole\",\n        KeepJobFlowAlive = true,\n        LogUri = \"s3://example-logs\",\n        ManagedPrimarySecurityGroup = \"sg-123456\",\n        ManagedReplicaSecurityGroup = \"sg-987654\",\n        MasterEbsBlockDevices = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarMasterEbsBlockDeviceArgs\n            {\n                SizeInGb = 30,\n                VolumeType = \"gp2\",\n                VolumesPerInstance = 1,\n            },\n        },\n        MasterEbsOptimized = true,\n        MasterInstanceTypes = new[]\n        {\n            \"c3.xlarge\",\n        },\n        MasterLifecycle = \"SPOT\",\n        MasterTarget = 1,\n        ProvisioningTimeout = new SpotInst.Aws.Inputs.MrScalarProvisioningTimeoutArgs\n        {\n            Timeout = 15,\n            TimeoutAction = \"terminateAndRetry\",\n        },\n        Region = \"us-west-2\",\n        ReleaseLabel = \"emr-5.17.0\",\n        RepoUpgradeOnBoot = \"NONE\",\n        Retries = 2,\n        SecurityConfig = \"example-config\",\n        ServiceAccessSecurityGroup = \"access-example\",\n        ServiceRole = \"example-role\",\n        StepsFiles = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarStepsFileArgs\n            {\n                Bucket = \"example-bucket\",\n                Key = \"steps.json\",\n            },\n        },\n        Strategy = \"new\",\n        Tags = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarTagArgs\n            {\n                Key = \"Creator\",\n                Value = \"Pulumi\",\n            },\n        },\n        TaskDesiredCapacity = 1,\n        TaskEbsBlockDevices = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarTaskEbsBlockDeviceArgs\n            {\n                SizeInGb = 40,\n                VolumeType = \"gp2\",\n                VolumesPerInstance = 2,\n            },\n        },\n        TaskEbsOptimized = false,\n        TaskInstanceTypes = new[]\n        {\n            \"c3.xlarge\",\n            \"c4.xlarge\",\n        },\n        TaskLifecycle = \"SPOT\",\n        TaskMaxSize = 30,\n        TaskMinSize = 0,\n        TaskUnit = \"instance\",\n        TerminationProtected = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewMrScalar(ctx, \"sample-MrScaler-01\", \u0026aws.MrScalarArgs{\n\t\t\tAdditionalInfo: pulumi.String(\"{'test':'more information'}\"),\n\t\t\tAdditionalPrimarySecurityGroups: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sg-456321\"),\n\t\t\t},\n\t\t\tAdditionalReplicaSecurityGroups: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sg-123654\"),\n\t\t\t},\n\t\t\tApplications: aws.MrScalarApplicationArray{\n\t\t\t\t\u0026aws.MrScalarApplicationArgs{\n\t\t\t\t\tName:    pulumi.String(\"Ganglia\"),\n\t\t\t\t\tVersion: pulumi.String(\"1.0\"),\n\t\t\t\t},\n\t\t\t\t\u0026aws.MrScalarApplicationArgs{\n\t\t\t\t\tName: pulumi.String(\"Hadoop\"),\n\t\t\t\t},\n\t\t\t\t\u0026aws.MrScalarApplicationArgs{\n\t\t\t\t\tArgs: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"fake\"),\n\t\t\t\t\t\tpulumi.String(\"args\"),\n\t\t\t\t\t},\n\t\t\t\t\tName: pulumi.String(\"Pig\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAvailabilityZones: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"us-west-2a:subnet-123456\"),\n\t\t\t},\n\t\t\tBootstrapActionsFiles: aws.MrScalarBootstrapActionsFileArray{\n\t\t\t\t\u0026aws.MrScalarBootstrapActionsFileArgs{\n\t\t\t\t\tBucket: pulumi.String(\"sample-emr-test\"),\n\t\t\t\t\tKey:    pulumi.String(\"bootstrap-actions.json\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tConfigurationsFiles: aws.MrScalarConfigurationsFileArray{\n\t\t\t\t\u0026aws.MrScalarConfigurationsFileArgs{\n\t\t\t\t\tBucket: pulumi.String(\"example-bucket\"),\n\t\t\t\t\tKey:    pulumi.String(\"configurations.json\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tCoreDesiredCapacity: pulumi.Int(1),\n\t\t\tCoreEbsBlockDevices: aws.MrScalarCoreEbsBlockDeviceArray{\n\t\t\t\t\u0026aws.MrScalarCoreEbsBlockDeviceArgs{\n\t\t\t\t\tSizeInGb:           pulumi.Int(40),\n\t\t\t\t\tVolumeType:         pulumi.String(\"gp2\"),\n\t\t\t\t\tVolumesPerInstance: pulumi.Int(2),\n\t\t\t\t},\n\t\t\t},\n\t\t\tCoreEbsOptimized: pulumi.Bool(false),\n\t\t\tCoreInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"c3.xlarge\"),\n\t\t\t\tpulumi.String(\"c4.xlarge\"),\n\t\t\t},\n\t\t\tCoreLifecycle: pulumi.String(\"ON_DEMAND\"),\n\t\t\tCoreMaxSize:   pulumi.Int(1),\n\t\t\tCoreMinSize:   pulumi.Int(1),\n\t\t\tCoreUnit:      pulumi.String(\"instance\"),\n\t\t\tCustomAmiId:   pulumi.String(\"ami-123456\"),\n\t\t\tDescription:   pulumi.String(\"Testing MrScaler creation\"),\n\t\t\tEc2KeyName:    pulumi.String(\"test-key\"),\n\t\t\tInstanceWeights: aws.MrScalarInstanceWeightArray{\n\t\t\t\t\u0026aws.MrScalarInstanceWeightArgs{\n\t\t\t\t\tInstanceType:     pulumi.String(\"t2.small\"),\n\t\t\t\t\tWeightedCapacity: pulumi.Int(10),\n\t\t\t\t},\n\t\t\t\t\u0026aws.MrScalarInstanceWeightArgs{\n\t\t\t\t\tInstanceType:     pulumi.String(\"t2.medium\"),\n\t\t\t\t\tWeightedCapacity: pulumi.Int(90),\n\t\t\t\t},\n\t\t\t},\n\t\t\tJobFlowRole:                 pulumi.String(\"EMR_EC2_ExampleRole\"),\n\t\t\tKeepJobFlowAlive:            pulumi.Bool(true),\n\t\t\tLogUri:                      pulumi.String(\"s3://example-logs\"),\n\t\t\tManagedPrimarySecurityGroup: pulumi.String(\"sg-123456\"),\n\t\t\tManagedReplicaSecurityGroup: pulumi.String(\"sg-987654\"),\n\t\t\tMasterEbsBlockDevices: aws.MrScalarMasterEbsBlockDeviceArray{\n\t\t\t\t\u0026aws.MrScalarMasterEbsBlockDeviceArgs{\n\t\t\t\t\tSizeInGb:           pulumi.Int(30),\n\t\t\t\t\tVolumeType:         pulumi.String(\"gp2\"),\n\t\t\t\t\tVolumesPerInstance: pulumi.Int(1),\n\t\t\t\t},\n\t\t\t},\n\t\t\tMasterEbsOptimized: pulumi.Bool(true),\n\t\t\tMasterInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"c3.xlarge\"),\n\t\t\t},\n\t\t\tMasterLifecycle: pulumi.String(\"SPOT\"),\n\t\t\tMasterTarget:    pulumi.Int(1),\n\t\t\tProvisioningTimeout: \u0026aws.MrScalarProvisioningTimeoutArgs{\n\t\t\t\tTimeout:       pulumi.Int(15),\n\t\t\t\tTimeoutAction: pulumi.String(\"terminateAndRetry\"),\n\t\t\t},\n\t\t\tRegion:                     pulumi.String(\"us-west-2\"),\n\t\t\tReleaseLabel:               pulumi.String(\"emr-5.17.0\"),\n\t\t\tRepoUpgradeOnBoot:          pulumi.String(\"NONE\"),\n\t\t\tRetries:                    pulumi.Int(2),\n\t\t\tSecurityConfig:             pulumi.String(\"example-config\"),\n\t\t\tServiceAccessSecurityGroup: pulumi.String(\"access-example\"),\n\t\t\tServiceRole:                pulumi.String(\"example-role\"),\n\t\t\tStepsFiles: aws.MrScalarStepsFileArray{\n\t\t\t\t\u0026aws.MrScalarStepsFileArgs{\n\t\t\t\t\tBucket: pulumi.String(\"example-bucket\"),\n\t\t\t\t\tKey:    pulumi.String(\"steps.json\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tStrategy: pulumi.String(\"new\"),\n\t\t\tTags: aws.MrScalarTagArray{\n\t\t\t\t\u0026aws.MrScalarTagArgs{\n\t\t\t\t\tKey:   pulumi.String(\"Creator\"),\n\t\t\t\t\tValue: pulumi.String(\"Pulumi\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaskDesiredCapacity: pulumi.Int(1),\n\t\t\tTaskEbsBlockDevices: aws.MrScalarTaskEbsBlockDeviceArray{\n\t\t\t\t\u0026aws.MrScalarTaskEbsBlockDeviceArgs{\n\t\t\t\t\tSizeInGb:           pulumi.Int(40),\n\t\t\t\t\tVolumeType:         pulumi.String(\"gp2\"),\n\t\t\t\t\tVolumesPerInstance: pulumi.Int(2),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaskEbsOptimized: pulumi.Bool(false),\n\t\t\tTaskInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"c3.xlarge\"),\n\t\t\t\tpulumi.String(\"c4.xlarge\"),\n\t\t\t},\n\t\t\tTaskLifecycle:        pulumi.String(\"SPOT\"),\n\t\t\tTaskMaxSize:          pulumi.Int(30),\n\t\t\tTaskMinSize:          pulumi.Int(0),\n\t\t\tTaskUnit:             pulumi.String(\"instance\"),\n\t\t\tTerminationProtected: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.aws.MrScalar;\nimport com.pulumi.spotinst.aws.MrScalarArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarApplicationArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarBootstrapActionsFileArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarConfigurationsFileArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarCoreEbsBlockDeviceArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarInstanceWeightArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarMasterEbsBlockDeviceArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarProvisioningTimeoutArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarStepsFileArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarTagArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarTaskEbsBlockDeviceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var sample_MrScaler_01 = new MrScalar(\"sample-MrScaler-01\", MrScalarArgs.builder()        \n            .additionalInfo(\"{'test':'more information'}\")\n            .additionalPrimarySecurityGroups(\"sg-456321\")\n            .additionalReplicaSecurityGroups(\"sg-123654\")\n            .applications(            \n                MrScalarApplicationArgs.builder()\n                    .name(\"Ganglia\")\n                    .version(\"1.0\")\n                    .build(),\n                MrScalarApplicationArgs.builder()\n                    .name(\"Hadoop\")\n                    .build(),\n                MrScalarApplicationArgs.builder()\n                    .args(                    \n                        \"fake\",\n                        \"args\")\n                    .name(\"Pig\")\n                    .build())\n            .availabilityZones(\"us-west-2a:subnet-123456\")\n            .bootstrapActionsFiles(MrScalarBootstrapActionsFileArgs.builder()\n                .bucket(\"sample-emr-test\")\n                .key(\"bootstrap-actions.json\")\n                .build())\n            .configurationsFiles(MrScalarConfigurationsFileArgs.builder()\n                .bucket(\"example-bucket\")\n                .key(\"configurations.json\")\n                .build())\n            .coreDesiredCapacity(1)\n            .coreEbsBlockDevices(MrScalarCoreEbsBlockDeviceArgs.builder()\n                .sizeInGb(40)\n                .volumeType(\"gp2\")\n                .volumesPerInstance(2)\n                .build())\n            .coreEbsOptimized(false)\n            .coreInstanceTypes(            \n                \"c3.xlarge\",\n                \"c4.xlarge\")\n            .coreLifecycle(\"ON_DEMAND\")\n            .coreMaxSize(1)\n            .coreMinSize(1)\n            .coreUnit(\"instance\")\n            .customAmiId(\"ami-123456\")\n            .description(\"Testing MrScaler creation\")\n            .ec2KeyName(\"test-key\")\n            .instanceWeights(            \n                MrScalarInstanceWeightArgs.builder()\n                    .instanceType(\"t2.small\")\n                    .weightedCapacity(10)\n                    .build(),\n                MrScalarInstanceWeightArgs.builder()\n                    .instanceType(\"t2.medium\")\n                    .weightedCapacity(90)\n                    .build())\n            .jobFlowRole(\"EMR_EC2_ExampleRole\")\n            .keepJobFlowAlive(true)\n            .logUri(\"s3://example-logs\")\n            .managedPrimarySecurityGroup(\"sg-123456\")\n            .managedReplicaSecurityGroup(\"sg-987654\")\n            .masterEbsBlockDevices(MrScalarMasterEbsBlockDeviceArgs.builder()\n                .sizeInGb(30)\n                .volumeType(\"gp2\")\n                .volumesPerInstance(1)\n                .build())\n            .masterEbsOptimized(true)\n            .masterInstanceTypes(\"c3.xlarge\")\n            .masterLifecycle(\"SPOT\")\n            .masterTarget(1)\n            .provisioningTimeout(MrScalarProvisioningTimeoutArgs.builder()\n                .timeout(15)\n                .timeoutAction(\"terminateAndRetry\")\n                .build())\n            .region(\"us-west-2\")\n            .releaseLabel(\"emr-5.17.0\")\n            .repoUpgradeOnBoot(\"NONE\")\n            .retries(2)\n            .securityConfig(\"example-config\")\n            .serviceAccessSecurityGroup(\"access-example\")\n            .serviceRole(\"example-role\")\n            .stepsFiles(MrScalarStepsFileArgs.builder()\n                .bucket(\"example-bucket\")\n                .key(\"steps.json\")\n                .build())\n            .strategy(\"new\")\n            .tags(MrScalarTagArgs.builder()\n                .key(\"Creator\")\n                .value(\"Pulumi\")\n                .build())\n            .taskDesiredCapacity(1)\n            .taskEbsBlockDevices(MrScalarTaskEbsBlockDeviceArgs.builder()\n                .sizeInGb(40)\n                .volumeType(\"gp2\")\n                .volumesPerInstance(2)\n                .build())\n            .taskEbsOptimized(false)\n            .taskInstanceTypes(            \n                \"c3.xlarge\",\n                \"c4.xlarge\")\n            .taskLifecycle(\"SPOT\")\n            .taskMaxSize(30)\n            .taskMinSize(0)\n            .taskUnit(\"instance\")\n            .terminationProtected(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  sample-MrScaler-01:\n    type: spotinst:aws:MrScalar\n    properties:\n      additionalInfo: '{''test'':''more information''}'\n      additionalPrimarySecurityGroups:\n        - sg-456321\n      additionalReplicaSecurityGroups:\n        - sg-123654\n      applications:\n        - name: Ganglia\n          version: '1.0'\n        - name: Hadoop\n        - args:\n            - fake\n            - args\n          name: Pig\n      availabilityZones:\n        - us-west-2a:subnet-123456\n      bootstrapActionsFiles:\n        - bucket: sample-emr-test\n          key: bootstrap-actions.json\n      configurationsFiles:\n        - bucket: example-bucket\n          key: configurations.json\n      coreDesiredCapacity: 1\n      coreEbsBlockDevices:\n        - sizeInGb: 40\n          volumeType: gp2\n          volumesPerInstance: 2\n      coreEbsOptimized: false\n      # --- CORE GROUP -------------\n      coreInstanceTypes:\n        - c3.xlarge\n        - c4.xlarge\n      coreLifecycle: ON_DEMAND\n      coreMaxSize: 1\n      coreMinSize: 1\n      coreUnit: instance\n      # --- OPTONAL COMPUTE -----\n      customAmiId: ami-123456\n      description: Testing MrScaler creation\n      ec2KeyName: test-key\n      instanceWeights:\n        - instanceType: t2.small\n          weightedCapacity: 10\n        - instanceType: t2.medium\n          weightedCapacity: 90\n      jobFlowRole: EMR_EC2_ExampleRole\n      keepJobFlowAlive: true\n      # --- CLUSTER ------------\n      logUri: s3://example-logs\n      managedPrimarySecurityGroup: sg-123456\n      managedReplicaSecurityGroup: sg-987654\n      masterEbsBlockDevices:\n        - sizeInGb: 30\n          volumeType: gp2\n          volumesPerInstance: 1\n      masterEbsOptimized: true\n      # --- MASTER GROUP -------------\n      masterInstanceTypes:\n        - c3.xlarge\n      masterLifecycle: SPOT\n      masterTarget: 1\n      provisioningTimeout:\n        timeout: 15\n        timeoutAction: terminateAndRetry\n      region: us-west-2\n      releaseLabel: emr-5.17.0\n      repoUpgradeOnBoot: NONE\n      retries: 2\n      securityConfig: example-config\n      serviceAccessSecurityGroup: access-example\n      serviceRole: example-role\n      stepsFiles:\n        - bucket: example-bucket\n          key: steps.json\n      strategy: new\n      # --- TAGS -------------------\n      tags:\n        - key: Creator\n          value: Pulumi\n      taskDesiredCapacity: 1\n      taskEbsBlockDevices:\n        - sizeInGb: 40\n          volumeType: gp2\n          volumesPerInstance: 2\n      taskEbsOptimized: false\n      # --- TASK GROUP -------------\n      taskInstanceTypes:\n        - c3.xlarge\n        - c4.xlarge\n      taskLifecycle: SPOT\n      taskMaxSize: 30\n      taskMinSize: 0\n      taskUnit: instance\n      terminationProtected: false\n```\n{{% /example %}}\n{{% example %}}\n### Clone Strategy\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nexport = async () =\u003e {\n    const sample_MrScaler_01 = new spotinst.aws.MrScalar(\"sample-MrScaler-01\", {\n        availabilityZones: [\"us-west-2a:subnet-12345678\"],\n        clusterId: \"j-123456789\",\n        coreDesiredCapacity: 1,\n        coreEbsBlockDevices: [{\n            sizeInGb: 40,\n            volumeType: \"gp2\",\n            volumesPerInstance: 2,\n        }],\n        coreEbsOptimized: false,\n        coreInstanceTypes: [\n            \"c3.xlarge\",\n            \"c4.xlarge\",\n        ],\n        coreLifecycle: \"ON_DEMAND\",\n        coreMaxSize: 1,\n        coreMinSize: 1,\n        coreUnit: \"instance\",\n        description: \"Testing MrScaler creation\",\n        exposeClusterId: true,\n        masterEbsBlockDevices: [{\n            sizeInGb: 30,\n            volumeType: \"gp2\",\n            volumesPerInstance: 1,\n        }],\n        masterEbsOptimized: true,\n        masterInstanceTypes: [\"c3.xlarge\"],\n        masterLifecycle: \"SPOT\",\n        masterTarget: 1,\n        region: \"us-west-2\",\n        strategy: \"clone\",\n        tags: [{\n            key: \"Creator\",\n            value: \"Pulumi\",\n        }],\n        taskDesiredCapacity: 1,\n        taskEbsBlockDevices: [{\n            sizeInGb: 40,\n            volumeType: \"gp2\",\n            volumesPerInstance: 2,\n        }],\n        taskEbsOptimized: false,\n        taskInstanceTypes: [\n            \"c3.xlarge\",\n            \"c4.xlarge\",\n        ],\n        taskLifecycle: \"SPOT\",\n        taskMaxSize: 30,\n        taskMinSize: 0,\n        taskScalingDownPolicies: [{\n            actionType: \"\",\n            adjustment: \"1\",\n            cooldown: 60,\n            dimensions: {\n                name: \"name-1\",\n                value: \"value-1\",\n            },\n            evaluationPeriods: 10,\n            maxTargetCapacity: \"1\",\n            maximum: \"10\",\n            metricName: \"CPUUtilization\",\n            minimum: \"0\",\n            namespace: \"AWS/EC2\",\n            operator: \"gt\",\n            period: 60,\n            policyName: \"policy-name\",\n            statistic: \"average\",\n            target: \"5\",\n            threshold: 10,\n            unit: \"\",\n        }],\n        taskUnit: \"instance\",\n    });\n    return {\n        \"mrscaler-name\": sample_MrScaler_01.name,\n        \"mrscaler-created-cluster-id\": sample_MrScaler_01.outputClusterId,\n    };\n}\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nsample__mr_scaler_01 = spotinst.aws.MrScalar(\"sample-MrScaler-01\",\n    availability_zones=[\"us-west-2a:subnet-12345678\"],\n    cluster_id=\"j-123456789\",\n    core_desired_capacity=1,\n    core_ebs_block_devices=[spotinst.aws.MrScalarCoreEbsBlockDeviceArgs(\n        size_in_gb=40,\n        volume_type=\"gp2\",\n        volumes_per_instance=2,\n    )],\n    core_ebs_optimized=False,\n    core_instance_types=[\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    core_lifecycle=\"ON_DEMAND\",\n    core_max_size=1,\n    core_min_size=1,\n    core_unit=\"instance\",\n    description=\"Testing MrScaler creation\",\n    expose_cluster_id=True,\n    master_ebs_block_devices=[spotinst.aws.MrScalarMasterEbsBlockDeviceArgs(\n        size_in_gb=30,\n        volume_type=\"gp2\",\n        volumes_per_instance=1,\n    )],\n    master_ebs_optimized=True,\n    master_instance_types=[\"c3.xlarge\"],\n    master_lifecycle=\"SPOT\",\n    master_target=1,\n    region=\"us-west-2\",\n    strategy=\"clone\",\n    tags=[spotinst.aws.MrScalarTagArgs(\n        key=\"Creator\",\n        value=\"Pulumi\",\n    )],\n    task_desired_capacity=1,\n    task_ebs_block_devices=[spotinst.aws.MrScalarTaskEbsBlockDeviceArgs(\n        size_in_gb=40,\n        volume_type=\"gp2\",\n        volumes_per_instance=2,\n    )],\n    task_ebs_optimized=False,\n    task_instance_types=[\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    task_lifecycle=\"SPOT\",\n    task_max_size=30,\n    task_min_size=0,\n    task_scaling_down_policies=[spotinst.aws.MrScalarTaskScalingDownPolicyArgs(\n        action_type=\"\",\n        adjustment=\"1\",\n        cooldown=60,\n        dimensions={\n            \"name\": \"name-1\",\n            \"value\": \"value-1\",\n        },\n        evaluation_periods=10,\n        max_target_capacity=\"1\",\n        maximum=\"10\",\n        metric_name=\"CPUUtilization\",\n        minimum=\"0\",\n        namespace=\"AWS/EC2\",\n        operator=\"gt\",\n        period=60,\n        policy_name=\"policy-name\",\n        statistic=\"average\",\n        target=\"5\",\n        threshold=10,\n        unit=\"\",\n    )],\n    task_unit=\"instance\")\npulumi.export(\"mrscaler-name\", sample__mr_scaler_01.name)\npulumi.export(\"mrscaler-created-cluster-id\", sample__mr_scaler_01.output_cluster_id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var sample_MrScaler_01 = new SpotInst.Aws.MrScalar(\"sample-MrScaler-01\", new()\n    {\n        AvailabilityZones = new[]\n        {\n            \"us-west-2a:subnet-12345678\",\n        },\n        ClusterId = \"j-123456789\",\n        CoreDesiredCapacity = 1,\n        CoreEbsBlockDevices = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarCoreEbsBlockDeviceArgs\n            {\n                SizeInGb = 40,\n                VolumeType = \"gp2\",\n                VolumesPerInstance = 2,\n            },\n        },\n        CoreEbsOptimized = false,\n        CoreInstanceTypes = new[]\n        {\n            \"c3.xlarge\",\n            \"c4.xlarge\",\n        },\n        CoreLifecycle = \"ON_DEMAND\",\n        CoreMaxSize = 1,\n        CoreMinSize = 1,\n        CoreUnit = \"instance\",\n        Description = \"Testing MrScaler creation\",\n        ExposeClusterId = true,\n        MasterEbsBlockDevices = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarMasterEbsBlockDeviceArgs\n            {\n                SizeInGb = 30,\n                VolumeType = \"gp2\",\n                VolumesPerInstance = 1,\n            },\n        },\n        MasterEbsOptimized = true,\n        MasterInstanceTypes = new[]\n        {\n            \"c3.xlarge\",\n        },\n        MasterLifecycle = \"SPOT\",\n        MasterTarget = 1,\n        Region = \"us-west-2\",\n        Strategy = \"clone\",\n        Tags = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarTagArgs\n            {\n                Key = \"Creator\",\n                Value = \"Pulumi\",\n            },\n        },\n        TaskDesiredCapacity = 1,\n        TaskEbsBlockDevices = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarTaskEbsBlockDeviceArgs\n            {\n                SizeInGb = 40,\n                VolumeType = \"gp2\",\n                VolumesPerInstance = 2,\n            },\n        },\n        TaskEbsOptimized = false,\n        TaskInstanceTypes = new[]\n        {\n            \"c3.xlarge\",\n            \"c4.xlarge\",\n        },\n        TaskLifecycle = \"SPOT\",\n        TaskMaxSize = 30,\n        TaskMinSize = 0,\n        TaskScalingDownPolicies = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarTaskScalingDownPolicyArgs\n            {\n                ActionType = \"\",\n                Adjustment = \"1\",\n                Cooldown = 60,\n                Dimensions = \n                {\n                    { \"name\", \"name-1\" },\n                    { \"value\", \"value-1\" },\n                },\n                EvaluationPeriods = 10,\n                MaxTargetCapacity = \"1\",\n                Maximum = \"10\",\n                MetricName = \"CPUUtilization\",\n                Minimum = \"0\",\n                Namespace = \"AWS/EC2\",\n                Operator = \"gt\",\n                Period = 60,\n                PolicyName = \"policy-name\",\n                Statistic = \"average\",\n                Target = \"5\",\n                Threshold = 10,\n                Unit = \"\",\n            },\n        },\n        TaskUnit = \"instance\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"mrscaler-name\"] = sample_MrScaler_01.Name,\n        [\"mrscaler-created-cluster-id\"] = sample_MrScaler_01.OutputClusterId,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewMrScalar(ctx, \"sample-MrScaler-01\", \u0026aws.MrScalarArgs{\n\t\t\tAvailabilityZones: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"us-west-2a:subnet-12345678\"),\n\t\t\t},\n\t\t\tClusterId:           pulumi.String(\"j-123456789\"),\n\t\t\tCoreDesiredCapacity: pulumi.Int(1),\n\t\t\tCoreEbsBlockDevices: aws.MrScalarCoreEbsBlockDeviceArray{\n\t\t\t\t\u0026aws.MrScalarCoreEbsBlockDeviceArgs{\n\t\t\t\t\tSizeInGb:           pulumi.Int(40),\n\t\t\t\t\tVolumeType:         pulumi.String(\"gp2\"),\n\t\t\t\t\tVolumesPerInstance: pulumi.Int(2),\n\t\t\t\t},\n\t\t\t},\n\t\t\tCoreEbsOptimized: pulumi.Bool(false),\n\t\t\tCoreInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"c3.xlarge\"),\n\t\t\t\tpulumi.String(\"c4.xlarge\"),\n\t\t\t},\n\t\t\tCoreLifecycle:   pulumi.String(\"ON_DEMAND\"),\n\t\t\tCoreMaxSize:     pulumi.Int(1),\n\t\t\tCoreMinSize:     pulumi.Int(1),\n\t\t\tCoreUnit:        pulumi.String(\"instance\"),\n\t\t\tDescription:     pulumi.String(\"Testing MrScaler creation\"),\n\t\t\tExposeClusterId: pulumi.Bool(true),\n\t\t\tMasterEbsBlockDevices: aws.MrScalarMasterEbsBlockDeviceArray{\n\t\t\t\t\u0026aws.MrScalarMasterEbsBlockDeviceArgs{\n\t\t\t\t\tSizeInGb:           pulumi.Int(30),\n\t\t\t\t\tVolumeType:         pulumi.String(\"gp2\"),\n\t\t\t\t\tVolumesPerInstance: pulumi.Int(1),\n\t\t\t\t},\n\t\t\t},\n\t\t\tMasterEbsOptimized: pulumi.Bool(true),\n\t\t\tMasterInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"c3.xlarge\"),\n\t\t\t},\n\t\t\tMasterLifecycle: pulumi.String(\"SPOT\"),\n\t\t\tMasterTarget:    pulumi.Int(1),\n\t\t\tRegion:          pulumi.String(\"us-west-2\"),\n\t\t\tStrategy:        pulumi.String(\"clone\"),\n\t\t\tTags: aws.MrScalarTagArray{\n\t\t\t\t\u0026aws.MrScalarTagArgs{\n\t\t\t\t\tKey:   pulumi.String(\"Creator\"),\n\t\t\t\t\tValue: pulumi.String(\"Pulumi\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaskDesiredCapacity: pulumi.Int(1),\n\t\t\tTaskEbsBlockDevices: aws.MrScalarTaskEbsBlockDeviceArray{\n\t\t\t\t\u0026aws.MrScalarTaskEbsBlockDeviceArgs{\n\t\t\t\t\tSizeInGb:           pulumi.Int(40),\n\t\t\t\t\tVolumeType:         pulumi.String(\"gp2\"),\n\t\t\t\t\tVolumesPerInstance: pulumi.Int(2),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaskEbsOptimized: pulumi.Bool(false),\n\t\t\tTaskInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"c3.xlarge\"),\n\t\t\t\tpulumi.String(\"c4.xlarge\"),\n\t\t\t},\n\t\t\tTaskLifecycle: pulumi.String(\"SPOT\"),\n\t\t\tTaskMaxSize:   pulumi.Int(30),\n\t\t\tTaskMinSize:   pulumi.Int(0),\n\t\t\tTaskScalingDownPolicies: aws.MrScalarTaskScalingDownPolicyArray{\n\t\t\t\t\u0026aws.MrScalarTaskScalingDownPolicyArgs{\n\t\t\t\t\tActionType: pulumi.String(\"\"),\n\t\t\t\t\tAdjustment: pulumi.String(\"1\"),\n\t\t\t\t\tCooldown:   pulumi.Int(60),\n\t\t\t\t\tDimensions: pulumi.Map{\n\t\t\t\t\t\t\"name\":  pulumi.Any(\"name-1\"),\n\t\t\t\t\t\t\"value\": pulumi.Any(\"value-1\"),\n\t\t\t\t\t},\n\t\t\t\t\tEvaluationPeriods: pulumi.Int(10),\n\t\t\t\t\tMaxTargetCapacity: pulumi.String(\"1\"),\n\t\t\t\t\tMaximum:           pulumi.String(\"10\"),\n\t\t\t\t\tMetricName:        pulumi.String(\"CPUUtilization\"),\n\t\t\t\t\tMinimum:           pulumi.String(\"0\"),\n\t\t\t\t\tNamespace:         pulumi.String(\"AWS/EC2\"),\n\t\t\t\t\tOperator:          pulumi.String(\"gt\"),\n\t\t\t\t\tPeriod:            pulumi.Int(60),\n\t\t\t\t\tPolicyName:        pulumi.String(\"policy-name\"),\n\t\t\t\t\tStatistic:         pulumi.String(\"average\"),\n\t\t\t\t\tTarget:            pulumi.String(\"5\"),\n\t\t\t\t\tThreshold:         pulumi.Float64(10),\n\t\t\t\t\tUnit:              pulumi.String(\"\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaskUnit: pulumi.String(\"instance\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"mrscaler-name\", sample_MrScaler_01.Name)\n\t\tctx.Export(\"mrscaler-created-cluster-id\", sample_MrScaler_01.OutputClusterId)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.aws.MrScalar;\nimport com.pulumi.spotinst.aws.MrScalarArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarCoreEbsBlockDeviceArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarMasterEbsBlockDeviceArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarTagArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarTaskEbsBlockDeviceArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarTaskScalingDownPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var sample_MrScaler_01 = new MrScalar(\"sample-MrScaler-01\", MrScalarArgs.builder()        \n            .availabilityZones(\"us-west-2a:subnet-12345678\")\n            .clusterId(\"j-123456789\")\n            .coreDesiredCapacity(1)\n            .coreEbsBlockDevices(MrScalarCoreEbsBlockDeviceArgs.builder()\n                .sizeInGb(40)\n                .volumeType(\"gp2\")\n                .volumesPerInstance(2)\n                .build())\n            .coreEbsOptimized(false)\n            .coreInstanceTypes(            \n                \"c3.xlarge\",\n                \"c4.xlarge\")\n            .coreLifecycle(\"ON_DEMAND\")\n            .coreMaxSize(1)\n            .coreMinSize(1)\n            .coreUnit(\"instance\")\n            .description(\"Testing MrScaler creation\")\n            .exposeClusterId(true)\n            .masterEbsBlockDevices(MrScalarMasterEbsBlockDeviceArgs.builder()\n                .sizeInGb(30)\n                .volumeType(\"gp2\")\n                .volumesPerInstance(1)\n                .build())\n            .masterEbsOptimized(true)\n            .masterInstanceTypes(\"c3.xlarge\")\n            .masterLifecycle(\"SPOT\")\n            .masterTarget(1)\n            .region(\"us-west-2\")\n            .strategy(\"clone\")\n            .tags(MrScalarTagArgs.builder()\n                .key(\"Creator\")\n                .value(\"Pulumi\")\n                .build())\n            .taskDesiredCapacity(1)\n            .taskEbsBlockDevices(MrScalarTaskEbsBlockDeviceArgs.builder()\n                .sizeInGb(40)\n                .volumeType(\"gp2\")\n                .volumesPerInstance(2)\n                .build())\n            .taskEbsOptimized(false)\n            .taskInstanceTypes(            \n                \"c3.xlarge\",\n                \"c4.xlarge\")\n            .taskLifecycle(\"SPOT\")\n            .taskMaxSize(30)\n            .taskMinSize(0)\n            .taskScalingDownPolicies(MrScalarTaskScalingDownPolicyArgs.builder()\n                .actionType(\"\")\n                .adjustment(\"1\")\n                .cooldown(60)\n                .dimensions(Map.ofEntries(\n                    Map.entry(\"name\", \"name-1\"),\n                    Map.entry(\"value\", \"value-1\")\n                ))\n                .evaluationPeriods(10)\n                .maxTargetCapacity(1)\n                .maximum(10)\n                .metricName(\"CPUUtilization\")\n                .minimum(0)\n                .namespace(\"AWS/EC2\")\n                .operator(\"gt\")\n                .period(60)\n                .policyName(\"policy-name\")\n                .statistic(\"average\")\n                .target(5)\n                .threshold(10)\n                .unit(\"\")\n                .build())\n            .taskUnit(\"instance\")\n            .build());\n\n        ctx.export(\"mrscaler-name\", sample_MrScaler_01.name());\n        ctx.export(\"mrscaler-created-cluster-id\", sample_MrScaler_01.outputClusterId());\n    }\n}\n```\n```yaml\nresources:\n  sample-MrScaler-01:\n    type: spotinst:aws:MrScalar\n    properties:\n      availabilityZones:\n        - us-west-2a:subnet-12345678\n      clusterId: j-123456789\n      coreDesiredCapacity: 1\n      coreEbsBlockDevices:\n        - sizeInGb: 40\n          volumeType: gp2\n          volumesPerInstance: 2\n      coreEbsOptimized: false\n      # --- CORE GROUP -------------\n      coreInstanceTypes:\n        - c3.xlarge\n        - c4.xlarge\n      coreLifecycle: ON_DEMAND\n      coreMaxSize: 1\n      coreMinSize: 1\n      coreUnit: instance\n      description: Testing MrScaler creation\n      exposeClusterId: true\n      masterEbsBlockDevices:\n        - sizeInGb: 30\n          volumeType: gp2\n          volumesPerInstance: 1\n      masterEbsOptimized: true\n      # --- MASTER GROUP -------------\n      masterInstanceTypes:\n        - c3.xlarge\n      masterLifecycle: SPOT\n      masterTarget: 1\n      region: us-west-2\n      strategy: clone\n      # --- TAGS -------------------\n      tags:\n        - key: Creator\n          value: Pulumi\n      taskDesiredCapacity: 1\n      taskEbsBlockDevices:\n        - sizeInGb: 40\n          volumeType: gp2\n          volumesPerInstance: 2\n      taskEbsOptimized: false\n      # --- TASK GROUP -------------\n      taskInstanceTypes:\n        - c3.xlarge\n        - c4.xlarge\n      taskLifecycle: SPOT\n      taskMaxSize: 30\n      taskMinSize: 0\n      # --- TASK SCALING POLICY ------\n      taskScalingDownPolicies:\n        - actionType:\n          adjustment: '1'\n          cooldown: 60\n          dimensions:\n            name: name-1\n            value: value-1\n          evaluationPeriods: 10\n          maxTargetCapacity: 1\n          maximum: 10\n          metricName: CPUUtilization\n          minimum: 0\n          namespace: AWS/EC2\n          operator: gt\n          period: 60\n          policyName: policy-name\n          statistic: average\n          target: 5\n          threshold: 10\n          unit:\n      taskUnit: instance\noutputs:\n  mrscaler-name: ${[\"sample-MrScaler-01\"].name}\n  mrscaler-created-cluster-id: ${[\"sample-MrScaler-01\"].outputClusterId}\n```\n{{% /example %}}\n{{% example %}}\n### Wrap Strategy\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example_scaler_2 = new spotinst.aws.MrScalar(\"example-scaler-2\", {\n    clusterId: \"j-27UVDEHXL4OQM\",\n    description: \"created by Pulumi\",\n    region: \"us-west-2\",\n    strategy: \"wrap\",\n    taskDesiredCapacity: 2,\n    taskEbsBlockDevices: [{\n        sizeInGb: 20,\n        volumeType: \"gp2\",\n        volumesPerInstance: 1,\n    }],\n    taskInstanceTypes: [\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    taskLifecycle: \"SPOT\",\n    taskMaxSize: 4,\n    taskMinSize: 0,\n    taskUnit: \"instance\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample_scaler_2 = spotinst.aws.MrScalar(\"example-scaler-2\",\n    cluster_id=\"j-27UVDEHXL4OQM\",\n    description=\"created by Pulumi\",\n    region=\"us-west-2\",\n    strategy=\"wrap\",\n    task_desired_capacity=2,\n    task_ebs_block_devices=[spotinst.aws.MrScalarTaskEbsBlockDeviceArgs(\n        size_in_gb=20,\n        volume_type=\"gp2\",\n        volumes_per_instance=1,\n    )],\n    task_instance_types=[\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    task_lifecycle=\"SPOT\",\n    task_max_size=4,\n    task_min_size=0,\n    task_unit=\"instance\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example_scaler_2 = new SpotInst.Aws.MrScalar(\"example-scaler-2\", new()\n    {\n        ClusterId = \"j-27UVDEHXL4OQM\",\n        Description = \"created by Pulumi\",\n        Region = \"us-west-2\",\n        Strategy = \"wrap\",\n        TaskDesiredCapacity = 2,\n        TaskEbsBlockDevices = new[]\n        {\n            new SpotInst.Aws.Inputs.MrScalarTaskEbsBlockDeviceArgs\n            {\n                SizeInGb = 20,\n                VolumeType = \"gp2\",\n                VolumesPerInstance = 1,\n            },\n        },\n        TaskInstanceTypes = new[]\n        {\n            \"c3.xlarge\",\n            \"c4.xlarge\",\n        },\n        TaskLifecycle = \"SPOT\",\n        TaskMaxSize = 4,\n        TaskMinSize = 0,\n        TaskUnit = \"instance\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewMrScalar(ctx, \"example-scaler-2\", \u0026aws.MrScalarArgs{\n\t\t\tClusterId:           pulumi.String(\"j-27UVDEHXL4OQM\"),\n\t\t\tDescription:         pulumi.String(\"created by Pulumi\"),\n\t\t\tRegion:              pulumi.String(\"us-west-2\"),\n\t\t\tStrategy:            pulumi.String(\"wrap\"),\n\t\t\tTaskDesiredCapacity: pulumi.Int(2),\n\t\t\tTaskEbsBlockDevices: aws.MrScalarTaskEbsBlockDeviceArray{\n\t\t\t\t\u0026aws.MrScalarTaskEbsBlockDeviceArgs{\n\t\t\t\t\tSizeInGb:           pulumi.Int(20),\n\t\t\t\t\tVolumeType:         pulumi.String(\"gp2\"),\n\t\t\t\t\tVolumesPerInstance: pulumi.Int(1),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaskInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"c3.xlarge\"),\n\t\t\t\tpulumi.String(\"c4.xlarge\"),\n\t\t\t},\n\t\t\tTaskLifecycle: pulumi.String(\"SPOT\"),\n\t\t\tTaskMaxSize:   pulumi.Int(4),\n\t\t\tTaskMinSize:   pulumi.Int(0),\n\t\t\tTaskUnit:      pulumi.String(\"instance\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.aws.MrScalar;\nimport com.pulumi.spotinst.aws.MrScalarArgs;\nimport com.pulumi.spotinst.aws.inputs.MrScalarTaskEbsBlockDeviceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example_scaler_2 = new MrScalar(\"example-scaler-2\", MrScalarArgs.builder()        \n            .clusterId(\"j-27UVDEHXL4OQM\")\n            .description(\"created by Pulumi\")\n            .region(\"us-west-2\")\n            .strategy(\"wrap\")\n            .taskDesiredCapacity(2)\n            .taskEbsBlockDevices(MrScalarTaskEbsBlockDeviceArgs.builder()\n                .sizeInGb(20)\n                .volumeType(\"gp2\")\n                .volumesPerInstance(1)\n                .build())\n            .taskInstanceTypes(            \n                \"c3.xlarge\",\n                \"c4.xlarge\")\n            .taskLifecycle(\"SPOT\")\n            .taskMaxSize(4)\n            .taskMinSize(0)\n            .taskUnit(\"instance\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example-scaler-2:\n    type: spotinst:aws:MrScalar\n    properties:\n      clusterId: j-27UVDEHXL4OQM\n      description: created by Pulumi\n      region: us-west-2\n      strategy: wrap\n      taskDesiredCapacity: 2\n      taskEbsBlockDevices:\n        - sizeInGb: 20\n          volumeType: gp2\n          volumesPerInstance: 1\n      # --- TASK GROUP -------------\n      taskInstanceTypes:\n        - c3.xlarge\n        - c4.xlarge\n      taskLifecycle: SPOT\n      taskMaxSize: 4\n      taskMinSize: 0\n      taskUnit: instance\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "additionalInfo": {
                    "type": "string",
                    "description": "This is meta information about third-party applications that third-party vendors use for testing purposes.\n"
                },
                "additionalPrimarySecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of additional Amazon EC2 security group IDs for the master node.\n"
                },
                "additionalReplicaSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of additional Amazon EC2 security group IDs for the core and task nodes.\n"
                },
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarApplication:MrScalarApplication"
                    },
                    "description": "A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster\n"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of AZs and their subnet Ids. See example above for usage.\n"
                },
                "bootstrapActionsFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarBootstrapActionsFile:MrScalarBootstrapActionsFile"
                    },
                    "description": "Describes path to S3 file containing description of bootstrap actions. [More Information](https://api.spotinst.com/elastigroup-for-aws/services-integrations/elastic-mapreduce/import-an-emr-cluster/advanced/)\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The MrScaler cluster id.\n"
                },
                "configurationsFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarConfigurationsFile:MrScalarConfigurationsFile"
                    },
                    "description": "Describes path to S3 file containing description of configurations. [More Information](https://api.spotinst.com/elastigroup-for-aws/services-integrations/elastic-mapreduce/import-an-emr-cluster/advanced/)\n"
                },
                "coreDesiredCapacity": {
                    "type": "integer",
                    "description": "amount of instances in core group.\n"
                },
                "coreEbsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarCoreEbsBlockDevice:MrScalarCoreEbsBlockDevice"
                    },
                    "description": "This determines the ebs configuration for your core group instances. Only a single block is allowed.\n"
                },
                "coreEbsOptimized": {
                    "type": "boolean",
                    "description": "EBS Optimization setting for instances in group.\n"
                },
                "coreInstanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The MrScaler instance types for the core nodes.\n"
                },
                "coreLifecycle": {
                    "type": "string",
                    "description": "The MrScaler lifecycle for instances in core group. Allowed values are 'SPOT' and 'ON_DEMAND'.\n"
                },
                "coreMaxSize": {
                    "type": "integer",
                    "description": "maximal amount of instances in core group.\n"
                },
                "coreMinSize": {
                    "type": "integer",
                    "description": "The minimal amount of instances in core group.\n"
                },
                "coreScalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarCoreScalingDownPolicy:MrScalarCoreScalingDownPolicy"
                    },
                    "description": "Each `*_scaling_*_policy` supports the following:\n"
                },
                "coreScalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarCoreScalingUpPolicy:MrScalarCoreScalingUpPolicy"
                    }
                },
                "coreUnit": {
                    "type": "string",
                    "description": "Unit of task group for target, min and max. The unit could be `instance` or `weight`. instance - amount of instances. weight - amount of vCPU.\n"
                },
                "customAmiId": {
                    "type": "string",
                    "description": "The ID of a custom Amazon EBS-backed Linux AMI if the cluster uses a custom AMI.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The MrScaler description.\n"
                },
                "ebsRootVolumeSize": {
                    "type": "integer"
                },
                "ec2KeyName": {
                    "type": "string",
                    "description": "The name of an Amazon EC2 key pair that can be used to ssh to the master node.\n"
                },
                "exposeClusterId": {
                    "type": "boolean",
                    "description": "Allow the `cluster_id` to set a provider output variable.\n"
                },
                "instanceWeights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarInstanceWeight:MrScalarInstanceWeight"
                    },
                    "description": "Describes the instance and weights. Check out [Elastigroup Weighted Instances](https://api.spotinst.com/elastigroup-for-aws/concepts/general-concepts/elastigroup-capacity-instances-or-weighted) for more info.\n"
                },
                "jobFlowRole": {
                    "type": "string",
                    "description": "The IAM role that was specified when the job flow was launched. The EC2 instances of the job flow assume this role.\n"
                },
                "keepJobFlowAlive": {
                    "type": "boolean",
                    "description": "Specifies whether the cluster should remain available after completing all steps.\n"
                },
                "logUri": {
                    "type": "string",
                    "description": "The path to the Amazon S3 location where logs for this cluster are stored.\n"
                },
                "managedPrimarySecurityGroup": {
                    "type": "string",
                    "description": "EMR Managed Security group that will be set to the primary instance group.\n"
                },
                "managedReplicaSecurityGroup": {
                    "type": "string",
                    "description": "EMR Managed Security group that will be set to the replica instance group.\n"
                },
                "masterEbsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarMasterEbsBlockDevice:MrScalarMasterEbsBlockDevice"
                    },
                    "description": "This determines the ebs configuration for your master group instances. Only a single block is allowed.\n"
                },
                "masterEbsOptimized": {
                    "type": "boolean",
                    "description": "EBS Optimization setting for instances in group.\n"
                },
                "masterInstanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The MrScaler instance types for the master nodes.\n"
                },
                "masterLifecycle": {
                    "type": "string",
                    "description": "The MrScaler lifecycle for instances in master group. Allowed values are 'SPOT' and 'ON_DEMAND'.\n"
                },
                "masterTarget": {
                    "type": "integer",
                    "description": "Number of instances in the master group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The MrScaler name.\n"
                },
                "outputClusterId": {
                    "type": "string"
                },
                "provisioningTimeout": {
                    "$ref": "#/types/spotinst:aws/MrScalarProvisioningTimeout:MrScalarProvisioningTimeout"
                },
                "region": {
                    "type": "string",
                    "description": "The MrScaler region.\n"
                },
                "releaseLabel": {
                    "type": "string"
                },
                "repoUpgradeOnBoot": {
                    "type": "string",
                    "description": "Applies only when `custom_ami_id` is used. Specifies the type of updates that are applied from the Amazon Linux AMI package repositories when an instance boots using the AMI. Possible values include: `SECURITY`, `NONE`.\n"
                },
                "retries": {
                    "type": "integer",
                    "description": "Specifies the maximum number of times a capacity provisioning should be retried if the provisioning timeout is exceeded. Valid values: `1-5`.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarScheduledTask:MrScalarScheduledTask"
                    },
                    "description": "An array of scheduled tasks.\n"
                },
                "securityConfig": {
                    "type": "string",
                    "description": "The name of the security configuration applied to the cluster.\n"
                },
                "serviceAccessSecurityGroup": {
                    "type": "string",
                    "description": "The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.\n"
                },
                "serviceRole": {
                    "type": "string",
                    "description": "The IAM role that will be assumed by the Amazon EMR service to access AWS resources on your behalf.\n"
                },
                "stepsFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarStepsFile:MrScalarStepsFile"
                    },
                    "description": "Steps from S3.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The MrScaler strategy. Allowed values are `new` `clone` and `wrap`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTag:MrScalarTag"
                    },
                    "description": "A list of tags to assign to the resource. You may define multiple tags.\n"
                },
                "taskDesiredCapacity": {
                    "type": "integer",
                    "description": "amount of instances in task group.\n"
                },
                "taskEbsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTaskEbsBlockDevice:MrScalarTaskEbsBlockDevice"
                    },
                    "description": "This determines the ebs configuration for your task group instances. Only a single block is allowed.\n"
                },
                "taskEbsOptimized": {
                    "type": "boolean",
                    "description": "EBS Optimization setting for instances in group.\n"
                },
                "taskInstanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The MrScaler instance types for the task nodes.\n"
                },
                "taskLifecycle": {
                    "type": "string",
                    "description": "The MrScaler lifecycle for instances in task group. Allowed values are 'SPOT' and 'ON_DEMAND'.\n"
                },
                "taskMaxSize": {
                    "type": "integer",
                    "description": "maximal amount of instances in task group.\n"
                },
                "taskMinSize": {
                    "type": "integer",
                    "description": "The minimal amount of instances in task group.\n"
                },
                "taskScalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTaskScalingDownPolicy:MrScalarTaskScalingDownPolicy"
                    },
                    "description": "Possible core group scaling policies (Clone, New strategies):\n"
                },
                "taskScalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTaskScalingUpPolicy:MrScalarTaskScalingUpPolicy"
                    }
                },
                "taskUnit": {
                    "type": "string",
                    "description": "Unit of task group for target, min and max. The unit could be `instance` or `weight`. instance - amount of instances. weight - amount of vCPU.\n"
                },
                "terminationPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTerminationPolicy:MrScalarTerminationPolicy"
                    },
                    "description": "Allows defining termination policies for EMR clusters based on CloudWatch Metrics.\n"
                },
                "terminationProtected": {
                    "type": "boolean",
                    "description": "Specifies whether the Amazon EC2 instances in the cluster are protected from termination by API calls, user intervention, or in the event of a job-flow error.\n"
                },
                "visibleToAllUsers": {
                    "type": "boolean",
                    "deprecationMessage": "This field has been removed from our API and is no longer functional."
                }
            },
            "required": [
                "name",
                "outputClusterId",
                "strategy"
            ],
            "inputProperties": {
                "additionalInfo": {
                    "type": "string",
                    "description": "This is meta information about third-party applications that third-party vendors use for testing purposes.\n"
                },
                "additionalPrimarySecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of additional Amazon EC2 security group IDs for the master node.\n"
                },
                "additionalReplicaSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of additional Amazon EC2 security group IDs for the core and task nodes.\n"
                },
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarApplication:MrScalarApplication"
                    },
                    "description": "A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster\n"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of AZs and their subnet Ids. See example above for usage.\n"
                },
                "bootstrapActionsFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarBootstrapActionsFile:MrScalarBootstrapActionsFile"
                    },
                    "description": "Describes path to S3 file containing description of bootstrap actions. [More Information](https://api.spotinst.com/elastigroup-for-aws/services-integrations/elastic-mapreduce/import-an-emr-cluster/advanced/)\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The MrScaler cluster id.\n",
                    "willReplaceOnChanges": true
                },
                "configurationsFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarConfigurationsFile:MrScalarConfigurationsFile"
                    },
                    "description": "Describes path to S3 file containing description of configurations. [More Information](https://api.spotinst.com/elastigroup-for-aws/services-integrations/elastic-mapreduce/import-an-emr-cluster/advanced/)\n"
                },
                "coreDesiredCapacity": {
                    "type": "integer",
                    "description": "amount of instances in core group.\n"
                },
                "coreEbsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarCoreEbsBlockDevice:MrScalarCoreEbsBlockDevice"
                    },
                    "description": "This determines the ebs configuration for your core group instances. Only a single block is allowed.\n"
                },
                "coreEbsOptimized": {
                    "type": "boolean",
                    "description": "EBS Optimization setting for instances in group.\n"
                },
                "coreInstanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The MrScaler instance types for the core nodes.\n"
                },
                "coreLifecycle": {
                    "type": "string",
                    "description": "The MrScaler lifecycle for instances in core group. Allowed values are 'SPOT' and 'ON_DEMAND'.\n"
                },
                "coreMaxSize": {
                    "type": "integer",
                    "description": "maximal amount of instances in core group.\n"
                },
                "coreMinSize": {
                    "type": "integer",
                    "description": "The minimal amount of instances in core group.\n"
                },
                "coreScalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarCoreScalingDownPolicy:MrScalarCoreScalingDownPolicy"
                    },
                    "description": "Each `*_scaling_*_policy` supports the following:\n"
                },
                "coreScalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarCoreScalingUpPolicy:MrScalarCoreScalingUpPolicy"
                    }
                },
                "coreUnit": {
                    "type": "string",
                    "description": "Unit of task group for target, min and max. The unit could be `instance` or `weight`. instance - amount of instances. weight - amount of vCPU.\n",
                    "willReplaceOnChanges": true
                },
                "customAmiId": {
                    "type": "string",
                    "description": "The ID of a custom Amazon EBS-backed Linux AMI if the cluster uses a custom AMI.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The MrScaler description.\n"
                },
                "ebsRootVolumeSize": {
                    "type": "integer"
                },
                "ec2KeyName": {
                    "type": "string",
                    "description": "The name of an Amazon EC2 key pair that can be used to ssh to the master node.\n"
                },
                "exposeClusterId": {
                    "type": "boolean",
                    "description": "Allow the `cluster_id` to set a provider output variable.\n"
                },
                "instanceWeights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarInstanceWeight:MrScalarInstanceWeight"
                    },
                    "description": "Describes the instance and weights. Check out [Elastigroup Weighted Instances](https://api.spotinst.com/elastigroup-for-aws/concepts/general-concepts/elastigroup-capacity-instances-or-weighted) for more info.\n"
                },
                "jobFlowRole": {
                    "type": "string",
                    "description": "The IAM role that was specified when the job flow was launched. The EC2 instances of the job flow assume this role.\n"
                },
                "keepJobFlowAlive": {
                    "type": "boolean",
                    "description": "Specifies whether the cluster should remain available after completing all steps.\n"
                },
                "logUri": {
                    "type": "string",
                    "description": "The path to the Amazon S3 location where logs for this cluster are stored.\n"
                },
                "managedPrimarySecurityGroup": {
                    "type": "string",
                    "description": "EMR Managed Security group that will be set to the primary instance group.\n"
                },
                "managedReplicaSecurityGroup": {
                    "type": "string",
                    "description": "EMR Managed Security group that will be set to the replica instance group.\n"
                },
                "masterEbsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarMasterEbsBlockDevice:MrScalarMasterEbsBlockDevice"
                    },
                    "description": "This determines the ebs configuration for your master group instances. Only a single block is allowed.\n"
                },
                "masterEbsOptimized": {
                    "type": "boolean",
                    "description": "EBS Optimization setting for instances in group.\n"
                },
                "masterInstanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The MrScaler instance types for the master nodes.\n"
                },
                "masterLifecycle": {
                    "type": "string",
                    "description": "The MrScaler lifecycle for instances in master group. Allowed values are 'SPOT' and 'ON_DEMAND'.\n"
                },
                "masterTarget": {
                    "type": "integer",
                    "description": "Number of instances in the master group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The MrScaler name.\n"
                },
                "provisioningTimeout": {
                    "$ref": "#/types/spotinst:aws/MrScalarProvisioningTimeout:MrScalarProvisioningTimeout"
                },
                "region": {
                    "type": "string",
                    "description": "The MrScaler region.\n"
                },
                "releaseLabel": {
                    "type": "string"
                },
                "repoUpgradeOnBoot": {
                    "type": "string",
                    "description": "Applies only when `custom_ami_id` is used. Specifies the type of updates that are applied from the Amazon Linux AMI package repositories when an instance boots using the AMI. Possible values include: `SECURITY`, `NONE`.\n"
                },
                "retries": {
                    "type": "integer",
                    "description": "Specifies the maximum number of times a capacity provisioning should be retried if the provisioning timeout is exceeded. Valid values: `1-5`.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarScheduledTask:MrScalarScheduledTask"
                    },
                    "description": "An array of scheduled tasks.\n"
                },
                "securityConfig": {
                    "type": "string",
                    "description": "The name of the security configuration applied to the cluster.\n"
                },
                "serviceAccessSecurityGroup": {
                    "type": "string",
                    "description": "The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.\n"
                },
                "serviceRole": {
                    "type": "string",
                    "description": "The IAM role that will be assumed by the Amazon EMR service to access AWS resources on your behalf.\n"
                },
                "stepsFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarStepsFile:MrScalarStepsFile"
                    },
                    "description": "Steps from S3.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The MrScaler strategy. Allowed values are `new` `clone` and `wrap`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTag:MrScalarTag"
                    },
                    "description": "A list of tags to assign to the resource. You may define multiple tags.\n"
                },
                "taskDesiredCapacity": {
                    "type": "integer",
                    "description": "amount of instances in task group.\n"
                },
                "taskEbsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTaskEbsBlockDevice:MrScalarTaskEbsBlockDevice"
                    },
                    "description": "This determines the ebs configuration for your task group instances. Only a single block is allowed.\n"
                },
                "taskEbsOptimized": {
                    "type": "boolean",
                    "description": "EBS Optimization setting for instances in group.\n"
                },
                "taskInstanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The MrScaler instance types for the task nodes.\n"
                },
                "taskLifecycle": {
                    "type": "string",
                    "description": "The MrScaler lifecycle for instances in task group. Allowed values are 'SPOT' and 'ON_DEMAND'.\n"
                },
                "taskMaxSize": {
                    "type": "integer",
                    "description": "maximal amount of instances in task group.\n"
                },
                "taskMinSize": {
                    "type": "integer",
                    "description": "The minimal amount of instances in task group.\n"
                },
                "taskScalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTaskScalingDownPolicy:MrScalarTaskScalingDownPolicy"
                    },
                    "description": "Possible core group scaling policies (Clone, New strategies):\n"
                },
                "taskScalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTaskScalingUpPolicy:MrScalarTaskScalingUpPolicy"
                    }
                },
                "taskUnit": {
                    "type": "string",
                    "description": "Unit of task group for target, min and max. The unit could be `instance` or `weight`. instance - amount of instances. weight - amount of vCPU.\n",
                    "willReplaceOnChanges": true
                },
                "terminationPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTerminationPolicy:MrScalarTerminationPolicy"
                    },
                    "description": "Allows defining termination policies for EMR clusters based on CloudWatch Metrics.\n"
                },
                "terminationProtected": {
                    "type": "boolean",
                    "description": "Specifies whether the Amazon EC2 instances in the cluster are protected from termination by API calls, user intervention, or in the event of a job-flow error.\n"
                },
                "visibleToAllUsers": {
                    "type": "boolean",
                    "deprecationMessage": "This field has been removed from our API and is no longer functional."
                }
            },
            "requiredInputs": [
                "strategy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MrScalar resources.\n",
                "properties": {
                    "additionalInfo": {
                        "type": "string",
                        "description": "This is meta information about third-party applications that third-party vendors use for testing purposes.\n"
                    },
                    "additionalPrimarySecurityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of additional Amazon EC2 security group IDs for the master node.\n"
                    },
                    "additionalReplicaSecurityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of additional Amazon EC2 security group IDs for the core and task nodes.\n"
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarApplication:MrScalarApplication"
                        },
                        "description": "A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster\n"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of AZs and their subnet Ids. See example above for usage.\n"
                    },
                    "bootstrapActionsFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarBootstrapActionsFile:MrScalarBootstrapActionsFile"
                        },
                        "description": "Describes path to S3 file containing description of bootstrap actions. [More Information](https://api.spotinst.com/elastigroup-for-aws/services-integrations/elastic-mapreduce/import-an-emr-cluster/advanced/)\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The MrScaler cluster id.\n",
                        "willReplaceOnChanges": true
                    },
                    "configurationsFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarConfigurationsFile:MrScalarConfigurationsFile"
                        },
                        "description": "Describes path to S3 file containing description of configurations. [More Information](https://api.spotinst.com/elastigroup-for-aws/services-integrations/elastic-mapreduce/import-an-emr-cluster/advanced/)\n"
                    },
                    "coreDesiredCapacity": {
                        "type": "integer",
                        "description": "amount of instances in core group.\n"
                    },
                    "coreEbsBlockDevices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarCoreEbsBlockDevice:MrScalarCoreEbsBlockDevice"
                        },
                        "description": "This determines the ebs configuration for your core group instances. Only a single block is allowed.\n"
                    },
                    "coreEbsOptimized": {
                        "type": "boolean",
                        "description": "EBS Optimization setting for instances in group.\n"
                    },
                    "coreInstanceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The MrScaler instance types for the core nodes.\n"
                    },
                    "coreLifecycle": {
                        "type": "string",
                        "description": "The MrScaler lifecycle for instances in core group. Allowed values are 'SPOT' and 'ON_DEMAND'.\n"
                    },
                    "coreMaxSize": {
                        "type": "integer",
                        "description": "maximal amount of instances in core group.\n"
                    },
                    "coreMinSize": {
                        "type": "integer",
                        "description": "The minimal amount of instances in core group.\n"
                    },
                    "coreScalingDownPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarCoreScalingDownPolicy:MrScalarCoreScalingDownPolicy"
                        },
                        "description": "Each `*_scaling_*_policy` supports the following:\n"
                    },
                    "coreScalingUpPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarCoreScalingUpPolicy:MrScalarCoreScalingUpPolicy"
                        }
                    },
                    "coreUnit": {
                        "type": "string",
                        "description": "Unit of task group for target, min and max. The unit could be `instance` or `weight`. instance - amount of instances. weight - amount of vCPU.\n",
                        "willReplaceOnChanges": true
                    },
                    "customAmiId": {
                        "type": "string",
                        "description": "The ID of a custom Amazon EBS-backed Linux AMI if the cluster uses a custom AMI.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The MrScaler description.\n"
                    },
                    "ebsRootVolumeSize": {
                        "type": "integer"
                    },
                    "ec2KeyName": {
                        "type": "string",
                        "description": "The name of an Amazon EC2 key pair that can be used to ssh to the master node.\n"
                    },
                    "exposeClusterId": {
                        "type": "boolean",
                        "description": "Allow the `cluster_id` to set a provider output variable.\n"
                    },
                    "instanceWeights": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarInstanceWeight:MrScalarInstanceWeight"
                        },
                        "description": "Describes the instance and weights. Check out [Elastigroup Weighted Instances](https://api.spotinst.com/elastigroup-for-aws/concepts/general-concepts/elastigroup-capacity-instances-or-weighted) for more info.\n"
                    },
                    "jobFlowRole": {
                        "type": "string",
                        "description": "The IAM role that was specified when the job flow was launched. The EC2 instances of the job flow assume this role.\n"
                    },
                    "keepJobFlowAlive": {
                        "type": "boolean",
                        "description": "Specifies whether the cluster should remain available after completing all steps.\n"
                    },
                    "logUri": {
                        "type": "string",
                        "description": "The path to the Amazon S3 location where logs for this cluster are stored.\n"
                    },
                    "managedPrimarySecurityGroup": {
                        "type": "string",
                        "description": "EMR Managed Security group that will be set to the primary instance group.\n"
                    },
                    "managedReplicaSecurityGroup": {
                        "type": "string",
                        "description": "EMR Managed Security group that will be set to the replica instance group.\n"
                    },
                    "masterEbsBlockDevices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarMasterEbsBlockDevice:MrScalarMasterEbsBlockDevice"
                        },
                        "description": "This determines the ebs configuration for your master group instances. Only a single block is allowed.\n"
                    },
                    "masterEbsOptimized": {
                        "type": "boolean",
                        "description": "EBS Optimization setting for instances in group.\n"
                    },
                    "masterInstanceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The MrScaler instance types for the master nodes.\n"
                    },
                    "masterLifecycle": {
                        "type": "string",
                        "description": "The MrScaler lifecycle for instances in master group. Allowed values are 'SPOT' and 'ON_DEMAND'.\n"
                    },
                    "masterTarget": {
                        "type": "integer",
                        "description": "Number of instances in the master group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The MrScaler name.\n"
                    },
                    "outputClusterId": {
                        "type": "string"
                    },
                    "provisioningTimeout": {
                        "$ref": "#/types/spotinst:aws/MrScalarProvisioningTimeout:MrScalarProvisioningTimeout"
                    },
                    "region": {
                        "type": "string",
                        "description": "The MrScaler region.\n"
                    },
                    "releaseLabel": {
                        "type": "string"
                    },
                    "repoUpgradeOnBoot": {
                        "type": "string",
                        "description": "Applies only when `custom_ami_id` is used. Specifies the type of updates that are applied from the Amazon Linux AMI package repositories when an instance boots using the AMI. Possible values include: `SECURITY`, `NONE`.\n"
                    },
                    "retries": {
                        "type": "integer",
                        "description": "Specifies the maximum number of times a capacity provisioning should be retried if the provisioning timeout is exceeded. Valid values: `1-5`.\n"
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarScheduledTask:MrScalarScheduledTask"
                        },
                        "description": "An array of scheduled tasks.\n"
                    },
                    "securityConfig": {
                        "type": "string",
                        "description": "The name of the security configuration applied to the cluster.\n"
                    },
                    "serviceAccessSecurityGroup": {
                        "type": "string",
                        "description": "The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.\n"
                    },
                    "serviceRole": {
                        "type": "string",
                        "description": "The IAM role that will be assumed by the Amazon EMR service to access AWS resources on your behalf.\n"
                    },
                    "stepsFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarStepsFile:MrScalarStepsFile"
                        },
                        "description": "Steps from S3.\n"
                    },
                    "strategy": {
                        "type": "string",
                        "description": "The MrScaler strategy. Allowed values are `new` `clone` and `wrap`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarTag:MrScalarTag"
                        },
                        "description": "A list of tags to assign to the resource. You may define multiple tags.\n"
                    },
                    "taskDesiredCapacity": {
                        "type": "integer",
                        "description": "amount of instances in task group.\n"
                    },
                    "taskEbsBlockDevices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarTaskEbsBlockDevice:MrScalarTaskEbsBlockDevice"
                        },
                        "description": "This determines the ebs configuration for your task group instances. Only a single block is allowed.\n"
                    },
                    "taskEbsOptimized": {
                        "type": "boolean",
                        "description": "EBS Optimization setting for instances in group.\n"
                    },
                    "taskInstanceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The MrScaler instance types for the task nodes.\n"
                    },
                    "taskLifecycle": {
                        "type": "string",
                        "description": "The MrScaler lifecycle for instances in task group. Allowed values are 'SPOT' and 'ON_DEMAND'.\n"
                    },
                    "taskMaxSize": {
                        "type": "integer",
                        "description": "maximal amount of instances in task group.\n"
                    },
                    "taskMinSize": {
                        "type": "integer",
                        "description": "The minimal amount of instances in task group.\n"
                    },
                    "taskScalingDownPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarTaskScalingDownPolicy:MrScalarTaskScalingDownPolicy"
                        },
                        "description": "Possible core group scaling policies (Clone, New strategies):\n"
                    },
                    "taskScalingUpPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarTaskScalingUpPolicy:MrScalarTaskScalingUpPolicy"
                        }
                    },
                    "taskUnit": {
                        "type": "string",
                        "description": "Unit of task group for target, min and max. The unit could be `instance` or `weight`. instance - amount of instances. weight - amount of vCPU.\n",
                        "willReplaceOnChanges": true
                    },
                    "terminationPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarTerminationPolicy:MrScalarTerminationPolicy"
                        },
                        "description": "Allows defining termination policies for EMR clusters based on CloudWatch Metrics.\n"
                    },
                    "terminationProtected": {
                        "type": "boolean",
                        "description": "Specifies whether the Amazon EC2 instances in the cluster are protected from termination by API calls, user intervention, or in the event of a job-flow error.\n"
                    },
                    "visibleToAllUsers": {
                        "type": "boolean",
                        "deprecationMessage": "This field has been removed from our API and is no longer functional."
                    }
                },
                "type": "object"
            }
        },
        "spotinst:aws/ocean:Ocean": {
            "description": "## Auto Scaler\n\n* `autoscaler` - (Optional) Describes the Ocean Kubernetes Auto Scaler.\n    * `autoscale_is_enabled` - (Optional, Default: `true`) Enable the Ocean Kubernetes Auto Scaler.\n    * `autoscale_is_auto_config` - (Optional, Default: `true`) Automatically configure and optimize headroom resources.\n    * `autoscale_cooldown` - (Optional, Default: `null`) Cooldown period between scaling actions.\n    * `auto_headroom_percentage` - (Optional) Set the auto headroom percentage (a number in the range [0, 200]) which controls the percentage of headroom from the cluster. Relevant only when `autoscale_is_auto_config` toggled on.\n    * `enable_automatic_and_manual_headroom` - (Optional, Default: `false`) enables automatic and manual headroom to work in parallel. When set to false, automatic headroom overrides all other headroom definitions manually configured, whether they are at cluster or VNG level.\n    * `autoscale_headroom` - (Optional) Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n        * `cpu_per_unit` - (Optional) Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n        * `gpu_per_unit` - (Optional) Optionally configure the number of GPUs to allocate the headroom.\n        * `memory_per_unit` - (Optional) Optionally configure the amount of memory (MB) to allocate the headroom.\n        * `num_of_units` - (Optional) The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n    * `autoscale_down` - (Optional) Auto Scaling scale down operations.\n        * `max_scale_down_percentage` - (Optional) Would represent the maximum % to scale-down. Number between 1-100.\n    * `resource_limits` - (Optional) Optionally set upper and lower bounds on the resource usage of the cluster.\n        * `max_vcpu` - (Optional) The maximum cpu in vCPU units that can be allocated to the cluster.\n        * `max_memory_gib` - (Optional) The maximum memory in GiB units that can be allocated to the cluster.\n    * `extended_resource_definitions` - (Optional) List of Ocean extended resource definitions to use in this cluster.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n### Update Policy\n\n* `update_policy` - (Optional)\n    * `should_roll` - (Required) Enables the roll.\n    * `conditioned_roll` - (Optional, Default: false) Spot will perform a cluster Roll in accordance with a relevant modification of the cluster’s settings. When set to true , only specific changes in the cluster’s configuration will trigger a cluster roll (such as AMI, Key Pair, user data, instance types, load balancers, etc).\n    * `auto_apply_tags` - (Optional, Default: false) will update instance tags on the fly without rolling the cluster.\n    * `roll_config` - (Required) While used, you can control whether the group should perform a deployment after an update to the configuration.\n        * `batch_size_percentage` - (Required) Sets the percentage of the instances to deploy in each batch.\n        * `launch_spec_ids` - (Optional) List of virtual node group identifiers to be rolled.\n        * `batch_min_healthy_percentage` - (Optional) Default: 50. Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n        * `respect_pdb` - (Optional, Default: false) During the roll, if the parameter is set to True we honor PDB during the instance replacement.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n\u003ca id=\"scheduled-task\"\u003e\u003c/a\u003e\n## Scheduled Task\n\n* `scheduled_task` - (Optional) Set scheduling object.\n    * `shutdown_hours` - (Optional) Set shutdown hours for cluster object.\n        * `is_enabled` - (Optional) Toggle the shutdown hours task. (Example: `true`).\n        * `time_windows` - (Required) Set time windows for shutdown hours. Specify a list of `timeWindows` with at least one time window Each string is in the format of: `ddd:hh:mm-ddd:hh:mm` where `ddd` = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat, `hh` = hour 24 = 0 -23, `mm` = minute = 0 - 59. Time windows should not overlap. Required if `cluster.scheduling.isEnabled` is `true`. (Example: `Fri:15:30-Wed:14:30`).\n    * `tasks` - (Optional) The scheduling tasks for the cluster.\n        * `is_enabled` - (Required)  Describes whether the task is enabled. When true the task should run when false it should not run. Required for `cluster.scheduling.tasks` object.\n        * `cron_expression` - (Required) A valid cron expression. The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of `frequency` or `cronExpression` should be used at a time. Required for `cluster.scheduling.tasks` object. (Example: `0 1 * * *`).\n        * `task_type` - (Required) Valid values: `clusterRoll`. Required for `cluster.scheduling.tasks` object. (Example: `clusterRoll`).\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n\u003ca id=\"attributes-reference\"\u003e\u003c/a\u003e\n\n\n## Import\n\nClusters can be imported using the Ocean `id`, e.g., hcl\n\n```sh\n $ pulumi import spotinst:aws/ocean:Ocean this o-12345678\n```\n\n ",
            "properties": {
                "associateIpv6Address": {
                    "type": "boolean",
                    "description": "Configure IPv6 address allocation.\n"
                },
                "associatePublicIpAddress": {
                    "type": "boolean",
                    "description": "Configure public IP address allocation.\n"
                },
                "autoscaler": {
                    "$ref": "#/types/spotinst:aws/OceanAutoscaler:OceanAutoscaler"
                },
                "blacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types not allowed in the Ocean cluster. Cannot be configured if `whitelist` is configured.\n"
                },
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanBlockDeviceMapping:OceanBlockDeviceMapping"
                    },
                    "description": "Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.\n"
                },
                "clusterOrientations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanClusterOrientation:OceanClusterOrientation"
                    }
                },
                "controllerId": {
                    "type": "string",
                    "description": "A unique identifier used for connecting the Ocean SaaS platform and the Kubernetes cluster. Typically, the cluster name is used as its identifier.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The number of instances to launch and maintain in the cluster.\n"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                },
                "ebsOptimized": {
                    "type": "boolean",
                    "description": "Enable EBS optimized for cluster. Flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized this flag will be ignored.\n"
                },
                "fallbackToOndemand": {
                    "type": "boolean",
                    "description": "If not Spot instance markets are available, enable Ocean to launch On-Demand instances instead.\n"
                },
                "filters": {
                    "$ref": "#/types/spotinst:aws/OceanFilters:OceanFilters",
                    "description": "List of filters. The Instance types that match with all filters compose the Ocean's whitelist parameter. Cannot be configured together with whitelist/blacklist.\n"
                },
                "gracePeriod": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after the instance has launched to start checking its health.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The instance profile iam role.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "ID of the image used to launch the instances.\n"
                },
                "instanceMetadataOptions": {
                    "$ref": "#/types/spotinst:aws/OceanInstanceMetadataOptions:OceanInstanceMetadataOptions",
                    "description": "Ocean instance metadata options object for IMDSv2.\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "The key pair to attach the instances.\n"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLoadBalancer:OceanLoadBalancer"
                    },
                    "description": "Array of load balancer objects to add to ocean cluster\n"
                },
                "logging": {
                    "$ref": "#/types/spotinst:aws/OceanLogging:OceanLogging",
                    "description": "Logging configuration.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The upper limit of instances the cluster can scale up to.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The lower limit of instances the cluster can scale down to.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Enable detailed monitoring for cluster. Flag will enable Cloud Watch detailed monitoring (one minute increments). Note: there are additional hourly costs for this service based on the region used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Required if type is set to `CLASSIC`\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region the cluster will run in.\n"
                },
                "resourceTagSpecifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanResourceTagSpecification:OceanResourceTagSpecification"
                    },
                    "description": "Specify which resources should be tagged with Virtual Node Group tags or Ocean tags. If tags are set on the VNG, the resources will be tagged with the VNG tags; otherwise, they will be tagged with the Ocean tags.\n"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "description": "The size (in Gb) to allocate for the root volume. Minimum `20`.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanScheduledTask:OceanScheduledTask"
                    }
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more security group ids.\n"
                },
                "spotPercentage": {
                    "type": "integer",
                    "description": "The desired percentage of Spot instances out of all running instances. Only available when the field is not set in any VNG directly (launchSpec.strategy.spotPercentage).\n"
                },
                "spreadNodesBy": {
                    "type": "string",
                    "description": "Ocean will spread the nodes across markets by this value. Possible values: `vcpu` or `count`.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public IP.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanTag:OceanTag"
                    },
                    "description": "Optionally adds tags to instances launched in an Ocean cluster.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:aws/OceanUpdatePolicy:OceanUpdatePolicy"
                },
                "useAsTemplateOnly": {
                    "type": "boolean",
                    "description": "launch specification defined on the Ocean object will function only as a template for virtual node groups.\nWhen set to true, on Ocean resource creation please make sure your custom VNG has an initial_nodes parameter to create nodes for your VNG.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                },
                "utilizeCommitments": {
                    "type": "boolean",
                    "description": "If savings plans exist, Ocean will utilize them before launching Spot instances.\n"
                },
                "utilizeReservedInstances": {
                    "type": "boolean",
                    "description": "If Reserved instances exist, Ocean will utilize them before launching Spot instances.\n"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types allowed in the Ocean cluster. Cannot be configured if `blacklist` is configured.\n"
                }
            },
            "required": [
                "desiredCapacity",
                "minSize",
                "name",
                "securityGroups",
                "subnetIds"
            ],
            "inputProperties": {
                "associateIpv6Address": {
                    "type": "boolean",
                    "description": "Configure IPv6 address allocation.\n"
                },
                "associatePublicIpAddress": {
                    "type": "boolean",
                    "description": "Configure public IP address allocation.\n"
                },
                "autoscaler": {
                    "$ref": "#/types/spotinst:aws/OceanAutoscaler:OceanAutoscaler"
                },
                "blacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types not allowed in the Ocean cluster. Cannot be configured if `whitelist` is configured.\n"
                },
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanBlockDeviceMapping:OceanBlockDeviceMapping"
                    },
                    "description": "Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.\n"
                },
                "clusterOrientations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanClusterOrientation:OceanClusterOrientation"
                    }
                },
                "controllerId": {
                    "type": "string",
                    "description": "A unique identifier used for connecting the Ocean SaaS platform and the Kubernetes cluster. Typically, the cluster name is used as its identifier.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The number of instances to launch and maintain in the cluster.\n"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                },
                "ebsOptimized": {
                    "type": "boolean",
                    "description": "Enable EBS optimized for cluster. Flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized this flag will be ignored.\n"
                },
                "fallbackToOndemand": {
                    "type": "boolean",
                    "description": "If not Spot instance markets are available, enable Ocean to launch On-Demand instances instead.\n"
                },
                "filters": {
                    "$ref": "#/types/spotinst:aws/OceanFilters:OceanFilters",
                    "description": "List of filters. The Instance types that match with all filters compose the Ocean's whitelist parameter. Cannot be configured together with whitelist/blacklist.\n"
                },
                "gracePeriod": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after the instance has launched to start checking its health.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The instance profile iam role.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "ID of the image used to launch the instances.\n"
                },
                "instanceMetadataOptions": {
                    "$ref": "#/types/spotinst:aws/OceanInstanceMetadataOptions:OceanInstanceMetadataOptions",
                    "description": "Ocean instance metadata options object for IMDSv2.\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "The key pair to attach the instances.\n"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLoadBalancer:OceanLoadBalancer"
                    },
                    "description": "Array of load balancer objects to add to ocean cluster\n"
                },
                "logging": {
                    "$ref": "#/types/spotinst:aws/OceanLogging:OceanLogging",
                    "description": "Logging configuration.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The upper limit of instances the cluster can scale up to.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The lower limit of instances the cluster can scale down to.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Enable detailed monitoring for cluster. Flag will enable Cloud Watch detailed monitoring (one minute increments). Note: there are additional hourly costs for this service based on the region used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Required if type is set to `CLASSIC`\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region the cluster will run in.\n"
                },
                "resourceTagSpecifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanResourceTagSpecification:OceanResourceTagSpecification"
                    },
                    "description": "Specify which resources should be tagged with Virtual Node Group tags or Ocean tags. If tags are set on the VNG, the resources will be tagged with the VNG tags; otherwise, they will be tagged with the Ocean tags.\n"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "description": "The size (in Gb) to allocate for the root volume. Minimum `20`.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanScheduledTask:OceanScheduledTask"
                    }
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more security group ids.\n"
                },
                "spotPercentage": {
                    "type": "integer",
                    "description": "The desired percentage of Spot instances out of all running instances. Only available when the field is not set in any VNG directly (launchSpec.strategy.spotPercentage).\n"
                },
                "spreadNodesBy": {
                    "type": "string",
                    "description": "Ocean will spread the nodes across markets by this value. Possible values: `vcpu` or `count`.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public IP.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanTag:OceanTag"
                    },
                    "description": "Optionally adds tags to instances launched in an Ocean cluster.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:aws/OceanUpdatePolicy:OceanUpdatePolicy"
                },
                "useAsTemplateOnly": {
                    "type": "boolean",
                    "description": "launch specification defined on the Ocean object will function only as a template for virtual node groups.\nWhen set to true, on Ocean resource creation please make sure your custom VNG has an initial_nodes parameter to create nodes for your VNG.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                },
                "utilizeCommitments": {
                    "type": "boolean",
                    "description": "If savings plans exist, Ocean will utilize them before launching Spot instances.\n"
                },
                "utilizeReservedInstances": {
                    "type": "boolean",
                    "description": "If Reserved instances exist, Ocean will utilize them before launching Spot instances.\n"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types allowed in the Ocean cluster. Cannot be configured if `blacklist` is configured.\n"
                }
            },
            "requiredInputs": [
                "securityGroups",
                "subnetIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ocean resources.\n",
                "properties": {
                    "associateIpv6Address": {
                        "type": "boolean",
                        "description": "Configure IPv6 address allocation.\n"
                    },
                    "associatePublicIpAddress": {
                        "type": "boolean",
                        "description": "Configure public IP address allocation.\n"
                    },
                    "autoscaler": {
                        "$ref": "#/types/spotinst:aws/OceanAutoscaler:OceanAutoscaler"
                    },
                    "blacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Instance types not allowed in the Ocean cluster. Cannot be configured if `whitelist` is configured.\n"
                    },
                    "blockDeviceMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanBlockDeviceMapping:OceanBlockDeviceMapping"
                        },
                        "description": "Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.\n"
                    },
                    "clusterOrientations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanClusterOrientation:OceanClusterOrientation"
                        }
                    },
                    "controllerId": {
                        "type": "string",
                        "description": "A unique identifier used for connecting the Ocean SaaS platform and the Kubernetes cluster. Typically, the cluster name is used as its identifier.\n"
                    },
                    "desiredCapacity": {
                        "type": "integer",
                        "description": "The number of instances to launch and maintain in the cluster.\n"
                    },
                    "drainingTimeout": {
                        "type": "integer",
                        "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                    },
                    "ebsOptimized": {
                        "type": "boolean",
                        "description": "Enable EBS optimized for cluster. Flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized this flag will be ignored.\n"
                    },
                    "fallbackToOndemand": {
                        "type": "boolean",
                        "description": "If not Spot instance markets are available, enable Ocean to launch On-Demand instances instead.\n"
                    },
                    "filters": {
                        "$ref": "#/types/spotinst:aws/OceanFilters:OceanFilters",
                        "description": "List of filters. The Instance types that match with all filters compose the Ocean's whitelist parameter. Cannot be configured together with whitelist/blacklist.\n"
                    },
                    "gracePeriod": {
                        "type": "integer",
                        "description": "The amount of time, in seconds, after the instance has launched to start checking its health.\n"
                    },
                    "iamInstanceProfile": {
                        "type": "string",
                        "description": "The instance profile iam role.\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "ID of the image used to launch the instances.\n"
                    },
                    "instanceMetadataOptions": {
                        "$ref": "#/types/spotinst:aws/OceanInstanceMetadataOptions:OceanInstanceMetadataOptions",
                        "description": "Ocean instance metadata options object for IMDSv2.\n"
                    },
                    "keyName": {
                        "type": "string",
                        "description": "The key pair to attach the instances.\n"
                    },
                    "loadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLoadBalancer:OceanLoadBalancer"
                        },
                        "description": "Array of load balancer objects to add to ocean cluster\n"
                    },
                    "logging": {
                        "$ref": "#/types/spotinst:aws/OceanLogging:OceanLogging",
                        "description": "Logging configuration.\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The upper limit of instances the cluster can scale up to.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The lower limit of instances the cluster can scale down to.\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Enable detailed monitoring for cluster. Flag will enable Cloud Watch detailed monitoring (one minute increments). Note: there are additional hourly costs for this service based on the region used.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Required if type is set to `CLASSIC`\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region the cluster will run in.\n"
                    },
                    "resourceTagSpecifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanResourceTagSpecification:OceanResourceTagSpecification"
                        },
                        "description": "Specify which resources should be tagged with Virtual Node Group tags or Ocean tags. If tags are set on the VNG, the resources will be tagged with the VNG tags; otherwise, they will be tagged with the Ocean tags.\n"
                    },
                    "rootVolumeSize": {
                        "type": "integer",
                        "description": "The size (in Gb) to allocate for the root volume. Minimum `20`.\n"
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanScheduledTask:OceanScheduledTask"
                        }
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more security group ids.\n"
                    },
                    "spotPercentage": {
                        "type": "integer",
                        "description": "The desired percentage of Spot instances out of all running instances. Only available when the field is not set in any VNG directly (launchSpec.strategy.spotPercentage).\n"
                    },
                    "spreadNodesBy": {
                        "type": "string",
                        "description": "Ocean will spread the nodes across markets by this value. Possible values: `vcpu` or `count`.\n"
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public IP.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanTag:OceanTag"
                        },
                        "description": "Optionally adds tags to instances launched in an Ocean cluster.\n"
                    },
                    "updatePolicy": {
                        "$ref": "#/types/spotinst:aws/OceanUpdatePolicy:OceanUpdatePolicy"
                    },
                    "useAsTemplateOnly": {
                        "type": "boolean",
                        "description": "launch specification defined on the Ocean object will function only as a template for virtual node groups.\nWhen set to true, on Ocean resource creation please make sure your custom VNG has an initial_nodes parameter to create nodes for your VNG.\n"
                    },
                    "userData": {
                        "type": "string",
                        "description": "Base64-encoded MIME user data to make available to the instances.\n"
                    },
                    "utilizeCommitments": {
                        "type": "boolean",
                        "description": "If savings plans exist, Ocean will utilize them before launching Spot instances.\n"
                    },
                    "utilizeReservedInstances": {
                        "type": "boolean",
                        "description": "If Reserved instances exist, Ocean will utilize them before launching Spot instances.\n"
                    },
                    "whitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Instance types allowed in the Ocean cluster. Cannot be configured if `blacklist` is configured.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:aws/oceanExtendedResourceDefinition:OceanExtendedResourceDefinition": {
            "description": "Provides a Spotinst Ocean AWS Extended Resource Definition resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.aws.OceanExtendedResourceDefinition(\"example\", {resourceMapping: {\n    \"c3.large\": \"2Ki\",\n    \"c3.xlarge\": \"4Ki\",\n}});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.aws.OceanExtendedResourceDefinition(\"example\", resource_mapping={\n    \"c3.large\": \"2Ki\",\n    \"c3.xlarge\": \"4Ki\",\n})\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new SpotInst.Aws.OceanExtendedResourceDefinition(\"example\", new()\n    {\n        ResourceMapping = \n        {\n            { \"c3.large\", \"2Ki\" },\n            { \"c3.xlarge\", \"4Ki\" },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewOceanExtendedResourceDefinition(ctx, \"example\", \u0026aws.OceanExtendedResourceDefinitionArgs{\n\t\t\tResourceMapping: pulumi.Map{\n\t\t\t\t\"c3.large\":  pulumi.Any(\"2Ki\"),\n\t\t\t\t\"c3.xlarge\": pulumi.Any(\"4Ki\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.aws.OceanExtendedResourceDefinition;\nimport com.pulumi.spotinst.aws.OceanExtendedResourceDefinitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OceanExtendedResourceDefinition(\"example\", OceanExtendedResourceDefinitionArgs.builder()        \n            .resourceMapping(Map.ofEntries(\n                Map.entry(\"c3.large\", \"2Ki\"),\n                Map.entry(\"c3.xlarge\", \"4Ki\")\n            ))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: spotinst:aws:OceanExtendedResourceDefinition\n    properties:\n      resourceMapping:\n        c3.large: 2Ki\n        c3.xlarge: 4Ki\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The extended resource name as should be requested by your pods and registered to the nodes. Cannot be updated.\nThe name should be a valid Kubernetes extended resource name.\n"
                },
                "resourceMapping": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A mapping between AWS instanceType or * as default and its value for the given extended resource.\n"
                }
            },
            "required": [
                "name",
                "resourceMapping"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The extended resource name as should be requested by your pods and registered to the nodes. Cannot be updated.\nThe name should be a valid Kubernetes extended resource name.\n"
                },
                "resourceMapping": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A mapping between AWS instanceType or * as default and its value for the given extended resource.\n"
                }
            },
            "requiredInputs": [
                "resourceMapping"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanExtendedResourceDefinition resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The extended resource name as should be requested by your pods and registered to the nodes. Cannot be updated.\nThe name should be a valid Kubernetes extended resource name.\n"
                    },
                    "resourceMapping": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "A mapping between AWS instanceType or * as default and its value for the given extended resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:aws/oceanLaunchSpec:OceanLaunchSpec": {
            "description": "Manages a Spotinst Ocean AWS [Virtual Node Group](https://docs.spot.io/ocean/features/launch-specifications) resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.aws.OceanLaunchSpec(\"example\", {\n    associatePublicIpAddress: true,\n    autoscaleDowns: [{\n        maxScaleDownPercentage: 20,\n    }],\n    autoscaleHeadrooms: [{\n        cpuPerUnit: 1000,\n        gpuPerUnit: 0,\n        memoryPerUnit: 2048,\n        numOfUnits: 5,\n    }],\n    autoscaleHeadroomsAutomatics: [{\n        autoHeadroomPercentage: 5,\n    }],\n    blockDeviceMappings: [{\n        deviceName: \"/dev/xvda\",\n        ebs: {\n            deleteOnTermination: true,\n            dynamicVolumeSize: {\n                baseSize: 50,\n                resource: \"CPU\",\n                sizePerResourceUnit: 20,\n            },\n            encrypted: false,\n            throughput: 500,\n            volumeSize: 50,\n            volumeType: \"gp2\",\n        },\n    }],\n    createOptions: {\n        initialNodes: 1,\n    },\n    deleteOptions: {\n        deleteNodes: true,\n        forceDelete: true,\n    },\n    elasticIpPools: [{\n        tagSelector: {\n            tagKey: \"key\",\n            tagValue: \"value\",\n        },\n    }],\n    iamInstanceProfile: \"iam-profile\",\n    imageId: \"ami-123456\",\n    images: [\n        {\n            imageId: \"ami-id1\",\n        },\n        {\n            imageId: \"ami-id2\",\n        },\n    ],\n    instanceMetadataOptions: {\n        httpPutResponseHopLimit: 10,\n        httpTokens: \"required\",\n    },\n    instanceTypes: [\n        \"m4.large\",\n        \"m4.xlarge\",\n        \"m4.2xlarge\",\n        \"m4.4xlarge\",\n    ],\n    labels: [{\n        key: \"key1\",\n        value: \"value1\",\n    }],\n    oceanId: \"o-123456\",\n    preferredSpotTypes: [\n        \"m4.large\",\n        \"m4.xlarge\",\n    ],\n    resourceLimits: [{\n        maxInstanceCount: 4,\n        minInstanceCount: 0,\n    }],\n    restrictScaleDown: true,\n    rootVolumeSize: 30,\n    schedulingShutdownHours: {\n        isEnabled: true,\n        timeWindows: [\n            \"Sat:08:00-Sat:08:30\",\n            \"Sun:08:00-Sun:08:30\",\n        ],\n    },\n    schedulingTasks: [{\n        cronExpression: \"0 1 * * *\",\n        isEnabled: true,\n        taskHeadrooms: [{\n            cpuPerUnit: 1000,\n            gpuPerUnit: 0,\n            memoryPerUnit: 2048,\n            numOfUnits: 5,\n        }],\n        taskType: \"manualHeadroomUpdate\",\n    }],\n    securityGroups: [\"sg-987654321\"],\n    strategies: [{\n        spotPercentage: 70,\n    }],\n    subnetIds: [\"subnet-1234\"],\n    tags: [{\n        key: \"Env\",\n        value: \"production\",\n    }],\n    taints: [{\n        effect: \"NoExecute\",\n        key: \"key1\",\n        value: \"value1\",\n    }],\n    userData: \"echo Hello, world!\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.aws.OceanLaunchSpec(\"example\",\n    associate_public_ip_address=True,\n    autoscale_downs=[spotinst.aws.OceanLaunchSpecAutoscaleDownArgs(\n        max_scale_down_percentage=20,\n    )],\n    autoscale_headrooms=[spotinst.aws.OceanLaunchSpecAutoscaleHeadroomArgs(\n        cpu_per_unit=1000,\n        gpu_per_unit=0,\n        memory_per_unit=2048,\n        num_of_units=5,\n    )],\n    autoscale_headrooms_automatics=[spotinst.aws.OceanLaunchSpecAutoscaleHeadroomsAutomaticArgs(\n        auto_headroom_percentage=5,\n    )],\n    block_device_mappings=[spotinst.aws.OceanLaunchSpecBlockDeviceMappingArgs(\n        device_name=\"/dev/xvda\",\n        ebs=spotinst.aws.OceanLaunchSpecBlockDeviceMappingEbsArgs(\n            delete_on_termination=True,\n            dynamic_volume_size=spotinst.aws.OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSizeArgs(\n                base_size=50,\n                resource=\"CPU\",\n                size_per_resource_unit=20,\n            ),\n            encrypted=False,\n            throughput=500,\n            volume_size=50,\n            volume_type=\"gp2\",\n        ),\n    )],\n    create_options=spotinst.aws.OceanLaunchSpecCreateOptionsArgs(\n        initial_nodes=1,\n    ),\n    delete_options=spotinst.aws.OceanLaunchSpecDeleteOptionsArgs(\n        delete_nodes=True,\n        force_delete=True,\n    ),\n    elastic_ip_pools=[spotinst.aws.OceanLaunchSpecElasticIpPoolArgs(\n        tag_selector=spotinst.aws.OceanLaunchSpecElasticIpPoolTagSelectorArgs(\n            tag_key=\"key\",\n            tag_value=\"value\",\n        ),\n    )],\n    iam_instance_profile=\"iam-profile\",\n    image_id=\"ami-123456\",\n    images=[\n        spotinst.aws.OceanLaunchSpecImageArgs(\n            image_id=\"ami-id1\",\n        ),\n        spotinst.aws.OceanLaunchSpecImageArgs(\n            image_id=\"ami-id2\",\n        ),\n    ],\n    instance_metadata_options=spotinst.aws.OceanLaunchSpecInstanceMetadataOptionsArgs(\n        http_put_response_hop_limit=10,\n        http_tokens=\"required\",\n    ),\n    instance_types=[\n        \"m4.large\",\n        \"m4.xlarge\",\n        \"m4.2xlarge\",\n        \"m4.4xlarge\",\n    ],\n    labels=[spotinst.aws.OceanLaunchSpecLabelArgs(\n        key=\"key1\",\n        value=\"value1\",\n    )],\n    ocean_id=\"o-123456\",\n    preferred_spot_types=[\n        \"m4.large\",\n        \"m4.xlarge\",\n    ],\n    resource_limits=[spotinst.aws.OceanLaunchSpecResourceLimitArgs(\n        max_instance_count=4,\n        min_instance_count=0,\n    )],\n    restrict_scale_down=True,\n    root_volume_size=30,\n    scheduling_shutdown_hours=spotinst.aws.OceanLaunchSpecSchedulingShutdownHoursArgs(\n        is_enabled=True,\n        time_windows=[\n            \"Sat:08:00-Sat:08:30\",\n            \"Sun:08:00-Sun:08:30\",\n        ],\n    ),\n    scheduling_tasks=[spotinst.aws.OceanLaunchSpecSchedulingTaskArgs(\n        cron_expression=\"0 1 * * *\",\n        is_enabled=True,\n        task_headrooms=[spotinst.aws.OceanLaunchSpecSchedulingTaskTaskHeadroomArgs(\n            cpu_per_unit=1000,\n            gpu_per_unit=0,\n            memory_per_unit=2048,\n            num_of_units=5,\n        )],\n        task_type=\"manualHeadroomUpdate\",\n    )],\n    security_groups=[\"sg-987654321\"],\n    strategies=[spotinst.aws.OceanLaunchSpecStrategyArgs(\n        spot_percentage=70,\n    )],\n    subnet_ids=[\"subnet-1234\"],\n    tags=[spotinst.aws.OceanLaunchSpecTagArgs(\n        key=\"Env\",\n        value=\"production\",\n    )],\n    taints=[spotinst.aws.OceanLaunchSpecTaintArgs(\n        effect=\"NoExecute\",\n        key=\"key1\",\n        value=\"value1\",\n    )],\n    user_data=\"echo Hello, world!\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new SpotInst.Aws.OceanLaunchSpec(\"example\", new()\n    {\n        AssociatePublicIpAddress = true,\n        AutoscaleDowns = new[]\n        {\n            new SpotInst.Aws.Inputs.OceanLaunchSpecAutoscaleDownArgs\n            {\n                MaxScaleDownPercentage = 20,\n            },\n        },\n        AutoscaleHeadrooms = new[]\n        {\n            new SpotInst.Aws.Inputs.OceanLaunchSpecAutoscaleHeadroomArgs\n            {\n                CpuPerUnit = 1000,\n                GpuPerUnit = 0,\n                MemoryPerUnit = 2048,\n                NumOfUnits = 5,\n            },\n        },\n        AutoscaleHeadroomsAutomatics = new[]\n        {\n            new SpotInst.Aws.Inputs.OceanLaunchSpecAutoscaleHeadroomsAutomaticArgs\n            {\n                AutoHeadroomPercentage = 5,\n            },\n        },\n        BlockDeviceMappings = new[]\n        {\n            new SpotInst.Aws.Inputs.OceanLaunchSpecBlockDeviceMappingArgs\n            {\n                DeviceName = \"/dev/xvda\",\n                Ebs = new SpotInst.Aws.Inputs.OceanLaunchSpecBlockDeviceMappingEbsArgs\n                {\n                    DeleteOnTermination = true,\n                    DynamicVolumeSize = new SpotInst.Aws.Inputs.OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSizeArgs\n                    {\n                        BaseSize = 50,\n                        Resource = \"CPU\",\n                        SizePerResourceUnit = 20,\n                    },\n                    Encrypted = false,\n                    Throughput = 500,\n                    VolumeSize = 50,\n                    VolumeType = \"gp2\",\n                },\n            },\n        },\n        CreateOptions = new SpotInst.Aws.Inputs.OceanLaunchSpecCreateOptionsArgs\n        {\n            InitialNodes = 1,\n        },\n        DeleteOptions = new SpotInst.Aws.Inputs.OceanLaunchSpecDeleteOptionsArgs\n        {\n            DeleteNodes = true,\n            ForceDelete = true,\n        },\n        ElasticIpPools = new[]\n        {\n            new SpotInst.Aws.Inputs.OceanLaunchSpecElasticIpPoolArgs\n            {\n                TagSelector = new SpotInst.Aws.Inputs.OceanLaunchSpecElasticIpPoolTagSelectorArgs\n                {\n                    TagKey = \"key\",\n                    TagValue = \"value\",\n                },\n            },\n        },\n        IamInstanceProfile = \"iam-profile\",\n        ImageId = \"ami-123456\",\n        Images = new[]\n        {\n            new SpotInst.Aws.Inputs.OceanLaunchSpecImageArgs\n            {\n                ImageId = \"ami-id1\",\n            },\n            new SpotInst.Aws.Inputs.OceanLaunchSpecImageArgs\n            {\n                ImageId = \"ami-id2\",\n            },\n        },\n        InstanceMetadataOptions = new SpotInst.Aws.Inputs.OceanLaunchSpecInstanceMetadataOptionsArgs\n        {\n            HttpPutResponseHopLimit = 10,\n            HttpTokens = \"required\",\n        },\n        InstanceTypes = new[]\n        {\n            \"m4.large\",\n            \"m4.xlarge\",\n            \"m4.2xlarge\",\n            \"m4.4xlarge\",\n        },\n        Labels = new[]\n        {\n            new SpotInst.Aws.Inputs.OceanLaunchSpecLabelArgs\n            {\n                Key = \"key1\",\n                Value = \"value1\",\n            },\n        },\n        OceanId = \"o-123456\",\n        PreferredSpotTypes = new[]\n        {\n            \"m4.large\",\n            \"m4.xlarge\",\n        },\n        ResourceLimits = new[]\n        {\n            new SpotInst.Aws.Inputs.OceanLaunchSpecResourceLimitArgs\n            {\n                MaxInstanceCount = 4,\n                MinInstanceCount = 0,\n            },\n        },\n        RestrictScaleDown = true,\n        RootVolumeSize = 30,\n        SchedulingShutdownHours = new SpotInst.Aws.Inputs.OceanLaunchSpecSchedulingShutdownHoursArgs\n        {\n            IsEnabled = true,\n            TimeWindows = new[]\n            {\n                \"Sat:08:00-Sat:08:30\",\n                \"Sun:08:00-Sun:08:30\",\n            },\n        },\n        SchedulingTasks = new[]\n        {\n            new SpotInst.Aws.Inputs.OceanLaunchSpecSchedulingTaskArgs\n            {\n                CronExpression = \"0 1 * * *\",\n                IsEnabled = true,\n                TaskHeadrooms = new[]\n                {\n                    new SpotInst.Aws.Inputs.OceanLaunchSpecSchedulingTaskTaskHeadroomArgs\n                    {\n                        CpuPerUnit = 1000,\n                        GpuPerUnit = 0,\n                        MemoryPerUnit = 2048,\n                        NumOfUnits = 5,\n                    },\n                },\n                TaskType = \"manualHeadroomUpdate\",\n            },\n        },\n        SecurityGroups = new[]\n        {\n            \"sg-987654321\",\n        },\n        Strategies = new[]\n        {\n            new SpotInst.Aws.Inputs.OceanLaunchSpecStrategyArgs\n            {\n                SpotPercentage = 70,\n            },\n        },\n        SubnetIds = new[]\n        {\n            \"subnet-1234\",\n        },\n        Tags = new[]\n        {\n            new SpotInst.Aws.Inputs.OceanLaunchSpecTagArgs\n            {\n                Key = \"Env\",\n                Value = \"production\",\n            },\n        },\n        Taints = new[]\n        {\n            new SpotInst.Aws.Inputs.OceanLaunchSpecTaintArgs\n            {\n                Effect = \"NoExecute\",\n                Key = \"key1\",\n                Value = \"value1\",\n            },\n        },\n        UserData = \"echo Hello, world!\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewOceanLaunchSpec(ctx, \"example\", \u0026aws.OceanLaunchSpecArgs{\n\t\t\tAssociatePublicIpAddress: pulumi.Bool(true),\n\t\t\tAutoscaleDowns: aws.OceanLaunchSpecAutoscaleDownArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecAutoscaleDownArgs{\n\t\t\t\t\tMaxScaleDownPercentage: pulumi.Float64(20),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAutoscaleHeadrooms: aws.OceanLaunchSpecAutoscaleHeadroomArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecAutoscaleHeadroomArgs{\n\t\t\t\t\tCpuPerUnit:    pulumi.Int(1000),\n\t\t\t\t\tGpuPerUnit:    pulumi.Int(0),\n\t\t\t\t\tMemoryPerUnit: pulumi.Int(2048),\n\t\t\t\t\tNumOfUnits:    pulumi.Int(5),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAutoscaleHeadroomsAutomatics: aws.OceanLaunchSpecAutoscaleHeadroomsAutomaticArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecAutoscaleHeadroomsAutomaticArgs{\n\t\t\t\t\tAutoHeadroomPercentage: pulumi.Int(5),\n\t\t\t\t},\n\t\t\t},\n\t\t\tBlockDeviceMappings: aws.OceanLaunchSpecBlockDeviceMappingArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecBlockDeviceMappingArgs{\n\t\t\t\t\tDeviceName: pulumi.String(\"/dev/xvda\"),\n\t\t\t\t\tEbs: \u0026aws.OceanLaunchSpecBlockDeviceMappingEbsArgs{\n\t\t\t\t\t\tDeleteOnTermination: pulumi.Bool(true),\n\t\t\t\t\t\tDynamicVolumeSize: \u0026aws.OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSizeArgs{\n\t\t\t\t\t\t\tBaseSize:            pulumi.Int(50),\n\t\t\t\t\t\t\tResource:            pulumi.String(\"CPU\"),\n\t\t\t\t\t\t\tSizePerResourceUnit: pulumi.Int(20),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tEncrypted:  pulumi.Bool(false),\n\t\t\t\t\t\tThroughput: pulumi.Int(500),\n\t\t\t\t\t\tVolumeSize: pulumi.Int(50),\n\t\t\t\t\t\tVolumeType: pulumi.String(\"gp2\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tCreateOptions: \u0026aws.OceanLaunchSpecCreateOptionsArgs{\n\t\t\t\tInitialNodes: pulumi.Int(1),\n\t\t\t},\n\t\t\tDeleteOptions: \u0026aws.OceanLaunchSpecDeleteOptionsArgs{\n\t\t\t\tDeleteNodes: pulumi.Bool(true),\n\t\t\t\tForceDelete: pulumi.Bool(true),\n\t\t\t},\n\t\t\tElasticIpPools: aws.OceanLaunchSpecElasticIpPoolArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecElasticIpPoolArgs{\n\t\t\t\t\tTagSelector: \u0026aws.OceanLaunchSpecElasticIpPoolTagSelectorArgs{\n\t\t\t\t\t\tTagKey:   pulumi.String(\"key\"),\n\t\t\t\t\t\tTagValue: pulumi.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tIamInstanceProfile: pulumi.String(\"iam-profile\"),\n\t\t\tImageId:            pulumi.String(\"ami-123456\"),\n\t\t\tImages: aws.OceanLaunchSpecImageArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecImageArgs{\n\t\t\t\t\tImageId: pulumi.String(\"ami-id1\"),\n\t\t\t\t},\n\t\t\t\t\u0026aws.OceanLaunchSpecImageArgs{\n\t\t\t\t\tImageId: pulumi.String(\"ami-id2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tInstanceMetadataOptions: \u0026aws.OceanLaunchSpecInstanceMetadataOptionsArgs{\n\t\t\t\tHttpPutResponseHopLimit: pulumi.Int(10),\n\t\t\t\tHttpTokens:              pulumi.String(\"required\"),\n\t\t\t},\n\t\t\tInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"m4.large\"),\n\t\t\t\tpulumi.String(\"m4.xlarge\"),\n\t\t\t\tpulumi.String(\"m4.2xlarge\"),\n\t\t\t\tpulumi.String(\"m4.4xlarge\"),\n\t\t\t},\n\t\t\tLabels: aws.OceanLaunchSpecLabelArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecLabelArgs{\n\t\t\t\t\tKey:   pulumi.String(\"key1\"),\n\t\t\t\t\tValue: pulumi.String(\"value1\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOceanId: pulumi.String(\"o-123456\"),\n\t\t\tPreferredSpotTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"m4.large\"),\n\t\t\t\tpulumi.String(\"m4.xlarge\"),\n\t\t\t},\n\t\t\tResourceLimits: aws.OceanLaunchSpecResourceLimitArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecResourceLimitArgs{\n\t\t\t\t\tMaxInstanceCount: pulumi.Int(4),\n\t\t\t\t\tMinInstanceCount: pulumi.Int(0),\n\t\t\t\t},\n\t\t\t},\n\t\t\tRestrictScaleDown: pulumi.Bool(true),\n\t\t\tRootVolumeSize:    pulumi.Int(30),\n\t\t\tSchedulingShutdownHours: \u0026aws.OceanLaunchSpecSchedulingShutdownHoursArgs{\n\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\tTimeWindows: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"Sat:08:00-Sat:08:30\"),\n\t\t\t\t\tpulumi.String(\"Sun:08:00-Sun:08:30\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSchedulingTasks: aws.OceanLaunchSpecSchedulingTaskArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecSchedulingTaskArgs{\n\t\t\t\t\tCronExpression: pulumi.String(\"0 1 * * *\"),\n\t\t\t\t\tIsEnabled:      pulumi.Bool(true),\n\t\t\t\t\tTaskHeadrooms: aws.OceanLaunchSpecSchedulingTaskTaskHeadroomArray{\n\t\t\t\t\t\t\u0026aws.OceanLaunchSpecSchedulingTaskTaskHeadroomArgs{\n\t\t\t\t\t\t\tCpuPerUnit:    pulumi.Int(1000),\n\t\t\t\t\t\t\tGpuPerUnit:    pulumi.Int(0),\n\t\t\t\t\t\t\tMemoryPerUnit: pulumi.Int(2048),\n\t\t\t\t\t\t\tNumOfUnits:    pulumi.Int(5),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tTaskType: pulumi.String(\"manualHeadroomUpdate\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSecurityGroups: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sg-987654321\"),\n\t\t\t},\n\t\t\tStrategies: aws.OceanLaunchSpecStrategyArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecStrategyArgs{\n\t\t\t\t\tSpotPercentage: pulumi.Int(70),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSubnetIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"subnet-1234\"),\n\t\t\t},\n\t\t\tTags: aws.OceanLaunchSpecTagArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecTagArgs{\n\t\t\t\t\tKey:   pulumi.String(\"Env\"),\n\t\t\t\t\tValue: pulumi.String(\"production\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaints: aws.OceanLaunchSpecTaintArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecTaintArgs{\n\t\t\t\t\tEffect: pulumi.String(\"NoExecute\"),\n\t\t\t\t\tKey:    pulumi.String(\"key1\"),\n\t\t\t\t\tValue:  pulumi.String(\"value1\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUserData: pulumi.String(\"echo Hello, world!\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.aws.OceanLaunchSpec;\nimport com.pulumi.spotinst.aws.OceanLaunchSpecArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecAutoscaleDownArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecAutoscaleHeadroomArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecAutoscaleHeadroomsAutomaticArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecBlockDeviceMappingArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecBlockDeviceMappingEbsArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSizeArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecCreateOptionsArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecDeleteOptionsArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecElasticIpPoolArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecElasticIpPoolTagSelectorArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecImageArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecInstanceMetadataOptionsArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecLabelArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecResourceLimitArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecSchedulingShutdownHoursArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecSchedulingTaskArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecStrategyArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecTagArgs;\nimport com.pulumi.spotinst.aws.inputs.OceanLaunchSpecTaintArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OceanLaunchSpec(\"example\", OceanLaunchSpecArgs.builder()        \n            .associatePublicIpAddress(true)\n            .autoscaleDowns(OceanLaunchSpecAutoscaleDownArgs.builder()\n                .maxScaleDownPercentage(20)\n                .build())\n            .autoscaleHeadrooms(OceanLaunchSpecAutoscaleHeadroomArgs.builder()\n                .cpuPerUnit(1000)\n                .gpuPerUnit(0)\n                .memoryPerUnit(2048)\n                .numOfUnits(5)\n                .build())\n            .autoscaleHeadroomsAutomatics(OceanLaunchSpecAutoscaleHeadroomsAutomaticArgs.builder()\n                .autoHeadroomPercentage(5)\n                .build())\n            .blockDeviceMappings(OceanLaunchSpecBlockDeviceMappingArgs.builder()\n                .deviceName(\"/dev/xvda\")\n                .ebs(OceanLaunchSpecBlockDeviceMappingEbsArgs.builder()\n                    .deleteOnTermination(\"true\")\n                    .dynamicVolumeSize(OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSizeArgs.builder()\n                        .baseSize(50)\n                        .resource(\"CPU\")\n                        .sizePerResourceUnit(20)\n                        .build())\n                    .encrypted(\"false\")\n                    .throughput(500)\n                    .volumeSize(50)\n                    .volumeType(\"gp2\")\n                    .build())\n                .build())\n            .createOptions(OceanLaunchSpecCreateOptionsArgs.builder()\n                .initialNodes(1)\n                .build())\n            .deleteOptions(OceanLaunchSpecDeleteOptionsArgs.builder()\n                .deleteNodes(true)\n                .forceDelete(true)\n                .build())\n            .elasticIpPools(OceanLaunchSpecElasticIpPoolArgs.builder()\n                .tagSelector(OceanLaunchSpecElasticIpPoolTagSelectorArgs.builder()\n                    .tagKey(\"key\")\n                    .tagValue(\"value\")\n                    .build())\n                .build())\n            .iamInstanceProfile(\"iam-profile\")\n            .imageId(\"ami-123456\")\n            .images(            \n                OceanLaunchSpecImageArgs.builder()\n                    .imageId(\"ami-id1\")\n                    .build(),\n                OceanLaunchSpecImageArgs.builder()\n                    .imageId(\"ami-id2\")\n                    .build())\n            .instanceMetadataOptions(OceanLaunchSpecInstanceMetadataOptionsArgs.builder()\n                .httpPutResponseHopLimit(10)\n                .httpTokens(\"required\")\n                .build())\n            .instanceTypes(            \n                \"m4.large\",\n                \"m4.xlarge\",\n                \"m4.2xlarge\",\n                \"m4.4xlarge\")\n            .labels(OceanLaunchSpecLabelArgs.builder()\n                .key(\"key1\")\n                .value(\"value1\")\n                .build())\n            .oceanId(\"o-123456\")\n            .preferredSpotTypes(            \n                \"m4.large\",\n                \"m4.xlarge\")\n            .resourceLimits(OceanLaunchSpecResourceLimitArgs.builder()\n                .maxInstanceCount(4)\n                .minInstanceCount(0)\n                .build())\n            .restrictScaleDown(true)\n            .rootVolumeSize(30)\n            .schedulingShutdownHours(OceanLaunchSpecSchedulingShutdownHoursArgs.builder()\n                .isEnabled(true)\n                .timeWindows(                \n                    \"Sat:08:00-Sat:08:30\",\n                    \"Sun:08:00-Sun:08:30\")\n                .build())\n            .schedulingTasks(OceanLaunchSpecSchedulingTaskArgs.builder()\n                .cronExpression(\"0 1 * * *\")\n                .isEnabled(true)\n                .taskHeadrooms(OceanLaunchSpecSchedulingTaskTaskHeadroomArgs.builder()\n                    .cpuPerUnit(1000)\n                    .gpuPerUnit(0)\n                    .memoryPerUnit(2048)\n                    .numOfUnits(5)\n                    .build())\n                .taskType(\"manualHeadroomUpdate\")\n                .build())\n            .securityGroups(\"sg-987654321\")\n            .strategies(OceanLaunchSpecStrategyArgs.builder()\n                .spotPercentage(70)\n                .build())\n            .subnetIds(\"subnet-1234\")\n            .tags(OceanLaunchSpecTagArgs.builder()\n                .key(\"Env\")\n                .value(\"production\")\n                .build())\n            .taints(OceanLaunchSpecTaintArgs.builder()\n                .effect(\"NoExecute\")\n                .key(\"key1\")\n                .value(\"value1\")\n                .build())\n            .userData(\"echo Hello, world!\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: spotinst:aws:OceanLaunchSpec\n    properties:\n      associatePublicIpAddress: true\n      autoscaleDowns:\n        - maxScaleDownPercentage: 20\n      autoscaleHeadrooms:\n        - cpuPerUnit: 1000\n          gpuPerUnit: 0\n          memoryPerUnit: 2048\n          numOfUnits: 5\n      autoscaleHeadroomsAutomatics:\n        - autoHeadroomPercentage: 5\n      blockDeviceMappings:\n        - deviceName: /dev/xvda\n          ebs:\n            deleteOnTermination: 'true'\n            dynamicVolumeSize:\n              baseSize: 50\n              resource: CPU\n              sizePerResourceUnit: 20\n            encrypted: 'false'\n            throughput: 500\n            volumeSize: 50\n            volumeType: gp2\n      createOptions:\n        initialNodes: 1\n      deleteOptions:\n        deleteNodes: true\n        forceDelete: true\n      elasticIpPools:\n        - tagSelector:\n            tagKey: key\n            tagValue: value\n      iamInstanceProfile: iam-profile\n      imageId: ami-123456\n      images:\n        - imageId: ami-id1\n        - imageId: ami-id2\n      instanceMetadataOptions:\n        httpPutResponseHopLimit: 10\n        httpTokens: required\n      instanceTypes:\n        - m4.large\n        - m4.xlarge\n        - m4.2xlarge\n        - m4.4xlarge\n      labels:\n        - key: key1\n          value: value1\n      oceanId: o-123456\n      preferredSpotTypes:\n        - m4.large\n        - m4.xlarge\n      resourceLimits:\n        - maxInstanceCount: 4\n          minInstanceCount: 0\n      restrictScaleDown: true\n      rootVolumeSize: 30\n      schedulingShutdownHours:\n        isEnabled: true\n        timeWindows:\n          - Sat:08:00-Sat:08:30\n          - Sun:08:00-Sun:08:30\n      schedulingTasks:\n        - cronExpression: 0 1 * * *\n          isEnabled: true\n          taskHeadrooms:\n            - cpuPerUnit: 1000\n              gpuPerUnit: 0\n              memoryPerUnit: 2048\n              numOfUnits: 5\n          taskType: manualHeadroomUpdate\n      securityGroups:\n        - sg-987654321\n      strategies:\n        - spotPercentage: 70\n      subnetIds:\n        - subnet-1234\n      tags:\n        - key: Env\n          value: production\n      taints:\n        - effect: NoExecute\n          key: key1\n          value: value1\n      userData: echo Hello, world!\n```\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const oceanLaunchspecId = spotinst_ocean_aws_launch_spec.example.id;\n```\n```python\nimport pulumi\n\npulumi.export(\"oceanLaunchspecId\", spotinst_ocean_aws_launch_spec[\"example\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"oceanLaunchspecId\"] = spotinst_ocean_aws_launch_spec.Example.Id,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"oceanLaunchspecId\", spotinst_ocean_aws_launch_spec.Example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        ctx.export(\"oceanLaunchspecId\", spotinst_ocean_aws_launch_spec.example().id());\n    }\n}\n```\n```yaml\noutputs:\n  oceanLaunchspecId: ${spotinst_ocean_aws_launch_spec.example.id}\n```\n{{% /example %}}\n{{% /examples %}}\n## Update Policy\n\n* `update_policy` - (Optional)\n    * `should_roll` - (Required) Enables the roll.\n    * `roll_config` - (Required) Holds the roll configuration.\n        * `batch_size_percentage` - (Required) Sets the percentage of the instances to deploy in each batch.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n",
            "properties": {
                "associatePublicIpAddress": {
                    "type": "boolean",
                    "description": "Configure public IP address allocation.\n"
                },
                "autoscaleDowns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecAutoscaleDown:OceanLaunchSpecAutoscaleDown"
                    },
                    "description": "Auto Scaling scale down operations.\n"
                },
                "autoscaleHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                    },
                    "description": "Set custom headroom per Virtual Node Group. Provide a list of headrooms object.\n"
                },
                "autoscaleHeadroomsAutomatics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecAutoscaleHeadroomsAutomatic:OceanLaunchSpecAutoscaleHeadroomsAutomatic"
                    },
                    "description": "Set automatic headroom per launch spec.\n"
                },
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecBlockDeviceMapping:OceanLaunchSpecBlockDeviceMapping"
                    },
                    "description": "Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.\n"
                },
                "createOptions": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecCreateOptions:OceanLaunchSpecCreateOptions"
                },
                "deleteOptions": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecDeleteOptions:OceanLaunchSpecDeleteOptions"
                },
                "elasticIpPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecElasticIpPool:OceanLaunchSpecElasticIpPool"
                    },
                    "description": "Assign an Elastic IP to the instances spun by the Virtual Node Group. Can be null.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "Identifier of the image in AWS. Valid values: any string which is not empty or null.\n"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecImage:OceanLaunchSpecImage"
                    },
                    "description": "Array of objects (Image object, containing the id of the image used to launch instances.) You can configure VNG with either the imageId or images objects, but not both simultaneously.\nFor each architecture type (amd64, arm64) only one AMI is allowed. Valid values: null, or an array with at least one element.\n"
                },
                "instanceMetadataOptions": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecInstanceMetadataOptions:OceanLaunchSpecInstanceMetadataOptions",
                    "description": "Ocean instance metadata options object for IMDSv2.\n"
                },
                "instanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of instance types allowed to be provisioned for pods pending under the specified launch specification. The list overrides the list defined for the cluster.\n"
                },
                "instanceTypesFilters": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecInstanceTypesFilters:OceanLaunchSpecInstanceTypesFilters",
                    "description": "The instance types that match with all filters compose the Virtual Node Group's instanceTypes parameter.\nThe architectures that come from the Virtual Node Group's images will be taken into account when using this parameter. Cannot be configured together with Virtual Node Group's instanceTypes and with the Cluster's whitelist/blacklist/filters.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecLabel:OceanLaunchSpecLabel"
                    },
                    "description": "Optionally adds labels to instances launched in the cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Virtual Node Group.\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The ID of the Ocean cluster.\n"
                },
                "preferredSpotTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of instance types. Takes the preferred types into consideration while maintaining a variety of machine types running for optimized distribution.\n"
                },
                "resourceLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecResourceLimit:OceanLaunchSpecResourceLimit"
                    }
                },
                "restrictScaleDown": {
                    "type": "boolean",
                    "description": "Boolean. When set to `True`, nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.\n"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "description": "Set root volume size (in GB).\n"
                },
                "schedulingShutdownHours": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecSchedulingShutdownHours:OceanLaunchSpecSchedulingShutdownHours",
                    "description": "Used to specify times that the nodes in the virtual node group will be taken down.\n"
                },
                "schedulingTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecSchedulingTask:OceanLaunchSpecSchedulingTask"
                    },
                    "description": "Used to define scheduled tasks such as a manual headroom update.\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optionally adds security group IDs.\n"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecStrategy:OceanLaunchSpecStrategy"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of subnet IDs.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecTag:OceanLaunchSpecTag"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecTaint:OceanLaunchSpecTaint"
                    },
                    "description": "Optionally adds labels to instances launched in the cluster.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecUpdatePolicy:OceanLaunchSpecUpdatePolicy"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                }
            },
            "required": [
                "name",
                "oceanId"
            ],
            "inputProperties": {
                "associatePublicIpAddress": {
                    "type": "boolean",
                    "description": "Configure public IP address allocation.\n"
                },
                "autoscaleDowns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecAutoscaleDown:OceanLaunchSpecAutoscaleDown"
                    },
                    "description": "Auto Scaling scale down operations.\n"
                },
                "autoscaleHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                    },
                    "description": "Set custom headroom per Virtual Node Group. Provide a list of headrooms object.\n"
                },
                "autoscaleHeadroomsAutomatics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecAutoscaleHeadroomsAutomatic:OceanLaunchSpecAutoscaleHeadroomsAutomatic"
                    },
                    "description": "Set automatic headroom per launch spec.\n"
                },
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecBlockDeviceMapping:OceanLaunchSpecBlockDeviceMapping"
                    },
                    "description": "Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.\n"
                },
                "createOptions": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecCreateOptions:OceanLaunchSpecCreateOptions"
                },
                "deleteOptions": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecDeleteOptions:OceanLaunchSpecDeleteOptions"
                },
                "elasticIpPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecElasticIpPool:OceanLaunchSpecElasticIpPool"
                    },
                    "description": "Assign an Elastic IP to the instances spun by the Virtual Node Group. Can be null.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "Identifier of the image in AWS. Valid values: any string which is not empty or null.\n"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecImage:OceanLaunchSpecImage"
                    },
                    "description": "Array of objects (Image object, containing the id of the image used to launch instances.) You can configure VNG with either the imageId or images objects, but not both simultaneously.\nFor each architecture type (amd64, arm64) only one AMI is allowed. Valid values: null, or an array with at least one element.\n"
                },
                "instanceMetadataOptions": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecInstanceMetadataOptions:OceanLaunchSpecInstanceMetadataOptions",
                    "description": "Ocean instance metadata options object for IMDSv2.\n"
                },
                "instanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of instance types allowed to be provisioned for pods pending under the specified launch specification. The list overrides the list defined for the cluster.\n"
                },
                "instanceTypesFilters": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecInstanceTypesFilters:OceanLaunchSpecInstanceTypesFilters",
                    "description": "The instance types that match with all filters compose the Virtual Node Group's instanceTypes parameter.\nThe architectures that come from the Virtual Node Group's images will be taken into account when using this parameter. Cannot be configured together with Virtual Node Group's instanceTypes and with the Cluster's whitelist/blacklist/filters.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecLabel:OceanLaunchSpecLabel"
                    },
                    "description": "Optionally adds labels to instances launched in the cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Virtual Node Group.\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The ID of the Ocean cluster.\n",
                    "willReplaceOnChanges": true
                },
                "preferredSpotTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of instance types. Takes the preferred types into consideration while maintaining a variety of machine types running for optimized distribution.\n"
                },
                "resourceLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecResourceLimit:OceanLaunchSpecResourceLimit"
                    }
                },
                "restrictScaleDown": {
                    "type": "boolean",
                    "description": "Boolean. When set to `True`, nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.\n"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "description": "Set root volume size (in GB).\n"
                },
                "schedulingShutdownHours": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecSchedulingShutdownHours:OceanLaunchSpecSchedulingShutdownHours",
                    "description": "Used to specify times that the nodes in the virtual node group will be taken down.\n"
                },
                "schedulingTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecSchedulingTask:OceanLaunchSpecSchedulingTask"
                    },
                    "description": "Used to define scheduled tasks such as a manual headroom update.\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optionally adds security group IDs.\n"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecStrategy:OceanLaunchSpecStrategy"
                    }
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of subnet IDs.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecTag:OceanLaunchSpecTag"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecTaint:OceanLaunchSpecTaint"
                    },
                    "description": "Optionally adds labels to instances launched in the cluster.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecUpdatePolicy:OceanLaunchSpecUpdatePolicy"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                }
            },
            "requiredInputs": [
                "oceanId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanLaunchSpec resources.\n",
                "properties": {
                    "associatePublicIpAddress": {
                        "type": "boolean",
                        "description": "Configure public IP address allocation.\n"
                    },
                    "autoscaleDowns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecAutoscaleDown:OceanLaunchSpecAutoscaleDown"
                        },
                        "description": "Auto Scaling scale down operations.\n"
                    },
                    "autoscaleHeadrooms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                        },
                        "description": "Set custom headroom per Virtual Node Group. Provide a list of headrooms object.\n"
                    },
                    "autoscaleHeadroomsAutomatics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecAutoscaleHeadroomsAutomatic:OceanLaunchSpecAutoscaleHeadroomsAutomatic"
                        },
                        "description": "Set automatic headroom per launch spec.\n"
                    },
                    "blockDeviceMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecBlockDeviceMapping:OceanLaunchSpecBlockDeviceMapping"
                        },
                        "description": "Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.\n"
                    },
                    "createOptions": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecCreateOptions:OceanLaunchSpecCreateOptions"
                    },
                    "deleteOptions": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecDeleteOptions:OceanLaunchSpecDeleteOptions"
                    },
                    "elasticIpPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecElasticIpPool:OceanLaunchSpecElasticIpPool"
                        },
                        "description": "Assign an Elastic IP to the instances spun by the Virtual Node Group. Can be null.\n"
                    },
                    "iamInstanceProfile": {
                        "type": "string",
                        "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "Identifier of the image in AWS. Valid values: any string which is not empty or null.\n"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecImage:OceanLaunchSpecImage"
                        },
                        "description": "Array of objects (Image object, containing the id of the image used to launch instances.) You can configure VNG with either the imageId or images objects, but not both simultaneously.\nFor each architecture type (amd64, arm64) only one AMI is allowed. Valid values: null, or an array with at least one element.\n"
                    },
                    "instanceMetadataOptions": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecInstanceMetadataOptions:OceanLaunchSpecInstanceMetadataOptions",
                        "description": "Ocean instance metadata options object for IMDSv2.\n"
                    },
                    "instanceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of instance types allowed to be provisioned for pods pending under the specified launch specification. The list overrides the list defined for the cluster.\n"
                    },
                    "instanceTypesFilters": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecInstanceTypesFilters:OceanLaunchSpecInstanceTypesFilters",
                        "description": "The instance types that match with all filters compose the Virtual Node Group's instanceTypes parameter.\nThe architectures that come from the Virtual Node Group's images will be taken into account when using this parameter. Cannot be configured together with Virtual Node Group's instanceTypes and with the Cluster's whitelist/blacklist/filters.\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecLabel:OceanLaunchSpecLabel"
                        },
                        "description": "Optionally adds labels to instances launched in the cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Virtual Node Group.\n"
                    },
                    "oceanId": {
                        "type": "string",
                        "description": "The ID of the Ocean cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "preferredSpotTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of instance types. Takes the preferred types into consideration while maintaining a variety of machine types running for optimized distribution.\n"
                    },
                    "resourceLimits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecResourceLimit:OceanLaunchSpecResourceLimit"
                        }
                    },
                    "restrictScaleDown": {
                        "type": "boolean",
                        "description": "Boolean. When set to `True`, nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.\n"
                    },
                    "rootVolumeSize": {
                        "type": "integer",
                        "description": "Set root volume size (in GB).\n"
                    },
                    "schedulingShutdownHours": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecSchedulingShutdownHours:OceanLaunchSpecSchedulingShutdownHours",
                        "description": "Used to specify times that the nodes in the virtual node group will be taken down.\n"
                    },
                    "schedulingTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecSchedulingTask:OceanLaunchSpecSchedulingTask"
                        },
                        "description": "Used to define scheduled tasks such as a manual headroom update.\n"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Optionally adds security group IDs.\n"
                    },
                    "strategies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecStrategy:OceanLaunchSpecStrategy"
                        }
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of subnet IDs.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecTag:OceanLaunchSpecTag"
                        },
                        "description": "A key/value mapping of tags to assign to the resource.\n"
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecTaint:OceanLaunchSpecTaint"
                        },
                        "description": "Optionally adds labels to instances launched in the cluster.\n"
                    },
                    "updatePolicy": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecUpdatePolicy:OceanLaunchSpecUpdatePolicy"
                    },
                    "userData": {
                        "type": "string",
                        "description": "Base64-encoded MIME user data to make available to the instances.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:aws/suspension:Suspension": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\n// Create a suspension for Elastigroup\nconst resourceName = new spotinst.aws.Suspension(\"resourceName\", {\n    groupId: \"sig-12345678\",\n    suspensions: [\n        {\n            name: \"OUT_OF_STRATEGY\",\n        },\n        {\n            name: \"REVERT_PREFERRED\",\n        },\n        {\n            name: \"PREVENTIVE_REPLACEMENT\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\n# Create a suspension for Elastigroup\nresource_name = spotinst.aws.Suspension(\"resourceName\",\n    group_id=\"sig-12345678\",\n    suspensions=[\n        spotinst.aws.SuspensionSuspensionArgs(\n            name=\"OUT_OF_STRATEGY\",\n        ),\n        spotinst.aws.SuspensionSuspensionArgs(\n            name=\"REVERT_PREFERRED\",\n        ),\n        spotinst.aws.SuspensionSuspensionArgs(\n            name=\"PREVENTIVE_REPLACEMENT\",\n        ),\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a suspension for Elastigroup\n    var resourceName = new SpotInst.Aws.Suspension(\"resourceName\", new()\n    {\n        GroupId = \"sig-12345678\",\n        Suspensions = new[]\n        {\n            new SpotInst.Aws.Inputs.SuspensionSuspensionArgs\n            {\n                Name = \"OUT_OF_STRATEGY\",\n            },\n            new SpotInst.Aws.Inputs.SuspensionSuspensionArgs\n            {\n                Name = \"REVERT_PREFERRED\",\n            },\n            new SpotInst.Aws.Inputs.SuspensionSuspensionArgs\n            {\n                Name = \"PREVENTIVE_REPLACEMENT\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewSuspension(ctx, \"resourceName\", \u0026aws.SuspensionArgs{\n\t\t\tGroupId: pulumi.String(\"sig-12345678\"),\n\t\t\tSuspensions: aws.SuspensionSuspensionArray{\n\t\t\t\t\u0026aws.SuspensionSuspensionArgs{\n\t\t\t\t\tName: pulumi.String(\"OUT_OF_STRATEGY\"),\n\t\t\t\t},\n\t\t\t\t\u0026aws.SuspensionSuspensionArgs{\n\t\t\t\t\tName: pulumi.String(\"REVERT_PREFERRED\"),\n\t\t\t\t},\n\t\t\t\t\u0026aws.SuspensionSuspensionArgs{\n\t\t\t\t\tName: pulumi.String(\"PREVENTIVE_REPLACEMENT\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.aws.Suspension;\nimport com.pulumi.spotinst.aws.SuspensionArgs;\nimport com.pulumi.spotinst.aws.inputs.SuspensionSuspensionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var resourceName = new Suspension(\"resourceName\", SuspensionArgs.builder()        \n            .groupId(\"sig-12345678\")\n            .suspensions(            \n                SuspensionSuspensionArgs.builder()\n                    .name(\"OUT_OF_STRATEGY\")\n                    .build(),\n                SuspensionSuspensionArgs.builder()\n                    .name(\"REVERT_PREFERRED\")\n                    .build(),\n                SuspensionSuspensionArgs.builder()\n                    .name(\"PREVENTIVE_REPLACEMENT\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a suspension for Elastigroup\n  resourceName:\n    type: spotinst:aws:Suspension\n    properties:\n      groupId: sig-12345678\n      suspensions:\n        - name: OUT_OF_STRATEGY\n        - name: REVERT_PREFERRED\n        - name: PREVENTIVE_REPLACEMENT\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "Elastigroup ID to apply the suspensions on.\n"
                },
                "suspensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/SuspensionSuspension:SuspensionSuspension"
                    },
                    "description": "block of single process to suspend.\n"
                }
            },
            "required": [
                "groupId",
                "suspensions"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "string",
                    "description": "Elastigroup ID to apply the suspensions on.\n",
                    "willReplaceOnChanges": true
                },
                "suspensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/SuspensionSuspension:SuspensionSuspension"
                    },
                    "description": "block of single process to suspend.\n"
                }
            },
            "requiredInputs": [
                "groupId",
                "suspensions"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Suspension resources.\n",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "Elastigroup ID to apply the suspensions on.\n",
                        "willReplaceOnChanges": true
                    },
                    "suspensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/SuspensionSuspension:SuspensionSuspension"
                        },
                        "description": "block of single process to suspend.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:azure/elastigroup:Elastigroup": {
            "description": "Provides a Spotinst elastigroup Azure resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.ElastigroupAzureV3;\nimport com.pulumi.spotinst.ElastigroupAzureV3Args;\nimport com.pulumi.spotinst.inputs.ElastigroupAzureV3ImageArgs;\nimport com.pulumi.spotinst.inputs.ElastigroupAzureV3LoginArgs;\nimport com.pulumi.spotinst.inputs.ElastigroupAzureV3ManagedServiceIdentityArgs;\nimport com.pulumi.spotinst.inputs.ElastigroupAzureV3NetworkArgs;\nimport com.pulumi.spotinst.inputs.ElastigroupAzureV3TagArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testAzureGroup = new ElastigroupAzureV3(\"testAzureGroup\", ElastigroupAzureV3Args.builder()        \n            .customData(\"IyEvYmluL2Jhc2gKZWNobyAidGVzdCI=\")\n            .desiredCapacity(1)\n            .drainingTimeout(300)\n            .fallbackToOnDemand(true)\n            .images(ElastigroupAzureV3ImageArgs.builder()\n                .marketplaces(ElastigroupAzureV3ImageMarketplaceArgs.builder()\n                    .offer(\"UbuntuServer\")\n                    .publisher(\"Canonical\")\n                    .sku(\"18.04-LTS\")\n                    .version(\"latest\")\n                    .build())\n                .build())\n            .login(ElastigroupAzureV3LoginArgs.builder()\n                .sshPublicKey(\"33a2s1f3g5a1df5g1ad3f2g1adfg56dfg==\")\n                .userName(\"admin\")\n                .build())\n            .managedServiceIdentities(ElastigroupAzureV3ManagedServiceIdentityArgs.builder()\n                .name(\"ocean-westus-dev-aks-agentpool\")\n                .resourceGroupName(\"MC_ocean-westus-dev_ocean-westus-dev-aks_westus\")\n                .build())\n            .maxSize(1)\n            .minSize(0)\n            .network(ElastigroupAzureV3NetworkArgs.builder()\n                .networkInterfaces(ElastigroupAzureV3NetworkNetworkInterfaceArgs.builder()\n                    .additionalIpConfigs(ElastigroupAzureV3NetworkNetworkInterfaceAdditionalIpConfigArgs.builder()\n                        .privateIPVersion(\"IPv4\")\n                        .name(\"SecondaryIPConfig\")\n                        .build())\n                    .applicationSecurityGroup(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                    .assignPublicIp(false)\n                    .isPrimary(true)\n                    .subnetName(\"default\")\n                    .build())\n                .resourceGroupName(\"ResourceGroup\")\n                .virtualNetworkName(\"VirtualNetworkName\")\n                .build())\n            .odSizes(            \n                \"standard_a1_v1\",\n                \"standard_a1_v2\")\n            .os(\"Linux\")\n            .region(\"eastus\")\n            .resourceGroupName(\"spotinst-azure\")\n            .spotPercentage(65)\n            .spotSizes(            \n                \"standard_a1_v1\",\n                \"standard_a1_v2\")\n            .tags(            \n                ElastigroupAzureV3TagArgs.builder()\n                    .key(\"key1\")\n                    .value(\"value1\")\n                    .build(),\n                ElastigroupAzureV3TagArgs.builder()\n                    .key(\"key2\")\n                    .value(\"value2\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testAzureGroup:\n    type: spotinst:ElastigroupAzureV3\n    properties:\n      # --- LAUNCH SPEC ---------------------------------------------------\n      customData: IyEvYmluL2Jhc2gKZWNobyAidGVzdCI=\n      desiredCapacity: 1\n      drainingTimeout: 300\n      fallbackToOnDemand: true\n      # --- IMAGE ---------------------------------------------------------\n      images:\n        - marketplaces:\n            - offer: UbuntuServer\n              publisher: Canonical\n              sku: 18.04-LTS\n              version: latest\n      # --- LOGIN ---------------------------------------------------------\n      login:\n        sshPublicKey: 33a2s1f3g5a1df5g1ad3f2g1adfg56dfg==\n        userName: admin\n      managedServiceIdentities:\n        - name: ocean-westus-dev-aks-agentpool\n          resourceGroupName: MC_ocean-westus-dev_ocean-westus-dev-aks_westus\n      maxSize: 1\n      # --- CAPACITY ------------------------------------------------------\n      minSize: 0\n      # --- NETWORK -------------------------------------------------------\n      network:\n        networkInterfaces:\n          - additionalIpConfigs:\n              - PrivateIPVersion: IPv4\n                name: SecondaryIPConfig\n            applicationSecurityGroup:\n              - name: ApplicationSecurityGroupName\n                resourceGroupName: ResourceGroup\n            assignPublicIp: false\n            isPrimary: true\n            subnetName: default\n        resourceGroupName: ResourceGroup\n        virtualNetworkName: VirtualNetworkName\n      # --- INSTANCE TYPES ------------------------------------------------\n      odSizes:\n        - standard_a1_v1\n        - standard_a1_v2\n      os: Linux\n      region: eastus\n      resourceGroupName: spotinst-azure\n      # --- STRATEGY ------------------------------------------------------\n      #     //on_demand_count     = 1\n      spotPercentage: 65\n      spotSizes:\n        - standard_a1_v1\n        - standard_a1_v2\n      tags:\n        - key: key1\n          value: value1\n        - key: key2\n          value: value2\n```\n{{% /example %}}\n{{% /examples %}}\n## Strategy\n\n* `spot_percentage` - (Optional) Percentage of Spot-VMs to maintain. Required if `on_demand_count` is not specified.\n* `on_demand_count` - (Optional) Number of On-Demand VMs to maintain. Required if `spot_percentage` is not specified.\n* `fallback_to_on_demand` -\n* `draining_timeout` - (Optional, Default `120`) Time (seconds) to allow the instance to be drained from incoming TCP connections and detached from MLB before terminating it during a scale-down operation.\n\n\u003ca id=\"image\"\u003e\u003c/a\u003e\n## Image\n\n* `image` - (Required) Image of a VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace) or use a custom image.\n    * `publisher` - (Optional) Image publisher. Required if resource_group_name is not specified.\n    * `offer` - (Optional) Name of the image to use. Required if publisher is specified.\n    * `sku` - (Optional) Image's Stock Keeping Unit, which is the specific version of the image. Required if publisher is specified.\n    * `version` -\n    * `resource_group_name` - (Optional) Name of Resource Group for custom image. Required if publisher not specified.\n    * `image_name` - (Optional) Name of the custom image. Required if resource_group_name is specified.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n\u003ca id=\"network\"\u003e\u003c/a\u003e\n## Network\n\n* `network` - (Required) Defines the Virtual Network and Subnet for your Elastigroup.\n    * `virtual_network_name` - (Required) Name of Vnet.\n    * `resource_group_name` - (Required) Vnet Resource Group Name.\n    * `network_interfaces` -\n        * `subnet_name` - (Required) ID of subnet.\n        * `assign_public_up` - (Optional, Default: `false`) Assign a public IP to each VM in the Elastigroup.\n        * `is_primary` -\n        * `additional_ip_configs` - (Optional) Array of additional IP configuration objects.\n            * `name` - (Required) The IP configuration name.\n            * `private_ip_version` - (Optional) Available from Azure Api-Version 2017-03-30 onwards, it represents whether the specific ip configuration is IPv4 or IPv6. Valid values: `IPv4`, `IPv6`.\n        * `application_security_group` - (Optional) - List of Application Security Groups that will be associated to the primary ip configuration of the network interface.\n            * `name` - (Required) - The name of the Application Security group.\n            * `resource_group_name` - (Required) - The resource group of the Application Security Group.\n      }\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n### Login\n\n* `login` - (Required) Describes the login configuration.\n    * `user_name` - (Required) Set admin access for accessing your VMs.\n    * `ssh_public_key` - (Optional) SSH for admin access to Linux VMs. Required for Linux OS types.\n    * `password` - (Optional) Password for admin access to Windows VMs. Required for Windows OS types.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n",
            "properties": {
                "customData": {
                    "type": "string",
                    "description": "Custom init script file or text in Base64 encoded format.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "healthCheck": {
                    "$ref": "#/types/spotinst:azure/ElastigroupHealthCheck:ElastigroupHealthCheck"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupImage:ElastigroupImage"
                    }
                },
                "integrationKubernetes": {
                    "$ref": "#/types/spotinst:azure/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes"
                },
                "integrationMultaiRuntime": {
                    "$ref": "#/types/spotinst:azure/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupLoadBalancer:ElastigroupLoadBalancer"
                    }
                },
                "login": {
                    "$ref": "#/types/spotinst:azure/ElastigroupLogin:ElastigroupLogin"
                },
                "lowPrioritySizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "managedServiceIdentities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupManagedServiceIdentity:ElastigroupManagedServiceIdentity"
                    }
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Managed Service Identity.\n"
                },
                "network": {
                    "$ref": "#/types/spotinst:azure/ElastigroupNetwork:ElastigroupNetwork"
                },
                "odSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Available On-Demand sizes\n"
                },
                "product": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "description": "The region your Azure group will be created in.\n"
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "Name of the Azure Resource Group where the Managed Service Identity is located.\n"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    }
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    }
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScheduledTask:ElastigroupScheduledTask"
                    }
                },
                "shutdownScript": {
                    "type": "string"
                },
                "strategy": {
                    "$ref": "#/types/spotinst:azure/ElastigroupStrategy:ElastigroupStrategy"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:azure/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy"
                },
                "userData": {
                    "type": "string"
                }
            },
            "required": [
                "lowPrioritySizes",
                "maxSize",
                "minSize",
                "name",
                "network",
                "odSizes",
                "product",
                "region",
                "resourceGroupName",
                "strategy"
            ],
            "inputProperties": {
                "customData": {
                    "type": "string",
                    "description": "Custom init script file or text in Base64 encoded format.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "healthCheck": {
                    "$ref": "#/types/spotinst:azure/ElastigroupHealthCheck:ElastigroupHealthCheck"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupImage:ElastigroupImage"
                    }
                },
                "integrationKubernetes": {
                    "$ref": "#/types/spotinst:azure/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes"
                },
                "integrationMultaiRuntime": {
                    "$ref": "#/types/spotinst:azure/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupLoadBalancer:ElastigroupLoadBalancer"
                    }
                },
                "login": {
                    "$ref": "#/types/spotinst:azure/ElastigroupLogin:ElastigroupLogin"
                },
                "lowPrioritySizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "managedServiceIdentities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupManagedServiceIdentity:ElastigroupManagedServiceIdentity"
                    }
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Managed Service Identity.\n"
                },
                "network": {
                    "$ref": "#/types/spotinst:azure/ElastigroupNetwork:ElastigroupNetwork"
                },
                "odSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Available On-Demand sizes\n"
                },
                "product": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "description": "The region your Azure group will be created in.\n"
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "Name of the Azure Resource Group where the Managed Service Identity is located.\n"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    }
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    }
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScheduledTask:ElastigroupScheduledTask"
                    }
                },
                "shutdownScript": {
                    "type": "string"
                },
                "strategy": {
                    "$ref": "#/types/spotinst:azure/ElastigroupStrategy:ElastigroupStrategy"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:azure/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy"
                },
                "userData": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "lowPrioritySizes",
                "network",
                "odSizes",
                "product",
                "region",
                "resourceGroupName",
                "strategy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Elastigroup resources.\n",
                "properties": {
                    "customData": {
                        "type": "string",
                        "description": "Custom init script file or text in Base64 encoded format.\n"
                    },
                    "desiredCapacity": {
                        "type": "integer",
                        "description": "The desired number of instances the group should have at any time.\n"
                    },
                    "healthCheck": {
                        "$ref": "#/types/spotinst:azure/ElastigroupHealthCheck:ElastigroupHealthCheck"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/ElastigroupImage:ElastigroupImage"
                        }
                    },
                    "integrationKubernetes": {
                        "$ref": "#/types/spotinst:azure/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes"
                    },
                    "integrationMultaiRuntime": {
                        "$ref": "#/types/spotinst:azure/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime"
                    },
                    "loadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/ElastigroupLoadBalancer:ElastigroupLoadBalancer"
                        }
                    },
                    "login": {
                        "$ref": "#/types/spotinst:azure/ElastigroupLogin:ElastigroupLogin"
                    },
                    "lowPrioritySizes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "managedServiceIdentities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/ElastigroupManagedServiceIdentity:ElastigroupManagedServiceIdentity"
                        }
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The maximum number of instances the group should have at any time.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The minimum number of instances the group should have at any time.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Managed Service Identity.\n"
                    },
                    "network": {
                        "$ref": "#/types/spotinst:azure/ElastigroupNetwork:ElastigroupNetwork"
                    },
                    "odSizes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Available On-Demand sizes\n"
                    },
                    "product": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region your Azure group will be created in.\n"
                    },
                    "resourceGroupName": {
                        "type": "string",
                        "description": "Name of the Azure Resource Group where the Managed Service Identity is located.\n"
                    },
                    "scalingDownPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                        }
                    },
                    "scalingUpPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                        }
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/ElastigroupScheduledTask:ElastigroupScheduledTask"
                        }
                    },
                    "shutdownScript": {
                        "type": "string"
                    },
                    "strategy": {
                        "$ref": "#/types/spotinst:azure/ElastigroupStrategy:ElastigroupStrategy"
                    },
                    "updatePolicy": {
                        "$ref": "#/types/spotinst:azure/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy"
                    },
                    "userData": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:azure/ocean:Ocean": {
            "description": "Manages a Spotinst Ocean AKS resource.\n\n\u003e This resource contains arguments (such as `image` and `extension`) that are automatically populated from the data reported by the Ocean AKS Connector deployed into your cluster. You can override the upstream configuration by defining the corresponding arguments.\n\n## Prerequisites\n\nInstallation of the Ocean controller is required by this resource. You can accomplish this by using the spotinst/ocean-controller module as follows:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n\u003e You must configure the same `cluster_identifier` and `acd_identifier` both for the Ocean controller and for the `spotinst.azure.Ocean` resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.azure.Ocean;\nimport com.pulumi.spotinst.azure.OceanArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanAutoscalerArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanAutoscalerAutoscaleDownArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanAutoscalerAutoscaleHeadroomArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanAutoscalerAutoscaleHeadroomAutomaticArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanAutoscalerResourceLimitsArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanExtensionArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanHealthArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanImageArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanLoadBalancerArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanManagedServiceIdentityArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanNetworkArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanOsDiskArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanStrategyArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanTagArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanVmSizeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ocean(\"example\", OceanArgs.builder()        \n            .acdIdentifier(\"acd-12345678\")\n            .aksName(\"ocean-westus-dev-aks\")\n            .aksResourceGroupName(\"ocean-westus-dev\")\n            .autoscaler(OceanAutoscalerArgs.builder()\n                .autoscaleDown(OceanAutoscalerAutoscaleDownArgs.builder()\n                    .maxScaleDownPercentage(10)\n                    .build())\n                .autoscaleHeadroom(OceanAutoscalerAutoscaleHeadroomArgs.builder()\n                    .automatic(OceanAutoscalerAutoscaleHeadroomAutomaticArgs.builder()\n                        .isEnabled(true)\n                        .percentage(10)\n                        .build())\n                    .build())\n                .autoscaleIsEnabled(true)\n                .resourceLimits(OceanAutoscalerResourceLimitsArgs.builder()\n                    .maxMemoryGib(40)\n                    .maxVcpu(1024)\n                    .build())\n                .build())\n            .controllerClusterId(\"ocean-westus-dev-aks\")\n            .customData(\"[... redacted ...]\")\n            .extensions(OceanExtensionArgs.builder()\n                .apiVersion(\"1.0\")\n                .minorVersionAutoUpgrade(true)\n                .name(\"extension-name\")\n                .publisher(\"Microsoft.Azure.Extensions\")\n                .type(\"Linux\")\n                .build())\n            .health(OceanHealthArgs.builder()\n                .gracePeriod(10)\n                .build())\n            .images(OceanImageArgs.builder()\n                .marketplaces(OceanImageMarketplaceArgs.builder()\n                    .offer(\"UbuntuServer\")\n                    .publisher(\"Canonical\")\n                    .sku(\"18.04-LTS\")\n                    .version(\"latest\")\n                    .build())\n                .build())\n            .loadBalancers(OceanLoadBalancerArgs.builder()\n                .backendPoolNames(\"terraform-backend-pool\")\n                .loadBalancerSku(\"Standard\")\n                .name(\"load-balancer-name\")\n                .resourceGroupName(\"resource-group-name\")\n                .type(\"loadBalancer\")\n                .build())\n            .managedServiceIdentities(OceanManagedServiceIdentityArgs.builder()\n                .name(\"ocean-westus-dev-aks-agentpool\")\n                .resourceGroupName(\"MC_ocean-westus-dev_ocean-westus-dev-aks_westus\")\n                .build())\n            .maxPods(30)\n            .network(OceanNetworkArgs.builder()\n                .networkInterfaces(OceanNetworkNetworkInterfaceArgs.builder()\n                    .additionalIpConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                    .assignPublicIp(false)\n                    .isPrimary(false)\n                    .subnetName(\"subnet-name\")\n                    .build())\n                .resourceGroupName(\"ocean-westus-dev\")\n                .virtualNetworkName(\"vn-name\")\n                .build())\n            .osDisk(OceanOsDiskArgs.builder()\n                .sizeGb(130)\n                .type(\"Standard_LRS\")\n                .build())\n            .resourceGroupName(\"some-resource-group-name\")\n            .sshPublicKey(\"ssh-rsa [... redacted ...] generated-by-azure\")\n            .strategies(OceanStrategyArgs.builder()\n                .fallbackToOndemand(true)\n                .spotPercentage(40)\n                .build())\n            .tags(OceanTagArgs.builder()\n                .key(\"Environment\")\n                .value(\"Dev\")\n                .build())\n            .userName(\"some-name\")\n            .vmSizes(OceanVmSizeArgs.builder()\n                .whitelists(\"standard_ds2_v2\")\n                .build())\n            .zones(            \n                \"1\",\n                \"2\",\n                \"3\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: spotinst:azure:Ocean\n    properties:\n      # --- AKS -----------------------------------------------------------\n      acdIdentifier: acd-12345678\n      aksName: ocean-westus-dev-aks\n      aksResourceGroupName: ocean-westus-dev\n      # --- Auto Scaler ------------------------------------------------------\n      autoscaler:\n        autoscaleDown:\n          maxScaleDownPercentage: 10\n        autoscaleHeadroom:\n          automatic:\n            isEnabled: true\n            percentage: 10\n        autoscaleIsEnabled: true\n        resourceLimits:\n          maxMemoryGib: 40\n          maxVcpu: 1024\n      controllerClusterId: ocean-westus-dev-aks\n      customData: '[... redacted ...]'\n      # --- Extensions -------------------------------------------------------\n      extensions:\n        - apiVersion: '1.0'\n          minorVersionAutoUpgrade: true\n          name: extension-name\n          publisher: Microsoft.Azure.Extensions\n          type: Linux\n      # --- Health ----------------------------------------------------------\n      health:\n        gracePeriod: 10\n      # --- Image ---------------------------------------------------------\n      images:\n        - marketplaces:\n            - offer: UbuntuServer\n              publisher: Canonical\n              sku: 18.04-LTS\n              version: latest\n      # --- Load Balancers ---------------------------------------------------\n      loadBalancers:\n        - backendPoolNames:\n            - terraform-backend-pool\n          loadBalancerSku: Standard\n          name: load-balancer-name\n          resourceGroupName: resource-group-name\n          type: loadBalancer\n      managedServiceIdentities:\n        - name: ocean-westus-dev-aks-agentpool\n          resourceGroupName: MC_ocean-westus-dev_ocean-westus-dev-aks_westus\n      maxPods: 30\n      # --- NETWORK ---------------------------------------------------------\n      network:\n        networkInterfaces:\n          - additionalIpConfig:\n              - name: ip-config-name\n                privateIpVersion: ipv4\n            assignPublicIp: false\n            isPrimary: false\n            subnetName: subnet-name\n        resourceGroupName: ocean-westus-dev\n        virtualNetworkName: vn-name\n      # --- OSDisk --------------------------------------------------------\n      osDisk:\n        sizeGb: 130\n        type: Standard_LRS\n      # --- Launch Specification ------------------------------------------\n      resourceGroupName: some-resource-group-name\n      # --- Login ---------------------------------------------------------\n      sshPublicKey: ssh-rsa [... redacted ...] generated-by-azure\n      # --- Strategy --------------------------------------------------------\n      strategies:\n        - fallbackToOndemand: true\n          spotPercentage: 40\n      tags:\n        - key: Environment\n          value: Dev\n      userName: some-name\n      # --- VMSizes --------------------------------------------------------\n      vmSizes:\n        - whitelists:\n            - standard_ds2_v2\n      zones:\n        - '1'\n        - '2'\n        - '3'\n```\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const oceanId = spotinst_ocean_aks.example.id;\n```\n```python\nimport pulumi\n\npulumi.export(\"oceanId\", spotinst_ocean_aks[\"example\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"oceanId\"] = spotinst_ocean_aks.Example.Id,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"oceanId\", spotinst_ocean_aks.Example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        ctx.export(\"oceanId\", spotinst_ocean_aks.example().id());\n    }\n}\n```\n```yaml\noutputs:\n  oceanId: ${spotinst_ocean_aks.example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "acdIdentifier": {
                    "type": "string",
                    "description": "The AKS identifier. A valid identifier should be formatted as `acd-nnnnnnnn` and previously used identifiers cannot be reused.\n"
                },
                "aksName": {
                    "type": "string",
                    "description": "The AKS cluster name.\n"
                },
                "aksResourceGroupName": {
                    "type": "string",
                    "description": "Name of the Azure Resource Group where the AKS cluster is located.\n"
                },
                "autoscaler": {
                    "$ref": "#/types/spotinst:azure/OceanAutoscaler:OceanAutoscaler",
                    "description": "The Ocean Kubernetes Autoscaler object.\n"
                },
                "controllerClusterId": {
                    "type": "string",
                    "description": "A unique identifier used for connecting the Ocean SaaS platform and the Kubernetes cluster. Typically, the cluster name is used as its identifier.\n"
                },
                "customData": {
                    "type": "string",
                    "description": "Must contain a valid Base64 encoded string.\n"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanExtension:OceanExtension"
                    },
                    "description": "List of Azure extension objects.\n"
                },
                "health": {
                    "$ref": "#/types/spotinst:azure/OceanHealth:OceanHealth",
                    "description": "The Ocean AKS Health object.\n"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanImage:OceanImage"
                    },
                    "description": "Image of VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace).\n"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanLoadBalancer:OceanLoadBalancer"
                    },
                    "description": "Configure Load Balancer.\n"
                },
                "managedServiceIdentities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanManagedServiceIdentity:OceanManagedServiceIdentity"
                    },
                    "description": "List of Managed Service Identity objects.\n"
                },
                "maxPods": {
                    "type": "integer",
                    "description": "The maximum number of pods per node in an AKS cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Load Balancer.\n"
                },
                "network": {
                    "$ref": "#/types/spotinst:azure/OceanNetwork:OceanNetwork",
                    "description": "Define the Virtual Network and Subnet.\n"
                },
                "osDisk": {
                    "$ref": "#/types/spotinst:azure/OceanOsDisk:OceanOsDisk",
                    "description": "OS disk specifications.\n"
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "The Resource Group name of the Load Balancer.\n"
                },
                "sshPublicKey": {
                    "type": "string",
                    "description": "SSH public key for admin access to Linux VMs.\n"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanStrategy:OceanStrategy"
                    },
                    "description": "The Ocean AKS strategy object.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanTag:OceanTag"
                    },
                    "description": "Unique key-value pairs that will be used to tag VMs that are launched in the cluster.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "Username for admin access to VMs.\n"
                },
                "vmSizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanVmSize:OceanVmSize"
                    },
                    "description": "The types of virtual machines that may or may not be a part of the Ocean cluster.\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An Array holding default Availability Zones, this configures the availability zones the Ocean may launch instances in.\n"
                }
            },
            "required": [
                "acdIdentifier",
                "aksName",
                "aksResourceGroupName",
                "controllerClusterId",
                "customData",
                "extensions",
                "health",
                "images",
                "loadBalancers",
                "name",
                "network",
                "resourceGroupName",
                "sshPublicKey",
                "userName",
                "zones"
            ],
            "inputProperties": {
                "acdIdentifier": {
                    "type": "string",
                    "description": "The AKS identifier. A valid identifier should be formatted as `acd-nnnnnnnn` and previously used identifiers cannot be reused.\n"
                },
                "aksName": {
                    "type": "string",
                    "description": "The AKS cluster name.\n"
                },
                "aksResourceGroupName": {
                    "type": "string",
                    "description": "Name of the Azure Resource Group where the AKS cluster is located.\n"
                },
                "autoscaler": {
                    "$ref": "#/types/spotinst:azure/OceanAutoscaler:OceanAutoscaler",
                    "description": "The Ocean Kubernetes Autoscaler object.\n"
                },
                "controllerClusterId": {
                    "type": "string",
                    "description": "A unique identifier used for connecting the Ocean SaaS platform and the Kubernetes cluster. Typically, the cluster name is used as its identifier.\n"
                },
                "customData": {
                    "type": "string",
                    "description": "Must contain a valid Base64 encoded string.\n"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanExtension:OceanExtension"
                    },
                    "description": "List of Azure extension objects.\n"
                },
                "health": {
                    "$ref": "#/types/spotinst:azure/OceanHealth:OceanHealth",
                    "description": "The Ocean AKS Health object.\n"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanImage:OceanImage"
                    },
                    "description": "Image of VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace).\n"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanLoadBalancer:OceanLoadBalancer"
                    },
                    "description": "Configure Load Balancer.\n"
                },
                "managedServiceIdentities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanManagedServiceIdentity:OceanManagedServiceIdentity"
                    },
                    "description": "List of Managed Service Identity objects.\n"
                },
                "maxPods": {
                    "type": "integer",
                    "description": "The maximum number of pods per node in an AKS cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Load Balancer.\n"
                },
                "network": {
                    "$ref": "#/types/spotinst:azure/OceanNetwork:OceanNetwork",
                    "description": "Define the Virtual Network and Subnet.\n"
                },
                "osDisk": {
                    "$ref": "#/types/spotinst:azure/OceanOsDisk:OceanOsDisk",
                    "description": "OS disk specifications.\n"
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "The Resource Group name of the Load Balancer.\n"
                },
                "sshPublicKey": {
                    "type": "string",
                    "description": "SSH public key for admin access to Linux VMs.\n"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanStrategy:OceanStrategy"
                    },
                    "description": "The Ocean AKS strategy object.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanTag:OceanTag"
                    },
                    "description": "Unique key-value pairs that will be used to tag VMs that are launched in the cluster.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "Username for admin access to VMs.\n"
                },
                "vmSizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanVmSize:OceanVmSize"
                    },
                    "description": "The types of virtual machines that may or may not be a part of the Ocean cluster.\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An Array holding default Availability Zones, this configures the availability zones the Ocean may launch instances in.\n"
                }
            },
            "requiredInputs": [
                "acdIdentifier",
                "aksName",
                "aksResourceGroupName",
                "sshPublicKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ocean resources.\n",
                "properties": {
                    "acdIdentifier": {
                        "type": "string",
                        "description": "The AKS identifier. A valid identifier should be formatted as `acd-nnnnnnnn` and previously used identifiers cannot be reused.\n"
                    },
                    "aksName": {
                        "type": "string",
                        "description": "The AKS cluster name.\n"
                    },
                    "aksResourceGroupName": {
                        "type": "string",
                        "description": "Name of the Azure Resource Group where the AKS cluster is located.\n"
                    },
                    "autoscaler": {
                        "$ref": "#/types/spotinst:azure/OceanAutoscaler:OceanAutoscaler",
                        "description": "The Ocean Kubernetes Autoscaler object.\n"
                    },
                    "controllerClusterId": {
                        "type": "string",
                        "description": "A unique identifier used for connecting the Ocean SaaS platform and the Kubernetes cluster. Typically, the cluster name is used as its identifier.\n"
                    },
                    "customData": {
                        "type": "string",
                        "description": "Must contain a valid Base64 encoded string.\n"
                    },
                    "extensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanExtension:OceanExtension"
                        },
                        "description": "List of Azure extension objects.\n"
                    },
                    "health": {
                        "$ref": "#/types/spotinst:azure/OceanHealth:OceanHealth",
                        "description": "The Ocean AKS Health object.\n"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanImage:OceanImage"
                        },
                        "description": "Image of VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace).\n"
                    },
                    "loadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanLoadBalancer:OceanLoadBalancer"
                        },
                        "description": "Configure Load Balancer.\n"
                    },
                    "managedServiceIdentities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanManagedServiceIdentity:OceanManagedServiceIdentity"
                        },
                        "description": "List of Managed Service Identity objects.\n"
                    },
                    "maxPods": {
                        "type": "integer",
                        "description": "The maximum number of pods per node in an AKS cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Load Balancer.\n"
                    },
                    "network": {
                        "$ref": "#/types/spotinst:azure/OceanNetwork:OceanNetwork",
                        "description": "Define the Virtual Network and Subnet.\n"
                    },
                    "osDisk": {
                        "$ref": "#/types/spotinst:azure/OceanOsDisk:OceanOsDisk",
                        "description": "OS disk specifications.\n"
                    },
                    "resourceGroupName": {
                        "type": "string",
                        "description": "The Resource Group name of the Load Balancer.\n"
                    },
                    "sshPublicKey": {
                        "type": "string",
                        "description": "SSH public key for admin access to Linux VMs.\n"
                    },
                    "strategies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanStrategy:OceanStrategy"
                        },
                        "description": "The Ocean AKS strategy object.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanTag:OceanTag"
                        },
                        "description": "Unique key-value pairs that will be used to tag VMs that are launched in the cluster.\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "Username for admin access to VMs.\n"
                    },
                    "vmSizes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanVmSize:OceanVmSize"
                        },
                        "description": "The types of virtual machines that may or may not be a part of the Ocean cluster.\n"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array holding default Availability Zones, this configures the availability zones the Ocean may launch instances in.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:azure/oceanNp:OceanNp": {
            "properties": {
                "aksClusterName": {
                    "type": "string"
                },
                "aksInfrastructureResourceGroupName": {
                    "type": "string"
                },
                "aksRegion": {
                    "type": "string"
                },
                "aksResourceGroupName": {
                    "type": "string"
                },
                "autoscaler": {
                    "$ref": "#/types/spotinst:azure/OceanNpAutoscaler:OceanNpAutoscaler"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "controllerClusterId": {
                    "type": "string"
                },
                "enableNodePublicIp": {
                    "type": "boolean"
                },
                "fallbackToOndemand": {
                    "type": "boolean"
                },
                "filters": {
                    "$ref": "#/types/spotinst:azure/OceanNpFilters:OceanNpFilters"
                },
                "headrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanNpHeadroom:OceanNpHeadroom"
                    }
                },
                "health": {
                    "$ref": "#/types/spotinst:azure/OceanNpHealth:OceanNpHealth"
                },
                "kubernetesVersion": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "maxCount": {
                    "type": "integer"
                },
                "maxPodsPerNode": {
                    "type": "integer"
                },
                "minCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "osDiskSizeGb": {
                    "type": "integer"
                },
                "osDiskType": {
                    "type": "string"
                },
                "osSku": {
                    "type": "string"
                },
                "osType": {
                    "type": "string"
                },
                "podSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scheduling": {
                    "$ref": "#/types/spotinst:azure/OceanNpScheduling:OceanNpScheduling"
                },
                "spotPercentage": {
                    "type": "integer"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanNpTaint:OceanNpTaint"
                    }
                },
                "vnetSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "aksClusterName",
                "aksInfrastructureResourceGroupName",
                "aksRegion",
                "aksResourceGroupName",
                "availabilityZones",
                "controllerClusterId",
                "health",
                "name"
            ],
            "inputProperties": {
                "aksClusterName": {
                    "type": "string"
                },
                "aksInfrastructureResourceGroupName": {
                    "type": "string"
                },
                "aksRegion": {
                    "type": "string"
                },
                "aksResourceGroupName": {
                    "type": "string"
                },
                "autoscaler": {
                    "$ref": "#/types/spotinst:azure/OceanNpAutoscaler:OceanNpAutoscaler"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "controllerClusterId": {
                    "type": "string"
                },
                "enableNodePublicIp": {
                    "type": "boolean"
                },
                "fallbackToOndemand": {
                    "type": "boolean"
                },
                "filters": {
                    "$ref": "#/types/spotinst:azure/OceanNpFilters:OceanNpFilters"
                },
                "headrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanNpHeadroom:OceanNpHeadroom"
                    }
                },
                "health": {
                    "$ref": "#/types/spotinst:azure/OceanNpHealth:OceanNpHealth"
                },
                "kubernetesVersion": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "maxCount": {
                    "type": "integer"
                },
                "maxPodsPerNode": {
                    "type": "integer"
                },
                "minCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "osDiskSizeGb": {
                    "type": "integer"
                },
                "osDiskType": {
                    "type": "string"
                },
                "osSku": {
                    "type": "string"
                },
                "osType": {
                    "type": "string"
                },
                "podSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scheduling": {
                    "$ref": "#/types/spotinst:azure/OceanNpScheduling:OceanNpScheduling"
                },
                "spotPercentage": {
                    "type": "integer"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanNpTaint:OceanNpTaint"
                    }
                },
                "vnetSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "aksClusterName",
                "aksInfrastructureResourceGroupName",
                "aksRegion",
                "aksResourceGroupName",
                "availabilityZones",
                "controllerClusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanNp resources.\n",
                "properties": {
                    "aksClusterName": {
                        "type": "string"
                    },
                    "aksInfrastructureResourceGroupName": {
                        "type": "string"
                    },
                    "aksRegion": {
                        "type": "string"
                    },
                    "aksResourceGroupName": {
                        "type": "string"
                    },
                    "autoscaler": {
                        "$ref": "#/types/spotinst:azure/OceanNpAutoscaler:OceanNpAutoscaler"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "controllerClusterId": {
                        "type": "string"
                    },
                    "enableNodePublicIp": {
                        "type": "boolean"
                    },
                    "fallbackToOndemand": {
                        "type": "boolean"
                    },
                    "filters": {
                        "$ref": "#/types/spotinst:azure/OceanNpFilters:OceanNpFilters"
                    },
                    "headrooms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanNpHeadroom:OceanNpHeadroom"
                        }
                    },
                    "health": {
                        "$ref": "#/types/spotinst:azure/OceanNpHealth:OceanNpHealth"
                    },
                    "kubernetesVersion": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "maxCount": {
                        "type": "integer"
                    },
                    "maxPodsPerNode": {
                        "type": "integer"
                    },
                    "minCount": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "osDiskSizeGb": {
                        "type": "integer"
                    },
                    "osDiskType": {
                        "type": "string"
                    },
                    "osSku": {
                        "type": "string"
                    },
                    "osType": {
                        "type": "string"
                    },
                    "podSubnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scheduling": {
                        "$ref": "#/types/spotinst:azure/OceanNpScheduling:OceanNpScheduling"
                    },
                    "spotPercentage": {
                        "type": "integer"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanNpTaint:OceanNpTaint"
                        }
                    },
                    "vnetSubnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "spotinst:azure/oceanNpVirtualNodeGroup:OceanNpVirtualNodeGroup": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enableNodePublicIp": {
                    "type": "boolean"
                },
                "fallbackToOndemand": {
                    "type": "boolean"
                },
                "filters": {
                    "$ref": "#/types/spotinst:azure/OceanNpVirtualNodeGroupFilters:OceanNpVirtualNodeGroupFilters"
                },
                "headrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanNpVirtualNodeGroupHeadroom:OceanNpVirtualNodeGroupHeadroom"
                    }
                },
                "kubernetesVersion": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "maxCount": {
                    "type": "integer"
                },
                "maxPodsPerNode": {
                    "type": "integer"
                },
                "minCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "oceanId": {
                    "type": "string"
                },
                "osDiskSizeGb": {
                    "type": "integer"
                },
                "osDiskType": {
                    "type": "string"
                },
                "osSku": {
                    "type": "string"
                },
                "osType": {
                    "type": "string"
                },
                "podSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "spotPercentage": {
                    "type": "integer"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanNpVirtualNodeGroupTaint:OceanNpVirtualNodeGroupTaint"
                    }
                },
                "vnetSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "name",
                "oceanId"
            ],
            "inputProperties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enableNodePublicIp": {
                    "type": "boolean"
                },
                "fallbackToOndemand": {
                    "type": "boolean"
                },
                "filters": {
                    "$ref": "#/types/spotinst:azure/OceanNpVirtualNodeGroupFilters:OceanNpVirtualNodeGroupFilters"
                },
                "headrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanNpVirtualNodeGroupHeadroom:OceanNpVirtualNodeGroupHeadroom"
                    }
                },
                "kubernetesVersion": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "maxCount": {
                    "type": "integer"
                },
                "maxPodsPerNode": {
                    "type": "integer"
                },
                "minCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "oceanId": {
                    "type": "string"
                },
                "osDiskSizeGb": {
                    "type": "integer"
                },
                "osDiskType": {
                    "type": "string"
                },
                "osSku": {
                    "type": "string"
                },
                "osType": {
                    "type": "string"
                },
                "podSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "spotPercentage": {
                    "type": "integer"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanNpVirtualNodeGroupTaint:OceanNpVirtualNodeGroupTaint"
                    }
                },
                "vnetSubnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "oceanId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanNpVirtualNodeGroup resources.\n",
                "properties": {
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enableNodePublicIp": {
                        "type": "boolean"
                    },
                    "fallbackToOndemand": {
                        "type": "boolean"
                    },
                    "filters": {
                        "$ref": "#/types/spotinst:azure/OceanNpVirtualNodeGroupFilters:OceanNpVirtualNodeGroupFilters"
                    },
                    "headrooms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanNpVirtualNodeGroupHeadroom:OceanNpVirtualNodeGroupHeadroom"
                        }
                    },
                    "kubernetesVersion": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "maxCount": {
                        "type": "integer"
                    },
                    "maxPodsPerNode": {
                        "type": "integer"
                    },
                    "minCount": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "oceanId": {
                        "type": "string"
                    },
                    "osDiskSizeGb": {
                        "type": "integer"
                    },
                    "osDiskType": {
                        "type": "string"
                    },
                    "osSku": {
                        "type": "string"
                    },
                    "osType": {
                        "type": "string"
                    },
                    "podSubnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "spotPercentage": {
                        "type": "integer"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanNpVirtualNodeGroupTaint:OceanNpVirtualNodeGroupTaint"
                        }
                    },
                    "vnetSubnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "spotinst:azure/oceanVirtualNodeGroup:OceanVirtualNodeGroup": {
            "description": "Manages a Spotinst Ocean AKS Virtual Node Group resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.azure.OceanVirtualNodeGroup(\"example\", {\n    autoscales: [{\n        autoHeadroomPercentage: 5,\n        autoscaleHeadrooms: [{\n            cpuPerUnit: 4,\n            gpuPerUnit: 8,\n            memoryPerUnit: 100,\n            numOfUnits: 16,\n        }],\n    }],\n    labels: [{\n        key: \"label_key\",\n        value: \"label_value\",\n    }],\n    launchSpecifications: [{\n        maxPods: 30,\n        osDisk: {\n            sizeGb: 100,\n            type: \"Standard_LRS\",\n            utilizeEphemeralStorage: false,\n        },\n        tags: [{\n            key: \"label_key\",\n            value: \"label_value\",\n        }],\n    }],\n    oceanId: \"o-12345\",\n    resourceLimits: [{\n        maxInstanceCount: 4,\n    }],\n    taints: [{\n        effect: \"NoSchedule\",\n        key: \"taint_key\",\n        value: \"taint_value\",\n    }],\n    zones: [\n        \"1\",\n        \"2\",\n        \"3\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.azure.OceanVirtualNodeGroup(\"example\",\n    autoscales=[spotinst.azure.OceanVirtualNodeGroupAutoscaleArgs(\n        auto_headroom_percentage=5,\n        autoscale_headrooms=[spotinst.azure.OceanVirtualNodeGroupAutoscaleAutoscaleHeadroomArgs(\n            cpu_per_unit=4,\n            gpu_per_unit=8,\n            memory_per_unit=100,\n            num_of_units=16,\n        )],\n    )],\n    labels=[spotinst.azure.OceanVirtualNodeGroupLabelArgs(\n        key=\"label_key\",\n        value=\"label_value\",\n    )],\n    launch_specifications=[spotinst.azure.OceanVirtualNodeGroupLaunchSpecificationArgs(\n        max_pods=30,\n        os_disk=spotinst.azure.OceanVirtualNodeGroupLaunchSpecificationOsDiskArgs(\n            size_gb=100,\n            type=\"Standard_LRS\",\n            utilize_ephemeral_storage=False,\n        ),\n        tags=[spotinst.azure.OceanVirtualNodeGroupLaunchSpecificationTagArgs(\n            key=\"label_key\",\n            value=\"label_value\",\n        )],\n    )],\n    ocean_id=\"o-12345\",\n    resource_limits=[spotinst.azure.OceanVirtualNodeGroupResourceLimitArgs(\n        max_instance_count=4,\n    )],\n    taints=[spotinst.azure.OceanVirtualNodeGroupTaintArgs(\n        effect=\"NoSchedule\",\n        key=\"taint_key\",\n        value=\"taint_value\",\n    )],\n    zones=[\n        \"1\",\n        \"2\",\n        \"3\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new SpotInst.Azure.OceanVirtualNodeGroup(\"example\", new()\n    {\n        Autoscales = new[]\n        {\n            new SpotInst.Azure.Inputs.OceanVirtualNodeGroupAutoscaleArgs\n            {\n                AutoHeadroomPercentage = 5,\n                AutoscaleHeadrooms = new[]\n                {\n                    new SpotInst.Azure.Inputs.OceanVirtualNodeGroupAutoscaleAutoscaleHeadroomArgs\n                    {\n                        CpuPerUnit = 4,\n                        GpuPerUnit = 8,\n                        MemoryPerUnit = 100,\n                        NumOfUnits = 16,\n                    },\n                },\n            },\n        },\n        Labels = new[]\n        {\n            new SpotInst.Azure.Inputs.OceanVirtualNodeGroupLabelArgs\n            {\n                Key = \"label_key\",\n                Value = \"label_value\",\n            },\n        },\n        LaunchSpecifications = new[]\n        {\n            new SpotInst.Azure.Inputs.OceanVirtualNodeGroupLaunchSpecificationArgs\n            {\n                MaxPods = 30,\n                OsDisk = new SpotInst.Azure.Inputs.OceanVirtualNodeGroupLaunchSpecificationOsDiskArgs\n                {\n                    SizeGb = 100,\n                    Type = \"Standard_LRS\",\n                    UtilizeEphemeralStorage = false,\n                },\n                Tags = new[]\n                {\n                    new SpotInst.Azure.Inputs.OceanVirtualNodeGroupLaunchSpecificationTagArgs\n                    {\n                        Key = \"label_key\",\n                        Value = \"label_value\",\n                    },\n                },\n            },\n        },\n        OceanId = \"o-12345\",\n        ResourceLimits = new[]\n        {\n            new SpotInst.Azure.Inputs.OceanVirtualNodeGroupResourceLimitArgs\n            {\n                MaxInstanceCount = 4,\n            },\n        },\n        Taints = new[]\n        {\n            new SpotInst.Azure.Inputs.OceanVirtualNodeGroupTaintArgs\n            {\n                Effect = \"NoSchedule\",\n                Key = \"taint_key\",\n                Value = \"taint_value\",\n            },\n        },\n        Zones = new[]\n        {\n            \"1\",\n            \"2\",\n            \"3\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/azure\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azure.NewOceanVirtualNodeGroup(ctx, \"example\", \u0026azure.OceanVirtualNodeGroupArgs{\n\t\t\tAutoscales: azure.OceanVirtualNodeGroupAutoscaleArray{\n\t\t\t\t\u0026azure.OceanVirtualNodeGroupAutoscaleArgs{\n\t\t\t\t\tAutoHeadroomPercentage: pulumi.Int(5),\n\t\t\t\t\tAutoscaleHeadrooms: azure.OceanVirtualNodeGroupAutoscaleAutoscaleHeadroomArray{\n\t\t\t\t\t\t\u0026azure.OceanVirtualNodeGroupAutoscaleAutoscaleHeadroomArgs{\n\t\t\t\t\t\t\tCpuPerUnit:    pulumi.Int(4),\n\t\t\t\t\t\t\tGpuPerUnit:    pulumi.Int(8),\n\t\t\t\t\t\t\tMemoryPerUnit: pulumi.Int(100),\n\t\t\t\t\t\t\tNumOfUnits:    pulumi.Int(16),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tLabels: azure.OceanVirtualNodeGroupLabelArray{\n\t\t\t\t\u0026azure.OceanVirtualNodeGroupLabelArgs{\n\t\t\t\t\tKey:   pulumi.String(\"label_key\"),\n\t\t\t\t\tValue: pulumi.String(\"label_value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tLaunchSpecifications: azure.OceanVirtualNodeGroupLaunchSpecificationArray{\n\t\t\t\t\u0026azure.OceanVirtualNodeGroupLaunchSpecificationArgs{\n\t\t\t\t\tMaxPods: pulumi.Int(30),\n\t\t\t\t\tOsDisk: \u0026azure.OceanVirtualNodeGroupLaunchSpecificationOsDiskArgs{\n\t\t\t\t\t\tSizeGb:                  pulumi.Int(100),\n\t\t\t\t\t\tType:                    pulumi.String(\"Standard_LRS\"),\n\t\t\t\t\t\tUtilizeEphemeralStorage: pulumi.Bool(false),\n\t\t\t\t\t},\n\t\t\t\t\tTags: azure.OceanVirtualNodeGroupLaunchSpecificationTagArray{\n\t\t\t\t\t\t\u0026azure.OceanVirtualNodeGroupLaunchSpecificationTagArgs{\n\t\t\t\t\t\t\tKey:   pulumi.String(\"label_key\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"label_value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tOceanId: pulumi.String(\"o-12345\"),\n\t\t\tResourceLimits: azure.OceanVirtualNodeGroupResourceLimitArray{\n\t\t\t\t\u0026azure.OceanVirtualNodeGroupResourceLimitArgs{\n\t\t\t\t\tMaxInstanceCount: pulumi.Int(4),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaints: azure.OceanVirtualNodeGroupTaintArray{\n\t\t\t\t\u0026azure.OceanVirtualNodeGroupTaintArgs{\n\t\t\t\t\tEffect: pulumi.String(\"NoSchedule\"),\n\t\t\t\t\tKey:    pulumi.String(\"taint_key\"),\n\t\t\t\t\tValue:  pulumi.String(\"taint_value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tZones: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1\"),\n\t\t\t\tpulumi.String(\"2\"),\n\t\t\t\tpulumi.String(\"3\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.azure.OceanVirtualNodeGroup;\nimport com.pulumi.spotinst.azure.OceanVirtualNodeGroupArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanVirtualNodeGroupAutoscaleArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanVirtualNodeGroupLabelArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanVirtualNodeGroupLaunchSpecificationArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanVirtualNodeGroupLaunchSpecificationOsDiskArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanVirtualNodeGroupResourceLimitArgs;\nimport com.pulumi.spotinst.azure.inputs.OceanVirtualNodeGroupTaintArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OceanVirtualNodeGroup(\"example\", OceanVirtualNodeGroupArgs.builder()        \n            .autoscales(OceanVirtualNodeGroupAutoscaleArgs.builder()\n                .autoHeadroomPercentage(5)\n                .autoscaleHeadrooms(OceanVirtualNodeGroupAutoscaleAutoscaleHeadroomArgs.builder()\n                    .cpuPerUnit(4)\n                    .gpuPerUnit(8)\n                    .memoryPerUnit(100)\n                    .numOfUnits(16)\n                    .build())\n                .build())\n            .labels(OceanVirtualNodeGroupLabelArgs.builder()\n                .key(\"label_key\")\n                .value(\"label_value\")\n                .build())\n            .launchSpecifications(OceanVirtualNodeGroupLaunchSpecificationArgs.builder()\n                .maxPods(30)\n                .osDisk(OceanVirtualNodeGroupLaunchSpecificationOsDiskArgs.builder()\n                    .sizeGb(100)\n                    .type(\"Standard_LRS\")\n                    .utilizeEphemeralStorage(false)\n                    .build())\n                .tags(OceanVirtualNodeGroupLaunchSpecificationTagArgs.builder()\n                    .key(\"label_key\")\n                    .value(\"label_value\")\n                    .build())\n                .build())\n            .oceanId(\"o-12345\")\n            .resourceLimits(OceanVirtualNodeGroupResourceLimitArgs.builder()\n                .maxInstanceCount(4)\n                .build())\n            .taints(OceanVirtualNodeGroupTaintArgs.builder()\n                .effect(\"NoSchedule\")\n                .key(\"taint_key\")\n                .value(\"taint_value\")\n                .build())\n            .zones(            \n                \"1\",\n                \"2\",\n                \"3\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: spotinst:azure:OceanVirtualNodeGroup\n    properties:\n      autoscales:\n        - autoHeadroomPercentage: 5\n          autoscaleHeadrooms:\n            - cpuPerUnit: 4\n              gpuPerUnit: 8\n              memoryPerUnit: 100\n              numOfUnits: 16\n      labels:\n        - key: label_key\n          value: label_value\n      launchSpecifications:\n        - maxPods: 30\n          osDisk:\n            sizeGb: 100\n            type: Standard_LRS\n            utilizeEphemeralStorage: false\n          tags:\n            - key: label_key\n              value: label_value\n      oceanId: o-12345\n      resourceLimits:\n        - maxInstanceCount: 4\n      taints:\n        - effect: NoSchedule\n          key: taint_key\n          value: taint_value\n      zones:\n        - '1'\n        - '2'\n        - '3'\n```\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const oceanId = spotinst_ocean_aks_.example.id;\n```\n```python\nimport pulumi\n\npulumi.export(\"oceanId\", spotinst_ocean_aks_[\"example\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"oceanId\"] = spotinst_ocean_aks_.Example.Id,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"oceanId\", spotinst_ocean_aks_.Example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        ctx.export(\"oceanId\", spotinst_ocean_aks_.example().id());\n    }\n}\n```\n```yaml\noutputs:\n  oceanId: ${spotinst_ocean_aks_.example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "autoscales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupAutoscale:OceanVirtualNodeGroupAutoscale"
                    },
                    "description": ".\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupLabel:OceanVirtualNodeGroupLabel"
                    },
                    "description": "Additional labels for the virtual node group. Only custom user labels are allowed. Kubernetes built-in labels and Spot internal labels are not allowed.\n"
                },
                "launchSpecifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupLaunchSpecification:OceanVirtualNodeGroupLaunchSpecification"
                    },
                    "description": ".\n"
                },
                "name": {
                    "type": "string",
                    "description": "Set name for the virtual node group.\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The Ocean cluster ID.\n"
                },
                "resourceLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupResourceLimit:OceanVirtualNodeGroupResourceLimit"
                    },
                    "description": ".\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupTaint:OceanVirtualNodeGroupTaint"
                    },
                    "description": "Additional taints for the virtual node group. Only custom user labels are allowed. Kubernetes built-in labels and Spot internal labels are not allowed.\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An Array holding Availability Zones, this configures the availability zones the Ocean may launch instances in per VNG.\n"
                }
            },
            "required": [
                "name",
                "oceanId"
            ],
            "inputProperties": {
                "autoscales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupAutoscale:OceanVirtualNodeGroupAutoscale"
                    },
                    "description": ".\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupLabel:OceanVirtualNodeGroupLabel"
                    },
                    "description": "Additional labels for the virtual node group. Only custom user labels are allowed. Kubernetes built-in labels and Spot internal labels are not allowed.\n"
                },
                "launchSpecifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupLaunchSpecification:OceanVirtualNodeGroupLaunchSpecification"
                    },
                    "description": ".\n"
                },
                "name": {
                    "type": "string",
                    "description": "Set name for the virtual node group.\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The Ocean cluster ID.\n"
                },
                "resourceLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupResourceLimit:OceanVirtualNodeGroupResourceLimit"
                    },
                    "description": ".\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupTaint:OceanVirtualNodeGroupTaint"
                    },
                    "description": "Additional taints for the virtual node group. Only custom user labels are allowed. Kubernetes built-in labels and Spot internal labels are not allowed.\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An Array holding Availability Zones, this configures the availability zones the Ocean may launch instances in per VNG.\n"
                }
            },
            "requiredInputs": [
                "oceanId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanVirtualNodeGroup resources.\n",
                "properties": {
                    "autoscales": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupAutoscale:OceanVirtualNodeGroupAutoscale"
                        },
                        "description": ".\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupLabel:OceanVirtualNodeGroupLabel"
                        },
                        "description": "Additional labels for the virtual node group. Only custom user labels are allowed. Kubernetes built-in labels and Spot internal labels are not allowed.\n"
                    },
                    "launchSpecifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupLaunchSpecification:OceanVirtualNodeGroupLaunchSpecification"
                        },
                        "description": ".\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Set name for the virtual node group.\n"
                    },
                    "oceanId": {
                        "type": "string",
                        "description": "The Ocean cluster ID.\n"
                    },
                    "resourceLimits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupResourceLimit:OceanVirtualNodeGroupResourceLimit"
                        },
                        "description": ".\n"
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/OceanVirtualNodeGroupTaint:OceanVirtualNodeGroupTaint"
                        },
                        "description": "Additional taints for the virtual node group. Only custom user labels are allowed. Kubernetes built-in labels and Spot internal labels are not allowed.\n"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An Array holding Availability Zones, this configures the availability zones the Ocean may launch instances in per VNG.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:ecs/ocean:Ocean": {
            "description": "Manages a Spotinst Ocean ECS resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.ecs.Ocean;\nimport com.pulumi.spotinst.ecs.OceanArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanBlockDeviceMappingArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanBlockDeviceMappingEbsArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanBlockDeviceMappingEbsDynamicVolumeSizeArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanClusterOrientationArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanInstanceMetadataOptionsArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanLoggingArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanLoggingExportArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanOptimizeImagesArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanTagArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ocean(\"example\", OceanArgs.builder()        \n            .associatePublicIpAddress(false)\n            .blockDeviceMappings(OceanBlockDeviceMappingArgs.builder()\n                .deviceName(\"/dev/xvda1\")\n                .ebs(OceanBlockDeviceMappingEbsArgs.builder()\n                    .deleteOnTermination(\"true\")\n                    .dynamicVolumeSize(OceanBlockDeviceMappingEbsDynamicVolumeSizeArgs.builder()\n                        .baseSize(50)\n                        .resource(\"CPU\")\n                        .sizePerResourceUnit(20)\n                        .build())\n                    .encrypted(\"false\")\n                    .throughput(500)\n                    .volumeSize(50)\n                    .volumeType(\"gp2\")\n                    .build())\n                .build())\n            .clusterName(\"sample-ecs-cluster\")\n            .clusterOrientations(OceanClusterOrientationArgs.builder()\n                .availabilityVsCost(\"balanced\")\n                .build())\n            .desiredCapacity(\"0\")\n            .drainingTimeout(120)\n            .ebsOptimized(true)\n            .iamInstanceProfile(\"iam-profile\")\n            .imageId(\"ami-12345\")\n            .instanceTypes(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .instanceMetadataOptions(OceanInstanceMetadataOptionsArgs.builder()\n                .httpPutResponseHopLimit(10)\n                .httpTokens(\"required\")\n                .build())\n            .keyPair(\"KeyPair\")\n            .logging(OceanLoggingArgs.builder()\n                .export(OceanLoggingExportArgs.builder()\n                    .s3(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                    .build())\n                .build())\n            .maxSize(\"1\")\n            .minSize(\"0\")\n            .monitoring(true)\n            .optimizeImages(OceanOptimizeImagesArgs.builder()\n                .performAt(\"timeWindow\")\n                .shouldOptimizeEcsAmi(true)\n                .timeWindows(                \n                    \"Sun:02:00-Sun:12:00\",\n                    \"Sun:05:00-Sun:16:00\")\n                .build())\n            .region(\"us-west-2\")\n            .securityGroupIds(\"sg-12345\")\n            .spotPercentage(100)\n            .subnetIds(\"subnet-12345\")\n            .tags(OceanTagArgs.builder()\n                .key(\"fakeKey\")\n                .value(\"fakeValue\")\n                .build())\n            .useAsTemplateOnly(true)\n            .userData(\"echo hello world\")\n            .utilizeCommitments(false)\n            .utilizeReservedInstances(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: spotinst:ecs:Ocean\n    properties:\n      associatePublicIpAddress: false\n      blockDeviceMappings:\n        - deviceName: /dev/xvda1\n          ebs:\n            deleteOnTermination: 'true'\n            dynamicVolumeSize:\n              baseSize: 50\n              resource: CPU\n              sizePerResourceUnit: 20\n            encrypted: 'false'\n            throughput: 500\n            volumeSize: 50\n            volumeType: gp2\n      clusterName: sample-ecs-cluster\n      clusterOrientations:\n        - availabilityVsCost: balanced\n      desiredCapacity: '0'\n      drainingTimeout: 120\n      ebsOptimized: true\n      iamInstanceProfile: iam-profile\n      imageId: ami-12345\n      instanceTypes:\n        - filters:\n            - architectures:\n                - x86_64\n                - i386\n              categories:\n                - Accelerated_computing\n                - Compute_optimized\n              diskTypes:\n                - EBS\n                - SSD\n              excludeFamilies:\n                - m*\n              excludeMetal: false\n              hypervisor:\n                - xen\n              includeFamilies:\n                - c*\n                - t*\n              isEnaSupported: false\n              maxGpu: 4\n              maxMemoryGib: 16\n              maxNetworkPerformance: 20\n              maxVcpu: 16\n              minEnis: 2\n              minGpu: 0\n              minMemoryGib: 8\n              minNetworkPerformance: 2\n              minVcpu: 2\n              rootDeviceTypes:\n                - ebs\n              virtualizationTypes:\n                - hvm\n      instanceMetadataOptions:\n        httpPutResponseHopLimit: 10\n        httpTokens: required\n      keyPair: KeyPair\n      logging:\n        export:\n          s3:\n            - id: di-abcd123\n      maxSize: '1'\n      minSize: '0'\n      monitoring: true\n      optimizeImages:\n        performAt: timeWindow\n        shouldOptimizeEcsAmi: true\n        timeWindows:\n          - Sun:02:00-Sun:12:00\n          - Sun:05:00-Sun:16:00\n      region: us-west-2\n      securityGroupIds:\n        - sg-12345\n      spotPercentage: 100\n      subnetIds:\n        - subnet-12345\n      tags:\n        - key: fakeKey\n          value: fakeValue\n      useAsTemplateOnly: true\n      userData: echo hello world\n      utilizeCommitments: false\n      utilizeReservedInstances: false\n```\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const oceanId = spotinst_ocean_ecs.example.id;\n```\n```python\nimport pulumi\n\npulumi.export(\"oceanId\", spotinst_ocean_ecs[\"example\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"oceanId\"] = spotinst_ocean_ecs.Example.Id,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"oceanId\", spotinst_ocean_ecs.Example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        ctx.export(\"oceanId\", spotinst_ocean_ecs.example().id());\n    }\n}\n```\n```yaml\noutputs:\n  oceanId: ${spotinst_ocean_ecs.example.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nClusters can be imported using the Ocean `id`, e.g., hcl\n\n```sh\n $ pulumi import spotinst:ecs/ocean:Ocean this o-12345678\n```\n\n ",
            "properties": {
                "associatePublicIpAddress": {
                    "type": "boolean",
                    "description": "Configure public IP address allocation.\n"
                },
                "autoscaler": {
                    "$ref": "#/types/spotinst:ecs/OceanAutoscaler:OceanAutoscaler",
                    "description": "Describes the Ocean ECS autoscaler.\n"
                },
                "blacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types not allowed in the Ocean cluster. Cannot be configured if `whitelist`/`filters` is configured.\n"
                },
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanBlockDeviceMapping:OceanBlockDeviceMapping"
                    },
                    "description": "Object. List of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.\n"
                },
                "clusterName": {
                    "type": "string",
                    "description": "The name of the ECS cluster.\n"
                },
                "clusterOrientations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanClusterOrientation:OceanClusterOrientation"
                    }
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The number of instances to launch and maintain in the cluster.\n"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                },
                "ebsOptimized": {
                    "type": "boolean",
                    "description": "Enable EBS optimized for cluster. Flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized this flag will be ignored.\n"
                },
                "filters": {
                    "$ref": "#/types/spotinst:ecs/OceanFilters:OceanFilters",
                    "description": "List of filters. The Instance types that match with all filters compose the Ocean's whitelist parameter. Cannot be configured together with `whitelist`/`blacklist`.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The instance profile iam role.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "ID of the image used to launch the instances.\n"
                },
                "instanceMetadataOptions": {
                    "$ref": "#/types/spotinst:ecs/OceanInstanceMetadataOptions:OceanInstanceMetadataOptions",
                    "description": "Ocean instance metadata options object for IMDSv2.\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The key pair to attach the instances.\n"
                },
                "logging": {
                    "$ref": "#/types/spotinst:ecs/OceanLogging:OceanLogging",
                    "description": "Logging configuration.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The upper limit of instances the cluster can scale up to.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The lower limit of instances the cluster can scale down to.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Enable detailed monitoring for cluster. Flag will enable Cloud Watch detailed monitoring (one minute increments). Note: there are additional hourly costs for this service based on the region used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Ocean cluster name.\n"
                },
                "optimizeImages": {
                    "$ref": "#/types/spotinst:ecs/OceanOptimizeImages:OceanOptimizeImages",
                    "description": "Object. Set auto image update settings.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region the cluster will run in.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanScheduledTask:OceanScheduledTask"
                    },
                    "description": "While used, you can control whether the group should perform a deployment after an update to the configuration.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more security group ids.\n"
                },
                "spotPercentage": {
                    "type": "integer",
                    "description": "The percentage of Spot instances that would spin up from the `desired_capacity` number.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public ip.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanTag:OceanTag"
                    },
                    "description": "Optionally adds tags to instances launched in an Ocean cluster.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:ecs/OceanUpdatePolicy:OceanUpdatePolicy",
                    "description": "While used, you can control whether the group should perform a deployment after an update to the configuration.\n"
                },
                "useAsTemplateOnly": {
                    "type": "boolean",
                    "description": "launch specification defined on the Ocean object will function only as a template for virtual node groups.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                },
                "utilizeCommitments": {
                    "type": "boolean",
                    "description": "If savings plans exist, Ocean will utilize them before launching Spot instances.\n"
                },
                "utilizeReservedInstances": {
                    "type": "boolean",
                    "description": "If Reserved instances exist, Ocean will utilize them before launching Spot instances.\n"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types allowed in the Ocean cluster. Cannot be configured if `blacklist`/`filters` is configured.\n"
                }
            },
            "required": [
                "clusterName",
                "desiredCapacity",
                "maxSize",
                "minSize",
                "name",
                "region",
                "securityGroupIds",
                "subnetIds"
            ],
            "inputProperties": {
                "associatePublicIpAddress": {
                    "type": "boolean",
                    "description": "Configure public IP address allocation.\n"
                },
                "autoscaler": {
                    "$ref": "#/types/spotinst:ecs/OceanAutoscaler:OceanAutoscaler",
                    "description": "Describes the Ocean ECS autoscaler.\n"
                },
                "blacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types not allowed in the Ocean cluster. Cannot be configured if `whitelist`/`filters` is configured.\n"
                },
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanBlockDeviceMapping:OceanBlockDeviceMapping"
                    },
                    "description": "Object. List of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.\n"
                },
                "clusterName": {
                    "type": "string",
                    "description": "The name of the ECS cluster.\n"
                },
                "clusterOrientations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanClusterOrientation:OceanClusterOrientation"
                    }
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The number of instances to launch and maintain in the cluster.\n"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                },
                "ebsOptimized": {
                    "type": "boolean",
                    "description": "Enable EBS optimized for cluster. Flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized this flag will be ignored.\n"
                },
                "filters": {
                    "$ref": "#/types/spotinst:ecs/OceanFilters:OceanFilters",
                    "description": "List of filters. The Instance types that match with all filters compose the Ocean's whitelist parameter. Cannot be configured together with `whitelist`/`blacklist`.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The instance profile iam role.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "ID of the image used to launch the instances.\n"
                },
                "instanceMetadataOptions": {
                    "$ref": "#/types/spotinst:ecs/OceanInstanceMetadataOptions:OceanInstanceMetadataOptions",
                    "description": "Ocean instance metadata options object for IMDSv2.\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The key pair to attach the instances.\n"
                },
                "logging": {
                    "$ref": "#/types/spotinst:ecs/OceanLogging:OceanLogging",
                    "description": "Logging configuration.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The upper limit of instances the cluster can scale up to.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The lower limit of instances the cluster can scale down to.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Enable detailed monitoring for cluster. Flag will enable Cloud Watch detailed monitoring (one minute increments). Note: there are additional hourly costs for this service based on the region used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Ocean cluster name.\n"
                },
                "optimizeImages": {
                    "$ref": "#/types/spotinst:ecs/OceanOptimizeImages:OceanOptimizeImages",
                    "description": "Object. Set auto image update settings.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region the cluster will run in.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanScheduledTask:OceanScheduledTask"
                    },
                    "description": "While used, you can control whether the group should perform a deployment after an update to the configuration.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more security group ids.\n"
                },
                "spotPercentage": {
                    "type": "integer",
                    "description": "The percentage of Spot instances that would spin up from the `desired_capacity` number.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public ip.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanTag:OceanTag"
                    },
                    "description": "Optionally adds tags to instances launched in an Ocean cluster.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:ecs/OceanUpdatePolicy:OceanUpdatePolicy",
                    "description": "While used, you can control whether the group should perform a deployment after an update to the configuration.\n"
                },
                "useAsTemplateOnly": {
                    "type": "boolean",
                    "description": "launch specification defined on the Ocean object will function only as a template for virtual node groups.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                },
                "utilizeCommitments": {
                    "type": "boolean",
                    "description": "If savings plans exist, Ocean will utilize them before launching Spot instances.\n"
                },
                "utilizeReservedInstances": {
                    "type": "boolean",
                    "description": "If Reserved instances exist, Ocean will utilize them before launching Spot instances.\n"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types allowed in the Ocean cluster. Cannot be configured if `blacklist`/`filters` is configured.\n"
                }
            },
            "requiredInputs": [
                "clusterName",
                "region",
                "securityGroupIds",
                "subnetIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ocean resources.\n",
                "properties": {
                    "associatePublicIpAddress": {
                        "type": "boolean",
                        "description": "Configure public IP address allocation.\n"
                    },
                    "autoscaler": {
                        "$ref": "#/types/spotinst:ecs/OceanAutoscaler:OceanAutoscaler",
                        "description": "Describes the Ocean ECS autoscaler.\n"
                    },
                    "blacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Instance types not allowed in the Ocean cluster. Cannot be configured if `whitelist`/`filters` is configured.\n"
                    },
                    "blockDeviceMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanBlockDeviceMapping:OceanBlockDeviceMapping"
                        },
                        "description": "Object. List of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.\n"
                    },
                    "clusterName": {
                        "type": "string",
                        "description": "The name of the ECS cluster.\n"
                    },
                    "clusterOrientations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanClusterOrientation:OceanClusterOrientation"
                        }
                    },
                    "desiredCapacity": {
                        "type": "integer",
                        "description": "The number of instances to launch and maintain in the cluster.\n"
                    },
                    "drainingTimeout": {
                        "type": "integer",
                        "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                    },
                    "ebsOptimized": {
                        "type": "boolean",
                        "description": "Enable EBS optimized for cluster. Flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized this flag will be ignored.\n"
                    },
                    "filters": {
                        "$ref": "#/types/spotinst:ecs/OceanFilters:OceanFilters",
                        "description": "List of filters. The Instance types that match with all filters compose the Ocean's whitelist parameter. Cannot be configured together with `whitelist`/`blacklist`.\n"
                    },
                    "iamInstanceProfile": {
                        "type": "string",
                        "description": "The instance profile iam role.\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "ID of the image used to launch the instances.\n"
                    },
                    "instanceMetadataOptions": {
                        "$ref": "#/types/spotinst:ecs/OceanInstanceMetadataOptions:OceanInstanceMetadataOptions",
                        "description": "Ocean instance metadata options object for IMDSv2.\n"
                    },
                    "keyPair": {
                        "type": "string",
                        "description": "The key pair to attach the instances.\n"
                    },
                    "logging": {
                        "$ref": "#/types/spotinst:ecs/OceanLogging:OceanLogging",
                        "description": "Logging configuration.\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The upper limit of instances the cluster can scale up to.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The lower limit of instances the cluster can scale down to.\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Enable detailed monitoring for cluster. Flag will enable Cloud Watch detailed monitoring (one minute increments). Note: there are additional hourly costs for this service based on the region used.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Ocean cluster name.\n"
                    },
                    "optimizeImages": {
                        "$ref": "#/types/spotinst:ecs/OceanOptimizeImages:OceanOptimizeImages",
                        "description": "Object. Set auto image update settings.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region the cluster will run in.\n"
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanScheduledTask:OceanScheduledTask"
                        },
                        "description": "While used, you can control whether the group should perform a deployment after an update to the configuration.\n"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more security group ids.\n"
                    },
                    "spotPercentage": {
                        "type": "integer",
                        "description": "The percentage of Spot instances that would spin up from the `desired_capacity` number.\n"
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public ip.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanTag:OceanTag"
                        },
                        "description": "Optionally adds tags to instances launched in an Ocean cluster.\n"
                    },
                    "updatePolicy": {
                        "$ref": "#/types/spotinst:ecs/OceanUpdatePolicy:OceanUpdatePolicy",
                        "description": "While used, you can control whether the group should perform a deployment after an update to the configuration.\n"
                    },
                    "useAsTemplateOnly": {
                        "type": "boolean",
                        "description": "launch specification defined on the Ocean object will function only as a template for virtual node groups.\n"
                    },
                    "userData": {
                        "type": "string",
                        "description": "Base64-encoded MIME user data to make available to the instances.\n"
                    },
                    "utilizeCommitments": {
                        "type": "boolean",
                        "description": "If savings plans exist, Ocean will utilize them before launching Spot instances.\n"
                    },
                    "utilizeReservedInstances": {
                        "type": "boolean",
                        "description": "If Reserved instances exist, Ocean will utilize them before launching Spot instances.\n"
                    },
                    "whitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Instance types allowed in the Ocean cluster. Cannot be configured if `blacklist`/`filters` is configured.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:ecs/oceanLaunchSpec:OceanLaunchSpec": {
            "description": "Manages a custom Spotinst Ocean ECS Launch Spec resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.ecs.OceanLaunchSpec(\"example\", {\n    attributes: [{\n        key: \"fakeKey\",\n        value: \"fakeValue\",\n    }],\n    autoscaleHeadrooms: [{\n        cpuPerUnit: 1000,\n        memoryPerUnit: 2048,\n        numOfUnits: 5,\n    }],\n    blockDeviceMappings: [{\n        deviceName: \"/dev/xvda1\",\n        ebs: {\n            deleteOnTermination: true,\n            dynamicVolumeSize: {\n                baseSize: 50,\n                resource: \"CPU\",\n                sizePerResourceUnit: 20,\n            },\n            encrypted: false,\n            throughput: 500,\n            volumeSize: 50,\n            volumeType: \"gp2\",\n        },\n    }],\n    iamInstanceProfile: \"iam-profile\",\n    imageId: \"ami-123456\",\n    images: [\n        {\n            imageId: \"ami-12345\",\n        },\n        {\n            imageId: \"ami-67890\",\n        },\n    ],\n    instanceMetadataOptions: {\n        httpPutResponseHopLimit: 10,\n        httpTokens: \"required\",\n    },\n    instanceTypes: [\n        \"m3.large\",\n        \"m3.xlarge\",\n        \"m3.2xlarge\",\n        \"m4.large\",\n        \"m4.xlarge\",\n        \"m4.4xlarge\",\n        \"m4.2xlarge\",\n        \"m4.10xlarge\",\n        \"m4.16xlarge\",\n        \"m5.large\",\n        \"m5.xlarge\",\n        \"m5.2xlarge\",\n        \"m5.4xlarge\",\n        \"m5.12xlarge\",\n        \"m5.24xlarge\",\n    ],\n    oceanId: \"o-123456\",\n    preferredSpotTypes: [\n        \"m3.large\",\n        \"m3.xlarge\",\n        \"m3.2xlarge\",\n        \"m4.large\",\n        \"m4.xlarge\",\n    ],\n    restrictScaleDown: true,\n    schedulingTasks: [{\n        cronExpression: \"0 1 * * *\",\n        isEnabled: true,\n        taskHeadrooms: [{\n            cpuPerUnit: 1000,\n            memoryPerUnit: 2048,\n            numOfUnits: 5,\n        }],\n        taskType: \"manualHeadroomUpdate\",\n    }],\n    securityGroupIds: [\"awseb-12345\"],\n    strategies: [{\n        spotPercentage: 50,\n    }],\n    subnetIds: [\"subnet-12345\"],\n    tags: [{\n        key: \"Env\",\n        value: \"production\",\n    }],\n    userData: \"echo hello world\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.ecs.OceanLaunchSpec(\"example\",\n    attributes=[spotinst.ecs.OceanLaunchSpecAttributeArgs(\n        key=\"fakeKey\",\n        value=\"fakeValue\",\n    )],\n    autoscale_headrooms=[spotinst.ecs.OceanLaunchSpecAutoscaleHeadroomArgs(\n        cpu_per_unit=1000,\n        memory_per_unit=2048,\n        num_of_units=5,\n    )],\n    block_device_mappings=[spotinst.ecs.OceanLaunchSpecBlockDeviceMappingArgs(\n        device_name=\"/dev/xvda1\",\n        ebs=spotinst.ecs.OceanLaunchSpecBlockDeviceMappingEbsArgs(\n            delete_on_termination=True,\n            dynamic_volume_size=spotinst.ecs.OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSizeArgs(\n                base_size=50,\n                resource=\"CPU\",\n                size_per_resource_unit=20,\n            ),\n            encrypted=False,\n            throughput=500,\n            volume_size=50,\n            volume_type=\"gp2\",\n        ),\n    )],\n    iam_instance_profile=\"iam-profile\",\n    image_id=\"ami-123456\",\n    images=[\n        spotinst.ecs.OceanLaunchSpecImageArgs(\n            image_id=\"ami-12345\",\n        ),\n        spotinst.ecs.OceanLaunchSpecImageArgs(\n            image_id=\"ami-67890\",\n        ),\n    ],\n    instance_metadata_options=spotinst.ecs.OceanLaunchSpecInstanceMetadataOptionsArgs(\n        http_put_response_hop_limit=10,\n        http_tokens=\"required\",\n    ),\n    instance_types=[\n        \"m3.large\",\n        \"m3.xlarge\",\n        \"m3.2xlarge\",\n        \"m4.large\",\n        \"m4.xlarge\",\n        \"m4.4xlarge\",\n        \"m4.2xlarge\",\n        \"m4.10xlarge\",\n        \"m4.16xlarge\",\n        \"m5.large\",\n        \"m5.xlarge\",\n        \"m5.2xlarge\",\n        \"m5.4xlarge\",\n        \"m5.12xlarge\",\n        \"m5.24xlarge\",\n    ],\n    ocean_id=\"o-123456\",\n    preferred_spot_types=[\n        \"m3.large\",\n        \"m3.xlarge\",\n        \"m3.2xlarge\",\n        \"m4.large\",\n        \"m4.xlarge\",\n    ],\n    restrict_scale_down=True,\n    scheduling_tasks=[spotinst.ecs.OceanLaunchSpecSchedulingTaskArgs(\n        cron_expression=\"0 1 * * *\",\n        is_enabled=True,\n        task_headrooms=[spotinst.ecs.OceanLaunchSpecSchedulingTaskTaskHeadroomArgs(\n            cpu_per_unit=1000,\n            memory_per_unit=2048,\n            num_of_units=5,\n        )],\n        task_type=\"manualHeadroomUpdate\",\n    )],\n    security_group_ids=[\"awseb-12345\"],\n    strategies=[spotinst.ecs.OceanLaunchSpecStrategyArgs(\n        spot_percentage=50,\n    )],\n    subnet_ids=[\"subnet-12345\"],\n    tags=[spotinst.ecs.OceanLaunchSpecTagArgs(\n        key=\"Env\",\n        value=\"production\",\n    )],\n    user_data=\"echo hello world\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new SpotInst.Ecs.OceanLaunchSpec(\"example\", new()\n    {\n        Attributes = new[]\n        {\n            new SpotInst.Ecs.Inputs.OceanLaunchSpecAttributeArgs\n            {\n                Key = \"fakeKey\",\n                Value = \"fakeValue\",\n            },\n        },\n        AutoscaleHeadrooms = new[]\n        {\n            new SpotInst.Ecs.Inputs.OceanLaunchSpecAutoscaleHeadroomArgs\n            {\n                CpuPerUnit = 1000,\n                MemoryPerUnit = 2048,\n                NumOfUnits = 5,\n            },\n        },\n        BlockDeviceMappings = new[]\n        {\n            new SpotInst.Ecs.Inputs.OceanLaunchSpecBlockDeviceMappingArgs\n            {\n                DeviceName = \"/dev/xvda1\",\n                Ebs = new SpotInst.Ecs.Inputs.OceanLaunchSpecBlockDeviceMappingEbsArgs\n                {\n                    DeleteOnTermination = true,\n                    DynamicVolumeSize = new SpotInst.Ecs.Inputs.OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSizeArgs\n                    {\n                        BaseSize = 50,\n                        Resource = \"CPU\",\n                        SizePerResourceUnit = 20,\n                    },\n                    Encrypted = false,\n                    Throughput = 500,\n                    VolumeSize = 50,\n                    VolumeType = \"gp2\",\n                },\n            },\n        },\n        IamInstanceProfile = \"iam-profile\",\n        ImageId = \"ami-123456\",\n        Images = new[]\n        {\n            new SpotInst.Ecs.Inputs.OceanLaunchSpecImageArgs\n            {\n                ImageId = \"ami-12345\",\n            },\n            new SpotInst.Ecs.Inputs.OceanLaunchSpecImageArgs\n            {\n                ImageId = \"ami-67890\",\n            },\n        },\n        InstanceMetadataOptions = new SpotInst.Ecs.Inputs.OceanLaunchSpecInstanceMetadataOptionsArgs\n        {\n            HttpPutResponseHopLimit = 10,\n            HttpTokens = \"required\",\n        },\n        InstanceTypes = new[]\n        {\n            \"m3.large\",\n            \"m3.xlarge\",\n            \"m3.2xlarge\",\n            \"m4.large\",\n            \"m4.xlarge\",\n            \"m4.4xlarge\",\n            \"m4.2xlarge\",\n            \"m4.10xlarge\",\n            \"m4.16xlarge\",\n            \"m5.large\",\n            \"m5.xlarge\",\n            \"m5.2xlarge\",\n            \"m5.4xlarge\",\n            \"m5.12xlarge\",\n            \"m5.24xlarge\",\n        },\n        OceanId = \"o-123456\",\n        PreferredSpotTypes = new[]\n        {\n            \"m3.large\",\n            \"m3.xlarge\",\n            \"m3.2xlarge\",\n            \"m4.large\",\n            \"m4.xlarge\",\n        },\n        RestrictScaleDown = true,\n        SchedulingTasks = new[]\n        {\n            new SpotInst.Ecs.Inputs.OceanLaunchSpecSchedulingTaskArgs\n            {\n                CronExpression = \"0 1 * * *\",\n                IsEnabled = true,\n                TaskHeadrooms = new[]\n                {\n                    new SpotInst.Ecs.Inputs.OceanLaunchSpecSchedulingTaskTaskHeadroomArgs\n                    {\n                        CpuPerUnit = 1000,\n                        MemoryPerUnit = 2048,\n                        NumOfUnits = 5,\n                    },\n                },\n                TaskType = \"manualHeadroomUpdate\",\n            },\n        },\n        SecurityGroupIds = new[]\n        {\n            \"awseb-12345\",\n        },\n        Strategies = new[]\n        {\n            new SpotInst.Ecs.Inputs.OceanLaunchSpecStrategyArgs\n            {\n                SpotPercentage = 50,\n            },\n        },\n        SubnetIds = new[]\n        {\n            \"subnet-12345\",\n        },\n        Tags = new[]\n        {\n            new SpotInst.Ecs.Inputs.OceanLaunchSpecTagArgs\n            {\n                Key = \"Env\",\n                Value = \"production\",\n            },\n        },\n        UserData = \"echo hello world\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/ecs\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ecs.NewOceanLaunchSpec(ctx, \"example\", \u0026ecs.OceanLaunchSpecArgs{\n\t\t\tAttributes: ecs.OceanLaunchSpecAttributeArray{\n\t\t\t\t\u0026ecs.OceanLaunchSpecAttributeArgs{\n\t\t\t\t\tKey:   pulumi.String(\"fakeKey\"),\n\t\t\t\t\tValue: pulumi.String(\"fakeValue\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAutoscaleHeadrooms: ecs.OceanLaunchSpecAutoscaleHeadroomArray{\n\t\t\t\t\u0026ecs.OceanLaunchSpecAutoscaleHeadroomArgs{\n\t\t\t\t\tCpuPerUnit:    pulumi.Int(1000),\n\t\t\t\t\tMemoryPerUnit: pulumi.Int(2048),\n\t\t\t\t\tNumOfUnits:    pulumi.Int(5),\n\t\t\t\t},\n\t\t\t},\n\t\t\tBlockDeviceMappings: ecs.OceanLaunchSpecBlockDeviceMappingArray{\n\t\t\t\t\u0026ecs.OceanLaunchSpecBlockDeviceMappingArgs{\n\t\t\t\t\tDeviceName: pulumi.String(\"/dev/xvda1\"),\n\t\t\t\t\tEbs: \u0026ecs.OceanLaunchSpecBlockDeviceMappingEbsArgs{\n\t\t\t\t\t\tDeleteOnTermination: pulumi.Bool(true),\n\t\t\t\t\t\tDynamicVolumeSize: \u0026ecs.OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSizeArgs{\n\t\t\t\t\t\t\tBaseSize:            pulumi.Int(50),\n\t\t\t\t\t\t\tResource:            pulumi.String(\"CPU\"),\n\t\t\t\t\t\t\tSizePerResourceUnit: pulumi.Int(20),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tEncrypted:  pulumi.Bool(false),\n\t\t\t\t\t\tThroughput: pulumi.Int(500),\n\t\t\t\t\t\tVolumeSize: pulumi.Int(50),\n\t\t\t\t\t\tVolumeType: pulumi.String(\"gp2\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tIamInstanceProfile: pulumi.String(\"iam-profile\"),\n\t\t\tImageId:            pulumi.String(\"ami-123456\"),\n\t\t\tImages: ecs.OceanLaunchSpecImageArray{\n\t\t\t\t\u0026ecs.OceanLaunchSpecImageArgs{\n\t\t\t\t\tImageId: pulumi.String(\"ami-12345\"),\n\t\t\t\t},\n\t\t\t\t\u0026ecs.OceanLaunchSpecImageArgs{\n\t\t\t\t\tImageId: pulumi.String(\"ami-67890\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tInstanceMetadataOptions: \u0026ecs.OceanLaunchSpecInstanceMetadataOptionsArgs{\n\t\t\t\tHttpPutResponseHopLimit: pulumi.Int(10),\n\t\t\t\tHttpTokens:              pulumi.String(\"required\"),\n\t\t\t},\n\t\t\tInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"m3.large\"),\n\t\t\t\tpulumi.String(\"m3.xlarge\"),\n\t\t\t\tpulumi.String(\"m3.2xlarge\"),\n\t\t\t\tpulumi.String(\"m4.large\"),\n\t\t\t\tpulumi.String(\"m4.xlarge\"),\n\t\t\t\tpulumi.String(\"m4.4xlarge\"),\n\t\t\t\tpulumi.String(\"m4.2xlarge\"),\n\t\t\t\tpulumi.String(\"m4.10xlarge\"),\n\t\t\t\tpulumi.String(\"m4.16xlarge\"),\n\t\t\t\tpulumi.String(\"m5.large\"),\n\t\t\t\tpulumi.String(\"m5.xlarge\"),\n\t\t\t\tpulumi.String(\"m5.2xlarge\"),\n\t\t\t\tpulumi.String(\"m5.4xlarge\"),\n\t\t\t\tpulumi.String(\"m5.12xlarge\"),\n\t\t\t\tpulumi.String(\"m5.24xlarge\"),\n\t\t\t},\n\t\t\tOceanId: pulumi.String(\"o-123456\"),\n\t\t\tPreferredSpotTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"m3.large\"),\n\t\t\t\tpulumi.String(\"m3.xlarge\"),\n\t\t\t\tpulumi.String(\"m3.2xlarge\"),\n\t\t\t\tpulumi.String(\"m4.large\"),\n\t\t\t\tpulumi.String(\"m4.xlarge\"),\n\t\t\t},\n\t\t\tRestrictScaleDown: pulumi.Bool(true),\n\t\t\tSchedulingTasks: ecs.OceanLaunchSpecSchedulingTaskArray{\n\t\t\t\t\u0026ecs.OceanLaunchSpecSchedulingTaskArgs{\n\t\t\t\t\tCronExpression: pulumi.String(\"0 1 * * *\"),\n\t\t\t\t\tIsEnabled:      pulumi.Bool(true),\n\t\t\t\t\tTaskHeadrooms: ecs.OceanLaunchSpecSchedulingTaskTaskHeadroomArray{\n\t\t\t\t\t\t\u0026ecs.OceanLaunchSpecSchedulingTaskTaskHeadroomArgs{\n\t\t\t\t\t\t\tCpuPerUnit:    pulumi.Int(1000),\n\t\t\t\t\t\t\tMemoryPerUnit: pulumi.Int(2048),\n\t\t\t\t\t\t\tNumOfUnits:    pulumi.Int(5),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tTaskType: pulumi.String(\"manualHeadroomUpdate\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSecurityGroupIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"awseb-12345\"),\n\t\t\t},\n\t\t\tStrategies: ecs.OceanLaunchSpecStrategyArray{\n\t\t\t\t\u0026ecs.OceanLaunchSpecStrategyArgs{\n\t\t\t\t\tSpotPercentage: pulumi.Int(50),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSubnetIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"subnet-12345\"),\n\t\t\t},\n\t\t\tTags: ecs.OceanLaunchSpecTagArray{\n\t\t\t\t\u0026ecs.OceanLaunchSpecTagArgs{\n\t\t\t\t\tKey:   pulumi.String(\"Env\"),\n\t\t\t\t\tValue: pulumi.String(\"production\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUserData: pulumi.String(\"echo hello world\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.ecs.OceanLaunchSpec;\nimport com.pulumi.spotinst.ecs.OceanLaunchSpecArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecAttributeArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecAutoscaleHeadroomArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecBlockDeviceMappingArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecBlockDeviceMappingEbsArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSizeArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecImageArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecInstanceMetadataOptionsArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecSchedulingTaskArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecStrategyArgs;\nimport com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecTagArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OceanLaunchSpec(\"example\", OceanLaunchSpecArgs.builder()        \n            .attributes(OceanLaunchSpecAttributeArgs.builder()\n                .key(\"fakeKey\")\n                .value(\"fakeValue\")\n                .build())\n            .autoscaleHeadrooms(OceanLaunchSpecAutoscaleHeadroomArgs.builder()\n                .cpuPerUnit(1000)\n                .memoryPerUnit(2048)\n                .numOfUnits(5)\n                .build())\n            .blockDeviceMappings(OceanLaunchSpecBlockDeviceMappingArgs.builder()\n                .deviceName(\"/dev/xvda1\")\n                .ebs(OceanLaunchSpecBlockDeviceMappingEbsArgs.builder()\n                    .deleteOnTermination(\"true\")\n                    .dynamicVolumeSize(OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSizeArgs.builder()\n                        .baseSize(50)\n                        .resource(\"CPU\")\n                        .sizePerResourceUnit(20)\n                        .build())\n                    .encrypted(\"false\")\n                    .throughput(500)\n                    .volumeSize(50)\n                    .volumeType(\"gp2\")\n                    .build())\n                .build())\n            .iamInstanceProfile(\"iam-profile\")\n            .imageId(\"ami-123456\")\n            .images(            \n                OceanLaunchSpecImageArgs.builder()\n                    .imageId(\"ami-12345\")\n                    .build(),\n                OceanLaunchSpecImageArgs.builder()\n                    .imageId(\"ami-67890\")\n                    .build())\n            .instanceMetadataOptions(OceanLaunchSpecInstanceMetadataOptionsArgs.builder()\n                .httpPutResponseHopLimit(10)\n                .httpTokens(\"required\")\n                .build())\n            .instanceTypes(            \n                \"m3.large\",\n                \"m3.xlarge\",\n                \"m3.2xlarge\",\n                \"m4.large\",\n                \"m4.xlarge\",\n                \"m4.4xlarge\",\n                \"m4.2xlarge\",\n                \"m4.10xlarge\",\n                \"m4.16xlarge\",\n                \"m5.large\",\n                \"m5.xlarge\",\n                \"m5.2xlarge\",\n                \"m5.4xlarge\",\n                \"m5.12xlarge\",\n                \"m5.24xlarge\")\n            .oceanId(\"o-123456\")\n            .preferredSpotTypes(            \n                \"m3.large\",\n                \"m3.xlarge\",\n                \"m3.2xlarge\",\n                \"m4.large\",\n                \"m4.xlarge\")\n            .restrictScaleDown(true)\n            .schedulingTasks(OceanLaunchSpecSchedulingTaskArgs.builder()\n                .cronExpression(\"0 1 * * *\")\n                .isEnabled(true)\n                .taskHeadrooms(OceanLaunchSpecSchedulingTaskTaskHeadroomArgs.builder()\n                    .cpuPerUnit(1000)\n                    .memoryPerUnit(2048)\n                    .numOfUnits(5)\n                    .build())\n                .taskType(\"manualHeadroomUpdate\")\n                .build())\n            .securityGroupIds(\"awseb-12345\")\n            .strategies(OceanLaunchSpecStrategyArgs.builder()\n                .spotPercentage(50)\n                .build())\n            .subnetIds(\"subnet-12345\")\n            .tags(OceanLaunchSpecTagArgs.builder()\n                .key(\"Env\")\n                .value(\"production\")\n                .build())\n            .userData(\"echo hello world\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: spotinst:ecs:OceanLaunchSpec\n    properties:\n      attributes:\n        - key: fakeKey\n          value: fakeValue\n      autoscaleHeadrooms:\n        - cpuPerUnit: 1000\n          memoryPerUnit: 2048\n          numOfUnits: 5\n      blockDeviceMappings:\n        - deviceName: /dev/xvda1\n          ebs:\n            deleteOnTermination: 'true'\n            dynamicVolumeSize:\n              baseSize: 50\n              resource: CPU\n              sizePerResourceUnit: 20\n            encrypted: 'false'\n            throughput: 500\n            volumeSize: 50\n            volumeType: gp2\n      iamInstanceProfile: iam-profile\n      imageId: ami-123456\n      images:\n        - imageId: ami-12345\n        - imageId: ami-67890\n      instanceMetadataOptions:\n        httpPutResponseHopLimit: 10\n        httpTokens: required\n      instanceTypes:\n        - m3.large\n        - m3.xlarge\n        - m3.2xlarge\n        - m4.large\n        - m4.xlarge\n        - m4.4xlarge\n        - m4.2xlarge\n        - m4.10xlarge\n        - m4.16xlarge\n        - m5.large\n        - m5.xlarge\n        - m5.2xlarge\n        - m5.4xlarge\n        - m5.12xlarge\n        - m5.24xlarge\n      oceanId: o-123456\n      preferredSpotTypes:\n        - m3.large\n        - m3.xlarge\n        - m3.2xlarge\n        - m4.large\n        - m4.xlarge\n      restrictScaleDown: true\n      schedulingTasks:\n        - cronExpression: 0 1 * * *\n          isEnabled: true\n          taskHeadrooms:\n            - cpuPerUnit: 1000\n              memoryPerUnit: 2048\n              numOfUnits: 5\n          taskType: manualHeadroomUpdate\n      securityGroupIds:\n        - awseb-12345\n      strategies:\n        - spotPercentage: 50\n      subnetIds:\n        - subnet-12345\n      tags:\n        - key: Env\n          value: production\n      userData: echo hello world\n```\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const oceanLaunchspecId = spotinst_ocean_ecs_launch_spec.example.id;\n```\n```python\nimport pulumi\n\npulumi.export(\"oceanLaunchspecId\", spotinst_ocean_ecs_launch_spec[\"example\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"oceanLaunchspecId\"] = spotinst_ocean_ecs_launch_spec.Example.Id,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"oceanLaunchspecId\", spotinst_ocean_ecs_launch_spec.Example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        ctx.export(\"oceanLaunchspecId\", spotinst_ocean_ecs_launch_spec.example().id());\n    }\n}\n```\n```yaml\noutputs:\n  oceanLaunchspecId: ${spotinst_ocean_ecs_launch_spec.example.id}\n```\n{{% /example %}}\n{{% /examples %}}\n## Block Devices\n\n* `block_device_mappings`- (Optional) Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.   \n    * `device_name` - (Optional) String. Set device name. (Example: \"/dev/xvda1\").\n    * `ebs`- (Optional) Object. Set Elastic Block Store properties .\n        * `delete_on_termination`- (Optional) Boolean. Flag to delete the EBS on instance termination. \n        * `encrypted`- (Optional) Boolean. Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume.\n        * `iops`- (Required for requests to create io1 volumes; it is not used in requests to create gp2, st1, sc1, or standard volumes) Int. The number of I/O operations per second (IOPS) that the volume supports.\n        * `kms_key_id`- (Optional) String. Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.\n        * `snapshot_id`- (Optional) (Optional) String. The Snapshot ID to mount by. \n        * `volume_type`- (Optional, Default: `\"standard\"`) String. The type of the volume (example: \"gp2\").\n        * `volume_size`- (Optional) Int. The size, in GB of the volume.\n        * `throughput`- (Optional) The amount of data transferred to or from a storage device per second, you can use this param just in a case that `volume_type` = gp3.\n        * `dynamic_volume_size`- (Optional) Object. Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n            * `base_size`- (Required) Int. Initial size for volume. (Example: 50)\n            * `resource`- (Required) String. Resource type to increase volume size dynamically by. (valid values: \"CPU\")\n            * `size_per_resource_unit`- (Required) Int. Additional size (in GB) per resource unit. (Example: baseSize= 50, sizePerResourceUnit=20, and instance with 2 CPU is launched - its total disk size will be: 90GB)\n        * `no_device`- (Optional) String. suppresses the specified device included in the block device mapping of the AMI.\n",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecAttribute:OceanLaunchSpecAttribute"
                    },
                    "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                },
                "autoscaleHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                    },
                    "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                },
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecBlockDeviceMapping:OceanLaunchSpecBlockDeviceMapping"
                    }
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "Identifier of the image in AWS. Valid values: any string which is not empty or null.\n"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecImage:OceanLaunchSpecImage"
                    },
                    "description": "You can configure VNG with either the imageId or images objects, but not both simultaneously. For each architecture type (amd64, arm64) only one AMI is allowed. Valid values: null, or an array with at least one element\n"
                },
                "instanceMetadataOptions": {
                    "$ref": "#/types/spotinst:ecs/OceanLaunchSpecInstanceMetadataOptions:OceanLaunchSpecInstanceMetadataOptions",
                    "description": "Ocean instance metadata options object for IMDSv2.\n"
                },
                "instanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of instance types allowed to be provisioned for pods pending under the specified launch specification. The list overrides the list defined for the Ocean cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Ocean Launch Specification name.\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The Ocean cluster ID .\n"
                },
                "preferredSpotTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When Ocean scales up instances, it takes your preferred types into consideration while maintaining a variety of machine types running for optimized distribution.\n"
                },
                "restrictScaleDown": {
                    "type": "boolean",
                    "description": "Boolean. When set to “True”, VNG nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.\n"
                },
                "schedulingTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecSchedulingTask:OceanLaunchSpecSchedulingTask"
                    },
                    "description": "Used to define scheduled tasks such as a manual headroom update.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more security group ids.\n"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecStrategy:OceanLaunchSpecStrategy"
                    },
                    "description": "Similar to a strategy for an Ocean cluster, but applying only to a virtual node group.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set subnets in launchSpec. Each element in the array should be a subnet ID.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecTag:OceanLaunchSpecTag"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                }
            },
            "required": [
                "name",
                "oceanId"
            ],
            "inputProperties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecAttribute:OceanLaunchSpecAttribute"
                    },
                    "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                },
                "autoscaleHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                    },
                    "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                },
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecBlockDeviceMapping:OceanLaunchSpecBlockDeviceMapping"
                    }
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "Identifier of the image in AWS. Valid values: any string which is not empty or null.\n"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecImage:OceanLaunchSpecImage"
                    },
                    "description": "You can configure VNG with either the imageId or images objects, but not both simultaneously. For each architecture type (amd64, arm64) only one AMI is allowed. Valid values: null, or an array with at least one element\n"
                },
                "instanceMetadataOptions": {
                    "$ref": "#/types/spotinst:ecs/OceanLaunchSpecInstanceMetadataOptions:OceanLaunchSpecInstanceMetadataOptions",
                    "description": "Ocean instance metadata options object for IMDSv2.\n"
                },
                "instanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of instance types allowed to be provisioned for pods pending under the specified launch specification. The list overrides the list defined for the Ocean cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Ocean Launch Specification name.\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The Ocean cluster ID .\n"
                },
                "preferredSpotTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When Ocean scales up instances, it takes your preferred types into consideration while maintaining a variety of machine types running for optimized distribution.\n"
                },
                "restrictScaleDown": {
                    "type": "boolean",
                    "description": "Boolean. When set to “True”, VNG nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.\n"
                },
                "schedulingTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecSchedulingTask:OceanLaunchSpecSchedulingTask"
                    },
                    "description": "Used to define scheduled tasks such as a manual headroom update.\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more security group ids.\n"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecStrategy:OceanLaunchSpecStrategy"
                    },
                    "description": "Similar to a strategy for an Ocean cluster, but applying only to a virtual node group.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set subnets in launchSpec. Each element in the array should be a subnet ID.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecTag:OceanLaunchSpecTag"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                }
            },
            "requiredInputs": [
                "oceanId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanLaunchSpec resources.\n",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanLaunchSpecAttribute:OceanLaunchSpecAttribute"
                        },
                        "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                    },
                    "autoscaleHeadrooms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                        },
                        "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                    },
                    "blockDeviceMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanLaunchSpecBlockDeviceMapping:OceanLaunchSpecBlockDeviceMapping"
                        }
                    },
                    "iamInstanceProfile": {
                        "type": "string",
                        "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "Identifier of the image in AWS. Valid values: any string which is not empty or null.\n"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanLaunchSpecImage:OceanLaunchSpecImage"
                        },
                        "description": "You can configure VNG with either the imageId or images objects, but not both simultaneously. For each architecture type (amd64, arm64) only one AMI is allowed. Valid values: null, or an array with at least one element\n"
                    },
                    "instanceMetadataOptions": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecInstanceMetadataOptions:OceanLaunchSpecInstanceMetadataOptions",
                        "description": "Ocean instance metadata options object for IMDSv2.\n"
                    },
                    "instanceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of instance types allowed to be provisioned for pods pending under the specified launch specification. The list overrides the list defined for the Ocean cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Ocean Launch Specification name.\n"
                    },
                    "oceanId": {
                        "type": "string",
                        "description": "The Ocean cluster ID .\n"
                    },
                    "preferredSpotTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "When Ocean scales up instances, it takes your preferred types into consideration while maintaining a variety of machine types running for optimized distribution.\n"
                    },
                    "restrictScaleDown": {
                        "type": "boolean",
                        "description": "Boolean. When set to “True”, VNG nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.\n"
                    },
                    "schedulingTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanLaunchSpecSchedulingTask:OceanLaunchSpecSchedulingTask"
                        },
                        "description": "Used to define scheduled tasks such as a manual headroom update.\n"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more security group ids.\n"
                    },
                    "strategies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanLaunchSpecStrategy:OceanLaunchSpecStrategy"
                        },
                        "description": "Similar to a strategy for an Ocean cluster, but applying only to a virtual node group.\n"
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set subnets in launchSpec. Each element in the array should be a subnet ID.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanLaunchSpecTag:OceanLaunchSpecTag"
                        },
                        "description": "A key/value mapping of tags to assign to the resource.\n"
                    },
                    "userData": {
                        "type": "string",
                        "description": "Base64-encoded MIME user data to make available to the instances.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:gcp/elastigroup:Elastigroup": {
            "description": "Provides a Spotinst elastigroup GCP resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.gcp.Elastigroup(\"example\", {\n    availabilityZones: [\n        \"asia-east1-c\",\n        \"us-central1-a\",\n    ],\n    backendServices: [{\n        locationType: \"regional\",\n        namedPorts: [{\n            name: \"port-name\",\n            ports: [\n                \"8000\",\n                \"6000\",\n            ],\n        }],\n        scheme: \"INTERNAL\",\n        serviceName: \"spotinst-elb-backend-service\",\n    }],\n    description: \"spotinst gcp group\",\n    desiredCapacity: 1,\n    disks: [{\n        autoDelete: true,\n        boot: true,\n        deviceName: \"device\",\n        initializeParams: [{\n            diskSizeGb: \"10\",\n            diskType: \"pd-standard\",\n            sourceImage: \"\",\n        }],\n        \"interface\": \"SCSI\",\n        mode: \"READ_WRITE\",\n        type: \"PERSISTENT\",\n    }],\n    drainingTimeout: 180,\n    fallbackToOndemand: true,\n    instanceNamePrefix: \"test-123a\",\n    instanceTypesCustoms: [{\n        memoryGib: 7,\n        vcpu: 2,\n    }],\n    instanceTypesOndemand: \"n1-standard-1\",\n    instanceTypesPreemptibles: [\n        \"n1-standard-1\",\n        \"n1-standard-2\",\n    ],\n    labels: [{\n        key: \"test_key\",\n        value: \"test_value\",\n    }],\n    maxSize: 1,\n    minSize: 0,\n    networkInterfaces: [{\n        network: \"spot-network\",\n    }],\n    preemptiblePercentage: 50,\n    provisioningModel: \"SPOT\",\n    scalingUpPolicies: [{\n        actionType: \"adjustment\",\n        adjustment: 1,\n        cooldown: 300,\n        dimensions: [{\n            name: \"storage_type\",\n            value: \"pd-ssd\",\n        }],\n        evaluationPeriods: 1,\n        metricName: \"instance/disk/read_ops_count\",\n        namespace: \"compute\",\n        operator: \"gte\",\n        period: 300,\n        policyName: \"scale_up_1\",\n        source: \"stackdriver\",\n        statistic: \"average\",\n        threshold: 10000,\n        unit: \"percent\",\n    }],\n    serviceAccount: \"example@myProject.iam.gservicecct.com\",\n    startupScript: \"\",\n    subnets: [{\n        region: \"asia-east1\",\n        subnetNames: [\"default\"],\n    }],\n    tags: [\n        \"http\",\n        \"https\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.gcp.Elastigroup(\"example\",\n    availability_zones=[\n        \"asia-east1-c\",\n        \"us-central1-a\",\n    ],\n    backend_services=[spotinst.gcp.ElastigroupBackendServiceArgs(\n        location_type=\"regional\",\n        named_ports=[spotinst.gcp.ElastigroupBackendServiceNamedPortArgs(\n            name=\"port-name\",\n            ports=[\n                \"8000\",\n                \"6000\",\n            ],\n        )],\n        scheme=\"INTERNAL\",\n        service_name=\"spotinst-elb-backend-service\",\n    )],\n    description=\"spotinst gcp group\",\n    desired_capacity=1,\n    disks=[spotinst.gcp.ElastigroupDiskArgs(\n        auto_delete=True,\n        boot=True,\n        device_name=\"device\",\n        initialize_params=[spotinst.gcp.ElastigroupDiskInitializeParamArgs(\n            disk_size_gb=\"10\",\n            disk_type=\"pd-standard\",\n            source_image=\"\",\n        )],\n        interface=\"SCSI\",\n        mode=\"READ_WRITE\",\n        type=\"PERSISTENT\",\n    )],\n    draining_timeout=180,\n    fallback_to_ondemand=True,\n    instance_name_prefix=\"test-123a\",\n    instance_types_customs=[spotinst.gcp.ElastigroupInstanceTypesCustomArgs(\n        memory_gib=7,\n        vcpu=2,\n    )],\n    instance_types_ondemand=\"n1-standard-1\",\n    instance_types_preemptibles=[\n        \"n1-standard-1\",\n        \"n1-standard-2\",\n    ],\n    labels=[spotinst.gcp.ElastigroupLabelArgs(\n        key=\"test_key\",\n        value=\"test_value\",\n    )],\n    max_size=1,\n    min_size=0,\n    network_interfaces=[spotinst.gcp.ElastigroupNetworkInterfaceArgs(\n        network=\"spot-network\",\n    )],\n    preemptible_percentage=50,\n    provisioning_model=\"SPOT\",\n    scaling_up_policies=[spotinst.gcp.ElastigroupScalingUpPolicyArgs(\n        action_type=\"adjustment\",\n        adjustment=1,\n        cooldown=300,\n        dimensions=[spotinst.gcp.ElastigroupScalingUpPolicyDimensionArgs(\n            name=\"storage_type\",\n            value=\"pd-ssd\",\n        )],\n        evaluation_periods=1,\n        metric_name=\"instance/disk/read_ops_count\",\n        namespace=\"compute\",\n        operator=\"gte\",\n        period=300,\n        policy_name=\"scale_up_1\",\n        source=\"stackdriver\",\n        statistic=\"average\",\n        threshold=10000,\n        unit=\"percent\",\n    )],\n    service_account=\"example@myProject.iam.gservicecct.com\",\n    startup_script=\"\",\n    subnets=[spotinst.gcp.ElastigroupSubnetArgs(\n        region=\"asia-east1\",\n        subnet_names=[\"default\"],\n    )],\n    tags=[\n        \"http\",\n        \"https\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new SpotInst.Gcp.Elastigroup(\"example\", new()\n    {\n        AvailabilityZones = new[]\n        {\n            \"asia-east1-c\",\n            \"us-central1-a\",\n        },\n        BackendServices = new[]\n        {\n            new SpotInst.Gcp.Inputs.ElastigroupBackendServiceArgs\n            {\n                LocationType = \"regional\",\n                NamedPorts = new[]\n                {\n                    new SpotInst.Gcp.Inputs.ElastigroupBackendServiceNamedPortArgs\n                    {\n                        Name = \"port-name\",\n                        Ports = new[]\n                        {\n                            \"8000\",\n                            \"6000\",\n                        },\n                    },\n                },\n                Scheme = \"INTERNAL\",\n                ServiceName = \"spotinst-elb-backend-service\",\n            },\n        },\n        Description = \"spotinst gcp group\",\n        DesiredCapacity = 1,\n        Disks = new[]\n        {\n            new SpotInst.Gcp.Inputs.ElastigroupDiskArgs\n            {\n                AutoDelete = true,\n                Boot = true,\n                DeviceName = \"device\",\n                InitializeParams = new[]\n                {\n                    new SpotInst.Gcp.Inputs.ElastigroupDiskInitializeParamArgs\n                    {\n                        DiskSizeGb = \"10\",\n                        DiskType = \"pd-standard\",\n                        SourceImage = \"\",\n                    },\n                },\n                Interface = \"SCSI\",\n                Mode = \"READ_WRITE\",\n                Type = \"PERSISTENT\",\n            },\n        },\n        DrainingTimeout = 180,\n        FallbackToOndemand = true,\n        InstanceNamePrefix = \"test-123a\",\n        InstanceTypesCustoms = new[]\n        {\n            new SpotInst.Gcp.Inputs.ElastigroupInstanceTypesCustomArgs\n            {\n                MemoryGib = 7,\n                Vcpu = 2,\n            },\n        },\n        InstanceTypesOndemand = \"n1-standard-1\",\n        InstanceTypesPreemptibles = new[]\n        {\n            \"n1-standard-1\",\n            \"n1-standard-2\",\n        },\n        Labels = new[]\n        {\n            new SpotInst.Gcp.Inputs.ElastigroupLabelArgs\n            {\n                Key = \"test_key\",\n                Value = \"test_value\",\n            },\n        },\n        MaxSize = 1,\n        MinSize = 0,\n        NetworkInterfaces = new[]\n        {\n            new SpotInst.Gcp.Inputs.ElastigroupNetworkInterfaceArgs\n            {\n                Network = \"spot-network\",\n            },\n        },\n        PreemptiblePercentage = 50,\n        ProvisioningModel = \"SPOT\",\n        ScalingUpPolicies = new[]\n        {\n            new SpotInst.Gcp.Inputs.ElastigroupScalingUpPolicyArgs\n            {\n                ActionType = \"adjustment\",\n                Adjustment = 1,\n                Cooldown = 300,\n                Dimensions = new[]\n                {\n                    new SpotInst.Gcp.Inputs.ElastigroupScalingUpPolicyDimensionArgs\n                    {\n                        Name = \"storage_type\",\n                        Value = \"pd-ssd\",\n                    },\n                },\n                EvaluationPeriods = 1,\n                MetricName = \"instance/disk/read_ops_count\",\n                Namespace = \"compute\",\n                Operator = \"gte\",\n                Period = 300,\n                PolicyName = \"scale_up_1\",\n                Source = \"stackdriver\",\n                Statistic = \"average\",\n                Threshold = 10000,\n                Unit = \"percent\",\n            },\n        },\n        ServiceAccount = \"example@myProject.iam.gservicecct.com\",\n        StartupScript = \"\",\n        Subnets = new[]\n        {\n            new SpotInst.Gcp.Inputs.ElastigroupSubnetArgs\n            {\n                Region = \"asia-east1\",\n                SubnetNames = new[]\n                {\n                    \"default\",\n                },\n            },\n        },\n        Tags = new[]\n        {\n            \"http\",\n            \"https\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/gcp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := gcp.NewElastigroup(ctx, \"example\", \u0026gcp.ElastigroupArgs{\n\t\t\tAvailabilityZones: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"asia-east1-c\"),\n\t\t\t\tpulumi.String(\"us-central1-a\"),\n\t\t\t},\n\t\t\tBackendServices: gcp.ElastigroupBackendServiceArray{\n\t\t\t\t\u0026gcp.ElastigroupBackendServiceArgs{\n\t\t\t\t\tLocationType: pulumi.String(\"regional\"),\n\t\t\t\t\tNamedPorts: gcp.ElastigroupBackendServiceNamedPortArray{\n\t\t\t\t\t\t\u0026gcp.ElastigroupBackendServiceNamedPortArgs{\n\t\t\t\t\t\t\tName: pulumi.String(\"port-name\"),\n\t\t\t\t\t\t\tPorts: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"8000\"),\n\t\t\t\t\t\t\t\tpulumi.String(\"6000\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tScheme:      pulumi.String(\"INTERNAL\"),\n\t\t\t\t\tServiceName: pulumi.String(\"spotinst-elb-backend-service\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDescription:     pulumi.String(\"spotinst gcp group\"),\n\t\t\tDesiredCapacity: pulumi.Int(1),\n\t\t\tDisks: gcp.ElastigroupDiskArray{\n\t\t\t\t\u0026gcp.ElastigroupDiskArgs{\n\t\t\t\t\tAutoDelete: pulumi.Bool(true),\n\t\t\t\t\tBoot:       pulumi.Bool(true),\n\t\t\t\t\tDeviceName: pulumi.String(\"device\"),\n\t\t\t\t\tInitializeParams: gcp.ElastigroupDiskInitializeParamArray{\n\t\t\t\t\t\t\u0026gcp.ElastigroupDiskInitializeParamArgs{\n\t\t\t\t\t\t\tDiskSizeGb:  pulumi.String(\"10\"),\n\t\t\t\t\t\t\tDiskType:    pulumi.String(\"pd-standard\"),\n\t\t\t\t\t\t\tSourceImage: pulumi.String(\"\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tInterface: pulumi.String(\"SCSI\"),\n\t\t\t\t\tMode:      pulumi.String(\"READ_WRITE\"),\n\t\t\t\t\tType:      pulumi.String(\"PERSISTENT\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDrainingTimeout:    pulumi.Int(180),\n\t\t\tFallbackToOndemand: pulumi.Bool(true),\n\t\t\tInstanceNamePrefix: pulumi.String(\"test-123a\"),\n\t\t\tInstanceTypesCustoms: gcp.ElastigroupInstanceTypesCustomArray{\n\t\t\t\t\u0026gcp.ElastigroupInstanceTypesCustomArgs{\n\t\t\t\t\tMemoryGib: pulumi.Int(7),\n\t\t\t\t\tVcpu:      pulumi.Int(2),\n\t\t\t\t},\n\t\t\t},\n\t\t\tInstanceTypesOndemand: pulumi.String(\"n1-standard-1\"),\n\t\t\tInstanceTypesPreemptibles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"n1-standard-1\"),\n\t\t\t\tpulumi.String(\"n1-standard-2\"),\n\t\t\t},\n\t\t\tLabels: gcp.ElastigroupLabelArray{\n\t\t\t\t\u0026gcp.ElastigroupLabelArgs{\n\t\t\t\t\tKey:   pulumi.String(\"test_key\"),\n\t\t\t\t\tValue: pulumi.String(\"test_value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tMaxSize: pulumi.Int(1),\n\t\t\tMinSize: pulumi.Int(0),\n\t\t\tNetworkInterfaces: gcp.ElastigroupNetworkInterfaceArray{\n\t\t\t\t\u0026gcp.ElastigroupNetworkInterfaceArgs{\n\t\t\t\t\tNetwork: pulumi.String(\"spot-network\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPreemptiblePercentage: pulumi.Int(50),\n\t\t\tProvisioningModel:     pulumi.String(\"SPOT\"),\n\t\t\tScalingUpPolicies: gcp.ElastigroupScalingUpPolicyArray{\n\t\t\t\t\u0026gcp.ElastigroupScalingUpPolicyArgs{\n\t\t\t\t\tActionType: pulumi.String(\"adjustment\"),\n\t\t\t\t\tAdjustment: pulumi.Int(1),\n\t\t\t\t\tCooldown:   pulumi.Int(300),\n\t\t\t\t\tDimensions: gcp.ElastigroupScalingUpPolicyDimensionArray{\n\t\t\t\t\t\t\u0026gcp.ElastigroupScalingUpPolicyDimensionArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"storage_type\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"pd-ssd\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tEvaluationPeriods: pulumi.Int(1),\n\t\t\t\t\tMetricName:        pulumi.String(\"instance/disk/read_ops_count\"),\n\t\t\t\t\tNamespace:         pulumi.String(\"compute\"),\n\t\t\t\t\tOperator:          pulumi.String(\"gte\"),\n\t\t\t\t\tPeriod:            pulumi.Int(300),\n\t\t\t\t\tPolicyName:        pulumi.String(\"scale_up_1\"),\n\t\t\t\t\tSource:            pulumi.String(\"stackdriver\"),\n\t\t\t\t\tStatistic:         pulumi.String(\"average\"),\n\t\t\t\t\tThreshold:         pulumi.Float64(10000),\n\t\t\t\t\tUnit:              pulumi.String(\"percent\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tServiceAccount: pulumi.String(\"example@myProject.iam.gservicecct.com\"),\n\t\t\tStartupScript:  pulumi.String(\"\"),\n\t\t\tSubnets: gcp.ElastigroupSubnetArray{\n\t\t\t\t\u0026gcp.ElastigroupSubnetArgs{\n\t\t\t\t\tRegion: pulumi.String(\"asia-east1\"),\n\t\t\t\t\tSubnetNames: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"default\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"http\"),\n\t\t\t\tpulumi.String(\"https\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.gcp.Elastigroup;\nimport com.pulumi.spotinst.gcp.ElastigroupArgs;\nimport com.pulumi.spotinst.gcp.inputs.ElastigroupBackendServiceArgs;\nimport com.pulumi.spotinst.gcp.inputs.ElastigroupDiskArgs;\nimport com.pulumi.spotinst.gcp.inputs.ElastigroupInstanceTypesCustomArgs;\nimport com.pulumi.spotinst.gcp.inputs.ElastigroupLabelArgs;\nimport com.pulumi.spotinst.gcp.inputs.ElastigroupNetworkInterfaceArgs;\nimport com.pulumi.spotinst.gcp.inputs.ElastigroupScalingUpPolicyArgs;\nimport com.pulumi.spotinst.gcp.inputs.ElastigroupSubnetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Elastigroup(\"example\", ElastigroupArgs.builder()        \n            .availabilityZones(            \n                \"asia-east1-c\",\n                \"us-central1-a\")\n            .backendServices(ElastigroupBackendServiceArgs.builder()\n                .locationType(\"regional\")\n                .namedPorts(ElastigroupBackendServiceNamedPortArgs.builder()\n                    .name(\"port-name\")\n                    .ports(                    \n                        8000,\n                        6000)\n                    .build())\n                .scheme(\"INTERNAL\")\n                .serviceName(\"spotinst-elb-backend-service\")\n                .build())\n            .description(\"spotinst gcp group\")\n            .desiredCapacity(1)\n            .disks(ElastigroupDiskArgs.builder()\n                .autoDelete(true)\n                .boot(true)\n                .deviceName(\"device\")\n                .initializeParams(ElastigroupDiskInitializeParamArgs.builder()\n                    .diskSizeGb(10)\n                    .diskType(\"pd-standard\")\n                    .sourceImage(\"\")\n                    .build())\n                .interface_(\"SCSI\")\n                .mode(\"READ_WRITE\")\n                .type(\"PERSISTENT\")\n                .build())\n            .drainingTimeout(180)\n            .fallbackToOndemand(true)\n            .instanceNamePrefix(\"test-123a\")\n            .instanceTypesCustoms(ElastigroupInstanceTypesCustomArgs.builder()\n                .memoryGib(7)\n                .vcpu(2)\n                .build())\n            .instanceTypesOndemand(\"n1-standard-1\")\n            .instanceTypesPreemptibles(            \n                \"n1-standard-1\",\n                \"n1-standard-2\")\n            .labels(ElastigroupLabelArgs.builder()\n                .key(\"test_key\")\n                .value(\"test_value\")\n                .build())\n            .maxSize(1)\n            .minSize(0)\n            .networkInterfaces(ElastigroupNetworkInterfaceArgs.builder()\n                .network(\"spot-network\")\n                .build())\n            .preemptiblePercentage(50)\n            .provisioningModel(\"SPOT\")\n            .scalingUpPolicies(ElastigroupScalingUpPolicyArgs.builder()\n                .actionType(\"adjustment\")\n                .adjustment(1)\n                .cooldown(300)\n                .dimensions(ElastigroupScalingUpPolicyDimensionArgs.builder()\n                    .name(\"storage_type\")\n                    .value(\"pd-ssd\")\n                    .build())\n                .evaluationPeriods(1)\n                .metricName(\"instance/disk/read_ops_count\")\n                .namespace(\"compute\")\n                .operator(\"gte\")\n                .period(300)\n                .policyName(\"scale_up_1\")\n                .source(\"stackdriver\")\n                .statistic(\"average\")\n                .threshold(10000)\n                .unit(\"percent\")\n                .build())\n            .serviceAccount(\"example@myProject.iam.gservicecct.com\")\n            .startupScript(\"\")\n            .subnets(ElastigroupSubnetArgs.builder()\n                .region(\"asia-east1\")\n                .subnetNames(\"default\")\n                .build())\n            .tags(            \n                \"http\",\n                \"https\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: spotinst:gcp:Elastigroup\n    properties:\n      availabilityZones:\n        - asia-east1-c\n        - us-central1-a\n      backendServices:\n        - locationType: regional\n          namedPorts:\n            - name: port-name\n              ports:\n                - 8000\n                - 6000\n          scheme: INTERNAL\n          serviceName: spotinst-elb-backend-service\n      description: spotinst gcp group\n      desiredCapacity: 1\n      disks:\n        - autoDelete: true\n          boot: true\n          deviceName: device\n          initializeParams:\n            - diskSizeGb: 10\n              diskType: pd-standard\n              sourceImage:\n          interface: SCSI\n          mode: READ_WRITE\n          type: PERSISTENT\n      drainingTimeout: 180\n      # on_demand_count      = 2\n      fallbackToOndemand: true\n      instanceNamePrefix: test-123a\n      instanceTypesCustoms:\n        - memoryGib: 7\n          vcpu: 2\n      instanceTypesOndemand: n1-standard-1\n      instanceTypesPreemptibles:\n        - n1-standard-1\n        - n1-standard-2\n      labels:\n        - key: test_key\n          value: test_value\n      maxSize: 1\n      minSize: 0\n      networkInterfaces:\n        - network: spot-network\n      preemptiblePercentage: 50\n      provisioningModel: SPOT\n      scalingUpPolicies:\n        - actionType: adjustment\n          adjustment: 1\n          cooldown: 300\n          dimensions:\n            - name: storage_type\n              value: pd-ssd\n          evaluationPeriods: 1\n          metricName: instance/disk/read_ops_count\n          namespace: compute\n          operator: gte\n          period: 300\n          policyName: scale_up_1\n          source: stackdriver\n          statistic: average\n          threshold: 10000\n          unit: percent\n      serviceAccount: example@myProject.iam.gservicecct.com\n      startupScript:\n      subnets:\n        - region: asia-east1\n          subnetNames:\n            - default\n      tags:\n        - http\n        - https\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "autoHealing": {
                    "type": "boolean",
                    "description": "Enable auto-replacement of unhealthy instances.\n"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of availability zones for the group.\n",
                    "deprecationMessage": "This field will soon be handled by Region in Subnets"
                },
                "backendServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupBackendService:ElastigroupBackendService"
                    },
                    "description": "Describes the backend service configurations.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The region your GCP group will be created in.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupDisk:ElastigroupDisk"
                    }
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "Time (seconds) the instance is allowed to run after it is detached from the group. This is to allow the instance time to drain all the current TCP connections before terminating it.\n"
                },
                "fallbackToOndemand": {
                    "type": "boolean",
                    "description": "Activate fallback-to-on-demand. When provisioning an instance, if no Preemptible market is available, fallback-to-on-demand will provision an On-Demand instance to maintain the group capacity.\n"
                },
                "gpu": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupGpu:ElastigroupGpu"
                    },
                    "description": "Defines the GPU configuration.\n"
                },
                "healthCheckGracePeriod": {
                    "type": "integer",
                    "description": "Period of time (seconds) to wait for VM to reach healthiness before monitoring for unhealthiness.\n"
                },
                "healthCheckType": {
                    "type": "string",
                    "description": "The kind of health check to perform when monitoring for unhealthiness.\n"
                },
                "instanceNamePrefix": {
                    "type": "string",
                    "description": "Set an instance name prefix to be used for all launched instances and their boot disk. The prefix value should comply with the following limitations: \n* A maximal length of 25 characters.\n* The first character must be a lowercase letter, and all the following characters must be hyphens, lowercase letters, or digits, except the last character, which cannot be a hyphen.\n"
                },
                "instanceTypesCustoms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom"
                    },
                    "description": "Defines a set of custom instance types. Required if instance_types_preemptible and instance_types_ondemand are not set.\n"
                },
                "instanceTypesOndemand": {
                    "type": "string",
                    "description": "The regular VM instance type to use for mixed-type groups and when falling back to on-demand. Required if instance_types_preemptible is not set.\n"
                },
                "instanceTypesPreemptibles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The preemptible VMs instance type. To maximize cost savings and market availability, select as many types as possible. Required if instance_types_ondemand is not set.\n"
                },
                "integrationDockerSwarm": {
                    "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm",
                    "description": "Describes the [Docker Swarm](https://api.spotinst.com/integration-docs/elastigroup/container-management/docker-swarm/docker-swarm-integration/) integration.\n"
                },
                "integrationGke": {
                    "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationGke:ElastigroupIntegrationGke"
                },
                "ipForwarding": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupLabel:ElastigroupLabel"
                    },
                    "description": "Array of objects with key-value pairs.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupMetadata:ElastigroupMetadata"
                    },
                    "description": "Array of objects with key-value pairs.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                    },
                    "description": "Array of objects representing the network configuration for the elastigroup.\n"
                },
                "ondemandCount": {
                    "type": "integer"
                },
                "preemptiblePercentage": {
                    "type": "integer",
                    "description": "Percentage of Preemptible VMs to spin up from the \"desired_capacity\".\n"
                },
                "provisioningModel": {
                    "type": "string",
                    "description": "Valid values: \"SPOT\", \"PREEMPTIBLE\". Define the provisioning model of the launched instances. Default value is \"PREEMPTIBLE\".\n"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    },
                    "description": "Contains scaling policies for scaling the Elastigroup down.\n\nEach `scaling_*_policy` supports the following:\n"
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    },
                    "description": "Contains scaling policies for scaling the Elastigroup up.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScheduledTask:ElastigroupScheduledTask"
                    }
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "The email of the service account in which the group instances will be launched.\n"
                },
                "shutdownScript": {
                    "type": "string",
                    "description": "The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n"
                },
                "startupScript": {
                    "type": "string",
                    "description": "Create and run your own startup scripts on your virtual machines to perform automated tasks every time your instance boots up.\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupSubnet:ElastigroupSubnet"
                    },
                    "description": "A list of regions and subnets.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags to mark created instances.\n"
                },
                "unhealthyDuration": {
                    "type": "integer",
                    "description": "Period of time (seconds) to remain in an unhealthy status before a replacement is triggered.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "required": [
                "desiredCapacity",
                "maxSize",
                "minSize",
                "name"
            ],
            "inputProperties": {
                "autoHealing": {
                    "type": "boolean",
                    "description": "Enable auto-replacement of unhealthy instances.\n"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of availability zones for the group.\n",
                    "deprecationMessage": "This field will soon be handled by Region in Subnets"
                },
                "backendServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupBackendService:ElastigroupBackendService"
                    },
                    "description": "Describes the backend service configurations.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The region your GCP group will be created in.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupDisk:ElastigroupDisk"
                    }
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "Time (seconds) the instance is allowed to run after it is detached from the group. This is to allow the instance time to drain all the current TCP connections before terminating it.\n"
                },
                "fallbackToOndemand": {
                    "type": "boolean",
                    "description": "Activate fallback-to-on-demand. When provisioning an instance, if no Preemptible market is available, fallback-to-on-demand will provision an On-Demand instance to maintain the group capacity.\n"
                },
                "gpu": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupGpu:ElastigroupGpu"
                    },
                    "description": "Defines the GPU configuration.\n"
                },
                "healthCheckGracePeriod": {
                    "type": "integer",
                    "description": "Period of time (seconds) to wait for VM to reach healthiness before monitoring for unhealthiness.\n"
                },
                "healthCheckType": {
                    "type": "string",
                    "description": "The kind of health check to perform when monitoring for unhealthiness.\n"
                },
                "instanceNamePrefix": {
                    "type": "string",
                    "description": "Set an instance name prefix to be used for all launched instances and their boot disk. The prefix value should comply with the following limitations: \n* A maximal length of 25 characters.\n* The first character must be a lowercase letter, and all the following characters must be hyphens, lowercase letters, or digits, except the last character, which cannot be a hyphen.\n"
                },
                "instanceTypesCustoms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom"
                    },
                    "description": "Defines a set of custom instance types. Required if instance_types_preemptible and instance_types_ondemand are not set.\n"
                },
                "instanceTypesOndemand": {
                    "type": "string",
                    "description": "The regular VM instance type to use for mixed-type groups and when falling back to on-demand. Required if instance_types_preemptible is not set.\n"
                },
                "instanceTypesPreemptibles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The preemptible VMs instance type. To maximize cost savings and market availability, select as many types as possible. Required if instance_types_ondemand is not set.\n"
                },
                "integrationDockerSwarm": {
                    "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm",
                    "description": "Describes the [Docker Swarm](https://api.spotinst.com/integration-docs/elastigroup/container-management/docker-swarm/docker-swarm-integration/) integration.\n"
                },
                "integrationGke": {
                    "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationGke:ElastigroupIntegrationGke"
                },
                "ipForwarding": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupLabel:ElastigroupLabel"
                    },
                    "description": "Array of objects with key-value pairs.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupMetadata:ElastigroupMetadata"
                    },
                    "description": "Array of objects with key-value pairs.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                    },
                    "description": "Array of objects representing the network configuration for the elastigroup.\n"
                },
                "ondemandCount": {
                    "type": "integer"
                },
                "preemptiblePercentage": {
                    "type": "integer",
                    "description": "Percentage of Preemptible VMs to spin up from the \"desired_capacity\".\n"
                },
                "provisioningModel": {
                    "type": "string",
                    "description": "Valid values: \"SPOT\", \"PREEMPTIBLE\". Define the provisioning model of the launched instances. Default value is \"PREEMPTIBLE\".\n"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    },
                    "description": "Contains scaling policies for scaling the Elastigroup down.\n\nEach `scaling_*_policy` supports the following:\n"
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    },
                    "description": "Contains scaling policies for scaling the Elastigroup up.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScheduledTask:ElastigroupScheduledTask"
                    }
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "The email of the service account in which the group instances will be launched.\n"
                },
                "shutdownScript": {
                    "type": "string",
                    "description": "The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n"
                },
                "startupScript": {
                    "type": "string",
                    "description": "Create and run your own startup scripts on your virtual machines to perform automated tasks every time your instance boots up.\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupSubnet:ElastigroupSubnet"
                    },
                    "description": "A list of regions and subnets.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags to mark created instances.\n"
                },
                "unhealthyDuration": {
                    "type": "integer",
                    "description": "Period of time (seconds) to remain in an unhealthy status before a replacement is triggered.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                }
            },
            "requiredInputs": [
                "desiredCapacity"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Elastigroup resources.\n",
                "properties": {
                    "autoHealing": {
                        "type": "boolean",
                        "description": "Enable auto-replacement of unhealthy instances.\n"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of availability zones for the group.\n",
                        "deprecationMessage": "This field will soon be handled by Region in Subnets"
                    },
                    "backendServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupBackendService:ElastigroupBackendService"
                        },
                        "description": "Describes the backend service configurations.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The region your GCP group will be created in.\n"
                    },
                    "desiredCapacity": {
                        "type": "integer",
                        "description": "The desired number of instances the group should have at any time.\n"
                    },
                    "disks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupDisk:ElastigroupDisk"
                        }
                    },
                    "drainingTimeout": {
                        "type": "integer",
                        "description": "Time (seconds) the instance is allowed to run after it is detached from the group. This is to allow the instance time to drain all the current TCP connections before terminating it.\n"
                    },
                    "fallbackToOndemand": {
                        "type": "boolean",
                        "description": "Activate fallback-to-on-demand. When provisioning an instance, if no Preemptible market is available, fallback-to-on-demand will provision an On-Demand instance to maintain the group capacity.\n"
                    },
                    "gpu": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupGpu:ElastigroupGpu"
                        },
                        "description": "Defines the GPU configuration.\n"
                    },
                    "healthCheckGracePeriod": {
                        "type": "integer",
                        "description": "Period of time (seconds) to wait for VM to reach healthiness before monitoring for unhealthiness.\n"
                    },
                    "healthCheckType": {
                        "type": "string",
                        "description": "The kind of health check to perform when monitoring for unhealthiness.\n"
                    },
                    "instanceNamePrefix": {
                        "type": "string",
                        "description": "Set an instance name prefix to be used for all launched instances and their boot disk. The prefix value should comply with the following limitations: \n* A maximal length of 25 characters.\n* The first character must be a lowercase letter, and all the following characters must be hyphens, lowercase letters, or digits, except the last character, which cannot be a hyphen.\n"
                    },
                    "instanceTypesCustoms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom"
                        },
                        "description": "Defines a set of custom instance types. Required if instance_types_preemptible and instance_types_ondemand are not set.\n"
                    },
                    "instanceTypesOndemand": {
                        "type": "string",
                        "description": "The regular VM instance type to use for mixed-type groups and when falling back to on-demand. Required if instance_types_preemptible is not set.\n"
                    },
                    "instanceTypesPreemptibles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The preemptible VMs instance type. To maximize cost savings and market availability, select as many types as possible. Required if instance_types_ondemand is not set.\n"
                    },
                    "integrationDockerSwarm": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm",
                        "description": "Describes the [Docker Swarm](https://api.spotinst.com/integration-docs/elastigroup/container-management/docker-swarm/docker-swarm-integration/) integration.\n"
                    },
                    "integrationGke": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationGke:ElastigroupIntegrationGke"
                    },
                    "ipForwarding": {
                        "type": "boolean"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupLabel:ElastigroupLabel"
                        },
                        "description": "Array of objects with key-value pairs.\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The maximum number of instances the group should have at any time.\n"
                    },
                    "metadatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupMetadata:ElastigroupMetadata"
                        },
                        "description": "Array of objects with key-value pairs.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The minimum number of instances the group should have at any time.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name.\n"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                        },
                        "description": "Array of objects representing the network configuration for the elastigroup.\n"
                    },
                    "ondemandCount": {
                        "type": "integer"
                    },
                    "preemptiblePercentage": {
                        "type": "integer",
                        "description": "Percentage of Preemptible VMs to spin up from the \"desired_capacity\".\n"
                    },
                    "provisioningModel": {
                        "type": "string",
                        "description": "Valid values: \"SPOT\", \"PREEMPTIBLE\". Define the provisioning model of the launched instances. Default value is \"PREEMPTIBLE\".\n"
                    },
                    "scalingDownPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                        },
                        "description": "Contains scaling policies for scaling the Elastigroup down.\n\nEach `scaling_*_policy` supports the following:\n"
                    },
                    "scalingUpPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                        },
                        "description": "Contains scaling policies for scaling the Elastigroup up.\n"
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupScheduledTask:ElastigroupScheduledTask"
                        }
                    },
                    "serviceAccount": {
                        "type": "string",
                        "description": "The email of the service account in which the group instances will be launched.\n"
                    },
                    "shutdownScript": {
                        "type": "string",
                        "description": "The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n"
                    },
                    "startupScript": {
                        "type": "string",
                        "description": "Create and run your own startup scripts on your virtual machines to perform automated tasks every time your instance boots up.\n"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupSubnet:ElastigroupSubnet"
                        },
                        "description": "A list of regions and subnets.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags to mark created instances.\n"
                    },
                    "unhealthyDuration": {
                        "type": "integer",
                        "description": "Period of time (seconds) to remain in an unhealthy status before a replacement is triggered.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:gke/elastigroup:Elastigroup": {
            "description": "Provides a Spotinst Elastigroup GKE resource. Please see [Importing a GKE cluster](https://api.spotinst.com/elastigroup-for-google-cloud/tutorials/import-a-gke-cluster-as-an-elastigroup/) for detailed information.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nA spotinst.gke.Elastigroup supports all of the fields defined in spotinst_elastigroup_gcp. \n\nThere are two main differences:\n\n* you must include `cluster_zone_name` and `cluster_id`\n* a handful of parameters are created remotely and will not appear in the diff. A complete list can be found below.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example_gke_elastigroup = new spotinst.gke.Elastigroup(\"example-gke-elastigroup\", {\n    backendServices: [{\n        locationType: \"global\",\n        namedPorts: [{\n            name: \"http\",\n            ports: [\n                \"80\",\n                \"8080\",\n            ],\n        }],\n        serviceName: \"backend-service\",\n    }],\n    clusterZoneName: \"us-central1-a\",\n    desiredCapacity: 3,\n    instanceTypesOndemand: \"n1-standard-1\",\n    instanceTypesPreemptibles: [\n        \"n1-standard-1\",\n        \"n1-standard-2\",\n    ],\n    integrationGke: {\n        autoscaleCooldown: 300,\n        autoscaleDown: {\n            evaluationPeriods: 300,\n        },\n        autoscaleHeadroom: {\n            cpuPerUnit: 1024,\n            memoryPerUnit: 512,\n            numOfUnits: 2,\n        },\n        autoscaleIsAutoConfig: false,\n        autoscaleIsEnabled: true,\n        autoscaleLabels: [{\n            key: \"label_key\",\n            value: \"label_value\",\n        }],\n        clusterId: \"example-cluster-id\",\n        location: \"us-central1-a\",\n    },\n    maxSize: 5,\n    minSize: 1,\n    nodeImage: \"COS\",\n    preemptiblePercentage: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample_gke_elastigroup = spotinst.gke.Elastigroup(\"example-gke-elastigroup\",\n    backend_services=[spotinst.gke.ElastigroupBackendServiceArgs(\n        location_type=\"global\",\n        named_ports=[spotinst.gke.ElastigroupBackendServiceNamedPortArgs(\n            name=\"http\",\n            ports=[\n                \"80\",\n                \"8080\",\n            ],\n        )],\n        service_name=\"backend-service\",\n    )],\n    cluster_zone_name=\"us-central1-a\",\n    desired_capacity=3,\n    instance_types_ondemand=\"n1-standard-1\",\n    instance_types_preemptibles=[\n        \"n1-standard-1\",\n        \"n1-standard-2\",\n    ],\n    integration_gke=spotinst.gke.ElastigroupIntegrationGkeArgs(\n        autoscale_cooldown=300,\n        autoscale_down=spotinst.gke.ElastigroupIntegrationGkeAutoscaleDownArgs(\n            evaluation_periods=300,\n        ),\n        autoscale_headroom=spotinst.gke.ElastigroupIntegrationGkeAutoscaleHeadroomArgs(\n            cpu_per_unit=1024,\n            memory_per_unit=512,\n            num_of_units=2,\n        ),\n        autoscale_is_auto_config=False,\n        autoscale_is_enabled=True,\n        autoscale_labels=[spotinst.gke.ElastigroupIntegrationGkeAutoscaleLabelArgs(\n            key=\"label_key\",\n            value=\"label_value\",\n        )],\n        cluster_id=\"example-cluster-id\",\n        location=\"us-central1-a\",\n    ),\n    max_size=5,\n    min_size=1,\n    node_image=\"COS\",\n    preemptible_percentage=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example_gke_elastigroup = new SpotInst.Gke.Elastigroup(\"example-gke-elastigroup\", new()\n    {\n        BackendServices = new[]\n        {\n            new SpotInst.Gke.Inputs.ElastigroupBackendServiceArgs\n            {\n                LocationType = \"global\",\n                NamedPorts = new[]\n                {\n                    new SpotInst.Gke.Inputs.ElastigroupBackendServiceNamedPortArgs\n                    {\n                        Name = \"http\",\n                        Ports = new[]\n                        {\n                            \"80\",\n                            \"8080\",\n                        },\n                    },\n                },\n                ServiceName = \"backend-service\",\n            },\n        },\n        ClusterZoneName = \"us-central1-a\",\n        DesiredCapacity = 3,\n        InstanceTypesOndemand = \"n1-standard-1\",\n        InstanceTypesPreemptibles = new[]\n        {\n            \"n1-standard-1\",\n            \"n1-standard-2\",\n        },\n        IntegrationGke = new SpotInst.Gke.Inputs.ElastigroupIntegrationGkeArgs\n        {\n            AutoscaleCooldown = 300,\n            AutoscaleDown = new SpotInst.Gke.Inputs.ElastigroupIntegrationGkeAutoscaleDownArgs\n            {\n                EvaluationPeriods = 300,\n            },\n            AutoscaleHeadroom = new SpotInst.Gke.Inputs.ElastigroupIntegrationGkeAutoscaleHeadroomArgs\n            {\n                CpuPerUnit = 1024,\n                MemoryPerUnit = 512,\n                NumOfUnits = 2,\n            },\n            AutoscaleIsAutoConfig = false,\n            AutoscaleIsEnabled = true,\n            AutoscaleLabels = new[]\n            {\n                new SpotInst.Gke.Inputs.ElastigroupIntegrationGkeAutoscaleLabelArgs\n                {\n                    Key = \"label_key\",\n                    Value = \"label_value\",\n                },\n            },\n            ClusterId = \"example-cluster-id\",\n            Location = \"us-central1-a\",\n        },\n        MaxSize = 5,\n        MinSize = 1,\n        NodeImage = \"COS\",\n        PreemptiblePercentage = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/gke\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := gke.NewElastigroup(ctx, \"example-gke-elastigroup\", \u0026gke.ElastigroupArgs{\n\t\t\tBackendServices: gke.ElastigroupBackendServiceArray{\n\t\t\t\t\u0026gke.ElastigroupBackendServiceArgs{\n\t\t\t\t\tLocationType: pulumi.String(\"global\"),\n\t\t\t\t\tNamedPorts: gke.ElastigroupBackendServiceNamedPortArray{\n\t\t\t\t\t\t\u0026gke.ElastigroupBackendServiceNamedPortArgs{\n\t\t\t\t\t\t\tName: pulumi.String(\"http\"),\n\t\t\t\t\t\t\tPorts: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"80\"),\n\t\t\t\t\t\t\t\tpulumi.String(\"8080\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tServiceName: pulumi.String(\"backend-service\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tClusterZoneName:       pulumi.String(\"us-central1-a\"),\n\t\t\tDesiredCapacity:       pulumi.Int(3),\n\t\t\tInstanceTypesOndemand: pulumi.String(\"n1-standard-1\"),\n\t\t\tInstanceTypesPreemptibles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"n1-standard-1\"),\n\t\t\t\tpulumi.String(\"n1-standard-2\"),\n\t\t\t},\n\t\t\tIntegrationGke: \u0026gke.ElastigroupIntegrationGkeArgs{\n\t\t\t\tAutoscaleCooldown: pulumi.Int(300),\n\t\t\t\tAutoscaleDown: \u0026gke.ElastigroupIntegrationGkeAutoscaleDownArgs{\n\t\t\t\t\tEvaluationPeriods: pulumi.Int(300),\n\t\t\t\t},\n\t\t\t\tAutoscaleHeadroom: \u0026gke.ElastigroupIntegrationGkeAutoscaleHeadroomArgs{\n\t\t\t\t\tCpuPerUnit:    pulumi.Int(1024),\n\t\t\t\t\tMemoryPerUnit: pulumi.Int(512),\n\t\t\t\t\tNumOfUnits:    pulumi.Int(2),\n\t\t\t\t},\n\t\t\t\tAutoscaleIsAutoConfig: pulumi.Bool(false),\n\t\t\t\tAutoscaleIsEnabled:    pulumi.Bool(true),\n\t\t\t\tAutoscaleLabels: gke.ElastigroupIntegrationGkeAutoscaleLabelArray{\n\t\t\t\t\t\u0026gke.ElastigroupIntegrationGkeAutoscaleLabelArgs{\n\t\t\t\t\t\tKey:   pulumi.String(\"label_key\"),\n\t\t\t\t\t\tValue: pulumi.String(\"label_value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tClusterId: pulumi.String(\"example-cluster-id\"),\n\t\t\t\tLocation:  pulumi.String(\"us-central1-a\"),\n\t\t\t},\n\t\t\tMaxSize:               pulumi.Int(5),\n\t\t\tMinSize:               pulumi.Int(1),\n\t\t\tNodeImage:             pulumi.String(\"COS\"),\n\t\t\tPreemptiblePercentage: pulumi.Int(100),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.gke.Elastigroup;\nimport com.pulumi.spotinst.gke.ElastigroupArgs;\nimport com.pulumi.spotinst.gke.inputs.ElastigroupBackendServiceArgs;\nimport com.pulumi.spotinst.gke.inputs.ElastigroupIntegrationGkeArgs;\nimport com.pulumi.spotinst.gke.inputs.ElastigroupIntegrationGkeAutoscaleDownArgs;\nimport com.pulumi.spotinst.gke.inputs.ElastigroupIntegrationGkeAutoscaleHeadroomArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example_gke_elastigroup = new Elastigroup(\"example-gke-elastigroup\", ElastigroupArgs.builder()        \n            .backendServices(ElastigroupBackendServiceArgs.builder()\n                .locationType(\"global\")\n                .namedPorts(ElastigroupBackendServiceNamedPortArgs.builder()\n                    .name(\"http\")\n                    .ports(                    \n                        80,\n                        8080)\n                    .build())\n                .serviceName(\"backend-service\")\n                .build())\n            .clusterZoneName(\"us-central1-a\")\n            .desiredCapacity(3)\n            .instanceTypesOndemand(\"n1-standard-1\")\n            .instanceTypesPreemptibles(            \n                \"n1-standard-1\",\n                \"n1-standard-2\")\n            .integrationGke(ElastigroupIntegrationGkeArgs.builder()\n                .autoscaleCooldown(300)\n                .autoscaleDown(ElastigroupIntegrationGkeAutoscaleDownArgs.builder()\n                    .evaluationPeriods(300)\n                    .build())\n                .autoscaleHeadroom(ElastigroupIntegrationGkeAutoscaleHeadroomArgs.builder()\n                    .cpuPerUnit(1024)\n                    .memoryPerUnit(512)\n                    .numOfUnits(2)\n                    .build())\n                .autoscaleIsAutoConfig(false)\n                .autoscaleIsEnabled(true)\n                .autoscaleLabels(ElastigroupIntegrationGkeAutoscaleLabelArgs.builder()\n                    .key(\"label_key\")\n                    .value(\"label_value\")\n                    .build())\n                .clusterId(\"example-cluster-id\")\n                .location(\"us-central1-a\")\n                .build())\n            .maxSize(5)\n            .minSize(1)\n            .nodeImage(\"COS\")\n            .preemptiblePercentage(100)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example-gke-elastigroup:\n    type: spotinst:gke:Elastigroup\n    properties:\n      backendServices:\n        - locationType: global\n          namedPorts:\n            - name: http\n              ports:\n                - 80\n                - 8080\n          serviceName: backend-service\n      # cluster_id        = \"sample-acc-test-cluster\" // deprecated\n      clusterZoneName: us-central1-a\n      desiredCapacity: 3\n      # --- INSTANCE TYPES --------------------------------\n      instanceTypesOndemand: n1-standard-1\n      instanceTypesPreemptibles:\n        - n1-standard-1\n        - n1-standard-2\n      integrationGke:\n        autoscaleCooldown: 300\n        autoscaleDown:\n          evaluationPeriods: 300\n        autoscaleHeadroom:\n          cpuPerUnit: 1024\n          memoryPerUnit: 512\n          numOfUnits: 2\n        autoscaleIsAutoConfig: false\n        autoscaleIsEnabled: true\n        autoscaleLabels:\n          - key: label_key\n            value: label_value\n        clusterId: example-cluster-id\n        location: us-central1-a\n      # --- CAPACITY ------------\n      maxSize: 5\n      minSize: 1\n      nodeImage: COS\n      # --- STRATEGY --------------------\n      preemptiblePercentage: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "backendServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupBackendService:ElastigroupBackendService"
                    }
                },
                "clusterId": {
                    "type": "string",
                    "description": "The name of the GKE cluster you wish to import.\n",
                    "deprecationMessage": "Please define cluster_id under integration_gke"
                },
                "clusterZoneName": {
                    "type": "string",
                    "description": "The zone where the cluster is hosted.\n"
                },
                "desiredCapacity": {
                    "type": "integer"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupDisk:ElastigroupDisk"
                    }
                },
                "drainingTimeout": {
                    "type": "integer"
                },
                "fallbackToOndemand": {
                    "type": "boolean"
                },
                "gpu": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupGpu:ElastigroupGpu"
                    }
                },
                "instanceNamePrefix": {
                    "type": "string"
                },
                "instanceTypesCustoms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom"
                    }
                },
                "instanceTypesOndemand": {
                    "type": "string"
                },
                "instanceTypesPreemptibles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "integrationDockerSwarm": {
                    "$ref": "#/types/spotinst:gke/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm"
                },
                "integrationGke": {
                    "$ref": "#/types/spotinst:gke/ElastigroupIntegrationGke:ElastigroupIntegrationGke",
                    "description": "Describes the GKE integration.\n"
                },
                "ipForwarding": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupLabel:ElastigroupLabel"
                    }
                },
                "maxSize": {
                    "type": "integer"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupMetadata:ElastigroupMetadata"
                    }
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                    }
                },
                "nodeImage": {
                    "type": "string",
                    "description": "The image that will be used for the node VMs. Possible values: COS, UBUNTU.\n"
                },
                "ondemandCount": {
                    "type": "integer"
                },
                "preemptiblePercentage": {
                    "type": "integer"
                },
                "provisioningModel": {
                    "type": "string"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    }
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    }
                },
                "serviceAccount": {
                    "type": "string"
                },
                "shutdownScript": {
                    "type": "string"
                },
                "startupScript": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "clusterZoneName",
                "desiredCapacity",
                "maxSize",
                "minSize",
                "name"
            ],
            "inputProperties": {
                "backendServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupBackendService:ElastigroupBackendService"
                    }
                },
                "clusterId": {
                    "type": "string",
                    "description": "The name of the GKE cluster you wish to import.\n",
                    "deprecationMessage": "Please define cluster_id under integration_gke"
                },
                "clusterZoneName": {
                    "type": "string",
                    "description": "The zone where the cluster is hosted.\n"
                },
                "desiredCapacity": {
                    "type": "integer"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupDisk:ElastigroupDisk"
                    }
                },
                "drainingTimeout": {
                    "type": "integer"
                },
                "fallbackToOndemand": {
                    "type": "boolean"
                },
                "gpu": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupGpu:ElastigroupGpu"
                    }
                },
                "instanceNamePrefix": {
                    "type": "string"
                },
                "instanceTypesCustoms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom"
                    }
                },
                "instanceTypesOndemand": {
                    "type": "string"
                },
                "instanceTypesPreemptibles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "integrationDockerSwarm": {
                    "$ref": "#/types/spotinst:gke/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm"
                },
                "integrationGke": {
                    "$ref": "#/types/spotinst:gke/ElastigroupIntegrationGke:ElastigroupIntegrationGke",
                    "description": "Describes the GKE integration.\n"
                },
                "ipForwarding": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupLabel:ElastigroupLabel"
                    }
                },
                "maxSize": {
                    "type": "integer"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupMetadata:ElastigroupMetadata"
                    }
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                    }
                },
                "nodeImage": {
                    "type": "string",
                    "description": "The image that will be used for the node VMs. Possible values: COS, UBUNTU.\n"
                },
                "ondemandCount": {
                    "type": "integer"
                },
                "preemptiblePercentage": {
                    "type": "integer"
                },
                "provisioningModel": {
                    "type": "string"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    }
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    }
                },
                "serviceAccount": {
                    "type": "string"
                },
                "shutdownScript": {
                    "type": "string"
                },
                "startupScript": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "clusterZoneName",
                "desiredCapacity"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Elastigroup resources.\n",
                "properties": {
                    "backendServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupBackendService:ElastigroupBackendService"
                        }
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The name of the GKE cluster you wish to import.\n",
                        "deprecationMessage": "Please define cluster_id under integration_gke"
                    },
                    "clusterZoneName": {
                        "type": "string",
                        "description": "The zone where the cluster is hosted.\n"
                    },
                    "desiredCapacity": {
                        "type": "integer"
                    },
                    "disks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupDisk:ElastigroupDisk"
                        }
                    },
                    "drainingTimeout": {
                        "type": "integer"
                    },
                    "fallbackToOndemand": {
                        "type": "boolean"
                    },
                    "gpu": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupGpu:ElastigroupGpu"
                        }
                    },
                    "instanceNamePrefix": {
                        "type": "string"
                    },
                    "instanceTypesCustoms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom"
                        }
                    },
                    "instanceTypesOndemand": {
                        "type": "string"
                    },
                    "instanceTypesPreemptibles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "integrationDockerSwarm": {
                        "$ref": "#/types/spotinst:gke/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm"
                    },
                    "integrationGke": {
                        "$ref": "#/types/spotinst:gke/ElastigroupIntegrationGke:ElastigroupIntegrationGke",
                        "description": "Describes the GKE integration.\n"
                    },
                    "ipForwarding": {
                        "type": "boolean"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupLabel:ElastigroupLabel"
                        }
                    },
                    "maxSize": {
                        "type": "integer"
                    },
                    "metadatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupMetadata:ElastigroupMetadata"
                        }
                    },
                    "minSize": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                        }
                    },
                    "nodeImage": {
                        "type": "string",
                        "description": "The image that will be used for the node VMs. Possible values: COS, UBUNTU.\n"
                    },
                    "ondemandCount": {
                        "type": "integer"
                    },
                    "preemptiblePercentage": {
                        "type": "integer"
                    },
                    "provisioningModel": {
                        "type": "string"
                    },
                    "scalingDownPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                        }
                    },
                    "scalingUpPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                        }
                    },
                    "serviceAccount": {
                        "type": "string"
                    },
                    "shutdownScript": {
                        "type": "string"
                    },
                    "startupScript": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "spotinst:gke/oceanImport:OceanImport": {
            "description": "Manages a Spotinst Ocean GKE resource.\n\n## Prerequisites\n\nInstallation of the Ocean controller is required by this resource. You can accomplish this by using the spotinst/ocean-controller module as follows:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n\u003e You must configure the same `cluster_identifier` both for the Ocean controller and for the `spotinst.gke.OceanImport` resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.gke.OceanImport(\"example\", {\n    backendServices: [{\n        locationType: \"regional\",\n        namedPorts: [{\n            name: \"http\",\n            ports: [\n                \"80\",\n                \"8080\",\n            ],\n        }],\n        scheme: \"INTERNAL\",\n        serviceName: \"example-backend-service\",\n    }],\n    clusterName: \"example-cluster-name\",\n    controllerClusterId: \"example-controller-123124\",\n    desiredCapacity: 0,\n    location: \"us-central1-a\",\n    maxSize: 2,\n    minSize: 0,\n    rootVolumeType: \"pd-ssd\",\n    shieldedInstanceConfig: {\n        enableIntegrityMonitoring: true,\n        enableSecureBoot: true,\n    },\n    useAsTemplateOnly: false,\n    whitelists: [\n        \"n1-standard-1\",\n        \"n1-standard-2\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.gke.OceanImport(\"example\",\n    backend_services=[spotinst.gke.OceanImportBackendServiceArgs(\n        location_type=\"regional\",\n        named_ports=[spotinst.gke.OceanImportBackendServiceNamedPortArgs(\n            name=\"http\",\n            ports=[\n                \"80\",\n                \"8080\",\n            ],\n        )],\n        scheme=\"INTERNAL\",\n        service_name=\"example-backend-service\",\n    )],\n    cluster_name=\"example-cluster-name\",\n    controller_cluster_id=\"example-controller-123124\",\n    desired_capacity=0,\n    location=\"us-central1-a\",\n    max_size=2,\n    min_size=0,\n    root_volume_type=\"pd-ssd\",\n    shielded_instance_config=spotinst.gke.OceanImportShieldedInstanceConfigArgs(\n        enable_integrity_monitoring=True,\n        enable_secure_boot=True,\n    ),\n    use_as_template_only=False,\n    whitelists=[\n        \"n1-standard-1\",\n        \"n1-standard-2\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new SpotInst.Gke.OceanImport(\"example\", new()\n    {\n        BackendServices = new[]\n        {\n            new SpotInst.Gke.Inputs.OceanImportBackendServiceArgs\n            {\n                LocationType = \"regional\",\n                NamedPorts = new[]\n                {\n                    new SpotInst.Gke.Inputs.OceanImportBackendServiceNamedPortArgs\n                    {\n                        Name = \"http\",\n                        Ports = new[]\n                        {\n                            \"80\",\n                            \"8080\",\n                        },\n                    },\n                },\n                Scheme = \"INTERNAL\",\n                ServiceName = \"example-backend-service\",\n            },\n        },\n        ClusterName = \"example-cluster-name\",\n        ControllerClusterId = \"example-controller-123124\",\n        DesiredCapacity = 0,\n        Location = \"us-central1-a\",\n        MaxSize = 2,\n        MinSize = 0,\n        RootVolumeType = \"pd-ssd\",\n        ShieldedInstanceConfig = new SpotInst.Gke.Inputs.OceanImportShieldedInstanceConfigArgs\n        {\n            EnableIntegrityMonitoring = true,\n            EnableSecureBoot = true,\n        },\n        UseAsTemplateOnly = false,\n        Whitelists = new[]\n        {\n            \"n1-standard-1\",\n            \"n1-standard-2\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/gke\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := gke.NewOceanImport(ctx, \"example\", \u0026gke.OceanImportArgs{\n\t\t\tBackendServices: gke.OceanImportBackendServiceArray{\n\t\t\t\t\u0026gke.OceanImportBackendServiceArgs{\n\t\t\t\t\tLocationType: pulumi.String(\"regional\"),\n\t\t\t\t\tNamedPorts: gke.OceanImportBackendServiceNamedPortArray{\n\t\t\t\t\t\t\u0026gke.OceanImportBackendServiceNamedPortArgs{\n\t\t\t\t\t\t\tName: pulumi.String(\"http\"),\n\t\t\t\t\t\t\tPorts: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"80\"),\n\t\t\t\t\t\t\t\tpulumi.String(\"8080\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tScheme:      pulumi.String(\"INTERNAL\"),\n\t\t\t\t\tServiceName: pulumi.String(\"example-backend-service\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tClusterName:         pulumi.String(\"example-cluster-name\"),\n\t\t\tControllerClusterId: pulumi.String(\"example-controller-123124\"),\n\t\t\tDesiredCapacity:     pulumi.Int(0),\n\t\t\tLocation:            pulumi.String(\"us-central1-a\"),\n\t\t\tMaxSize:             pulumi.Int(2),\n\t\t\tMinSize:             pulumi.Int(0),\n\t\t\tRootVolumeType:      pulumi.String(\"pd-ssd\"),\n\t\t\tShieldedInstanceConfig: \u0026gke.OceanImportShieldedInstanceConfigArgs{\n\t\t\t\tEnableIntegrityMonitoring: pulumi.Bool(true),\n\t\t\t\tEnableSecureBoot:          pulumi.Bool(true),\n\t\t\t},\n\t\t\tUseAsTemplateOnly: pulumi.Bool(false),\n\t\t\tWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"n1-standard-1\"),\n\t\t\t\tpulumi.String(\"n1-standard-2\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.gke.OceanImport;\nimport com.pulumi.spotinst.gke.OceanImportArgs;\nimport com.pulumi.spotinst.gke.inputs.OceanImportBackendServiceArgs;\nimport com.pulumi.spotinst.gke.inputs.OceanImportShieldedInstanceConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OceanImport(\"example\", OceanImportArgs.builder()        \n            .backendServices(OceanImportBackendServiceArgs.builder()\n                .locationType(\"regional\")\n                .namedPorts(OceanImportBackendServiceNamedPortArgs.builder()\n                    .name(\"http\")\n                    .ports(                    \n                        80,\n                        8080)\n                    .build())\n                .scheme(\"INTERNAL\")\n                .serviceName(\"example-backend-service\")\n                .build())\n            .clusterName(\"example-cluster-name\")\n            .controllerClusterId(\"example-controller-123124\")\n            .desiredCapacity(0)\n            .location(\"us-central1-a\")\n            .maxSize(2)\n            .minSize(0)\n            .rootVolumeType(\"pd-ssd\")\n            .shieldedInstanceConfig(OceanImportShieldedInstanceConfigArgs.builder()\n                .enableIntegrityMonitoring(true)\n                .enableSecureBoot(true)\n                .build())\n            .useAsTemplateOnly(false)\n            .whitelists(            \n                \"n1-standard-1\",\n                \"n1-standard-2\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: spotinst:gke:OceanImport\n    properties:\n      backendServices:\n        - locationType: regional\n          namedPorts:\n            - name: http\n              ports:\n                - 80\n                - 8080\n          scheme: INTERNAL\n          serviceName: example-backend-service\n      clusterName: example-cluster-name\n      controllerClusterId: example-controller-123124\n      desiredCapacity: 0\n      location: us-central1-a\n      maxSize: 2\n      minSize: 0\n      rootVolumeType: pd-ssd\n      shieldedInstanceConfig:\n        enableIntegrityMonitoring: true\n        enableSecureBoot: true\n      useAsTemplateOnly: false\n      whitelists:\n        - n1-standard-1\n        - n1-standard-2\n```\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const oceanId = spotinst_ocean_gke_import.example.id;\n```\n```python\nimport pulumi\n\npulumi.export(\"oceanId\", spotinst_ocean_gke_import[\"example\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"oceanId\"] = spotinst_ocean_gke_import.Example.Id,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"oceanId\", spotinst_ocean_gke_import.Example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        ctx.export(\"oceanId\", spotinst_ocean_gke_import.example().id());\n    }\n}\n```\n```yaml\noutputs:\n  oceanId: ${spotinst_ocean_gke_import.example.id}\n```\n{{% /example %}}\n{{% /examples %}}\n## Strategy\n\n* `strategy` - (Optional) Strategy object.\n    * `draining_timeout` - (Optional) The draining timeout (in seconds) before terminating the instance. If no draining timeout is defined, the default draining timeout will be used.\n    * `provisioning_model` - (Optional) Define the provisioning model of the launched instances. Valid values: `SPOT`, `PREEMPTIBLE`.\n    * `preemptible_percentage`- (Optional) Defines the desired preemptible percentage for the cluster.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\n\u003ca id=\"update-policy\"\u003e\u003c/a\u003e\n## Update Policy\n\n* `update_policy` - (Optional)\n    * `should_roll` - (Required) Enables the roll.\n    * `conditioned_roll` - (Optional, Default: false) Spot will perform a cluster Roll in accordance with a relevant modification of the cluster’s settings. When set to true , only specific changes in the cluster’s configuration will trigger a cluster roll (such as AMI, Key Pair, user data, instance types, load balancers, etc).\n\n    * `roll_config` - (Required) Holds the roll configuration.\n        * `batch_size_percentage` - (Required) Sets the percentage of the instances to deploy in each batch.\n        * `launch_spec_ids` - (Optional) List of Virtual Node Group identifiers to be rolled.\n        * `batch_min_healthy_percentage` - (Optional) Default: 50. Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.\n        * `respect_pdb` - (Optional) Default: False. During the roll, if the parameter is set to True we honor PDB during the instance replacement.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n",
            "properties": {
                "autoscaler": {
                    "$ref": "#/types/spotinst:gke/OceanImportAutoscaler:OceanImportAutoscaler",
                    "description": "The Ocean Kubernetes Autoscaler object.\n"
                },
                "backendServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanImportBackendService:OceanImportBackendService"
                    },
                    "description": "Describes the backend service configurations.\n"
                },
                "blacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types to avoid launching in the Ocean cluster. Cannot be configured if whitelist list is configured.\n"
                },
                "clusterControllerId": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string",
                    "description": "The GKE cluster name.\n"
                },
                "controllerClusterId": {
                    "type": "string",
                    "description": "A unique identifier used for connecting the Ocean SaaS platform and the Kubernetes cluster. Typically, the cluster name is used as its identifier.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The number of instances to launch and maintain in the cluster.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The zone the master cluster is located in.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The upper limit of instances the cluster can scale up to.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The lower limit of instances the cluster can scale down to.\n"
                },
                "rootVolumeType": {
                    "type": "string",
                    "description": "The root volume disk type.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanImportScheduledTask:OceanImportScheduledTask"
                    },
                    "description": "Set scheduling object.\n"
                },
                "shieldedInstanceConfig": {
                    "$ref": "#/types/spotinst:gke/OceanImportShieldedInstanceConfig:OceanImportShieldedInstanceConfig",
                    "description": "The Ocean shielded instance configuration object.\n"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanImportStrategy:OceanImportStrategy"
                    }
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:gke/OceanImportUpdatePolicy:OceanImportUpdatePolicy"
                },
                "useAsTemplateOnly": {
                    "type": "boolean",
                    "description": "launch specification defined on the Ocean object will function only as a template for virtual node groups.\n"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types allowed in the Ocean cluster. Cannot be configured if blacklist list is configured.\n"
                }
            },
            "required": [
                "autoscaler",
                "clusterControllerId",
                "clusterName",
                "controllerClusterId",
                "desiredCapacity",
                "location",
                "maxSize",
                "minSize",
                "shieldedInstanceConfig"
            ],
            "inputProperties": {
                "autoscaler": {
                    "$ref": "#/types/spotinst:gke/OceanImportAutoscaler:OceanImportAutoscaler",
                    "description": "The Ocean Kubernetes Autoscaler object.\n"
                },
                "backendServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanImportBackendService:OceanImportBackendService"
                    },
                    "description": "Describes the backend service configurations.\n"
                },
                "blacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types to avoid launching in the Ocean cluster. Cannot be configured if whitelist list is configured.\n"
                },
                "clusterName": {
                    "type": "string",
                    "description": "The GKE cluster name.\n"
                },
                "controllerClusterId": {
                    "type": "string",
                    "description": "A unique identifier used for connecting the Ocean SaaS platform and the Kubernetes cluster. Typically, the cluster name is used as its identifier.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The number of instances to launch and maintain in the cluster.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The zone the master cluster is located in.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The upper limit of instances the cluster can scale up to.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The lower limit of instances the cluster can scale down to.\n"
                },
                "rootVolumeType": {
                    "type": "string",
                    "description": "The root volume disk type.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanImportScheduledTask:OceanImportScheduledTask"
                    },
                    "description": "Set scheduling object.\n"
                },
                "shieldedInstanceConfig": {
                    "$ref": "#/types/spotinst:gke/OceanImportShieldedInstanceConfig:OceanImportShieldedInstanceConfig",
                    "description": "The Ocean shielded instance configuration object.\n"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanImportStrategy:OceanImportStrategy"
                    }
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:gke/OceanImportUpdatePolicy:OceanImportUpdatePolicy"
                },
                "useAsTemplateOnly": {
                    "type": "boolean",
                    "description": "launch specification defined on the Ocean object will function only as a template for virtual node groups.\n"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types allowed in the Ocean cluster. Cannot be configured if blacklist list is configured.\n"
                }
            },
            "requiredInputs": [
                "clusterName",
                "location"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanImport resources.\n",
                "properties": {
                    "autoscaler": {
                        "$ref": "#/types/spotinst:gke/OceanImportAutoscaler:OceanImportAutoscaler",
                        "description": "The Ocean Kubernetes Autoscaler object.\n"
                    },
                    "backendServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanImportBackendService:OceanImportBackendService"
                        },
                        "description": "Describes the backend service configurations.\n"
                    },
                    "blacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Instance types to avoid launching in the Ocean cluster. Cannot be configured if whitelist list is configured.\n"
                    },
                    "clusterControllerId": {
                        "type": "string"
                    },
                    "clusterName": {
                        "type": "string",
                        "description": "The GKE cluster name.\n"
                    },
                    "controllerClusterId": {
                        "type": "string",
                        "description": "A unique identifier used for connecting the Ocean SaaS platform and the Kubernetes cluster. Typically, the cluster name is used as its identifier.\n"
                    },
                    "desiredCapacity": {
                        "type": "integer",
                        "description": "The number of instances to launch and maintain in the cluster.\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The zone the master cluster is located in.\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The upper limit of instances the cluster can scale up to.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The lower limit of instances the cluster can scale down to.\n"
                    },
                    "rootVolumeType": {
                        "type": "string",
                        "description": "The root volume disk type.\n"
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanImportScheduledTask:OceanImportScheduledTask"
                        },
                        "description": "Set scheduling object.\n"
                    },
                    "shieldedInstanceConfig": {
                        "$ref": "#/types/spotinst:gke/OceanImportShieldedInstanceConfig:OceanImportShieldedInstanceConfig",
                        "description": "The Ocean shielded instance configuration object.\n"
                    },
                    "strategies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanImportStrategy:OceanImportStrategy"
                        }
                    },
                    "updatePolicy": {
                        "$ref": "#/types/spotinst:gke/OceanImportUpdatePolicy:OceanImportUpdatePolicy"
                    },
                    "useAsTemplateOnly": {
                        "type": "boolean",
                        "description": "launch specification defined on the Ocean object will function only as a template for virtual node groups.\n"
                    },
                    "whitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Instance types allowed in the Ocean cluster. Cannot be configured if blacklist list is configured.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:gke/oceanLaunchSpec:OceanLaunchSpec": {
            "description": "Manages a custom Spotinst Ocean GKE Launch Spec resource.\n\n\u003e This resource can be imported from GKE node pool or not. If you want to import the node pool and create the VNG from it, please provide `node_pool_name`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.gke.OceanLaunchSpec(\"example\", {\n    autoscaleHeadrooms: [{\n        cpuPerUnit: 1000,\n        gpuPerUnit: 0,\n        memoryPerUnit: 2048,\n        numOfUnits: 5,\n    }],\n    autoscaleHeadroomsAutomatics: [{\n        autoHeadroomPercentage: 5,\n    }],\n    instanceTypes: [\"n1-standard-1, n1-standard-2\"],\n    labels: [{\n        key: \"labelKey\",\n        value: \"labelVal\",\n    }],\n    metadatas: [{\n        key: \"gci-update-strategy\",\n        value: \"update_disabled\",\n    }],\n    networkInterfaces: [{\n        accessConfigs: [{\n            name: \"external-nat-vng\",\n            type: \"ONE_TO_ONE_NAT\",\n        }],\n        aliasIpRanges: [{\n            ipCidrRange: \"/25\",\n            subnetworkRangeName: \"gke-test-native-vpc-pods-123456-vng\",\n        }],\n        network: \"test-vng-network\",\n        projectId: \"test-vng-network-project\",\n    }],\n    nodePoolName: \"default-pool\",\n    oceanId: \"o-123456\",\n    resourceLimits: {\n        maxInstanceCount: 3,\n        minInstanceCount: 0,\n    },\n    restrictScaleDown: true,\n    rootVolumeSize: 10,\n    rootVolumeType: \"pd-standard\",\n    schedulingTasks: [{\n        cronExpression: \"0 1 * * *\",\n        isEnabled: true,\n        taskHeadrooms: [{\n            cpuPerUnit: 1000,\n            gpuPerUnit: 0,\n            memoryPerUnit: 2048,\n            numOfUnits: 5,\n        }],\n        taskType: \"manualHeadroomUpdate\",\n    }],\n    serviceAccount: \"default\",\n    shieldedInstanceConfig: {\n        enableIntegrityMonitoring: true,\n        enableSecureBoot: false,\n    },\n    sourceImage: \"image\",\n    storage: {\n        localSsdCount: 5,\n    },\n    strategies: [{\n        preemptiblePercentage: 30,\n    }],\n    tags: [\n        \"tag1\",\n        \"tag2\",\n    ],\n    taints: [{\n        effect: \"taintEffect\",\n        key: \"taintKey\",\n        value: \"taintVal\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.gke.OceanLaunchSpec(\"example\",\n    autoscale_headrooms=[spotinst.gke.OceanLaunchSpecAutoscaleHeadroomArgs(\n        cpu_per_unit=1000,\n        gpu_per_unit=0,\n        memory_per_unit=2048,\n        num_of_units=5,\n    )],\n    autoscale_headrooms_automatics=[spotinst.gke.OceanLaunchSpecAutoscaleHeadroomsAutomaticArgs(\n        auto_headroom_percentage=5,\n    )],\n    instance_types=[\"n1-standard-1, n1-standard-2\"],\n    labels=[spotinst.gke.OceanLaunchSpecLabelArgs(\n        key=\"labelKey\",\n        value=\"labelVal\",\n    )],\n    metadatas=[spotinst.gke.OceanLaunchSpecMetadataArgs(\n        key=\"gci-update-strategy\",\n        value=\"update_disabled\",\n    )],\n    network_interfaces=[spotinst.gke.OceanLaunchSpecNetworkInterfaceArgs(\n        access_configs=[spotinst.gke.OceanLaunchSpecNetworkInterfaceAccessConfigArgs(\n            name=\"external-nat-vng\",\n            type=\"ONE_TO_ONE_NAT\",\n        )],\n        alias_ip_ranges=[spotinst.gke.OceanLaunchSpecNetworkInterfaceAliasIpRangeArgs(\n            ip_cidr_range=\"/25\",\n            subnetwork_range_name=\"gke-test-native-vpc-pods-123456-vng\",\n        )],\n        network=\"test-vng-network\",\n        project_id=\"test-vng-network-project\",\n    )],\n    node_pool_name=\"default-pool\",\n    ocean_id=\"o-123456\",\n    resource_limits=spotinst.gke.OceanLaunchSpecResourceLimitsArgs(\n        max_instance_count=3,\n        min_instance_count=0,\n    ),\n    restrict_scale_down=True,\n    root_volume_size=10,\n    root_volume_type=\"pd-standard\",\n    scheduling_tasks=[spotinst.gke.OceanLaunchSpecSchedulingTaskArgs(\n        cron_expression=\"0 1 * * *\",\n        is_enabled=True,\n        task_headrooms=[spotinst.gke.OceanLaunchSpecSchedulingTaskTaskHeadroomArgs(\n            cpu_per_unit=1000,\n            gpu_per_unit=0,\n            memory_per_unit=2048,\n            num_of_units=5,\n        )],\n        task_type=\"manualHeadroomUpdate\",\n    )],\n    service_account=\"default\",\n    shielded_instance_config=spotinst.gke.OceanLaunchSpecShieldedInstanceConfigArgs(\n        enable_integrity_monitoring=True,\n        enable_secure_boot=False,\n    ),\n    source_image=\"image\",\n    storage=spotinst.gke.OceanLaunchSpecStorageArgs(\n        local_ssd_count=5,\n    ),\n    strategies=[spotinst.gke.OceanLaunchSpecStrategyArgs(\n        preemptible_percentage=30,\n    )],\n    tags=[\n        \"tag1\",\n        \"tag2\",\n    ],\n    taints=[spotinst.gke.OceanLaunchSpecTaintArgs(\n        effect=\"taintEffect\",\n        key=\"taintKey\",\n        value=\"taintVal\",\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new SpotInst.Gke.OceanLaunchSpec(\"example\", new()\n    {\n        AutoscaleHeadrooms = new[]\n        {\n            new SpotInst.Gke.Inputs.OceanLaunchSpecAutoscaleHeadroomArgs\n            {\n                CpuPerUnit = 1000,\n                GpuPerUnit = 0,\n                MemoryPerUnit = 2048,\n                NumOfUnits = 5,\n            },\n        },\n        AutoscaleHeadroomsAutomatics = new[]\n        {\n            new SpotInst.Gke.Inputs.OceanLaunchSpecAutoscaleHeadroomsAutomaticArgs\n            {\n                AutoHeadroomPercentage = 5,\n            },\n        },\n        InstanceTypes = new[]\n        {\n            \"n1-standard-1, n1-standard-2\",\n        },\n        Labels = new[]\n        {\n            new SpotInst.Gke.Inputs.OceanLaunchSpecLabelArgs\n            {\n                Key = \"labelKey\",\n                Value = \"labelVal\",\n            },\n        },\n        Metadatas = new[]\n        {\n            new SpotInst.Gke.Inputs.OceanLaunchSpecMetadataArgs\n            {\n                Key = \"gci-update-strategy\",\n                Value = \"update_disabled\",\n            },\n        },\n        NetworkInterfaces = new[]\n        {\n            new SpotInst.Gke.Inputs.OceanLaunchSpecNetworkInterfaceArgs\n            {\n                AccessConfigs = new[]\n                {\n                    new SpotInst.Gke.Inputs.OceanLaunchSpecNetworkInterfaceAccessConfigArgs\n                    {\n                        Name = \"external-nat-vng\",\n                        Type = \"ONE_TO_ONE_NAT\",\n                    },\n                },\n                AliasIpRanges = new[]\n                {\n                    new SpotInst.Gke.Inputs.OceanLaunchSpecNetworkInterfaceAliasIpRangeArgs\n                    {\n                        IpCidrRange = \"/25\",\n                        SubnetworkRangeName = \"gke-test-native-vpc-pods-123456-vng\",\n                    },\n                },\n                Network = \"test-vng-network\",\n                ProjectId = \"test-vng-network-project\",\n            },\n        },\n        NodePoolName = \"default-pool\",\n        OceanId = \"o-123456\",\n        ResourceLimits = new SpotInst.Gke.Inputs.OceanLaunchSpecResourceLimitsArgs\n        {\n            MaxInstanceCount = 3,\n            MinInstanceCount = 0,\n        },\n        RestrictScaleDown = true,\n        RootVolumeSize = 10,\n        RootVolumeType = \"pd-standard\",\n        SchedulingTasks = new[]\n        {\n            new SpotInst.Gke.Inputs.OceanLaunchSpecSchedulingTaskArgs\n            {\n                CronExpression = \"0 1 * * *\",\n                IsEnabled = true,\n                TaskHeadrooms = new[]\n                {\n                    new SpotInst.Gke.Inputs.OceanLaunchSpecSchedulingTaskTaskHeadroomArgs\n                    {\n                        CpuPerUnit = 1000,\n                        GpuPerUnit = 0,\n                        MemoryPerUnit = 2048,\n                        NumOfUnits = 5,\n                    },\n                },\n                TaskType = \"manualHeadroomUpdate\",\n            },\n        },\n        ServiceAccount = \"default\",\n        ShieldedInstanceConfig = new SpotInst.Gke.Inputs.OceanLaunchSpecShieldedInstanceConfigArgs\n        {\n            EnableIntegrityMonitoring = true,\n            EnableSecureBoot = false,\n        },\n        SourceImage = \"image\",\n        Storage = new SpotInst.Gke.Inputs.OceanLaunchSpecStorageArgs\n        {\n            LocalSsdCount = 5,\n        },\n        Strategies = new[]\n        {\n            new SpotInst.Gke.Inputs.OceanLaunchSpecStrategyArgs\n            {\n                PreemptiblePercentage = 30,\n            },\n        },\n        Tags = new[]\n        {\n            \"tag1\",\n            \"tag2\",\n        },\n        Taints = new[]\n        {\n            new SpotInst.Gke.Inputs.OceanLaunchSpecTaintArgs\n            {\n                Effect = \"taintEffect\",\n                Key = \"taintKey\",\n                Value = \"taintVal\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/gke\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := gke.NewOceanLaunchSpec(ctx, \"example\", \u0026gke.OceanLaunchSpecArgs{\n\t\t\tAutoscaleHeadrooms: gke.OceanLaunchSpecAutoscaleHeadroomArray{\n\t\t\t\t\u0026gke.OceanLaunchSpecAutoscaleHeadroomArgs{\n\t\t\t\t\tCpuPerUnit:    pulumi.Int(1000),\n\t\t\t\t\tGpuPerUnit:    pulumi.Int(0),\n\t\t\t\t\tMemoryPerUnit: pulumi.Int(2048),\n\t\t\t\t\tNumOfUnits:    pulumi.Int(5),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAutoscaleHeadroomsAutomatics: gke.OceanLaunchSpecAutoscaleHeadroomsAutomaticArray{\n\t\t\t\t\u0026gke.OceanLaunchSpecAutoscaleHeadroomsAutomaticArgs{\n\t\t\t\t\tAutoHeadroomPercentage: pulumi.Int(5),\n\t\t\t\t},\n\t\t\t},\n\t\t\tInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"n1-standard-1, n1-standard-2\"),\n\t\t\t},\n\t\t\tLabels: gke.OceanLaunchSpecLabelArray{\n\t\t\t\t\u0026gke.OceanLaunchSpecLabelArgs{\n\t\t\t\t\tKey:   pulumi.String(\"labelKey\"),\n\t\t\t\t\tValue: pulumi.String(\"labelVal\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tMetadatas: gke.OceanLaunchSpecMetadataArray{\n\t\t\t\t\u0026gke.OceanLaunchSpecMetadataArgs{\n\t\t\t\t\tKey:   pulumi.String(\"gci-update-strategy\"),\n\t\t\t\t\tValue: pulumi.String(\"update_disabled\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tNetworkInterfaces: gke.OceanLaunchSpecNetworkInterfaceArray{\n\t\t\t\t\u0026gke.OceanLaunchSpecNetworkInterfaceArgs{\n\t\t\t\t\tAccessConfigs: gke.OceanLaunchSpecNetworkInterfaceAccessConfigArray{\n\t\t\t\t\t\t\u0026gke.OceanLaunchSpecNetworkInterfaceAccessConfigArgs{\n\t\t\t\t\t\t\tName: pulumi.String(\"external-nat-vng\"),\n\t\t\t\t\t\t\tType: pulumi.String(\"ONE_TO_ONE_NAT\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tAliasIpRanges: gke.OceanLaunchSpecNetworkInterfaceAliasIpRangeArray{\n\t\t\t\t\t\t\u0026gke.OceanLaunchSpecNetworkInterfaceAliasIpRangeArgs{\n\t\t\t\t\t\t\tIpCidrRange:         pulumi.String(\"/25\"),\n\t\t\t\t\t\t\tSubnetworkRangeName: pulumi.String(\"gke-test-native-vpc-pods-123456-vng\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tNetwork:   pulumi.String(\"test-vng-network\"),\n\t\t\t\t\tProjectId: pulumi.String(\"test-vng-network-project\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tNodePoolName: pulumi.String(\"default-pool\"),\n\t\t\tOceanId:      pulumi.String(\"o-123456\"),\n\t\t\tResourceLimits: \u0026gke.OceanLaunchSpecResourceLimitsArgs{\n\t\t\t\tMaxInstanceCount: pulumi.Int(3),\n\t\t\t\tMinInstanceCount: pulumi.Int(0),\n\t\t\t},\n\t\t\tRestrictScaleDown: pulumi.Bool(true),\n\t\t\tRootVolumeSize:    pulumi.Int(10),\n\t\t\tRootVolumeType:    pulumi.String(\"pd-standard\"),\n\t\t\tSchedulingTasks: gke.OceanLaunchSpecSchedulingTaskArray{\n\t\t\t\t\u0026gke.OceanLaunchSpecSchedulingTaskArgs{\n\t\t\t\t\tCronExpression: pulumi.String(\"0 1 * * *\"),\n\t\t\t\t\tIsEnabled:      pulumi.Bool(true),\n\t\t\t\t\tTaskHeadrooms: gke.OceanLaunchSpecSchedulingTaskTaskHeadroomArray{\n\t\t\t\t\t\t\u0026gke.OceanLaunchSpecSchedulingTaskTaskHeadroomArgs{\n\t\t\t\t\t\t\tCpuPerUnit:    pulumi.Int(1000),\n\t\t\t\t\t\t\tGpuPerUnit:    pulumi.Int(0),\n\t\t\t\t\t\t\tMemoryPerUnit: pulumi.Int(2048),\n\t\t\t\t\t\t\tNumOfUnits:    pulumi.Int(5),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tTaskType: pulumi.String(\"manualHeadroomUpdate\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tServiceAccount: pulumi.String(\"default\"),\n\t\t\tShieldedInstanceConfig: \u0026gke.OceanLaunchSpecShieldedInstanceConfigArgs{\n\t\t\t\tEnableIntegrityMonitoring: pulumi.Bool(true),\n\t\t\t\tEnableSecureBoot:          pulumi.Bool(false),\n\t\t\t},\n\t\t\tSourceImage: pulumi.String(\"image\"),\n\t\t\tStorage: \u0026gke.OceanLaunchSpecStorageArgs{\n\t\t\t\tLocalSsdCount: pulumi.Int(5),\n\t\t\t},\n\t\t\tStrategies: gke.OceanLaunchSpecStrategyArray{\n\t\t\t\t\u0026gke.OceanLaunchSpecStrategyArgs{\n\t\t\t\t\tPreemptiblePercentage: pulumi.Int(30),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"tag1\"),\n\t\t\t\tpulumi.String(\"tag2\"),\n\t\t\t},\n\t\t\tTaints: gke.OceanLaunchSpecTaintArray{\n\t\t\t\t\u0026gke.OceanLaunchSpecTaintArgs{\n\t\t\t\t\tEffect: pulumi.String(\"taintEffect\"),\n\t\t\t\t\tKey:    pulumi.String(\"taintKey\"),\n\t\t\t\t\tValue:  pulumi.String(\"taintVal\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.gke.OceanLaunchSpec;\nimport com.pulumi.spotinst.gke.OceanLaunchSpecArgs;\nimport com.pulumi.spotinst.gke.inputs.OceanLaunchSpecAutoscaleHeadroomArgs;\nimport com.pulumi.spotinst.gke.inputs.OceanLaunchSpecAutoscaleHeadroomsAutomaticArgs;\nimport com.pulumi.spotinst.gke.inputs.OceanLaunchSpecLabelArgs;\nimport com.pulumi.spotinst.gke.inputs.OceanLaunchSpecMetadataArgs;\nimport com.pulumi.spotinst.gke.inputs.OceanLaunchSpecNetworkInterfaceArgs;\nimport com.pulumi.spotinst.gke.inputs.OceanLaunchSpecResourceLimitsArgs;\nimport com.pulumi.spotinst.gke.inputs.OceanLaunchSpecSchedulingTaskArgs;\nimport com.pulumi.spotinst.gke.inputs.OceanLaunchSpecShieldedInstanceConfigArgs;\nimport com.pulumi.spotinst.gke.inputs.OceanLaunchSpecStorageArgs;\nimport com.pulumi.spotinst.gke.inputs.OceanLaunchSpecStrategyArgs;\nimport com.pulumi.spotinst.gke.inputs.OceanLaunchSpecTaintArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OceanLaunchSpec(\"example\", OceanLaunchSpecArgs.builder()        \n            .autoscaleHeadrooms(OceanLaunchSpecAutoscaleHeadroomArgs.builder()\n                .cpuPerUnit(1000)\n                .gpuPerUnit(0)\n                .memoryPerUnit(2048)\n                .numOfUnits(5)\n                .build())\n            .autoscaleHeadroomsAutomatics(OceanLaunchSpecAutoscaleHeadroomsAutomaticArgs.builder()\n                .autoHeadroomPercentage(5)\n                .build())\n            .instanceTypes(\"n1-standard-1, n1-standard-2\")\n            .labels(OceanLaunchSpecLabelArgs.builder()\n                .key(\"labelKey\")\n                .value(\"labelVal\")\n                .build())\n            .metadatas(OceanLaunchSpecMetadataArgs.builder()\n                .key(\"gci-update-strategy\")\n                .value(\"update_disabled\")\n                .build())\n            .networkInterfaces(OceanLaunchSpecNetworkInterfaceArgs.builder()\n                .accessConfigs(OceanLaunchSpecNetworkInterfaceAccessConfigArgs.builder()\n                    .name(\"external-nat-vng\")\n                    .type(\"ONE_TO_ONE_NAT\")\n                    .build())\n                .aliasIpRanges(OceanLaunchSpecNetworkInterfaceAliasIpRangeArgs.builder()\n                    .ipCidrRange(\"/25\")\n                    .subnetworkRangeName(\"gke-test-native-vpc-pods-123456-vng\")\n                    .build())\n                .network(\"test-vng-network\")\n                .projectId(\"test-vng-network-project\")\n                .build())\n            .nodePoolName(\"default-pool\")\n            .oceanId(\"o-123456\")\n            .resourceLimits(OceanLaunchSpecResourceLimitsArgs.builder()\n                .maxInstanceCount(3)\n                .minInstanceCount(0)\n                .build())\n            .restrictScaleDown(true)\n            .rootVolumeSize(10)\n            .rootVolumeType(\"pd-standard\")\n            .schedulingTasks(OceanLaunchSpecSchedulingTaskArgs.builder()\n                .cronExpression(\"0 1 * * *\")\n                .isEnabled(true)\n                .taskHeadrooms(OceanLaunchSpecSchedulingTaskTaskHeadroomArgs.builder()\n                    .cpuPerUnit(1000)\n                    .gpuPerUnit(0)\n                    .memoryPerUnit(2048)\n                    .numOfUnits(5)\n                    .build())\n                .taskType(\"manualHeadroomUpdate\")\n                .build())\n            .serviceAccount(\"default\")\n            .shieldedInstanceConfig(OceanLaunchSpecShieldedInstanceConfigArgs.builder()\n                .enableIntegrityMonitoring(true)\n                .enableSecureBoot(false)\n                .build())\n            .sourceImage(\"image\")\n            .storage(OceanLaunchSpecStorageArgs.builder()\n                .localSsdCount(5)\n                .build())\n            .strategies(OceanLaunchSpecStrategyArgs.builder()\n                .preemptiblePercentage(30)\n                .build())\n            .tags(            \n                \"tag1\",\n                \"tag2\")\n            .taints(OceanLaunchSpecTaintArgs.builder()\n                .effect(\"taintEffect\")\n                .key(\"taintKey\")\n                .value(\"taintVal\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: spotinst:gke:OceanLaunchSpec\n    properties:\n      autoscaleHeadrooms:\n        - cpuPerUnit: 1000\n          gpuPerUnit: 0\n          memoryPerUnit: 2048\n          numOfUnits: 5\n      autoscaleHeadroomsAutomatics:\n        - autoHeadroomPercentage: 5\n      instanceTypes:\n        - n1-standard-1, n1-standard-2\n      labels:\n        - key: labelKey\n          value: labelVal\n      metadatas:\n        - key: gci-update-strategy\n          value: update_disabled\n      networkInterfaces:\n        - accessConfigs:\n            - name: external-nat-vng\n              type: ONE_TO_ONE_NAT\n          aliasIpRanges:\n            - ipCidrRange: /25\n              subnetworkRangeName: gke-test-native-vpc-pods-123456-vng\n          network: test-vng-network\n          projectId: test-vng-network-project\n      nodePoolName: default-pool\n      oceanId: o-123456\n      resourceLimits:\n        maxInstanceCount: 3\n        minInstanceCount: 0\n      restrictScaleDown: true\n      rootVolumeSize: 10\n      rootVolumeType: pd-standard\n      schedulingTasks:\n        - cronExpression: 0 1 * * *\n          isEnabled: true\n          taskHeadrooms:\n            - cpuPerUnit: 1000\n              gpuPerUnit: 0\n              memoryPerUnit: 2048\n              numOfUnits: 5\n          taskType: manualHeadroomUpdate\n      serviceAccount: default\n      shieldedInstanceConfig:\n        enableIntegrityMonitoring: true\n        enableSecureBoot: false\n      sourceImage: image\n      storage:\n        localSsdCount: 5\n      strategies:\n        - preemptiblePercentage: 30\n      tags:\n        - tag1\n        - tag2\n      taints:\n        - effect: taintEffect\n          key: taintKey\n          value: taintVal\n```\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const oceanLaunchspecId = spotinst_ocean_gke_launch_spec.example.id;\n```\n```python\nimport pulumi\n\npulumi.export(\"oceanLaunchspecId\", spotinst_ocean_gke_launch_spec[\"example\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"oceanLaunchspecId\"] = spotinst_ocean_gke_launch_spec.Example.Id,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"oceanLaunchspecId\", spotinst_ocean_gke_launch_spec.Example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        ctx.export(\"oceanLaunchspecId\", spotinst_ocean_gke_launch_spec.example().id());\n    }\n}\n```\n```yaml\noutputs:\n  oceanLaunchspecId: ${spotinst_ocean_gke_launch_spec.example.id}\n```\n{{% /example %}}\n{{% /examples %}}\n## Update Policy\n\n* `update_policy` - (Optional)\n  * `should_roll` - (Required) Enables the roll.\n  * `roll_config` - (Required) Holds the roll configuration.\n    * `batch_size_percentage` - (Required) Sets the percentage of the instances to deploy in each batch.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n",
            "properties": {
                "autoscaleHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                    },
                    "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                },
                "autoscaleHeadroomsAutomatics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecAutoscaleHeadroomsAutomatic:OceanLaunchSpecAutoscaleHeadroomsAutomatic"
                    },
                    "description": "Set automatic headroom per launch spec.\n"
                },
                "instanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of supported machine types for the Launch Spec.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecLabel:OceanLaunchSpecLabel"
                    },
                    "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecMetadata:OceanLaunchSpecMetadata"
                    },
                    "description": "Cluster's metadata.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the access configuration.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecNetworkInterface:OceanLaunchSpecNetworkInterface"
                    },
                    "description": "Settings for network interfaces.\n"
                },
                "nodePoolName": {
                    "type": "string",
                    "description": "The node pool you wish to use in your Launch Spec.\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The Ocean cluster ID.\n"
                },
                "resourceLimits": {
                    "$ref": "#/types/spotinst:gke/OceanLaunchSpecResourceLimits:OceanLaunchSpecResourceLimits",
                    "description": "The Ocean virtual node group resource limits object.\n"
                },
                "restrictScaleDown": {
                    "type": "boolean",
                    "description": "Boolean. When set to `true`, VNG nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.\n"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "description": "Root volume size (in GB).\n"
                },
                "rootVolumeType": {
                    "type": "string",
                    "description": "Root volume disk type. Valid values: `\"pd-standard\"`, `\"pd-ssd\"`.\n"
                },
                "schedulingTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecSchedulingTask:OceanLaunchSpecSchedulingTask"
                    },
                    "description": "Used to define scheduled tasks such as a manual headroom update.\n"
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "The account used by applications running on the VM to call GCP APIs.\n"
                },
                "shieldedInstanceConfig": {
                    "$ref": "#/types/spotinst:gke/OceanLaunchSpecShieldedInstanceConfig:OceanLaunchSpecShieldedInstanceConfig",
                    "description": "The Ocean shielded instance configuration object.\n"
                },
                "sourceImage": {
                    "type": "string",
                    "description": "Image URL.\n"
                },
                "storage": {
                    "$ref": "#/types/spotinst:gke/OceanLaunchSpecStorage:OceanLaunchSpecStorage",
                    "description": "The Ocean virtual node group storage object.\n"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecStrategy:OceanLaunchSpecStrategy"
                    },
                    "description": "The Ocean Launch Spec Strategy object.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Every node launched from this configuration will be tagged with those tags. Note: during creation some tags are automatically imported to the state file, it is required to manually add it to the template configuration\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecTaint:OceanLaunchSpecTaint"
                    },
                    "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:gke/OceanLaunchSpecUpdatePolicy:OceanLaunchSpecUpdatePolicy"
                }
            },
            "required": [
                "instanceTypes",
                "labels",
                "metadatas",
                "name",
                "oceanId",
                "restrictScaleDown",
                "rootVolumeSize",
                "rootVolumeType",
                "serviceAccount",
                "shieldedInstanceConfig",
                "sourceImage",
                "storage",
                "tags",
                "taints"
            ],
            "inputProperties": {
                "autoscaleHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                    },
                    "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                },
                "autoscaleHeadroomsAutomatics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecAutoscaleHeadroomsAutomatic:OceanLaunchSpecAutoscaleHeadroomsAutomatic"
                    },
                    "description": "Set automatic headroom per launch spec.\n"
                },
                "instanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of supported machine types for the Launch Spec.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecLabel:OceanLaunchSpecLabel"
                    },
                    "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecMetadata:OceanLaunchSpecMetadata"
                    },
                    "description": "Cluster's metadata.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the access configuration.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecNetworkInterface:OceanLaunchSpecNetworkInterface"
                    },
                    "description": "Settings for network interfaces.\n"
                },
                "nodePoolName": {
                    "type": "string",
                    "description": "The node pool you wish to use in your Launch Spec.\n",
                    "willReplaceOnChanges": true
                },
                "oceanId": {
                    "type": "string",
                    "description": "The Ocean cluster ID.\n"
                },
                "resourceLimits": {
                    "$ref": "#/types/spotinst:gke/OceanLaunchSpecResourceLimits:OceanLaunchSpecResourceLimits",
                    "description": "The Ocean virtual node group resource limits object.\n"
                },
                "restrictScaleDown": {
                    "type": "boolean",
                    "description": "Boolean. When set to `true`, VNG nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.\n"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "description": "Root volume size (in GB).\n"
                },
                "rootVolumeType": {
                    "type": "string",
                    "description": "Root volume disk type. Valid values: `\"pd-standard\"`, `\"pd-ssd\"`.\n"
                },
                "schedulingTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecSchedulingTask:OceanLaunchSpecSchedulingTask"
                    },
                    "description": "Used to define scheduled tasks such as a manual headroom update.\n"
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "The account used by applications running on the VM to call GCP APIs.\n"
                },
                "shieldedInstanceConfig": {
                    "$ref": "#/types/spotinst:gke/OceanLaunchSpecShieldedInstanceConfig:OceanLaunchSpecShieldedInstanceConfig",
                    "description": "The Ocean shielded instance configuration object.\n"
                },
                "sourceImage": {
                    "type": "string",
                    "description": "Image URL.\n"
                },
                "storage": {
                    "$ref": "#/types/spotinst:gke/OceanLaunchSpecStorage:OceanLaunchSpecStorage",
                    "description": "The Ocean virtual node group storage object.\n"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecStrategy:OceanLaunchSpecStrategy"
                    },
                    "description": "The Ocean Launch Spec Strategy object.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Every node launched from this configuration will be tagged with those tags. Note: during creation some tags are automatically imported to the state file, it is required to manually add it to the template configuration\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecTaint:OceanLaunchSpecTaint"
                    },
                    "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:gke/OceanLaunchSpecUpdatePolicy:OceanLaunchSpecUpdatePolicy"
                }
            },
            "requiredInputs": [
                "oceanId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanLaunchSpec resources.\n",
                "properties": {
                    "autoscaleHeadrooms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                        },
                        "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                    },
                    "autoscaleHeadroomsAutomatics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanLaunchSpecAutoscaleHeadroomsAutomatic:OceanLaunchSpecAutoscaleHeadroomsAutomatic"
                        },
                        "description": "Set automatic headroom per launch spec.\n"
                    },
                    "instanceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of supported machine types for the Launch Spec.\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanLaunchSpecLabel:OceanLaunchSpecLabel"
                        },
                        "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                    },
                    "metadatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanLaunchSpecMetadata:OceanLaunchSpecMetadata"
                        },
                        "description": "Cluster's metadata.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the access configuration.\n"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanLaunchSpecNetworkInterface:OceanLaunchSpecNetworkInterface"
                        },
                        "description": "Settings for network interfaces.\n"
                    },
                    "nodePoolName": {
                        "type": "string",
                        "description": "The node pool you wish to use in your Launch Spec.\n",
                        "willReplaceOnChanges": true
                    },
                    "oceanId": {
                        "type": "string",
                        "description": "The Ocean cluster ID.\n"
                    },
                    "resourceLimits": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecResourceLimits:OceanLaunchSpecResourceLimits",
                        "description": "The Ocean virtual node group resource limits object.\n"
                    },
                    "restrictScaleDown": {
                        "type": "boolean",
                        "description": "Boolean. When set to `true`, VNG nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.\n"
                    },
                    "rootVolumeSize": {
                        "type": "integer",
                        "description": "Root volume size (in GB).\n"
                    },
                    "rootVolumeType": {
                        "type": "string",
                        "description": "Root volume disk type. Valid values: `\"pd-standard\"`, `\"pd-ssd\"`.\n"
                    },
                    "schedulingTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanLaunchSpecSchedulingTask:OceanLaunchSpecSchedulingTask"
                        },
                        "description": "Used to define scheduled tasks such as a manual headroom update.\n"
                    },
                    "serviceAccount": {
                        "type": "string",
                        "description": "The account used by applications running on the VM to call GCP APIs.\n"
                    },
                    "shieldedInstanceConfig": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecShieldedInstanceConfig:OceanLaunchSpecShieldedInstanceConfig",
                        "description": "The Ocean shielded instance configuration object.\n"
                    },
                    "sourceImage": {
                        "type": "string",
                        "description": "Image URL.\n"
                    },
                    "storage": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecStorage:OceanLaunchSpecStorage",
                        "description": "The Ocean virtual node group storage object.\n"
                    },
                    "strategies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanLaunchSpecStrategy:OceanLaunchSpecStrategy"
                        },
                        "description": "The Ocean Launch Spec Strategy object.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Every node launched from this configuration will be tagged with those tags. Note: during creation some tags are automatically imported to the state file, it is required to manually add it to the template configuration\n"
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanLaunchSpecTaint:OceanLaunchSpecTaint"
                        },
                        "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                    },
                    "updatePolicy": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecUpdatePolicy:OceanLaunchSpecUpdatePolicy"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:gke/oceanLaunchSpecImport:OceanLaunchSpecImport": {
            "description": "Manages a custom Spotinst Ocean GKE Launch Spec Import resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.gke.OceanLaunchSpecImport(\"example\", {\n    nodePoolName: \"default-pool\",\n    oceanId: \"o-123456\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.gke.OceanLaunchSpecImport(\"example\",\n    node_pool_name=\"default-pool\",\n    ocean_id=\"o-123456\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new SpotInst.Gke.OceanLaunchSpecImport(\"example\", new()\n    {\n        NodePoolName = \"default-pool\",\n        OceanId = \"o-123456\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/gke\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := gke.NewOceanLaunchSpecImport(ctx, \"example\", \u0026gke.OceanLaunchSpecImportArgs{\n\t\t\tNodePoolName: pulumi.String(\"default-pool\"),\n\t\t\tOceanId:      pulumi.String(\"o-123456\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.gke.OceanLaunchSpecImport;\nimport com.pulumi.spotinst.gke.OceanLaunchSpecImportArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OceanLaunchSpecImport(\"example\", OceanLaunchSpecImportArgs.builder()        \n            .nodePoolName(\"default-pool\")\n            .oceanId(\"o-123456\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: spotinst:gke:OceanLaunchSpecImport\n    properties:\n      nodePoolName: default-pool\n      oceanId: o-123456\n```\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const oceanLaunchspecId = spotinst_ocean_gke_launch_spec_import.example.id;\n```\n```python\nimport pulumi\n\npulumi.export(\"oceanLaunchspecId\", spotinst_ocean_gke_launch_spec_import[\"example\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"oceanLaunchspecId\"] = spotinst_ocean_gke_launch_spec_import.Example.Id,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"oceanLaunchspecId\", spotinst_ocean_gke_launch_spec_import.Example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        ctx.export(\"oceanLaunchspecId\", spotinst_ocean_gke_launch_spec_import.example().id());\n    }\n}\n```\n```yaml\noutputs:\n  oceanLaunchspecId: ${spotinst_ocean_gke_launch_spec_import.example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "nodePoolName": {
                    "type": "string",
                    "description": "The node pool you wish to use in your launchSpec.\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The Ocean cluster ID required for launchSpec create.\n"
                }
            },
            "required": [
                "nodePoolName",
                "oceanId"
            ],
            "inputProperties": {
                "nodePoolName": {
                    "type": "string",
                    "description": "The node pool you wish to use in your launchSpec.\n",
                    "willReplaceOnChanges": true
                },
                "oceanId": {
                    "type": "string",
                    "description": "The Ocean cluster ID required for launchSpec create.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "nodePoolName",
                "oceanId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanLaunchSpecImport resources.\n",
                "properties": {
                    "nodePoolName": {
                        "type": "string",
                        "description": "The node pool you wish to use in your launchSpec.\n",
                        "willReplaceOnChanges": true
                    },
                    "oceanId": {
                        "type": "string",
                        "description": "The Ocean cluster ID required for launchSpec create.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "spotinst:index/dataIntegration:DataIntegration": {
            "description": "Provides a Spotinst Data Integration resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.DataIntegration(\"example\", {\n    s3: {\n        bucketName: \"terraform-test-do-not-delete\",\n        subdir: \"terraform-test-data-integration\",\n    },\n    status: \"enabled\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.DataIntegration(\"example\",\n    s3=spotinst.DataIntegrationS3Args(\n        bucket_name=\"terraform-test-do-not-delete\",\n        subdir=\"terraform-test-data-integration\",\n    ),\n    status=\"enabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new SpotInst.DataIntegration(\"example\", new()\n    {\n        S3 = new SpotInst.Inputs.DataIntegrationS3Args\n        {\n            BucketName = \"terraform-test-do-not-delete\",\n            Subdir = \"terraform-test-data-integration\",\n        },\n        Status = \"enabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := spotinst.NewDataIntegration(ctx, \"example\", \u0026spotinst.DataIntegrationArgs{\n\t\t\tS3: \u0026spotinst.DataIntegrationS3Args{\n\t\t\t\tBucketName: pulumi.String(\"terraform-test-do-not-delete\"),\n\t\t\t\tSubdir:     pulumi.String(\"terraform-test-data-integration\"),\n\t\t\t},\n\t\t\tStatus: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.DataIntegration;\nimport com.pulumi.spotinst.DataIntegrationArgs;\nimport com.pulumi.spotinst.inputs.DataIntegrationS3Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DataIntegration(\"example\", DataIntegrationArgs.builder()        \n            .s3(DataIntegrationS3Args.builder()\n                .bucketName(\"terraform-test-do-not-delete\")\n                .subdir(\"terraform-test-data-integration\")\n                .build())\n            .status(\"enabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: spotinst:DataIntegration\n    properties:\n      s3:\n        bucketName: terraform-test-do-not-delete\n        subdir: terraform-test-data-integration\n      status: enabled\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the data integration.\n"
                },
                "s3": {
                    "$ref": "#/types/spotinst:index/DataIntegrationS3:DataIntegrationS3",
                    "description": "When vendor value is s3, the following fields are included:\n"
                },
                "status": {
                    "type": "string",
                    "description": "Determines if this data integration is on or off. Valid values: `\"enabled\"`, `\"disabled\"`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the data integration.\n"
                },
                "s3": {
                    "$ref": "#/types/spotinst:index/DataIntegrationS3:DataIntegrationS3",
                    "description": "When vendor value is s3, the following fields are included:\n"
                },
                "status": {
                    "type": "string",
                    "description": "Determines if this data integration is on or off. Valid values: `\"enabled\"`, `\"disabled\"`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DataIntegration resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the data integration.\n"
                    },
                    "s3": {
                        "$ref": "#/types/spotinst:index/DataIntegrationS3:DataIntegrationS3",
                        "description": "When vendor value is s3, the following fields are included:\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Determines if this data integration is on or off. Valid values: `\"enabled\"`, `\"disabled\"`\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:index/elastigroupAzureV3:ElastigroupAzureV3": {
            "properties": {
                "customData": {
                    "type": "string"
                },
                "desiredCapacity": {
                    "type": "integer"
                },
                "drainingTimeout": {
                    "type": "integer"
                },
                "fallbackToOnDemand": {
                    "type": "boolean"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/ElastigroupAzureV3Image:ElastigroupAzureV3Image"
                    }
                },
                "login": {
                    "$ref": "#/types/spotinst:index/ElastigroupAzureV3Login:ElastigroupAzureV3Login"
                },
                "managedServiceIdentities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/ElastigroupAzureV3ManagedServiceIdentity:ElastigroupAzureV3ManagedServiceIdentity"
                    }
                },
                "maxSize": {
                    "type": "integer"
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "$ref": "#/types/spotinst:index/ElastigroupAzureV3Network:ElastigroupAzureV3Network"
                },
                "odSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "onDemandCount": {
                    "type": "integer"
                },
                "os": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "spotPercentage": {
                    "type": "integer"
                },
                "spotSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/ElastigroupAzureV3Tag:ElastigroupAzureV3Tag"
                    }
                }
            },
            "required": [
                "drainingTimeout",
                "fallbackToOnDemand",
                "maxSize",
                "minSize",
                "name",
                "network",
                "odSizes",
                "os",
                "region",
                "resourceGroupName",
                "spotSizes"
            ],
            "inputProperties": {
                "customData": {
                    "type": "string"
                },
                "desiredCapacity": {
                    "type": "integer"
                },
                "drainingTimeout": {
                    "type": "integer"
                },
                "fallbackToOnDemand": {
                    "type": "boolean"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/ElastigroupAzureV3Image:ElastigroupAzureV3Image"
                    }
                },
                "login": {
                    "$ref": "#/types/spotinst:index/ElastigroupAzureV3Login:ElastigroupAzureV3Login"
                },
                "managedServiceIdentities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/ElastigroupAzureV3ManagedServiceIdentity:ElastigroupAzureV3ManagedServiceIdentity"
                    }
                },
                "maxSize": {
                    "type": "integer"
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "$ref": "#/types/spotinst:index/ElastigroupAzureV3Network:ElastigroupAzureV3Network"
                },
                "odSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "onDemandCount": {
                    "type": "integer"
                },
                "os": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "spotPercentage": {
                    "type": "integer"
                },
                "spotSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/ElastigroupAzureV3Tag:ElastigroupAzureV3Tag"
                    }
                }
            },
            "requiredInputs": [
                "fallbackToOnDemand",
                "network",
                "odSizes",
                "os",
                "region",
                "resourceGroupName",
                "spotSizes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElastigroupAzureV3 resources.\n",
                "properties": {
                    "customData": {
                        "type": "string"
                    },
                    "desiredCapacity": {
                        "type": "integer"
                    },
                    "drainingTimeout": {
                        "type": "integer"
                    },
                    "fallbackToOnDemand": {
                        "type": "boolean"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/ElastigroupAzureV3Image:ElastigroupAzureV3Image"
                        }
                    },
                    "login": {
                        "$ref": "#/types/spotinst:index/ElastigroupAzureV3Login:ElastigroupAzureV3Login"
                    },
                    "managedServiceIdentities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/ElastigroupAzureV3ManagedServiceIdentity:ElastigroupAzureV3ManagedServiceIdentity"
                        }
                    },
                    "maxSize": {
                        "type": "integer"
                    },
                    "minSize": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "$ref": "#/types/spotinst:index/ElastigroupAzureV3Network:ElastigroupAzureV3Network"
                    },
                    "odSizes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "onDemandCount": {
                        "type": "integer"
                    },
                    "os": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroupName": {
                        "type": "string"
                    },
                    "spotPercentage": {
                        "type": "integer"
                    },
                    "spotSizes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/ElastigroupAzureV3Tag:ElastigroupAzureV3Tag"
                        }
                    }
                },
                "type": "object"
            }
        },
        "spotinst:index/healthCheck:HealthCheck": {
            "description": "Provides a Spotinst Health Check resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst httpCheck = new spotinst.HealthCheck(\"httpCheck\", {\n    check: {\n        endpoint: \"http://endpoint.com\",\n        healthy: 1,\n        interval: 10,\n        port: 1337,\n        protocol: \"http\",\n        timeout: 10,\n        unhealthy: 1,\n    },\n    proxyAddress: \"http://proxy.com\",\n    proxyPort: 80,\n    resourceId: \"sig-123\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nhttp_check = spotinst.HealthCheck(\"httpCheck\",\n    check=spotinst.HealthCheckCheckArgs(\n        endpoint=\"http://endpoint.com\",\n        healthy=1,\n        interval=10,\n        port=1337,\n        protocol=\"http\",\n        timeout=10,\n        unhealthy=1,\n    ),\n    proxy_address=\"http://proxy.com\",\n    proxy_port=80,\n    resource_id=\"sig-123\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var httpCheck = new SpotInst.HealthCheck(\"httpCheck\", new()\n    {\n        Check = new SpotInst.Inputs.HealthCheckCheckArgs\n        {\n            Endpoint = \"http://endpoint.com\",\n            Healthy = 1,\n            Interval = 10,\n            Port = 1337,\n            Protocol = \"http\",\n            Timeout = 10,\n            Unhealthy = 1,\n        },\n        ProxyAddress = \"http://proxy.com\",\n        ProxyPort = 80,\n        ResourceId = \"sig-123\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := spotinst.NewHealthCheck(ctx, \"httpCheck\", \u0026spotinst.HealthCheckArgs{\n\t\t\tCheck: \u0026spotinst.HealthCheckCheckArgs{\n\t\t\t\tEndpoint:  pulumi.String(\"http://endpoint.com\"),\n\t\t\t\tHealthy:   pulumi.Int(1),\n\t\t\t\tInterval:  pulumi.Int(10),\n\t\t\t\tPort:      pulumi.Int(1337),\n\t\t\t\tProtocol:  pulumi.String(\"http\"),\n\t\t\t\tTimeout:   pulumi.Int(10),\n\t\t\t\tUnhealthy: pulumi.Int(1),\n\t\t\t},\n\t\t\tProxyAddress: pulumi.String(\"http://proxy.com\"),\n\t\t\tProxyPort:    pulumi.Int(80),\n\t\t\tResourceId:   pulumi.String(\"sig-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.HealthCheck;\nimport com.pulumi.spotinst.HealthCheckArgs;\nimport com.pulumi.spotinst.inputs.HealthCheckCheckArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var httpCheck = new HealthCheck(\"httpCheck\", HealthCheckArgs.builder()        \n            .check(HealthCheckCheckArgs.builder()\n                .endpoint(\"http://endpoint.com\")\n                .healthy(1)\n                .interval(10)\n                .port(1337)\n                .protocol(\"http\")\n                .timeout(10)\n                .unhealthy(1)\n                .build())\n            .proxyAddress(\"http://proxy.com\")\n            .proxyPort(80)\n            .resourceId(\"sig-123\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  httpCheck:\n    type: spotinst:HealthCheck\n    properties:\n      check:\n        endpoint: http://endpoint.com\n        healthy: 1\n        interval: 10\n        port: 1337\n        protocol: http\n        timeout: 10\n        unhealthy: 1\n      proxyAddress: http://proxy.com\n      proxyPort: 80\n      resourceId: sig-123\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "check": {
                    "$ref": "#/types/spotinst:index/HealthCheckCheck:HealthCheckCheck",
                    "description": "Describes the check to execute.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the health check.\n"
                },
                "proxyAddress": {
                    "type": "string"
                },
                "proxyPort": {
                    "type": "integer"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of the resource to check.\n"
                }
            },
            "required": [
                "name",
                "proxyAddress",
                "resourceId"
            ],
            "inputProperties": {
                "check": {
                    "$ref": "#/types/spotinst:index/HealthCheckCheck:HealthCheckCheck",
                    "description": "Describes the check to execute.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the health check.\n"
                },
                "proxyAddress": {
                    "type": "string"
                },
                "proxyPort": {
                    "type": "integer"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of the resource to check.\n"
                }
            },
            "requiredInputs": [
                "proxyAddress",
                "resourceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HealthCheck resources.\n",
                "properties": {
                    "check": {
                        "$ref": "#/types/spotinst:index/HealthCheckCheck:HealthCheckCheck",
                        "description": "Describes the check to execute.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the health check.\n"
                    },
                    "proxyAddress": {
                        "type": "string"
                    },
                    "proxyPort": {
                        "type": "integer"
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "The ID of the resource to check.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:index/statefulNodeAzure:StatefulNodeAzure": {
            "description": "Provides a Spotinst stateful node Azure resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst testStatefulNodeAzure = new spotinst.StatefulNodeAzure(\"testStatefulNodeAzure\", {\n    region: \"eastus\",\n    resourceGroupName: \"spotinst-azure\",\n    description: \"example_stateful_node_azure_description\",\n    strategy: {\n        drainingTimeout: 30,\n        fallbackToOnDemand: true,\n        optimizationWindows: [\"Tue:19:46-Tue:20:46\"],\n        revertToSpot: {\n            performAt: \"timeWindow\",\n        },\n        preferredLifeCycle: \"od\",\n        capacityReservations: [{\n            shouldUtilize: true,\n            utilizationStrategy: \"utilizeOverOD\",\n            capacityReservationGroups: [{\n                crgName: \"crg name\",\n                crgResourceGroupName: \"resourceGroupName\",\n                crgShouldPrioritize: true,\n            }],\n        }],\n    },\n    os: \"Linux\",\n    odSizes: [\n        \"standard_ds1_v2\",\n        \"standard_ds2_v2\",\n    ],\n    spotSizes: [\n        \"standard_ds1_v2\",\n        \"standard_ds2_v2\",\n    ],\n    preferredSpotSizes: [\"standard_ds1_v2\"],\n    zones: [\n        \"1\",\n        \"3\",\n    ],\n    preferredZone: \"1\",\n    customData: \"\",\n    shutdownScript: \"\",\n    userData: \"\",\n    vmName: \"VMName\",\n    bootDiagnostics: [{\n        isEnabled: true,\n        storageUrl: \"https://.blob.core.windows.net/test\",\n        type: \"unmanaged\",\n    }],\n    dataDisks: [\n        {\n            sizeGb: 1,\n            lun: 1,\n            type: \"Standard_LRS\",\n        },\n        {\n            sizeGb: 10,\n            lun: 2,\n            type: \"Standard_LRS\",\n        },\n    ],\n    extensions: [{\n        name: \"extensionName\",\n        type: \"customScript\",\n        publisher: \"Microsoft.Azure.Extensions\",\n        apiVersion: \"2.0\",\n        minorVersionAutoUpgrade: true,\n        protectedSettings: {\n            script: \"IyEvYmluL2Jhc2gKZWNobyAibmlyIiA+IC9ob29uaXIudHh0Cg==\",\n        },\n    }],\n    image: {\n        marketplaceImages: [{\n            publisher: \"Canonical\",\n            offer: \"UbuntuServer\",\n            sku: \"16.04-LTS\",\n            version: \"latest\",\n        }],\n    },\n    loadBalancers: [{\n        type: \"loadBalancer\",\n        resourceGroupName: \"testResourceGroup\",\n        name: \"testLoadBalancer\",\n        sku: \"Standard\",\n        backendPoolNames: [\n            \"testBackendPool1\",\n            \"testBackendPool2\",\n        ],\n    }],\n    login: {\n        userName: \"admin\",\n        sshPublicKey: \"33a2s1f3g5a1df5g1ad3f2g1adfg56dfg==\",\n    },\n    managedServiceIdentities: [{\n        name: \"mySI2\",\n        resourceGroupName: \"myResourceGroup\",\n    }],\n    network: {\n        networkResourceGroupName: \"subnetResourceGroup\",\n        virtualNetworkName: \"vname\",\n        networkInterfaces: [{\n            isPrimary: true,\n            subnetName: \"testSubnet\",\n            assignPublicIp: true,\n            publicIpSku: \"Standard\",\n            networkSecurityGroups: [{\n                networkResourceGroupName: \"test\",\n                name: \"test\",\n            }],\n            enableIpForwarding: true,\n            privateIpAddresses: [\"172.23.4.20\"],\n            additionalIpConfigurations: [{\n                name: \"test\",\n                privateIpAddressVersion: \"IPv4\",\n            }],\n            publicIps: [{\n                networkResourceGroupName: \"resourceGroup\",\n                name: \"test\",\n            }],\n            applicationSecurityGroups: [{\n                networkResourceGroupName: \"AsgResourceGroup\",\n                name: \"AsgName\",\n            }],\n        }],\n    },\n    osDisk: {\n        sizeGb: 30,\n        type: \"Standard_LRS\",\n    },\n    secrets: [{\n        sourceVaults: [{\n            name: \"string\",\n            resourceGroupName: \"string\",\n        }],\n        vaultCertificates: [{\n            certificateUrl: \"string\",\n            certificateStore: \"string\",\n        }],\n    }],\n    security: {\n        securityType: \"Standard\",\n        secureBootEnabled: false,\n        vtpmEnabled: false,\n    },\n    tags: [{\n        tagKey: \"Creator\",\n        tagValue: \"string\",\n    }],\n    health: {\n        healthCheckTypes: [\"vmState\"],\n        unhealthyDuration: 300,\n        gracePeriod: 120,\n        autoHealing: true,\n    },\n    shouldPersistOsDisk: false,\n    osDiskPersistenceMode: \"reattach\",\n    shouldPersistDataDisks: true,\n    dataDisksPersistenceMode: \"reattach\",\n    shouldPersistNetwork: true,\n    schedulingTasks: [\n        {\n            isEnabled: true,\n            type: \"pause\",\n            cronExpression: \"44 10 * * *\",\n        },\n        {\n            isEnabled: true,\n            type: \"resume\",\n            cronExpression: \"48 10 * * *\",\n        },\n        {\n            isEnabled: true,\n            type: \"recycle\",\n            cronExpression: \"52 10 * * *\",\n        },\n    ],\n    signals: [\n        {\n            type: \"vmReady\",\n            timeout: 20,\n        },\n        {\n            type: \"vmReady\",\n            timeout: 40,\n        },\n    ],\n    proximityPlacementGroups: [{\n        name: \"TestPPG\",\n        resourceGroupName: \"TestResourceGroup\",\n    }],\n    deletes: [{\n        shouldTerminateVm: true,\n        networkShouldDeallocate: true,\n        networkTtlInHours: 0,\n        diskShouldDeallocate: true,\n        diskTtlInHours: 0,\n        snapshotShouldDeallocate: true,\n        snapshotTtlInHours: 0,\n        publicIpShouldDeallocate: true,\n        publicIpTtlInHours: 0,\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\ntest_stateful_node_azure = spotinst.StatefulNodeAzure(\"testStatefulNodeAzure\",\n    region=\"eastus\",\n    resource_group_name=\"spotinst-azure\",\n    description=\"example_stateful_node_azure_description\",\n    strategy=spotinst.StatefulNodeAzureStrategyArgs(\n        draining_timeout=30,\n        fallback_to_on_demand=True,\n        optimization_windows=[\"Tue:19:46-Tue:20:46\"],\n        revert_to_spot=spotinst.StatefulNodeAzureStrategyRevertToSpotArgs(\n            perform_at=\"timeWindow\",\n        ),\n        preferred_life_cycle=\"od\",\n        capacity_reservations=[spotinst.StatefulNodeAzureStrategyCapacityReservationArgs(\n            should_utilize=True,\n            utilization_strategy=\"utilizeOverOD\",\n            capacity_reservation_groups=[spotinst.StatefulNodeAzureStrategyCapacityReservationCapacityReservationGroupArgs(\n                crg_name=\"crg name\",\n                crg_resource_group_name=\"resourceGroupName\",\n                crg_should_prioritize=True,\n            )],\n        )],\n    ),\n    os=\"Linux\",\n    od_sizes=[\n        \"standard_ds1_v2\",\n        \"standard_ds2_v2\",\n    ],\n    spot_sizes=[\n        \"standard_ds1_v2\",\n        \"standard_ds2_v2\",\n    ],\n    preferred_spot_sizes=[\"standard_ds1_v2\"],\n    zones=[\n        \"1\",\n        \"3\",\n    ],\n    preferred_zone=\"1\",\n    custom_data=\"\",\n    shutdown_script=\"\",\n    user_data=\"\",\n    vm_name=\"VMName\",\n    boot_diagnostics=[spotinst.StatefulNodeAzureBootDiagnosticArgs(\n        is_enabled=True,\n        storage_url=\"https://.blob.core.windows.net/test\",\n        type=\"unmanaged\",\n    )],\n    data_disks=[\n        spotinst.StatefulNodeAzureDataDiskArgs(\n            size_gb=1,\n            lun=1,\n            type=\"Standard_LRS\",\n        ),\n        spotinst.StatefulNodeAzureDataDiskArgs(\n            size_gb=10,\n            lun=2,\n            type=\"Standard_LRS\",\n        ),\n    ],\n    extensions=[spotinst.StatefulNodeAzureExtensionArgs(\n        name=\"extensionName\",\n        type=\"customScript\",\n        publisher=\"Microsoft.Azure.Extensions\",\n        api_version=\"2.0\",\n        minor_version_auto_upgrade=True,\n        protected_settings={\n            \"script\": \"IyEvYmluL2Jhc2gKZWNobyAibmlyIiA+IC9ob29uaXIudHh0Cg==\",\n        },\n    )],\n    image=spotinst.StatefulNodeAzureImageArgs(\n        marketplace_images=[spotinst.StatefulNodeAzureImageMarketplaceImageArgs(\n            publisher=\"Canonical\",\n            offer=\"UbuntuServer\",\n            sku=\"16.04-LTS\",\n            version=\"latest\",\n        )],\n    ),\n    load_balancers=[spotinst.StatefulNodeAzureLoadBalancerArgs(\n        type=\"loadBalancer\",\n        resource_group_name=\"testResourceGroup\",\n        name=\"testLoadBalancer\",\n        sku=\"Standard\",\n        backend_pool_names=[\n            \"testBackendPool1\",\n            \"testBackendPool2\",\n        ],\n    )],\n    login=spotinst.StatefulNodeAzureLoginArgs(\n        user_name=\"admin\",\n        ssh_public_key=\"33a2s1f3g5a1df5g1ad3f2g1adfg56dfg==\",\n    ),\n    managed_service_identities=[spotinst.StatefulNodeAzureManagedServiceIdentityArgs(\n        name=\"mySI2\",\n        resource_group_name=\"myResourceGroup\",\n    )],\n    network=spotinst.StatefulNodeAzureNetworkArgs(\n        network_resource_group_name=\"subnetResourceGroup\",\n        virtual_network_name=\"vname\",\n        network_interfaces=[spotinst.StatefulNodeAzureNetworkNetworkInterfaceArgs(\n            is_primary=True,\n            subnet_name=\"testSubnet\",\n            assign_public_ip=True,\n            public_ip_sku=\"Standard\",\n            network_security_groups=[spotinst.StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroupArgs(\n                network_resource_group_name=\"test\",\n                name=\"test\",\n            )],\n            enable_ip_forwarding=True,\n            private_ip_addresses=[\"172.23.4.20\"],\n            additional_ip_configurations=[spotinst.StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfigurationArgs(\n                name=\"test\",\n                private_ip_address_version=\"IPv4\",\n            )],\n            public_ips=[spotinst.StatefulNodeAzureNetworkNetworkInterfacePublicIpArgs(\n                network_resource_group_name=\"resourceGroup\",\n                name=\"test\",\n            )],\n            application_security_groups=[spotinst.StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroupArgs(\n                network_resource_group_name=\"AsgResourceGroup\",\n                name=\"AsgName\",\n            )],\n        )],\n    ),\n    os_disk=spotinst.StatefulNodeAzureOsDiskArgs(\n        size_gb=30,\n        type=\"Standard_LRS\",\n    ),\n    secrets=[spotinst.StatefulNodeAzureSecretArgs(\n        source_vaults=[spotinst.StatefulNodeAzureSecretSourceVaultArgs(\n            name=\"string\",\n            resource_group_name=\"string\",\n        )],\n        vault_certificates=[spotinst.StatefulNodeAzureSecretVaultCertificateArgs(\n            certificate_url=\"string\",\n            certificate_store=\"string\",\n        )],\n    )],\n    security=spotinst.StatefulNodeAzureSecurityArgs(\n        security_type=\"Standard\",\n        secure_boot_enabled=False,\n        vtpm_enabled=False,\n    ),\n    tags=[spotinst.StatefulNodeAzureTagArgs(\n        tag_key=\"Creator\",\n        tag_value=\"string\",\n    )],\n    health=spotinst.StatefulNodeAzureHealthArgs(\n        health_check_types=[\"vmState\"],\n        unhealthy_duration=300,\n        grace_period=120,\n        auto_healing=True,\n    ),\n    should_persist_os_disk=False,\n    os_disk_persistence_mode=\"reattach\",\n    should_persist_data_disks=True,\n    data_disks_persistence_mode=\"reattach\",\n    should_persist_network=True,\n    scheduling_tasks=[\n        spotinst.StatefulNodeAzureSchedulingTaskArgs(\n            is_enabled=True,\n            type=\"pause\",\n            cron_expression=\"44 10 * * *\",\n        ),\n        spotinst.StatefulNodeAzureSchedulingTaskArgs(\n            is_enabled=True,\n            type=\"resume\",\n            cron_expression=\"48 10 * * *\",\n        ),\n        spotinst.StatefulNodeAzureSchedulingTaskArgs(\n            is_enabled=True,\n            type=\"recycle\",\n            cron_expression=\"52 10 * * *\",\n        ),\n    ],\n    signals=[\n        spotinst.StatefulNodeAzureSignalArgs(\n            type=\"vmReady\",\n            timeout=20,\n        ),\n        spotinst.StatefulNodeAzureSignalArgs(\n            type=\"vmReady\",\n            timeout=40,\n        ),\n    ],\n    proximity_placement_groups=[spotinst.StatefulNodeAzureProximityPlacementGroupArgs(\n        name=\"TestPPG\",\n        resource_group_name=\"TestResourceGroup\",\n    )],\n    deletes=[spotinst.StatefulNodeAzureDeleteArgs(\n        should_terminate_vm=True,\n        network_should_deallocate=True,\n        network_ttl_in_hours=0,\n        disk_should_deallocate=True,\n        disk_ttl_in_hours=0,\n        snapshot_should_deallocate=True,\n        snapshot_ttl_in_hours=0,\n        public_ip_should_deallocate=True,\n        public_ip_ttl_in_hours=0,\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testStatefulNodeAzure = new SpotInst.StatefulNodeAzure(\"testStatefulNodeAzure\", new()\n    {\n        Region = \"eastus\",\n        ResourceGroupName = \"spotinst-azure\",\n        Description = \"example_stateful_node_azure_description\",\n        Strategy = new SpotInst.Inputs.StatefulNodeAzureStrategyArgs\n        {\n            DrainingTimeout = 30,\n            FallbackToOnDemand = true,\n            OptimizationWindows = new[]\n            {\n                \"Tue:19:46-Tue:20:46\",\n            },\n            RevertToSpot = new SpotInst.Inputs.StatefulNodeAzureStrategyRevertToSpotArgs\n            {\n                PerformAt = \"timeWindow\",\n            },\n            PreferredLifeCycle = \"od\",\n            CapacityReservations = new[]\n            {\n                new SpotInst.Inputs.StatefulNodeAzureStrategyCapacityReservationArgs\n                {\n                    ShouldUtilize = true,\n                    UtilizationStrategy = \"utilizeOverOD\",\n                    CapacityReservationGroups = new[]\n                    {\n                        new SpotInst.Inputs.StatefulNodeAzureStrategyCapacityReservationCapacityReservationGroupArgs\n                        {\n                            CrgName = \"crg name\",\n                            CrgResourceGroupName = \"resourceGroupName\",\n                            CrgShouldPrioritize = true,\n                        },\n                    },\n                },\n            },\n        },\n        Os = \"Linux\",\n        OdSizes = new[]\n        {\n            \"standard_ds1_v2\",\n            \"standard_ds2_v2\",\n        },\n        SpotSizes = new[]\n        {\n            \"standard_ds1_v2\",\n            \"standard_ds2_v2\",\n        },\n        PreferredSpotSizes = new[]\n        {\n            \"standard_ds1_v2\",\n        },\n        Zones = new[]\n        {\n            \"1\",\n            \"3\",\n        },\n        PreferredZone = \"1\",\n        CustomData = \"\",\n        ShutdownScript = \"\",\n        UserData = \"\",\n        VmName = \"VMName\",\n        BootDiagnostics = new[]\n        {\n            new SpotInst.Inputs.StatefulNodeAzureBootDiagnosticArgs\n            {\n                IsEnabled = true,\n                StorageUrl = \"https://.blob.core.windows.net/test\",\n                Type = \"unmanaged\",\n            },\n        },\n        DataDisks = new[]\n        {\n            new SpotInst.Inputs.StatefulNodeAzureDataDiskArgs\n            {\n                SizeGb = 1,\n                Lun = 1,\n                Type = \"Standard_LRS\",\n            },\n            new SpotInst.Inputs.StatefulNodeAzureDataDiskArgs\n            {\n                SizeGb = 10,\n                Lun = 2,\n                Type = \"Standard_LRS\",\n            },\n        },\n        Extensions = new[]\n        {\n            new SpotInst.Inputs.StatefulNodeAzureExtensionArgs\n            {\n                Name = \"extensionName\",\n                Type = \"customScript\",\n                Publisher = \"Microsoft.Azure.Extensions\",\n                ApiVersion = \"2.0\",\n                MinorVersionAutoUpgrade = true,\n                ProtectedSettings = \n                {\n                    { \"script\", \"IyEvYmluL2Jhc2gKZWNobyAibmlyIiA+IC9ob29uaXIudHh0Cg==\" },\n                },\n            },\n        },\n        Image = new SpotInst.Inputs.StatefulNodeAzureImageArgs\n        {\n            MarketplaceImages = new[]\n            {\n                new SpotInst.Inputs.StatefulNodeAzureImageMarketplaceImageArgs\n                {\n                    Publisher = \"Canonical\",\n                    Offer = \"UbuntuServer\",\n                    Sku = \"16.04-LTS\",\n                    Version = \"latest\",\n                },\n            },\n        },\n        LoadBalancers = new[]\n        {\n            new SpotInst.Inputs.StatefulNodeAzureLoadBalancerArgs\n            {\n                Type = \"loadBalancer\",\n                ResourceGroupName = \"testResourceGroup\",\n                Name = \"testLoadBalancer\",\n                Sku = \"Standard\",\n                BackendPoolNames = new[]\n                {\n                    \"testBackendPool1\",\n                    \"testBackendPool2\",\n                },\n            },\n        },\n        Login = new SpotInst.Inputs.StatefulNodeAzureLoginArgs\n        {\n            UserName = \"admin\",\n            SshPublicKey = \"33a2s1f3g5a1df5g1ad3f2g1adfg56dfg==\",\n        },\n        ManagedServiceIdentities = new[]\n        {\n            new SpotInst.Inputs.StatefulNodeAzureManagedServiceIdentityArgs\n            {\n                Name = \"mySI2\",\n                ResourceGroupName = \"myResourceGroup\",\n            },\n        },\n        Network = new SpotInst.Inputs.StatefulNodeAzureNetworkArgs\n        {\n            NetworkResourceGroupName = \"subnetResourceGroup\",\n            VirtualNetworkName = \"vname\",\n            NetworkInterfaces = new[]\n            {\n                new SpotInst.Inputs.StatefulNodeAzureNetworkNetworkInterfaceArgs\n                {\n                    IsPrimary = true,\n                    SubnetName = \"testSubnet\",\n                    AssignPublicIp = true,\n                    PublicIpSku = \"Standard\",\n                    NetworkSecurityGroups = new[]\n                    {\n                        new SpotInst.Inputs.StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroupArgs\n                        {\n                            NetworkResourceGroupName = \"test\",\n                            Name = \"test\",\n                        },\n                    },\n                    EnableIpForwarding = true,\n                    PrivateIpAddresses = new[]\n                    {\n                        \"172.23.4.20\",\n                    },\n                    AdditionalIpConfigurations = new[]\n                    {\n                        new SpotInst.Inputs.StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfigurationArgs\n                        {\n                            Name = \"test\",\n                            PrivateIpAddressVersion = \"IPv4\",\n                        },\n                    },\n                    PublicIps = new[]\n                    {\n                        new SpotInst.Inputs.StatefulNodeAzureNetworkNetworkInterfacePublicIpArgs\n                        {\n                            NetworkResourceGroupName = \"resourceGroup\",\n                            Name = \"test\",\n                        },\n                    },\n                    ApplicationSecurityGroups = new[]\n                    {\n                        new SpotInst.Inputs.StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroupArgs\n                        {\n                            NetworkResourceGroupName = \"AsgResourceGroup\",\n                            Name = \"AsgName\",\n                        },\n                    },\n                },\n            },\n        },\n        OsDisk = new SpotInst.Inputs.StatefulNodeAzureOsDiskArgs\n        {\n            SizeGb = 30,\n            Type = \"Standard_LRS\",\n        },\n        Secrets = new[]\n        {\n            new SpotInst.Inputs.StatefulNodeAzureSecretArgs\n            {\n                SourceVaults = new[]\n                {\n                    new SpotInst.Inputs.StatefulNodeAzureSecretSourceVaultArgs\n                    {\n                        Name = \"string\",\n                        ResourceGroupName = \"string\",\n                    },\n                },\n                VaultCertificates = new[]\n                {\n                    new SpotInst.Inputs.StatefulNodeAzureSecretVaultCertificateArgs\n                    {\n                        CertificateUrl = \"string\",\n                        CertificateStore = \"string\",\n                    },\n                },\n            },\n        },\n        Security = new SpotInst.Inputs.StatefulNodeAzureSecurityArgs\n        {\n            SecurityType = \"Standard\",\n            SecureBootEnabled = false,\n            VtpmEnabled = false,\n        },\n        Tags = new[]\n        {\n            new SpotInst.Inputs.StatefulNodeAzureTagArgs\n            {\n                TagKey = \"Creator\",\n                TagValue = \"string\",\n            },\n        },\n        Health = new SpotInst.Inputs.StatefulNodeAzureHealthArgs\n        {\n            HealthCheckTypes = new[]\n            {\n                \"vmState\",\n            },\n            UnhealthyDuration = 300,\n            GracePeriod = 120,\n            AutoHealing = true,\n        },\n        ShouldPersistOsDisk = false,\n        OsDiskPersistenceMode = \"reattach\",\n        ShouldPersistDataDisks = true,\n        DataDisksPersistenceMode = \"reattach\",\n        ShouldPersistNetwork = true,\n        SchedulingTasks = new[]\n        {\n            new SpotInst.Inputs.StatefulNodeAzureSchedulingTaskArgs\n            {\n                IsEnabled = true,\n                Type = \"pause\",\n                CronExpression = \"44 10 * * *\",\n            },\n            new SpotInst.Inputs.StatefulNodeAzureSchedulingTaskArgs\n            {\n                IsEnabled = true,\n                Type = \"resume\",\n                CronExpression = \"48 10 * * *\",\n            },\n            new SpotInst.Inputs.StatefulNodeAzureSchedulingTaskArgs\n            {\n                IsEnabled = true,\n                Type = \"recycle\",\n                CronExpression = \"52 10 * * *\",\n            },\n        },\n        Signals = new[]\n        {\n            new SpotInst.Inputs.StatefulNodeAzureSignalArgs\n            {\n                Type = \"vmReady\",\n                Timeout = 20,\n            },\n            new SpotInst.Inputs.StatefulNodeAzureSignalArgs\n            {\n                Type = \"vmReady\",\n                Timeout = 40,\n            },\n        },\n        ProximityPlacementGroups = new[]\n        {\n            new SpotInst.Inputs.StatefulNodeAzureProximityPlacementGroupArgs\n            {\n                Name = \"TestPPG\",\n                ResourceGroupName = \"TestResourceGroup\",\n            },\n        },\n        Deletes = new[]\n        {\n            new SpotInst.Inputs.StatefulNodeAzureDeleteArgs\n            {\n                ShouldTerminateVm = true,\n                NetworkShouldDeallocate = true,\n                NetworkTtlInHours = 0,\n                DiskShouldDeallocate = true,\n                DiskTtlInHours = 0,\n                SnapshotShouldDeallocate = true,\n                SnapshotTtlInHours = 0,\n                PublicIpShouldDeallocate = true,\n                PublicIpTtlInHours = 0,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := spotinst.NewStatefulNodeAzure(ctx, \"testStatefulNodeAzure\", \u0026spotinst.StatefulNodeAzureArgs{\n\t\t\tRegion:            pulumi.String(\"eastus\"),\n\t\t\tResourceGroupName: pulumi.String(\"spotinst-azure\"),\n\t\t\tDescription:       pulumi.String(\"example_stateful_node_azure_description\"),\n\t\t\tStrategy: \u0026spotinst.StatefulNodeAzureStrategyArgs{\n\t\t\t\tDrainingTimeout:    pulumi.Int(30),\n\t\t\t\tFallbackToOnDemand: pulumi.Bool(true),\n\t\t\t\tOptimizationWindows: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"Tue:19:46-Tue:20:46\"),\n\t\t\t\t},\n\t\t\t\tRevertToSpot: \u0026spotinst.StatefulNodeAzureStrategyRevertToSpotArgs{\n\t\t\t\t\tPerformAt: pulumi.String(\"timeWindow\"),\n\t\t\t\t},\n\t\t\t\tPreferredLifeCycle: pulumi.String(\"od\"),\n\t\t\t\tCapacityReservations: spotinst.StatefulNodeAzureStrategyCapacityReservationArray{\n\t\t\t\t\t\u0026spotinst.StatefulNodeAzureStrategyCapacityReservationArgs{\n\t\t\t\t\t\tShouldUtilize:       pulumi.Bool(true),\n\t\t\t\t\t\tUtilizationStrategy: pulumi.String(\"utilizeOverOD\"),\n\t\t\t\t\t\tCapacityReservationGroups: spotinst.StatefulNodeAzureStrategyCapacityReservationCapacityReservationGroupArray{\n\t\t\t\t\t\t\t\u0026spotinst.StatefulNodeAzureStrategyCapacityReservationCapacityReservationGroupArgs{\n\t\t\t\t\t\t\t\tCrgName:              pulumi.String(\"crg name\"),\n\t\t\t\t\t\t\t\tCrgResourceGroupName: pulumi.String(\"resourceGroupName\"),\n\t\t\t\t\t\t\t\tCrgShouldPrioritize:  pulumi.Bool(true),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tOs: pulumi.String(\"Linux\"),\n\t\t\tOdSizes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"standard_ds1_v2\"),\n\t\t\t\tpulumi.String(\"standard_ds2_v2\"),\n\t\t\t},\n\t\t\tSpotSizes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"standard_ds1_v2\"),\n\t\t\t\tpulumi.String(\"standard_ds2_v2\"),\n\t\t\t},\n\t\t\tPreferredSpotSizes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"standard_ds1_v2\"),\n\t\t\t},\n\t\t\tZones: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1\"),\n\t\t\t\tpulumi.String(\"3\"),\n\t\t\t},\n\t\t\tPreferredZone:  pulumi.String(\"1\"),\n\t\t\tCustomData:     pulumi.String(\"\"),\n\t\t\tShutdownScript: pulumi.String(\"\"),\n\t\t\tUserData:       pulumi.String(\"\"),\n\t\t\tVmName:         pulumi.String(\"VMName\"),\n\t\t\tBootDiagnostics: spotinst.StatefulNodeAzureBootDiagnosticArray{\n\t\t\t\t\u0026spotinst.StatefulNodeAzureBootDiagnosticArgs{\n\t\t\t\t\tIsEnabled:  pulumi.Bool(true),\n\t\t\t\t\tStorageUrl: pulumi.String(\"https://.blob.core.windows.net/test\"),\n\t\t\t\t\tType:       pulumi.String(\"unmanaged\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDataDisks: spotinst.StatefulNodeAzureDataDiskArray{\n\t\t\t\t\u0026spotinst.StatefulNodeAzureDataDiskArgs{\n\t\t\t\t\tSizeGb: pulumi.Int(1),\n\t\t\t\t\tLun:    pulumi.Int(1),\n\t\t\t\t\tType:   pulumi.String(\"Standard_LRS\"),\n\t\t\t\t},\n\t\t\t\t\u0026spotinst.StatefulNodeAzureDataDiskArgs{\n\t\t\t\t\tSizeGb: pulumi.Int(10),\n\t\t\t\t\tLun:    pulumi.Int(2),\n\t\t\t\t\tType:   pulumi.String(\"Standard_LRS\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tExtensions: spotinst.StatefulNodeAzureExtensionArray{\n\t\t\t\t\u0026spotinst.StatefulNodeAzureExtensionArgs{\n\t\t\t\t\tName:                    pulumi.String(\"extensionName\"),\n\t\t\t\t\tType:                    pulumi.String(\"customScript\"),\n\t\t\t\t\tPublisher:               pulumi.String(\"Microsoft.Azure.Extensions\"),\n\t\t\t\t\tApiVersion:              pulumi.String(\"2.0\"),\n\t\t\t\t\tMinorVersionAutoUpgrade: pulumi.Bool(true),\n\t\t\t\t\tProtectedSettings: pulumi.Map{\n\t\t\t\t\t\t\"script\": pulumi.Any(\"IyEvYmluL2Jhc2gKZWNobyAibmlyIiA+IC9ob29uaXIudHh0Cg==\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tImage: \u0026spotinst.StatefulNodeAzureImageArgs{\n\t\t\t\tMarketplaceImages: spotinst.StatefulNodeAzureImageMarketplaceImageArray{\n\t\t\t\t\t\u0026spotinst.StatefulNodeAzureImageMarketplaceImageArgs{\n\t\t\t\t\t\tPublisher: pulumi.String(\"Canonical\"),\n\t\t\t\t\t\tOffer:     pulumi.String(\"UbuntuServer\"),\n\t\t\t\t\t\tSku:       pulumi.String(\"16.04-LTS\"),\n\t\t\t\t\t\tVersion:   pulumi.String(\"latest\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tLoadBalancers: spotinst.StatefulNodeAzureLoadBalancerArray{\n\t\t\t\t\u0026spotinst.StatefulNodeAzureLoadBalancerArgs{\n\t\t\t\t\tType:              pulumi.String(\"loadBalancer\"),\n\t\t\t\t\tResourceGroupName: pulumi.String(\"testResourceGroup\"),\n\t\t\t\t\tName:              pulumi.String(\"testLoadBalancer\"),\n\t\t\t\t\tSku:               pulumi.String(\"Standard\"),\n\t\t\t\t\tBackendPoolNames: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"testBackendPool1\"),\n\t\t\t\t\t\tpulumi.String(\"testBackendPool2\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tLogin: \u0026spotinst.StatefulNodeAzureLoginArgs{\n\t\t\t\tUserName:     pulumi.String(\"admin\"),\n\t\t\t\tSshPublicKey: pulumi.String(\"33a2s1f3g5a1df5g1ad3f2g1adfg56dfg==\"),\n\t\t\t},\n\t\t\tManagedServiceIdentities: spotinst.StatefulNodeAzureManagedServiceIdentityArray{\n\t\t\t\t\u0026spotinst.StatefulNodeAzureManagedServiceIdentityArgs{\n\t\t\t\t\tName:              pulumi.String(\"mySI2\"),\n\t\t\t\t\tResourceGroupName: pulumi.String(\"myResourceGroup\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tNetwork: \u0026spotinst.StatefulNodeAzureNetworkArgs{\n\t\t\t\tNetworkResourceGroupName: pulumi.String(\"subnetResourceGroup\"),\n\t\t\t\tVirtualNetworkName:       pulumi.String(\"vname\"),\n\t\t\t\tNetworkInterfaces: spotinst.StatefulNodeAzureNetworkNetworkInterfaceArray{\n\t\t\t\t\t\u0026spotinst.StatefulNodeAzureNetworkNetworkInterfaceArgs{\n\t\t\t\t\t\tIsPrimary:      pulumi.Bool(true),\n\t\t\t\t\t\tSubnetName:     pulumi.String(\"testSubnet\"),\n\t\t\t\t\t\tAssignPublicIp: pulumi.Bool(true),\n\t\t\t\t\t\tPublicIpSku:    pulumi.String(\"Standard\"),\n\t\t\t\t\t\tNetworkSecurityGroups: spotinst.StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroupArray{\n\t\t\t\t\t\t\t\u0026spotinst.StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroupArgs{\n\t\t\t\t\t\t\t\tNetworkResourceGroupName: pulumi.String(\"test\"),\n\t\t\t\t\t\t\t\tName:                     pulumi.String(\"test\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tEnableIpForwarding: pulumi.Bool(true),\n\t\t\t\t\t\tPrivateIpAddresses: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"172.23.4.20\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tAdditionalIpConfigurations: spotinst.StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfigurationArray{\n\t\t\t\t\t\t\t\u0026spotinst.StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfigurationArgs{\n\t\t\t\t\t\t\t\tName:                    pulumi.String(\"test\"),\n\t\t\t\t\t\t\t\tPrivateIpAddressVersion: pulumi.String(\"IPv4\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tPublicIps: spotinst.StatefulNodeAzureNetworkNetworkInterfacePublicIpArray{\n\t\t\t\t\t\t\t\u0026spotinst.StatefulNodeAzureNetworkNetworkInterfacePublicIpArgs{\n\t\t\t\t\t\t\t\tNetworkResourceGroupName: pulumi.String(\"resourceGroup\"),\n\t\t\t\t\t\t\t\tName:                     pulumi.String(\"test\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tApplicationSecurityGroups: spotinst.StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroupArray{\n\t\t\t\t\t\t\t\u0026spotinst.StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroupArgs{\n\t\t\t\t\t\t\t\tNetworkResourceGroupName: pulumi.String(\"AsgResourceGroup\"),\n\t\t\t\t\t\t\t\tName:                     pulumi.String(\"AsgName\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tOsDisk: \u0026spotinst.StatefulNodeAzureOsDiskArgs{\n\t\t\t\tSizeGb: pulumi.Int(30),\n\t\t\t\tType:   pulumi.String(\"Standard_LRS\"),\n\t\t\t},\n\t\t\tSecrets: spotinst.StatefulNodeAzureSecretArray{\n\t\t\t\t\u0026spotinst.StatefulNodeAzureSecretArgs{\n\t\t\t\t\tSourceVaults: spotinst.StatefulNodeAzureSecretSourceVaultArray{\n\t\t\t\t\t\t\u0026spotinst.StatefulNodeAzureSecretSourceVaultArgs{\n\t\t\t\t\t\t\tName:              pulumi.String(\"string\"),\n\t\t\t\t\t\t\tResourceGroupName: pulumi.String(\"string\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tVaultCertificates: spotinst.StatefulNodeAzureSecretVaultCertificateArray{\n\t\t\t\t\t\t\u0026spotinst.StatefulNodeAzureSecretVaultCertificateArgs{\n\t\t\t\t\t\t\tCertificateUrl:   pulumi.String(\"string\"),\n\t\t\t\t\t\t\tCertificateStore: pulumi.String(\"string\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tSecurity: \u0026spotinst.StatefulNodeAzureSecurityArgs{\n\t\t\t\tSecurityType:      pulumi.String(\"Standard\"),\n\t\t\t\tSecureBootEnabled: pulumi.Bool(false),\n\t\t\t\tVtpmEnabled:       pulumi.Bool(false),\n\t\t\t},\n\t\t\tTags: spotinst.StatefulNodeAzureTagArray{\n\t\t\t\t\u0026spotinst.StatefulNodeAzureTagArgs{\n\t\t\t\t\tTagKey:   pulumi.String(\"Creator\"),\n\t\t\t\t\tTagValue: pulumi.String(\"string\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tHealth: \u0026spotinst.StatefulNodeAzureHealthArgs{\n\t\t\t\tHealthCheckTypes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"vmState\"),\n\t\t\t\t},\n\t\t\t\tUnhealthyDuration: pulumi.Int(300),\n\t\t\t\tGracePeriod:       pulumi.Int(120),\n\t\t\t\tAutoHealing:       pulumi.Bool(true),\n\t\t\t},\n\t\t\tShouldPersistOsDisk:      pulumi.Bool(false),\n\t\t\tOsDiskPersistenceMode:    pulumi.String(\"reattach\"),\n\t\t\tShouldPersistDataDisks:   pulumi.Bool(true),\n\t\t\tDataDisksPersistenceMode: pulumi.String(\"reattach\"),\n\t\t\tShouldPersistNetwork:     pulumi.Bool(true),\n\t\t\tSchedulingTasks: spotinst.StatefulNodeAzureSchedulingTaskArray{\n\t\t\t\t\u0026spotinst.StatefulNodeAzureSchedulingTaskArgs{\n\t\t\t\t\tIsEnabled:      pulumi.Bool(true),\n\t\t\t\t\tType:           pulumi.String(\"pause\"),\n\t\t\t\t\tCronExpression: pulumi.String(\"44 10 * * *\"),\n\t\t\t\t},\n\t\t\t\t\u0026spotinst.StatefulNodeAzureSchedulingTaskArgs{\n\t\t\t\t\tIsEnabled:      pulumi.Bool(true),\n\t\t\t\t\tType:           pulumi.String(\"resume\"),\n\t\t\t\t\tCronExpression: pulumi.String(\"48 10 * * *\"),\n\t\t\t\t},\n\t\t\t\t\u0026spotinst.StatefulNodeAzureSchedulingTaskArgs{\n\t\t\t\t\tIsEnabled:      pulumi.Bool(true),\n\t\t\t\t\tType:           pulumi.String(\"recycle\"),\n\t\t\t\t\tCronExpression: pulumi.String(\"52 10 * * *\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSignals: spotinst.StatefulNodeAzureSignalArray{\n\t\t\t\t\u0026spotinst.StatefulNodeAzureSignalArgs{\n\t\t\t\t\tType:    pulumi.String(\"vmReady\"),\n\t\t\t\t\tTimeout: pulumi.Int(20),\n\t\t\t\t},\n\t\t\t\t\u0026spotinst.StatefulNodeAzureSignalArgs{\n\t\t\t\t\tType:    pulumi.String(\"vmReady\"),\n\t\t\t\t\tTimeout: pulumi.Int(40),\n\t\t\t\t},\n\t\t\t},\n\t\t\tProximityPlacementGroups: spotinst.StatefulNodeAzureProximityPlacementGroupArray{\n\t\t\t\t\u0026spotinst.StatefulNodeAzureProximityPlacementGroupArgs{\n\t\t\t\t\tName:              pulumi.String(\"TestPPG\"),\n\t\t\t\t\tResourceGroupName: pulumi.String(\"TestResourceGroup\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDeletes: spotinst.StatefulNodeAzureDeleteArray{\n\t\t\t\t\u0026spotinst.StatefulNodeAzureDeleteArgs{\n\t\t\t\t\tShouldTerminateVm:        pulumi.Bool(true),\n\t\t\t\t\tNetworkShouldDeallocate:  pulumi.Bool(true),\n\t\t\t\t\tNetworkTtlInHours:        pulumi.Int(0),\n\t\t\t\t\tDiskShouldDeallocate:     pulumi.Bool(true),\n\t\t\t\t\tDiskTtlInHours:           pulumi.Int(0),\n\t\t\t\t\tSnapshotShouldDeallocate: pulumi.Bool(true),\n\t\t\t\t\tSnapshotTtlInHours:       pulumi.Int(0),\n\t\t\t\t\tPublicIpShouldDeallocate: pulumi.Bool(true),\n\t\t\t\t\tPublicIpTtlInHours:       pulumi.Int(0),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.StatefulNodeAzure;\nimport com.pulumi.spotinst.StatefulNodeAzureArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureStrategyArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureStrategyRevertToSpotArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureBootDiagnosticArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureDataDiskArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureExtensionArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureImageArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureLoadBalancerArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureLoginArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureManagedServiceIdentityArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureNetworkArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureOsDiskArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureSecretArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureSecurityArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureTagArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureHealthArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureSchedulingTaskArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureSignalArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureProximityPlacementGroupArgs;\nimport com.pulumi.spotinst.inputs.StatefulNodeAzureDeleteArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testStatefulNodeAzure = new StatefulNodeAzure(\"testStatefulNodeAzure\", StatefulNodeAzureArgs.builder()        \n            .region(\"eastus\")\n            .resourceGroupName(\"spotinst-azure\")\n            .description(\"example_stateful_node_azure_description\")\n            .strategy(StatefulNodeAzureStrategyArgs.builder()\n                .drainingTimeout(30)\n                .fallbackToOnDemand(true)\n                .optimizationWindows(\"Tue:19:46-Tue:20:46\")\n                .revertToSpot(StatefulNodeAzureStrategyRevertToSpotArgs.builder()\n                    .performAt(\"timeWindow\")\n                    .build())\n                .preferredLifeCycle(\"od\")\n                .capacityReservations(StatefulNodeAzureStrategyCapacityReservationArgs.builder()\n                    .shouldUtilize(true)\n                    .utilizationStrategy(\"utilizeOverOD\")\n                    .capacityReservationGroups(StatefulNodeAzureStrategyCapacityReservationCapacityReservationGroupArgs.builder()\n                        .crgName(\"crg name\")\n                        .crgResourceGroupName(\"resourceGroupName\")\n                        .crgShouldPrioritize(true)\n                        .build())\n                    .build())\n                .build())\n            .os(\"Linux\")\n            .odSizes(            \n                \"standard_ds1_v2\",\n                \"standard_ds2_v2\")\n            .spotSizes(            \n                \"standard_ds1_v2\",\n                \"standard_ds2_v2\")\n            .preferredSpotSizes(\"standard_ds1_v2\")\n            .zones(            \n                \"1\",\n                \"3\")\n            .preferredZone(\"1\")\n            .customData(\"\")\n            .shutdownScript(\"\")\n            .userData(\"\")\n            .vmName(\"VMName\")\n            .bootDiagnostics(StatefulNodeAzureBootDiagnosticArgs.builder()\n                .isEnabled(true)\n                .storageUrl(\"https://.blob.core.windows.net/test\")\n                .type(\"unmanaged\")\n                .build())\n            .dataDisks(            \n                StatefulNodeAzureDataDiskArgs.builder()\n                    .sizeGb(1)\n                    .lun(1)\n                    .type(\"Standard_LRS\")\n                    .build(),\n                StatefulNodeAzureDataDiskArgs.builder()\n                    .sizeGb(10)\n                    .lun(2)\n                    .type(\"Standard_LRS\")\n                    .build())\n            .extensions(StatefulNodeAzureExtensionArgs.builder()\n                .name(\"extensionName\")\n                .type(\"customScript\")\n                .publisher(\"Microsoft.Azure.Extensions\")\n                .apiVersion(\"2.0\")\n                .minorVersionAutoUpgrade(true)\n                .protectedSettings(Map.of(\"script\", \"IyEvYmluL2Jhc2gKZWNobyAibmlyIiA+IC9ob29uaXIudHh0Cg==\"))\n                .build())\n            .image(StatefulNodeAzureImageArgs.builder()\n                .marketplaceImages(StatefulNodeAzureImageMarketplaceImageArgs.builder()\n                    .publisher(\"Canonical\")\n                    .offer(\"UbuntuServer\")\n                    .sku(\"16.04-LTS\")\n                    .version(\"latest\")\n                    .build())\n                .build())\n            .loadBalancers(StatefulNodeAzureLoadBalancerArgs.builder()\n                .type(\"loadBalancer\")\n                .resourceGroupName(\"testResourceGroup\")\n                .name(\"testLoadBalancer\")\n                .sku(\"Standard\")\n                .backendPoolNames(                \n                    \"testBackendPool1\",\n                    \"testBackendPool2\")\n                .build())\n            .login(StatefulNodeAzureLoginArgs.builder()\n                .userName(\"admin\")\n                .sshPublicKey(\"33a2s1f3g5a1df5g1ad3f2g1adfg56dfg==\")\n                .build())\n            .managedServiceIdentities(StatefulNodeAzureManagedServiceIdentityArgs.builder()\n                .name(\"mySI2\")\n                .resourceGroupName(\"myResourceGroup\")\n                .build())\n            .network(StatefulNodeAzureNetworkArgs.builder()\n                .networkResourceGroupName(\"subnetResourceGroup\")\n                .virtualNetworkName(\"vname\")\n                .networkInterfaces(StatefulNodeAzureNetworkNetworkInterfaceArgs.builder()\n                    .isPrimary(true)\n                    .subnetName(\"testSubnet\")\n                    .assignPublicIp(true)\n                    .publicIpSku(\"Standard\")\n                    .networkSecurityGroups(StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroupArgs.builder()\n                        .networkResourceGroupName(\"test\")\n                        .name(\"test\")\n                        .build())\n                    .enableIpForwarding(true)\n                    .privateIpAddresses(\"172.23.4.20\")\n                    .additionalIpConfigurations(StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfigurationArgs.builder()\n                        .name(\"test\")\n                        .privateIpAddressVersion(\"IPv4\")\n                        .build())\n                    .publicIps(StatefulNodeAzureNetworkNetworkInterfacePublicIpArgs.builder()\n                        .networkResourceGroupName(\"resourceGroup\")\n                        .name(\"test\")\n                        .build())\n                    .applicationSecurityGroups(StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroupArgs.builder()\n                        .networkResourceGroupName(\"AsgResourceGroup\")\n                        .name(\"AsgName\")\n                        .build())\n                    .build())\n                .build())\n            .osDisk(StatefulNodeAzureOsDiskArgs.builder()\n                .sizeGb(30)\n                .type(\"Standard_LRS\")\n                .build())\n            .secrets(StatefulNodeAzureSecretArgs.builder()\n                .sourceVaults(StatefulNodeAzureSecretSourceVaultArgs.builder()\n                    .name(\"string\")\n                    .resourceGroupName(\"string\")\n                    .build())\n                .vaultCertificates(StatefulNodeAzureSecretVaultCertificateArgs.builder()\n                    .certificateUrl(\"string\")\n                    .certificateStore(\"string\")\n                    .build())\n                .build())\n            .security(StatefulNodeAzureSecurityArgs.builder()\n                .securityType(\"Standard\")\n                .secureBootEnabled(false)\n                .vtpmEnabled(false)\n                .build())\n            .tags(StatefulNodeAzureTagArgs.builder()\n                .tagKey(\"Creator\")\n                .tagValue(\"string\")\n                .build())\n            .health(StatefulNodeAzureHealthArgs.builder()\n                .healthCheckTypes(\"vmState\")\n                .unhealthyDuration(300)\n                .gracePeriod(120)\n                .autoHealing(true)\n                .build())\n            .shouldPersistOsDisk(false)\n            .osDiskPersistenceMode(\"reattach\")\n            .shouldPersistDataDisks(true)\n            .dataDisksPersistenceMode(\"reattach\")\n            .shouldPersistNetwork(true)\n            .schedulingTasks(            \n                StatefulNodeAzureSchedulingTaskArgs.builder()\n                    .isEnabled(true)\n                    .type(\"pause\")\n                    .cronExpression(\"44 10 * * *\")\n                    .build(),\n                StatefulNodeAzureSchedulingTaskArgs.builder()\n                    .isEnabled(true)\n                    .type(\"resume\")\n                    .cronExpression(\"48 10 * * *\")\n                    .build(),\n                StatefulNodeAzureSchedulingTaskArgs.builder()\n                    .isEnabled(true)\n                    .type(\"recycle\")\n                    .cronExpression(\"52 10 * * *\")\n                    .build())\n            .signals(            \n                StatefulNodeAzureSignalArgs.builder()\n                    .type(\"vmReady\")\n                    .timeout(20)\n                    .build(),\n                StatefulNodeAzureSignalArgs.builder()\n                    .type(\"vmReady\")\n                    .timeout(40)\n                    .build())\n            .proximityPlacementGroups(StatefulNodeAzureProximityPlacementGroupArgs.builder()\n                .name(\"TestPPG\")\n                .resourceGroupName(\"TestResourceGroup\")\n                .build())\n            .deletes(StatefulNodeAzureDeleteArgs.builder()\n                .shouldTerminateVm(true)\n                .networkShouldDeallocate(true)\n                .networkTtlInHours(0)\n                .diskShouldDeallocate(true)\n                .diskTtlInHours(0)\n                .snapshotShouldDeallocate(true)\n                .snapshotTtlInHours(0)\n                .publicIpShouldDeallocate(true)\n                .publicIpTtlInHours(0)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testStatefulNodeAzure:\n    type: spotinst:StatefulNodeAzure\n    properties:\n      region: eastus\n      resourceGroupName: spotinst-azure\n      description: example_stateful_node_azure_description\n      strategy: # -------------------------------------------------------------------\n        drainingTimeout: 30\n        fallbackToOnDemand: true\n        optimizationWindows:\n          - Tue:19:46-Tue:20:46\n        revertToSpot:\n          performAt: timeWindow\n        preferredLifeCycle: od\n        capacityReservations:\n          - shouldUtilize: true\n            utilizationStrategy: utilizeOverOD\n            capacityReservationGroups:\n              - crgName: crg name\n                crgResourceGroupName: resourceGroupName\n                crgShouldPrioritize: true\n      # --- COMPUTE -------------------------------------------------------\n      os: Linux\n      odSizes:\n        - standard_ds1_v2\n        - standard_ds2_v2\n      spotSizes:\n        - standard_ds1_v2\n        - standard_ds2_v2\n      preferredSpotSizes:\n        - standard_ds1_v2\n      zones:\n        - '1'\n        - '3'\n      preferredZone: '1'\n      customData:\n      shutdownScript:\n      userData:\n      vmName: VMName # -------------------------------------------------------------------\n      # --- BOOT DIAGNOSTICS ----------------------------------------------\n      bootDiagnostics: # -------------------------------------------------------------------\n        - isEnabled: true\n          storageUrl: https://.blob.core.windows.net/test\n          type: unmanaged\n      # --- DATA DISKS ----------------------------------------------------\n      dataDisks: # -------------------------------------------------------------------\n        - sizeGb: 1\n          lun: 1\n          type: Standard_LRS\n        - sizeGb: 10\n          lun: 2\n          type: Standard_LRS\n      # --- EXTENSIONS ----------------------------------------------------\n      extensions: # -------------------------------------------------------------------\n        - name: extensionName\n          type: customScript\n          publisher: Microsoft.Azure.Extensions\n          apiVersion: '2.0'\n          minorVersionAutoUpgrade: true\n          protectedSettings:\n            script: IyEvYmluL2Jhc2gKZWNobyAibmlyIiA+IC9ob29uaXIudHh0Cg==\n      image: # -------------------------------------------------------------------\n        marketplaceImages:\n          - publisher: Canonical\n            offer: UbuntuServer\n            sku: 16.04-LTS\n            version: latest\n      # --- LOAD BALANCERS ------------------------------------------------\n      loadBalancers: # -------------------------------------------------------------------\n        - type: loadBalancer\n          resourceGroupName: testResourceGroup\n          name: testLoadBalancer\n          sku: Standard\n          backendPoolNames:\n            - testBackendPool1\n            - testBackendPool2\n      login: # -------------------------------------------------------------------\n        userName: admin\n        sshPublicKey: 33a2s1f3g5a1df5g1ad3f2g1adfg56dfg==\n      # --- MANAGED SERVICE IDENTITIES ------------------------------------\n      managedServiceIdentities: # -------------------------------------------------------------------\n        - name: mySI2\n          resourceGroupName: myResourceGroup\n      network: # -------------------------------------------------------------------\n        networkResourceGroupName: subnetResourceGroup\n        virtualNetworkName: vname\n        networkInterfaces:\n          - isPrimary: true\n            subnetName: testSubnet\n            assignPublicIp: true\n            publicIpSku: Standard\n            networkSecurityGroups:\n              - networkResourceGroupName: test\n                name: test\n            enableIpForwarding: true\n            privateIpAddresses:\n              - 172.23.4.20\n            additionalIpConfigurations:\n              - name: test\n                privateIpAddressVersion: IPv4\n            publicIps:\n              - networkResourceGroupName: resourceGroup\n                name: test\n            applicationSecurityGroups:\n              - networkResourceGroupName: AsgResourceGroup\n                name: AsgName\n      osDisk: # -------------------------------------------------------------------\n        sizeGb: 30\n        type: Standard_LRS\n      # --- SECRETS -------------------------------------------------------\n      secrets: # --- Security ------------------------------------------------------\n        - sourceVaults:\n            - name: string\n              resourceGroupName: string\n          vaultCertificates:\n            - certificateUrl: string\n              certificateStore: string\n      security: # -------------------------------------------------------------------\n        securityType: Standard\n        secureBootEnabled: false\n        vtpmEnabled: false\n      # --- TAGS ----------------------------------------------------------\n      tags:\n        - tagKey: Creator\n          tagValue: string\n      health: # -------------------------------------------------------------------\n        healthCheckTypes:\n          - vmState\n        unhealthyDuration: 300\n        gracePeriod: 120\n        autoHealing: true\n      # --- PERSISTENCE ---------------------------------------------------\n      shouldPersistOsDisk: false\n      osDiskPersistenceMode: reattach\n      shouldPersistDataDisks: true\n      dataDisksPersistenceMode: reattach\n      shouldPersistNetwork: true # -------------------------------------------------------------------\n      # --- SCHEDULING TASKS ----------------------------------------------\n      schedulingTasks: # -------------------------------------------------------------------\n        - isEnabled: true\n          type: pause\n          cronExpression: 44 10 * * *\n        - isEnabled: true\n          type: resume\n          cronExpression: 48 10 * * *\n        - isEnabled: true\n          type: recycle\n          cronExpression: 52 10 * * *\n      # --- SIGNALS -------------------------------------------------------\n      signals: # -------------------------------------------------------------------\n        - type: vmReady\n          timeout: 20\n        - type: vmReady\n          timeout: 40\n      # --- PROMXIMITY PLACEMENTS GROUPS -----------------------------------\n      proximityPlacementGroups: # -------------------------------------------------------------------\n        - name: TestPPG\n          resourceGroupName: TestResourceGroup\n      # ---DELETE----------------------------------------------------------\n      deletes:\n        - shouldTerminateVm: true\n          networkShouldDeallocate: true\n          networkTtlInHours: 0\n          diskShouldDeallocate: true\n          diskTtlInHours: 0\n          snapshotShouldDeallocate: true\n          snapshotTtlInHours: 0\n          publicIpShouldDeallocate: true\n          publicIpTtlInHours: 0\n```\n\n# Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) Azure stateful node name.\n* `region` - (Required) The Azure region your stateful node will be created in.\n* `resource_group_name` - (Required) Name of the Resource Group for stateful node.\n* `description` - (Optional) Describe your Azure stateful node.\n\n\u003ca id=\"strategy\"\u003e\u003c/a\u003e\n{{% /example %}}\n{{% /examples %}}\n## Strategy\n\n* `strategy` - (Required) Strategy for stateful node.\n  * `draining_timeout` - (Optional, Default `120`) Time (in seconds) to allow the VM be drained from incoming TCP connections and detached from MLB before terminating it during a scale down operation.\n  * `fallback_to_on_demand` - (Required) In case of no spots available, Stateful Node will launch an On-demand instance instead.\n  * `optimization_windows` - (Optional) Valid format: \"ddd:hh:mm-ddd:hh:mm (day:hour(0-23):minute(0-59))\", not empty if revertToSpot.performAt = timeWindow.\n  * `preferred_life_cycle` - (Optional, Enum `\"od\", \"spot\"`, Default `\"spot\"`) The desired type of VM.\n  * `revert_to_spot` - (Optional) Hold settings for strategy correction - replacing On-Demand for Spot VMs.\n    * `perform_at` - (Required, Enum `\"timeWindow\", \"never\", \"always\"`, Default `\"always\"`) Settings for maintenance strategy.\n  * `capacity_reservation` - (Optional) On-demand Capacity Reservation group enables you to reserve Compute capacity in an Azure region or an Availability Zone for any duration of time. [CRG can only be created on the Azure end.](https://learn.microsoft.com/en-us/azure/virtual-machines/capacity-reservation-create)\n    * `should_utilize` - (Required) Determines whether capacity reservations should be utilized.\n    * `utilization_strategy` - (Required, Enum `\"utilizeOverSpot\", \"utilizeOverOD\"`) The priority requested for using CRG. This value will determine if CRG is used ahead of spot VMs or On-demand VMs. (`\"utilizeOverOD\"`- If picked, we will use CRG only in case On demand should be launched. `\"utilizeOverSpot\"`- CRG will be preferred over Spot. Only after CRG is fully used, spot VMs can be used.)\n    * `capacity_reservation_groups` - (Optional) List of the desired CRGs to use under the associated Azure subscription. When null we will utilize any available reservation that matches the launch specification.\n      * `crg_name` - (Required) The name of the CRG.\n      * `crg_resource_group_name` - (Required) Azure resource group name\n      * `crg_should_prioritize` - The desired CRG to utilize ahead of other CRGs in the subscription.\n\n\u003ca id=\"compute\"\u003e\u003c/a\u003e\n## Compute\n\n* `os` - (Required, Enum `\"Linux\", \"Windows\"`) Type of operating system.\n* `od_sizes` - (Required) Available On-Demand sizes.\n* `spot_sizes` - (Required) Available Spot-VM sizes.\n* `preferred_spot_sizes` - (Optional) Prioritize Spot VM sizes when launching Spot VMs for the group. If set, must be a sublist of compute.vmSizes.spotSizes.\n* `zones` - (Optional, Enum `\"1\", \"2\", \"3\"`) List of Azure Availability Zones in the defined region. If not defined, Virtual machines will be launched regionally.\n* `preferred_zone` - (Optional, Enum `\"1\", \"2\", \"3\"`) The AZ to prioritize when launching VMs. If no markets are available in the Preferred AZ, VMs are launched in the non-preferred AZ. Must be a sublist of compute.zones.\n* `custom_data` - (Optional) This value will hold the YAML in base64 and will be executed upon VM launch.\n* `shutdown_script` - (Optional) Shutdown script for the stateful node. Value should be passed as a string encoded at Base64 only.\n* `user_data` - (Optional) Define a set of scripts or other metadata that's inserted to an Azure virtual machine at provision time. (Base64 encoded)\n* `vm_name` - (Optional) Set a VM name that will be persisted throughout the entire node lifecycle.\n\n\u003ca id=\"boot_diagnostics\"\u003e\u003c/a\u003e\n## Boot Diagnostics\n\n* `boot_diagnostics`\n  * `is_enabled` - (Optional) Allows you to enable and disable the configuration of boot diagnostics at launch.\n  * `storage_url` - (Optional) The storage URI that is used if a type is unmanaged. The storage URI must follow the blob storage URI format (\"https://.blob.core.windows.net/\"). StorageUri is required if the type is unmanaged. StorageUri must be ‘null’ in case the boot diagnostics type is managed.\n  * `type` - (Optional, Enum `\"managed\", \"unmanaged\"`) Defines the storage type on VM launch in Azure.\n\n\u003ca id=\"data_disks\"\u003e\u003c/a\u003e\n## Data Disks\n\n* `data_disk` - (Optional) The definitions of data disks that will be created and attached to the stateful node's VM.\n  * `size_gb` - (Required) The size of the data disk in GB, required if dataDisks is specified.\n  * `lun` - (Required) The LUN of the data disk.\n  * `type` - (Required, Enum `\"Standard_LRS\", \"Premium_LRS\", \"StandardSSD_LRS\", \"UltraSSD_LRS\"`) The type of the data disk.\n\n\u003ca id=\"extensions\"\u003e\u003c/a\u003e\n## Extensions\n\n* `extension` - (Optional) An object for an azure extension.\n  * `name` - (Required) Required on compute.launchSpecification.extensions object.\n  * `type` - (Required) Required on compute.launchSpecification.extensions object.\n  * `publisher` - (Required) Required on compute.launchSpecification.extensions object.\n  * `api_version` - (Required) The API version of the extension. Required if extension specified.\n  * `minor_version_auto_upgrade` - (Required) Required on compute.launchSpecification.extensions object.\n  * `protected_settings` - (Optional) Object for protected settings.\n  * `public_settings` - (Optional) Object for public settings.\n  \n\u003ca id=\"image\"\u003e\u003c/a\u003e\n## Image\n\n* `image`\n  * `marketplace_image` - (Optional) Select an image from Azure's Marketplace image catalogue. Required if the custom image or gallery image are not specified.\n    * `publisher` - (Required) Image publisher.\n    * `offer` - (Required) Image offer.\n    * `sku` - (Required) Image Stock Keeping Unit, which is the specific version of the image.\n    * `version` - (Required, Default `\"latest\"`) Image's version. if version not provided we use \"latest\".\n  * `gallery_image` - (Optional) Gallery image definitions. Required if custom image or marketplace image are not specified.\n    * `gallery_resource_group_name` - (Required) The resource group name for gallery image.\n    * `gallery_name` - (Required) Name of the gallery.\n    * `image_name` - (Required) Name of the gallery image.\n    * `version_name` - (Required) Image's version. Can be in the format x.x.x or 'latest'.\n  * `custom_image` - (Optional) Custom image definitions. Required if marketplace image or gallery image are not specified.\n    * `custom_image_resource_group_name` - (Required) The resource group name for custom image.\n    * `name` - (Required) The name of the custom image.\n\n\u003ca id=\"load balancer\"\u003e\u003c/a\u003e\n## Load Balancer\n\n* `load_balancer` - (Optional) Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.\n  * `type` - (Required, Enum `\"loadBalancer\", \"applicationGateway\"`) The type of load balancer.\n  * `resource_group_name` - (Required) The Resource Group name of the Load Balancer.\n  * `name` - (Required) Name of the Application Gateway/Load Balancer.\n  * `sku` - (Optional)\n    * if type is `\"LoadBalancer\"` then possible values are `“Standard\", \"Basic”`.\n    * If ApplicationGateway then possible values are\n      `“Standard_Large”, “Standard_Medium”, “Standard_Small”, “Standard_v2\", “WAF_Large”, “WAF_Medium\", “WAF_v2\"`.\n  * `backend_pool_names` - (Optional) Name of the Backend Pool to register the Stateful Node VMs to. Each Backend Pool is a separate load balancer. Required if Type is APPLICATION_GATEWAY.\n\n\u003ca id=\"login\"\u003e\u003c/a\u003e\n## Login\n\n* `login` - (Required) Set admin access for accessing your VMs. Password/SSH is required for Linux.\n  * `user_name` - (Required) username for admin access to VMs.\n  * `ssh_public_key` - (Optional) SSH for admin access to Linux VMs. Optional for Linux.\n  * `password` - (Optional) Password for admin access to Windows VMs. Required for Windows.\n\n\u003ca id=\"managed_service_identities\"\u003e\u003c/a\u003e\n## Managed Service Identities\n\n* `managed_service_identities` - (Optional) Add a user-assigned managed identity to the Stateful Node's VM.\n  * `name` - (Required) name of the managed identity.\n  * `resource_group_name` - (Required) The Resource Group that the user-assigned managed identity resides in.\n\n\u003ca id=\"proximity_placement_groups\"\u003e\u003c/a\u003e\n## Proximity Placement Groups\n\n* `proximity_placement_groups` - (Optional) Defines the proximity placement group in which the VM will be launched.\n  * `name` - (Required) name of the proximity placement group.\n  * `resource_group_name` - (Required) The Resource Group name of the proximity placement group.\n\n\u003ca id=\"network\"\u003e\u003c/a\u003e\n## Network\n\n* `network` - (Required) Define the Virtual Network and Subnet for your Stateful Node.\n  * `network_resource_group_name` - (Required) Vnet Resource Group Name.\n  * `virtual_network_name` - (Required) Virtual Network.\n  * `network_interface` - (Required) Define a network interface\n    * `is_primary` - (Required) Defines whether the network interface is primary or not.\n    * `subnet_name` - (Required) Subnet name.\n    * `assign_public_ip` - (Optional) Assign public IP.\n    * `public_ip_sku` - (Optional) Required if assignPublicIp=true values=[Standard/Basic].\n    * `network_security_group` - (Optional) Network Security Group.\n      * `network_resource_group_name` - (Required) Requires valid security group name.\n      * `name` - (Required) Requires valid resource group name.\n    * `enable_ip_forwarding` - (Optional) Enable IP Forwarding.\n    * `private_ip_addresses` - (Optional) A list with unique items that every item is a valid IP.\n    * `additional_ip_configurations` - (Optional) Additional configuration of network interface.\n      * `name` - (Required) Configuration name.\n      * `private_ip_address_version` - (Required, Enum `\"IPv4\", \"IPv6\"` Default `\"IPv4\"`) Version of the private IP address.\n    * `public_ips` - (Optional) Defined a pool of Public Ips (from Azure), that will be associated to the network interface. We will associate one public ip per instance until the pool is exhausted, in which case, we will create a new one.\n      * `resource_group_name` - (Required) The resource group of the public ip.\n      * `name` - (Required) - The name of the public ip.\n    * `application_security_groups` - (Optional) Network Security Group.\n      * `resource_group_name` - (Required) Requires valid security group name.\n      * `name` - (Required) Requires valid resource group name.\n\n\u003ca id=\"os_disk\"\u003e\u003c/a\u003e\n## OS Disk\n\n* `os_disk` - (Optional) Specify OS disk specification other than default.\n  * `size_gb` - (Optional, Default `\"30\"`) The size of the data disk in GB.\n  * `type` - (Required, Enum `\"Standard_LRS\", \"Premium_LRS\", \"StandardSSD_LRS\"`) The type of the OS disk.\n\n\u003ca id=\"secret\"\u003e\u003c/a\u003e\n## Secret\n\n* `secret` - (Optional) Set of certificates that should be installed on the VM.\n  * `source_vault` - (Required) The key vault reference, contains the required certificates.\n    * `name` - (Required) The name of the key vault.\n    * `resource_group_name` - (Required) The resource group name of the key vault.\n  * `vault_certificates` - (Required) The required certificate references.\n    * `certificate_url` - (Optional) The URL of the certificate under the key vault.\n    * `certificate_store` - (Required) The certificate store directory the VM. The directory is created in the LocalMachine account.\n      * This field is required only when using Windows OS type\n      * This field must be ‘null’ when the OS type is Linux\n\n\u003ca id=\"secutiry\"\u003e\u003c/a\u003e\n## Security\n\n* `security` - (Optional) Specifies the Security related profile settings for the virtual machine.\n    * `secure_boot_enabled` - (Optional) Specifies whether secure boot should be enabled on the virtual machine.\n    * `security_type` - (Optional) Enum: `\"Standard\", \"TrustedLaunch\"` Security type refers to the different security features of a virtual machine. Security features like Trusted launch virtual machines help to improve the security of Azure generation 2 virtual machines.\n    * `vtpm_enabled` - (Optional) Specifies whether vTPM should be enabled on the virtual machine.\n\n\n\u003ca id=\"tag\"\u003e\u003c/a\u003e\n## Tag\n\n* `tag` - (Optional) Unique Key-Value pair for all Stateful Node Resources.\n  * `tag_key` - (Optional) Tag Key for Stateful Node Resources.\n  * `tag_value` - (Optional) Tag Value for Stateful Node Resources.\n\n\u003ca id=\"health\"\u003e\u003c/a\u003e\n## Health\n\n* `health` - (Optional) Set the auto healing preferences for unhealthy VMs.\n  * `health_check_types` - (Optional, Enum `\"vmState\", \"applicationGateway\"`) Healthcheck to use to validate VM health.\n  * `unhealthy_duration` - (Optional) Amount of time to be unhealthy before a replacement is triggered.\n  * `auto_healing` - (Required) Enable Autohealing of unhealthy VMs.\n  * `grace_period` - (Optional) Period of time to wait for VM to reach healthiness before monitoring for unhealthiness.\n\n\u003ca id=\"persistence\"\u003e\u003c/a\u003e\n## Persistence\n\n* `should_persist_os_disk` - (Required) Should persist os disk.\n* `os_disk_persistence_mode` - (Optional, Enum `\"reattach\", \"onLaunch\"`)\n* `should_persist_data_disks` - (Required) Should persist data disks.\n* `data_disks_persistence_mode` - (Optional, Enum `\"reattach\", \"onLaunch\"`)\n* `should_persist_network` - (Required) Should persist network.\n\n\u003ca id=\"scheduling_tasks\"\u003e\u003c/a\u003e\n## Scheduling Tasks\n\n* `scheduling_task` - (Optional) Scheduling settings object for stateful node.\n  * `is_enabled` - (Required) Is scheduled task enabled for stateful node.\n  * `type` - (Required, Enum `\"pause\", \"resume\", \"recycle\") The type of the scheduled task\n  * `cron_expression` (Required) A expression which describes when to execute the scheduled task (UTC).\n\n\u003ca id=\"signals\"\u003e\u003c/a\u003e\n## Signals\n\n* `signal` - (Optional) A signal object defined for the stateful node.\n  * `type` - (Required, Enum `\"vmReady\", \"vmReadyToShutdown\"`) The type of the signal defined for the stateful node.\n  * `timeout` - (Required, Default `\"1800\"`) The timeout in seconds to hold the vm until a signal is sent. If no signal is sent the vm will be replaced (vmReady) or we will terminate the vm (vmReadyToShutdown) after the timeout.\n\n---\n\n\u003ca id=\"attach_data_disk\"\u003e\u003c/a\u003e\n## Attach Data Disk\n\n* `attach_data_disk` - (Optional) Create a new data disk and attach it to the stateful node.\n  * `data_disk_name` - (Required) The name of the created data disk.\n  * `data_disk_resource_group_name` - (Required) The resource group name in which the data disk will be created.\n  * `storage_account_type` - (Required, Enum `\"Standard_LRS\", \"Premium_LRS\", \"StandardSSD_LRS\", \"UltraSSD_LRS\"`) The type of the data disk.\n  * `size_gb` - (Required) The size of the data disk in GB, Required if dataDisks is specified.\n  * `zone` - (Optional, Enum `\"1\", \"2\", \"3\"`) The Availability Zone in which the data disk will be created. If not defined, the data disk will be created regionally.\n  * `lun` - (Optional, Default `\"orginal\"`) The LUN of the data disk. If not defined, the LUN will be set in order.\n\n\u003ca id=\"detach_data_disk\"\u003e\u003c/a\u003e\n## Detach Data Disk\n\n* `detach_data_disk` - (Optional) Detach a data disk from a stateful node.\n  * `data_disk_name` - (Required) The name of the detached data disk.\n  * `data_disk_resource_group_name` - (Required) The resource group name in which the data disk exists.\n  * `should_deallocate` - (Required) Indicates whether to delete the data disk in addition to detach.\n  * `ttl_in_hours` - (Required, Default `\"0\"`) Hours to keep the disk alive before deletion.\n\n\u003ca id=\"update_state\"\u003e\u003c/a\u003e\n## Update State\n\n* `update_state` - (Optional) Update the stateful node state.\n  * `state` - (Required, Enum `\"pause\", \"resume\", \"recycle\"`) New state for the stateful node.\n\n\u003ca id=\"import_vm\"\u003e\u003c/a\u003e\n## Import VM\n\n* `import_vm` - (Optional) Import an Azure VM and create a stateful node by providing a node configuration.\n  * `resource_group_name` - (Required) Name of the Resource Group for Stateful Node.\n  * `original_vm_name` - (Required) Azure Import Stateful Node Name.\n  * `draining_timeout` - (Optional) Hours to keep resources alive.\n  * `resources_retention_time` - (Optional) Hours to keep resources alive.\n\n\u003ca id=\"delete\"\u003e\u003c/a\u003e\n## Deallocation Config\n\n* `delete` - (Required) Specify deallocation parameters for stateful node deletion.\n    * `should_terminate_vm` - (Required) Indicates whether to delete the stateful node's VM.\n    * `network_should_deallocate` - (Required) Indicates whether to delete the stateful node's network resources.\n    * `network_ttl_in_hours` - (Optional, Default: 96) Hours to keep the network resource alive before deletion.\n    * `disk_should_deallocate` - (Required) Indicates whether to delete the stateful node's disk resources.\n    * `disk_ttl_in_hours` - (Optional, Default: 96) Hours to keep the disk resource alive before deletion.\n    * `snapshot_should_deallocate` - (Required) Indicates whether to delete the stateful node's snapshot resources.\n    * `snapshot_ttl_in_hours` - (Optional, Default: 96) Hours to keep the snapshots alive before deletion.\n    * `public_ip_should_deallocate` - (Required) Indicates whether to delete the stateful node's public ip resources.\n    * `public_ip_ttl_in_hours` - (Optional, Default: 96) Hours to keep the public ip alive before deletion.\n",
            "properties": {
                "attachDataDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureAttachDataDisk:StatefulNodeAzureAttachDataDisk"
                    }
                },
                "bootDiagnostics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureBootDiagnostic:StatefulNodeAzureBootDiagnostic"
                    }
                },
                "customData": {
                    "type": "string"
                },
                "dataDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureDataDisk:StatefulNodeAzureDataDisk"
                    }
                },
                "dataDisksPersistenceMode": {
                    "type": "string"
                },
                "deletes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureDelete:StatefulNodeAzureDelete"
                    }
                },
                "description": {
                    "type": "string"
                },
                "detachDataDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureDetachDataDisk:StatefulNodeAzureDetachDataDisk"
                    }
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureExtension:StatefulNodeAzureExtension"
                    }
                },
                "health": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureHealth:StatefulNodeAzureHealth"
                },
                "image": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureImage:StatefulNodeAzureImage"
                },
                "importVms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureImportVm:StatefulNodeAzureImportVm"
                    }
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureLoadBalancer:StatefulNodeAzureLoadBalancer"
                    }
                },
                "login": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureLogin:StatefulNodeAzureLogin"
                },
                "managedServiceIdentities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureManagedServiceIdentity:StatefulNodeAzureManagedServiceIdentity"
                    }
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureNetwork:StatefulNodeAzureNetwork"
                },
                "odSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "os": {
                    "type": "string"
                },
                "osDisk": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureOsDisk:StatefulNodeAzureOsDisk"
                },
                "osDiskPersistenceMode": {
                    "type": "string"
                },
                "preferredSpotSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "preferredZone": {
                    "type": "string"
                },
                "proximityPlacementGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureProximityPlacementGroup:StatefulNodeAzureProximityPlacementGroup"
                    }
                },
                "region": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "schedulingTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureSchedulingTask:StatefulNodeAzureSchedulingTask"
                    }
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureSecret:StatefulNodeAzureSecret"
                    }
                },
                "security": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureSecurity:StatefulNodeAzureSecurity"
                },
                "shouldPersistDataDisks": {
                    "type": "boolean"
                },
                "shouldPersistNetwork": {
                    "type": "boolean"
                },
                "shouldPersistOsDisk": {
                    "type": "boolean"
                },
                "shouldPersistVm": {
                    "type": "boolean"
                },
                "shutdownScript": {
                    "type": "string"
                },
                "signals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureSignal:StatefulNodeAzureSignal"
                    }
                },
                "spotSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "strategy": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureStrategy:StatefulNodeAzureStrategy"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureTag:StatefulNodeAzureTag"
                    }
                },
                "updateStates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureUpdateState:StatefulNodeAzureUpdateState"
                    }
                },
                "userData": {
                    "type": "string"
                },
                "vmName": {
                    "type": "string"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "bootDiagnostics",
                "customData",
                "dataDisksPersistenceMode",
                "description",
                "extensions",
                "health",
                "loadBalancers",
                "managedServiceIdentities",
                "name",
                "odSizes",
                "os",
                "osDiskPersistenceMode",
                "preferredSpotSizes",
                "preferredZone",
                "proximityPlacementGroups",
                "region",
                "resourceGroupName",
                "schedulingTasks",
                "shouldPersistDataDisks",
                "shouldPersistNetwork",
                "shouldPersistOsDisk",
                "shouldPersistVm",
                "shutdownScript",
                "signals",
                "spotSizes",
                "strategy",
                "tags",
                "userData"
            ],
            "inputProperties": {
                "attachDataDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureAttachDataDisk:StatefulNodeAzureAttachDataDisk"
                    }
                },
                "bootDiagnostics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureBootDiagnostic:StatefulNodeAzureBootDiagnostic"
                    }
                },
                "customData": {
                    "type": "string"
                },
                "dataDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureDataDisk:StatefulNodeAzureDataDisk"
                    }
                },
                "dataDisksPersistenceMode": {
                    "type": "string"
                },
                "deletes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureDelete:StatefulNodeAzureDelete"
                    }
                },
                "description": {
                    "type": "string"
                },
                "detachDataDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureDetachDataDisk:StatefulNodeAzureDetachDataDisk"
                    }
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureExtension:StatefulNodeAzureExtension"
                    }
                },
                "health": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureHealth:StatefulNodeAzureHealth"
                },
                "image": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureImage:StatefulNodeAzureImage"
                },
                "importVms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureImportVm:StatefulNodeAzureImportVm"
                    }
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureLoadBalancer:StatefulNodeAzureLoadBalancer"
                    }
                },
                "login": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureLogin:StatefulNodeAzureLogin"
                },
                "managedServiceIdentities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureManagedServiceIdentity:StatefulNodeAzureManagedServiceIdentity"
                    }
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureNetwork:StatefulNodeAzureNetwork"
                },
                "odSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "os": {
                    "type": "string"
                },
                "osDisk": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureOsDisk:StatefulNodeAzureOsDisk"
                },
                "osDiskPersistenceMode": {
                    "type": "string"
                },
                "preferredSpotSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "preferredZone": {
                    "type": "string"
                },
                "proximityPlacementGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureProximityPlacementGroup:StatefulNodeAzureProximityPlacementGroup"
                    }
                },
                "region": {
                    "type": "string"
                },
                "resourceGroupName": {
                    "type": "string"
                },
                "schedulingTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureSchedulingTask:StatefulNodeAzureSchedulingTask"
                    }
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureSecret:StatefulNodeAzureSecret"
                    }
                },
                "security": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureSecurity:StatefulNodeAzureSecurity"
                },
                "shouldPersistDataDisks": {
                    "type": "boolean"
                },
                "shouldPersistNetwork": {
                    "type": "boolean"
                },
                "shouldPersistOsDisk": {
                    "type": "boolean"
                },
                "shouldPersistVm": {
                    "type": "boolean"
                },
                "shutdownScript": {
                    "type": "string"
                },
                "signals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureSignal:StatefulNodeAzureSignal"
                    }
                },
                "spotSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "strategy": {
                    "$ref": "#/types/spotinst:index/StatefulNodeAzureStrategy:StatefulNodeAzureStrategy"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureTag:StatefulNodeAzureTag"
                    }
                },
                "updateStates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureUpdateState:StatefulNodeAzureUpdateState"
                    }
                },
                "userData": {
                    "type": "string"
                },
                "vmName": {
                    "type": "string"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "odSizes",
                "os",
                "region",
                "resourceGroupName",
                "shouldPersistDataDisks",
                "shouldPersistNetwork",
                "shouldPersistOsDisk",
                "spotSizes",
                "strategy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StatefulNodeAzure resources.\n",
                "properties": {
                    "attachDataDisks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureAttachDataDisk:StatefulNodeAzureAttachDataDisk"
                        }
                    },
                    "bootDiagnostics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureBootDiagnostic:StatefulNodeAzureBootDiagnostic"
                        }
                    },
                    "customData": {
                        "type": "string"
                    },
                    "dataDisks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureDataDisk:StatefulNodeAzureDataDisk"
                        }
                    },
                    "dataDisksPersistenceMode": {
                        "type": "string"
                    },
                    "deletes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureDelete:StatefulNodeAzureDelete"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "detachDataDisks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureDetachDataDisk:StatefulNodeAzureDetachDataDisk"
                        }
                    },
                    "extensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureExtension:StatefulNodeAzureExtension"
                        }
                    },
                    "health": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureHealth:StatefulNodeAzureHealth"
                    },
                    "image": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureImage:StatefulNodeAzureImage"
                    },
                    "importVms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureImportVm:StatefulNodeAzureImportVm"
                        }
                    },
                    "loadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureLoadBalancer:StatefulNodeAzureLoadBalancer"
                        }
                    },
                    "login": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureLogin:StatefulNodeAzureLogin"
                    },
                    "managedServiceIdentities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureManagedServiceIdentity:StatefulNodeAzureManagedServiceIdentity"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureNetwork:StatefulNodeAzureNetwork"
                    },
                    "odSizes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "os": {
                        "type": "string"
                    },
                    "osDisk": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureOsDisk:StatefulNodeAzureOsDisk"
                    },
                    "osDiskPersistenceMode": {
                        "type": "string"
                    },
                    "preferredSpotSizes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "preferredZone": {
                        "type": "string"
                    },
                    "proximityPlacementGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureProximityPlacementGroup:StatefulNodeAzureProximityPlacementGroup"
                        }
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceGroupName": {
                        "type": "string"
                    },
                    "schedulingTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureSchedulingTask:StatefulNodeAzureSchedulingTask"
                        }
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureSecret:StatefulNodeAzureSecret"
                        }
                    },
                    "security": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureSecurity:StatefulNodeAzureSecurity"
                    },
                    "shouldPersistDataDisks": {
                        "type": "boolean"
                    },
                    "shouldPersistNetwork": {
                        "type": "boolean"
                    },
                    "shouldPersistOsDisk": {
                        "type": "boolean"
                    },
                    "shouldPersistVm": {
                        "type": "boolean"
                    },
                    "shutdownScript": {
                        "type": "string"
                    },
                    "signals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureSignal:StatefulNodeAzureSignal"
                        }
                    },
                    "spotSizes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "strategy": {
                        "$ref": "#/types/spotinst:index/StatefulNodeAzureStrategy:StatefulNodeAzureStrategy"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureTag:StatefulNodeAzureTag"
                        }
                    },
                    "updateStates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:index/StatefulNodeAzureUpdateState:StatefulNodeAzureUpdateState"
                        }
                    },
                    "userData": {
                        "type": "string"
                    },
                    "vmName": {
                        "type": "string"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "spotinst:index/subscription:Subscription": {
            "description": "Provides a Spotinst subscription resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\n// Create a Subscription\nconst default_subscription = new spotinst.Subscription(\"default-subscription\", {\n    endpoint: \"http://endpoint.com\",\n    eventType: \"AWS_EC2_INSTANCE_LAUNCH\",\n    format: {\n        event: \"%event%\",\n        instance_id: \"%instance-id%\",\n        resource_id: \"%resource-id%\",\n        resource_name: \"%resource-name%\",\n        tags: \"foo,baz,baz\",\n    },\n    protocol: \"http\",\n    resourceId: spotinst_elastigroup_aws[\"my-eg\"].id,\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\n# Create a Subscription\ndefault_subscription = spotinst.Subscription(\"default-subscription\",\n    endpoint=\"http://endpoint.com\",\n    event_type=\"AWS_EC2_INSTANCE_LAUNCH\",\n    format={\n        \"event\": \"%event%\",\n        \"instance_id\": \"%instance-id%\",\n        \"resource_id\": \"%resource-id%\",\n        \"resource_name\": \"%resource-name%\",\n        \"tags\": \"foo,baz,baz\",\n    },\n    protocol=\"http\",\n    resource_id=spotinst_elastigroup_aws[\"my-eg\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a Subscription\n    var default_subscription = new SpotInst.Subscription(\"default-subscription\", new()\n    {\n        Endpoint = \"http://endpoint.com\",\n        EventType = \"AWS_EC2_INSTANCE_LAUNCH\",\n        Format = \n        {\n            { \"event\", \"%event%\" },\n            { \"instance_id\", \"%instance-id%\" },\n            { \"resource_id\", \"%resource-id%\" },\n            { \"resource_name\", \"%resource-name%\" },\n            { \"tags\", \"foo,baz,baz\" },\n        },\n        Protocol = \"http\",\n        ResourceId = spotinst_elastigroup_aws.My_eg.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := spotinst.NewSubscription(ctx, \"default-subscription\", \u0026spotinst.SubscriptionArgs{\n\t\t\tEndpoint:  pulumi.String(\"http://endpoint.com\"),\n\t\t\tEventType: pulumi.String(\"AWS_EC2_INSTANCE_LAUNCH\"),\n\t\t\tFormat: pulumi.Map{\n\t\t\t\t\"event\":         pulumi.Any(\"%event%\"),\n\t\t\t\t\"instance_id\":   pulumi.Any(\"%instance-id%\"),\n\t\t\t\t\"resource_id\":   pulumi.Any(\"%resource-id%\"),\n\t\t\t\t\"resource_name\": pulumi.Any(\"%resource-name%\"),\n\t\t\t\t\"tags\":          pulumi.Any(\"foo,baz,baz\"),\n\t\t\t},\n\t\t\tProtocol:   pulumi.String(\"http\"),\n\t\t\tResourceId: pulumi.Any(spotinst_elastigroup_aws.MyEg.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.Subscription;\nimport com.pulumi.spotinst.SubscriptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var default_subscription = new Subscription(\"default-subscription\", SubscriptionArgs.builder()        \n            .endpoint(\"http://endpoint.com\")\n            .eventType(\"AWS_EC2_INSTANCE_LAUNCH\")\n            .format(Map.ofEntries(\n                Map.entry(\"event\", \"%event%\"),\n                Map.entry(\"instance_id\", \"%instance-id%\"),\n                Map.entry(\"resource_id\", \"%resource-id%\"),\n                Map.entry(\"resource_name\", \"%resource-name%\"),\n                Map.entry(\"tags\", \"foo,baz,baz\")\n            ))\n            .protocol(\"http\")\n            .resourceId(spotinst_elastigroup_aws.my-eg().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a Subscription\n  default-subscription:\n    type: spotinst:Subscription\n    properties:\n      endpoint: http://endpoint.com\n      eventType: AWS_EC2_INSTANCE_LAUNCH\n      format:\n        event: '%event%'\n        instance_id: '%instance-id%'\n        resource_id: '%resource-id%'\n        resource_name: '%resource-name%'\n        tags: foo,baz,baz\n      protocol: http\n      resourceId: ${spotinst_elastigroup_aws\"my-eg\"[%!s(MISSING)].id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "The endpoint the notification will be sent to. url in case of `\"http\"`/`\"https\"`/`\"web\"`, email address in case of `\"email\"`/`\"email-json\"` and sns-topic-arn in case of `\"aws-sns\"`.\n"
                },
                "eventType": {
                    "type": "string",
                    "description": "The event to send the notification when triggered. Valid values: `\"AWS_EC2_INSTANCE_TERMINATE\"`, `\"AWS_EC2_INSTANCE_TERMINATED\"`, `\"AWS_EC2_INSTANCE_LAUNCH\"`, `\"AWS_EC2_INSTANCE_READY_SIGNAL_TIMEOUT\"`, `\"AWS_EC2_CANT_SPIN_OD\"`, `\"AWS_EC2_INSTANCE_UNHEALTHY_IN_ELB\"`, `\"GROUP_ROLL_FAILED\"`, `\"GROUP_ROLL_FINISHED\"`,\n`\"CANT_SCALE_UP_GROUP_MAX_CAPACITY\"`,\n`\"GROUP_UPDATED\"`,\n`\"AWS_EMR_PROVISION_TIMEOUT\"`,\n`\"GROUP_BEANSTALK_INIT_READY\"`,\n`\"AZURE_VM_TERMINATED\"`,\n`\"AZURE_VM_TERMINATE\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_PAUSING\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_RESUMING\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_RECYCLING\"`,`\"AWS_EC2_MANAGED_INSTANCE_DELETING\"`.\nOcean Events:`\"CLUSTER_ROLL_FINISHED\"`,`\"GROUP_ROLL_FAILED\"`,`\"OCEAN_CANT_SCALE_UP_MAX_RESOURCES\"`\n`\"OCEAN_LAUNCH_SPEC_CANT_SCALE_UP_MAX_INSTANCES\"`,`\"OCEAN_K8S_NODE_REMOVED\"`.\n"
                },
                "format": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "The format of the notification content (JSON Format - Key+Value). Valid Values : `\"instance-id\"`, `\"event\"`, `\"resource-id\"`, `\"resource-name\"`, `\"subnet-id\"`, `\"availability-zone\"`, `\"reason\"`, `\"private-ip\"`, `\"launchspec-id\"`\nExample: {\"event\": `\"event\"`, `\"resourceId\"`: `\"resource-id\"`, `\"resourceName\"`: `\"resource-name\"`\", `\"myCustomKey\"`: `\"My content is set here\"` }\nDefault: {`\"event\"`: `\"\u003cevent\u003e\"`, `\"instanceId\"`: `\"\u003cinstance-id\u003e\"`, `\"resourceId\"`: `\"\u003cresource-id\u003e\"`, `\"resourceName\"`: `\"\u003cresource-name\u003e\"` }.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol to send the notification. Valid values: `\"email\"`, `\"email-json\"`, `\"aws-sns\"`, `\"web\"`. \nThe following values are deprecated: `\"http\"` , `\"https\"`\nYou can use the generic `\"web\"` protocol instead.\n`\"aws-sns\"` is only supported with AWS provider\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "Spotinst Resource id (Elastigroup or Ocean ID).\n"
                }
            },
            "required": [
                "endpoint",
                "eventType",
                "protocol",
                "resourceId"
            ],
            "inputProperties": {
                "endpoint": {
                    "type": "string",
                    "description": "The endpoint the notification will be sent to. url in case of `\"http\"`/`\"https\"`/`\"web\"`, email address in case of `\"email\"`/`\"email-json\"` and sns-topic-arn in case of `\"aws-sns\"`.\n"
                },
                "eventType": {
                    "type": "string",
                    "description": "The event to send the notification when triggered. Valid values: `\"AWS_EC2_INSTANCE_TERMINATE\"`, `\"AWS_EC2_INSTANCE_TERMINATED\"`, `\"AWS_EC2_INSTANCE_LAUNCH\"`, `\"AWS_EC2_INSTANCE_READY_SIGNAL_TIMEOUT\"`, `\"AWS_EC2_CANT_SPIN_OD\"`, `\"AWS_EC2_INSTANCE_UNHEALTHY_IN_ELB\"`, `\"GROUP_ROLL_FAILED\"`, `\"GROUP_ROLL_FINISHED\"`,\n`\"CANT_SCALE_UP_GROUP_MAX_CAPACITY\"`,\n`\"GROUP_UPDATED\"`,\n`\"AWS_EMR_PROVISION_TIMEOUT\"`,\n`\"GROUP_BEANSTALK_INIT_READY\"`,\n`\"AZURE_VM_TERMINATED\"`,\n`\"AZURE_VM_TERMINATE\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_PAUSING\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_RESUMING\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_RECYCLING\"`,`\"AWS_EC2_MANAGED_INSTANCE_DELETING\"`.\nOcean Events:`\"CLUSTER_ROLL_FINISHED\"`,`\"GROUP_ROLL_FAILED\"`,`\"OCEAN_CANT_SCALE_UP_MAX_RESOURCES\"`\n`\"OCEAN_LAUNCH_SPEC_CANT_SCALE_UP_MAX_INSTANCES\"`,`\"OCEAN_K8S_NODE_REMOVED\"`.\n"
                },
                "format": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "The format of the notification content (JSON Format - Key+Value). Valid Values : `\"instance-id\"`, `\"event\"`, `\"resource-id\"`, `\"resource-name\"`, `\"subnet-id\"`, `\"availability-zone\"`, `\"reason\"`, `\"private-ip\"`, `\"launchspec-id\"`\nExample: {\"event\": `\"event\"`, `\"resourceId\"`: `\"resource-id\"`, `\"resourceName\"`: `\"resource-name\"`\", `\"myCustomKey\"`: `\"My content is set here\"` }\nDefault: {`\"event\"`: `\"\u003cevent\u003e\"`, `\"instanceId\"`: `\"\u003cinstance-id\u003e\"`, `\"resourceId\"`: `\"\u003cresource-id\u003e\"`, `\"resourceName\"`: `\"\u003cresource-name\u003e\"` }.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol to send the notification. Valid values: `\"email\"`, `\"email-json\"`, `\"aws-sns\"`, `\"web\"`. \nThe following values are deprecated: `\"http\"` , `\"https\"`\nYou can use the generic `\"web\"` protocol instead.\n`\"aws-sns\"` is only supported with AWS provider\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "Spotinst Resource id (Elastigroup or Ocean ID).\n"
                }
            },
            "requiredInputs": [
                "endpoint",
                "eventType",
                "protocol",
                "resourceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Subscription resources.\n",
                "properties": {
                    "endpoint": {
                        "type": "string",
                        "description": "The endpoint the notification will be sent to. url in case of `\"http\"`/`\"https\"`/`\"web\"`, email address in case of `\"email\"`/`\"email-json\"` and sns-topic-arn in case of `\"aws-sns\"`.\n"
                    },
                    "eventType": {
                        "type": "string",
                        "description": "The event to send the notification when triggered. Valid values: `\"AWS_EC2_INSTANCE_TERMINATE\"`, `\"AWS_EC2_INSTANCE_TERMINATED\"`, `\"AWS_EC2_INSTANCE_LAUNCH\"`, `\"AWS_EC2_INSTANCE_READY_SIGNAL_TIMEOUT\"`, `\"AWS_EC2_CANT_SPIN_OD\"`, `\"AWS_EC2_INSTANCE_UNHEALTHY_IN_ELB\"`, `\"GROUP_ROLL_FAILED\"`, `\"GROUP_ROLL_FINISHED\"`,\n`\"CANT_SCALE_UP_GROUP_MAX_CAPACITY\"`,\n`\"GROUP_UPDATED\"`,\n`\"AWS_EMR_PROVISION_TIMEOUT\"`,\n`\"GROUP_BEANSTALK_INIT_READY\"`,\n`\"AZURE_VM_TERMINATED\"`,\n`\"AZURE_VM_TERMINATE\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_PAUSING\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_RESUMING\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_RECYCLING\"`,`\"AWS_EC2_MANAGED_INSTANCE_DELETING\"`.\nOcean Events:`\"CLUSTER_ROLL_FINISHED\"`,`\"GROUP_ROLL_FAILED\"`,`\"OCEAN_CANT_SCALE_UP_MAX_RESOURCES\"`\n`\"OCEAN_LAUNCH_SPEC_CANT_SCALE_UP_MAX_INSTANCES\"`,`\"OCEAN_K8S_NODE_REMOVED\"`.\n"
                    },
                    "format": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "The format of the notification content (JSON Format - Key+Value). Valid Values : `\"instance-id\"`, `\"event\"`, `\"resource-id\"`, `\"resource-name\"`, `\"subnet-id\"`, `\"availability-zone\"`, `\"reason\"`, `\"private-ip\"`, `\"launchspec-id\"`\nExample: {\"event\": `\"event\"`, `\"resourceId\"`: `\"resource-id\"`, `\"resourceName\"`: `\"resource-name\"`\", `\"myCustomKey\"`: `\"My content is set here\"` }\nDefault: {`\"event\"`: `\"\u003cevent\u003e\"`, `\"instanceId\"`: `\"\u003cinstance-id\u003e\"`, `\"resourceId\"`: `\"\u003cresource-id\u003e\"`, `\"resourceName\"`: `\"\u003cresource-name\u003e\"` }.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol to send the notification. Valid values: `\"email\"`, `\"email-json\"`, `\"aws-sns\"`, `\"web\"`. \nThe following values are deprecated: `\"http\"` , `\"https\"`\nYou can use the generic `\"web\"` protocol instead.\n`\"aws-sns\"` is only supported with AWS provider\n"
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "Spotinst Resource id (Elastigroup or Ocean ID).\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:organization/policy:Policy": {
            "description": "Provides a Spotinst access policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst terraformPolicy = new spotinst.organization.Policy(\"terraformPolicy\", {\n    description: \"policy by terraform\",\n    policyContents: [{\n        statements: [\n            {\n                actions: [\"ocean:deleteCluster\"],\n                effect: \"DENY\",\n                resources: [\n                    \"o-abcd1234\",\n                    \"o-defg6789\",\n                ],\n            },\n            {\n                actions: [\"ocean:createCluster\"],\n                effect: \"DENY\",\n                resources: [\n                    \"o-fhau4752\",\n                    \"o-761owf4r3\",\n                ],\n            },\n        ],\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nterraform_policy = spotinst.organization.Policy(\"terraformPolicy\",\n    description=\"policy by terraform\",\n    policy_contents=[spotinst.organization.PolicyPolicyContentArgs(\n        statements=[\n            spotinst.organization.PolicyPolicyContentStatementArgs(\n                actions=[\"ocean:deleteCluster\"],\n                effect=\"DENY\",\n                resources=[\n                    \"o-abcd1234\",\n                    \"o-defg6789\",\n                ],\n            ),\n            spotinst.organization.PolicyPolicyContentStatementArgs(\n                actions=[\"ocean:createCluster\"],\n                effect=\"DENY\",\n                resources=[\n                    \"o-fhau4752\",\n                    \"o-761owf4r3\",\n                ],\n            ),\n        ],\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var terraformPolicy = new SpotInst.Organization.Policy(\"terraformPolicy\", new()\n    {\n        Description = \"policy by terraform\",\n        PolicyContents = new[]\n        {\n            new SpotInst.Organization.Inputs.PolicyPolicyContentArgs\n            {\n                Statements = new[]\n                {\n                    new SpotInst.Organization.Inputs.PolicyPolicyContentStatementArgs\n                    {\n                        Actions = new[]\n                        {\n                            \"ocean:deleteCluster\",\n                        },\n                        Effect = \"DENY\",\n                        Resources = new[]\n                        {\n                            \"o-abcd1234\",\n                            \"o-defg6789\",\n                        },\n                    },\n                    new SpotInst.Organization.Inputs.PolicyPolicyContentStatementArgs\n                    {\n                        Actions = new[]\n                        {\n                            \"ocean:createCluster\",\n                        },\n                        Effect = \"DENY\",\n                        Resources = new[]\n                        {\n                            \"o-fhau4752\",\n                            \"o-761owf4r3\",\n                        },\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/organization\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := organization.NewPolicy(ctx, \"terraformPolicy\", \u0026organization.PolicyArgs{\n\t\t\tDescription: pulumi.String(\"policy by terraform\"),\n\t\t\tPolicyContents: organization.PolicyPolicyContentArray{\n\t\t\t\t\u0026organization.PolicyPolicyContentArgs{\n\t\t\t\t\tStatements: organization.PolicyPolicyContentStatementArray{\n\t\t\t\t\t\t\u0026organization.PolicyPolicyContentStatementArgs{\n\t\t\t\t\t\t\tActions: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"ocean:deleteCluster\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tEffect: pulumi.String(\"DENY\"),\n\t\t\t\t\t\t\tResources: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"o-abcd1234\"),\n\t\t\t\t\t\t\t\tpulumi.String(\"o-defg6789\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026organization.PolicyPolicyContentStatementArgs{\n\t\t\t\t\t\t\tActions: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"ocean:createCluster\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tEffect: pulumi.String(\"DENY\"),\n\t\t\t\t\t\t\tResources: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"o-fhau4752\"),\n\t\t\t\t\t\t\t\tpulumi.String(\"o-761owf4r3\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.organization.Policy;\nimport com.pulumi.spotinst.organization.PolicyArgs;\nimport com.pulumi.spotinst.organization.inputs.PolicyPolicyContentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var terraformPolicy = new Policy(\"terraformPolicy\", PolicyArgs.builder()        \n            .description(\"policy by terraform\")\n            .policyContents(PolicyPolicyContentArgs.builder()\n                .statements(                \n                    PolicyPolicyContentStatementArgs.builder()\n                        .actions(\"ocean:deleteCluster\")\n                        .effect(\"DENY\")\n                        .resources(                        \n                            \"o-abcd1234\",\n                            \"o-defg6789\")\n                        .build(),\n                    PolicyPolicyContentStatementArgs.builder()\n                        .actions(\"ocean:createCluster\")\n                        .effect(\"DENY\")\n                        .resources(                        \n                            \"o-fhau4752\",\n                            \"o-761owf4r3\")\n                        .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  terraformPolicy:\n    type: spotinst:organization:Policy\n    properties:\n      description: policy by terraform\n      policyContents:\n        - statements:\n            - actions:\n                - ocean:deleteCluster\n              effect: DENY\n              resources:\n                - o-abcd1234\n                - o-defg6789\n            - actions:\n                - ocean:createCluster\n              effect: DENY\n              resources:\n                - o-fhau4752\n                - o-761owf4r3\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Short description of policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Policy.\n"
                },
                "policyContents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:organization/PolicyPolicyContent:PolicyPolicyContent"
                    },
                    "description": "Set permissions objects list.\n"
                }
            },
            "required": [
                "name",
                "policyContents"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Short description of policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Policy.\n"
                },
                "policyContents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:organization/PolicyPolicyContent:PolicyPolicyContent"
                    },
                    "description": "Set permissions objects list.\n"
                }
            },
            "requiredInputs": [
                "policyContents"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Policy resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Short description of policy.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Policy.\n"
                    },
                    "policyContents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:organization/PolicyPolicyContent:PolicyPolicyContent"
                        },
                        "description": "Set permissions objects list.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:organization/programmaticUser:ProgrammaticUser": {
            "description": "Provides a Spotinst programmatic user in the creator's organization.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst terraformProgUser = new spotinst.organization.ProgrammaticUser(\"terraformProgUser\", {\n    description: \"creating programmatic user\",\n    policies: [{\n        policyAccountIds: [\"act-a1b2c3d4\"],\n        policyId: \"pol-g75d8c06\",\n    }],\n    userGroupIds: [\n        \"ugr-abcd1234\",\n        \"ugr-defg8763\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nterraform_prog_user = spotinst.organization.ProgrammaticUser(\"terraformProgUser\",\n    description=\"creating programmatic user\",\n    policies=[spotinst.organization.ProgrammaticUserPolicyArgs(\n        policy_account_ids=[\"act-a1b2c3d4\"],\n        policy_id=\"pol-g75d8c06\",\n    )],\n    user_group_ids=[\n        \"ugr-abcd1234\",\n        \"ugr-defg8763\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var terraformProgUser = new SpotInst.Organization.ProgrammaticUser(\"terraformProgUser\", new()\n    {\n        Description = \"creating programmatic user\",\n        Policies = new[]\n        {\n            new SpotInst.Organization.Inputs.ProgrammaticUserPolicyArgs\n            {\n                PolicyAccountIds = new[]\n                {\n                    \"act-a1b2c3d4\",\n                },\n                PolicyId = \"pol-g75d8c06\",\n            },\n        },\n        UserGroupIds = new[]\n        {\n            \"ugr-abcd1234\",\n            \"ugr-defg8763\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/organization\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := organization.NewProgrammaticUser(ctx, \"terraformProgUser\", \u0026organization.ProgrammaticUserArgs{\n\t\t\tDescription: pulumi.String(\"creating programmatic user\"),\n\t\t\tPolicies: organization.ProgrammaticUserPolicyArray{\n\t\t\t\t\u0026organization.ProgrammaticUserPolicyArgs{\n\t\t\t\t\tPolicyAccountIds: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"act-a1b2c3d4\"),\n\t\t\t\t\t},\n\t\t\t\t\tPolicyId: pulumi.String(\"pol-g75d8c06\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUserGroupIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ugr-abcd1234\"),\n\t\t\t\tpulumi.String(\"ugr-defg8763\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.organization.ProgrammaticUser;\nimport com.pulumi.spotinst.organization.ProgrammaticUserArgs;\nimport com.pulumi.spotinst.organization.inputs.ProgrammaticUserPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var terraformProgUser = new ProgrammaticUser(\"terraformProgUser\", ProgrammaticUserArgs.builder()        \n            .description(\"creating programmatic user\")\n            .policies(ProgrammaticUserPolicyArgs.builder()\n                .policyAccountIds(\"act-a1b2c3d4\")\n                .policyId(\"pol-g75d8c06\")\n                .build())\n            .userGroupIds(            \n                \"ugr-abcd1234\",\n                \"ugr-defg8763\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  terraformProgUser:\n    type: spotinst:organization:ProgrammaticUser\n    properties:\n      description: creating programmatic user\n      policies:\n        - policyAccountIds:\n            - act-a1b2c3d4\n          policyId: pol-g75d8c06\n      # accounts {\n      #     //    account_id = \"act-a1b2c3d4\"\n      #     //    account_role = \"viewer\"\n      #     //  }\n      userGroupIds:\n        - ugr-abcd1234\n        - ugr-defg8763\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:organization/ProgrammaticUserAccount:ProgrammaticUserAccount"
                    },
                    "description": "All the accounts the programmatic user will have access to.\nIf used - Cannot be empty.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Brief description of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the programmatic user.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:organization/ProgrammaticUserPolicy:ProgrammaticUserPolicy"
                    },
                    "description": "All the policies the programmatic user will have access to.\nIf used - Cannot be empty.\n"
                },
                "userGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the user groups to register the given user to (should be existing user groups only)\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:organization/ProgrammaticUserAccount:ProgrammaticUserAccount"
                    },
                    "description": "All the accounts the programmatic user will have access to.\nIf used - Cannot be empty.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Brief description of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the programmatic user.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:organization/ProgrammaticUserPolicy:ProgrammaticUserPolicy"
                    },
                    "description": "All the policies the programmatic user will have access to.\nIf used - Cannot be empty.\n"
                },
                "userGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the user groups to register the given user to (should be existing user groups only)\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProgrammaticUser resources.\n",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:organization/ProgrammaticUserAccount:ProgrammaticUserAccount"
                        },
                        "description": "All the accounts the programmatic user will have access to.\nIf used - Cannot be empty.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Brief description of the user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the programmatic user.\n"
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:organization/ProgrammaticUserPolicy:ProgrammaticUserPolicy"
                        },
                        "description": "All the policies the programmatic user will have access to.\nIf used - Cannot be empty.\n"
                    },
                    "userGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the user groups to register the given user to (should be existing user groups only)\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:organization/user:User": {
            "description": "Provides a Spotinst User in the creator's organization.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst terraformUser = new spotinst.organization.User(\"terraformUser\", {\n    email: \"abc@xyz.com\",\n    firstName: \"test\",\n    lastName: \"user\",\n    password: \"testUser@123\",\n    policies: [{\n        policyAccountIds: [\"act-abcf4245\"],\n        policyId: \"pol-abcd1236\",\n    }],\n    role: \"viewer\",\n    userGroupIds: [\n        \"ugr-abcd1234\",\n        \"ugr-defg8763\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nterraform_user = spotinst.organization.User(\"terraformUser\",\n    email=\"abc@xyz.com\",\n    first_name=\"test\",\n    last_name=\"user\",\n    password=\"testUser@123\",\n    policies=[spotinst.organization.UserPolicyArgs(\n        policy_account_ids=[\"act-abcf4245\"],\n        policy_id=\"pol-abcd1236\",\n    )],\n    role=\"viewer\",\n    user_group_ids=[\n        \"ugr-abcd1234\",\n        \"ugr-defg8763\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var terraformUser = new SpotInst.Organization.User(\"terraformUser\", new()\n    {\n        Email = \"abc@xyz.com\",\n        FirstName = \"test\",\n        LastName = \"user\",\n        Password = \"testUser@123\",\n        Policies = new[]\n        {\n            new SpotInst.Organization.Inputs.UserPolicyArgs\n            {\n                PolicyAccountIds = new[]\n                {\n                    \"act-abcf4245\",\n                },\n                PolicyId = \"pol-abcd1236\",\n            },\n        },\n        Role = \"viewer\",\n        UserGroupIds = new[]\n        {\n            \"ugr-abcd1234\",\n            \"ugr-defg8763\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/organization\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := organization.NewUser(ctx, \"terraformUser\", \u0026organization.UserArgs{\n\t\t\tEmail:     pulumi.String(\"abc@xyz.com\"),\n\t\t\tFirstName: pulumi.String(\"test\"),\n\t\t\tLastName:  pulumi.String(\"user\"),\n\t\t\tPassword:  pulumi.String(\"testUser@123\"),\n\t\t\tPolicies: organization.UserPolicyArray{\n\t\t\t\t\u0026organization.UserPolicyArgs{\n\t\t\t\t\tPolicyAccountIds: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"act-abcf4245\"),\n\t\t\t\t\t},\n\t\t\t\t\tPolicyId: pulumi.String(\"pol-abcd1236\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tRole: pulumi.String(\"viewer\"),\n\t\t\tUserGroupIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ugr-abcd1234\"),\n\t\t\t\tpulumi.String(\"ugr-defg8763\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.organization.User;\nimport com.pulumi.spotinst.organization.UserArgs;\nimport com.pulumi.spotinst.organization.inputs.UserPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var terraformUser = new User(\"terraformUser\", UserArgs.builder()        \n            .email(\"abc@xyz.com\")\n            .firstName(\"test\")\n            .lastName(\"user\")\n            .password(\"testUser@123\")\n            .policies(UserPolicyArgs.builder()\n                .policyAccountIds(\"act-abcf4245\")\n                .policyId(\"pol-abcd1236\")\n                .build())\n            .role(\"viewer\")\n            .userGroupIds(            \n                \"ugr-abcd1234\",\n                \"ugr-defg8763\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  terraformUser:\n    type: spotinst:organization:User\n    properties:\n      email: abc@xyz.com\n      firstName: test\n      lastName: user\n      password: testUser@123\n      policies:\n        - policyAccountIds:\n            - act-abcf4245\n          policyId: pol-abcd1236\n      role: viewer\n      userGroupIds:\n        - ugr-abcd1234\n        - ugr-defg8763\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email.\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name of the user.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:organization/UserPolicy:UserPolicy"
                    },
                    "description": "The policies to register under the given group\n(should be existing policies only).\n"
                },
                "role": {
                    "type": "string",
                    "description": "User's role.\n"
                },
                "userGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the user groups to register the given user to (should be existing user groups only)\n"
                }
            },
            "required": [
                "email",
                "firstName",
                "lastName",
                "password"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "Email.\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name of the user.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:organization/UserPolicy:UserPolicy"
                    },
                    "description": "The policies to register under the given group\n(should be existing policies only).\n"
                },
                "role": {
                    "type": "string",
                    "description": "User's role.\n"
                },
                "userGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the user groups to register the given user to (should be existing user groups only)\n"
                }
            },
            "requiredInputs": [
                "email",
                "firstName",
                "lastName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email.\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the user.\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The last name of the user.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n"
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:organization/UserPolicy:UserPolicy"
                        },
                        "description": "The policies to register under the given group\n(should be existing policies only).\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "User's role.\n"
                    },
                    "userGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the user groups to register the given user to (should be existing user groups only)\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:organization/userGroup:UserGroup": {
            "description": "Provides a Spotinst user-group of your Spot organization.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst terraformUserGroup = new spotinst.organization.UserGroup(\"terraformUserGroup\", {\n    description: \"user group by terraform\",\n    policies: [{\n        accountIds: [\"act-a1b2c3d4\"],\n        policyId: \"pol-vv7d8c06\",\n    }],\n    userIds: [\"u-372gf6ae\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nterraform_user_group = spotinst.organization.UserGroup(\"terraformUserGroup\",\n    description=\"user group by terraform\",\n    policies=[spotinst.organization.UserGroupPolicyArgs(\n        account_ids=[\"act-a1b2c3d4\"],\n        policy_id=\"pol-vv7d8c06\",\n    )],\n    user_ids=[\"u-372gf6ae\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var terraformUserGroup = new SpotInst.Organization.UserGroup(\"terraformUserGroup\", new()\n    {\n        Description = \"user group by terraform\",\n        Policies = new[]\n        {\n            new SpotInst.Organization.Inputs.UserGroupPolicyArgs\n            {\n                AccountIds = new[]\n                {\n                    \"act-a1b2c3d4\",\n                },\n                PolicyId = \"pol-vv7d8c06\",\n            },\n        },\n        UserIds = new[]\n        {\n            \"u-372gf6ae\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/organization\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := organization.NewUserGroup(ctx, \"terraformUserGroup\", \u0026organization.UserGroupArgs{\n\t\t\tDescription: pulumi.String(\"user group by terraform\"),\n\t\t\tPolicies: organization.UserGroupPolicyArray{\n\t\t\t\t\u0026organization.UserGroupPolicyArgs{\n\t\t\t\t\tAccountIds: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"act-a1b2c3d4\"),\n\t\t\t\t\t},\n\t\t\t\t\tPolicyId: pulumi.String(\"pol-vv7d8c06\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUserIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"u-372gf6ae\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.organization.UserGroup;\nimport com.pulumi.spotinst.organization.UserGroupArgs;\nimport com.pulumi.spotinst.organization.inputs.UserGroupPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var terraformUserGroup = new UserGroup(\"terraformUserGroup\", UserGroupArgs.builder()        \n            .description(\"user group by terraform\")\n            .policies(UserGroupPolicyArgs.builder()\n                .accountIds(\"act-a1b2c3d4\")\n                .policyId(\"pol-vv7d8c06\")\n                .build())\n            .userIds(\"u-372gf6ae\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  terraformUserGroup:\n    type: spotinst:organization:UserGroup\n    properties:\n      description: user group by terraform\n      policies:\n        - accountIds:\n            - act-a1b2c3d4\n          policyId: pol-vv7d8c06\n      userIds:\n        - u-372gf6ae\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "User group description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "User group name.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:organization/UserGroupPolicy:UserGroupPolicy"
                    },
                    "description": "The policies to register under the given group\n(should be existing policies only).\n"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The users to register under the created group\n(should be existing users only).\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "User group description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "User group name.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:organization/UserGroupPolicy:UserGroupPolicy"
                    },
                    "description": "The policies to register under the given group\n(should be existing policies only).\n"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The users to register under the created group\n(should be existing users only).\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserGroup resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "User group description.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "User group name.\n"
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:organization/UserGroupPolicy:UserGroupPolicy"
                        },
                        "description": "The policies to register under the given group\n(should be existing policies only).\n"
                    },
                    "userIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The users to register under the created group\n(should be existing users only).\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:spark/ocean:Ocean": {
            "description": "Manages a Spotinst Ocean Spark resource on AWS or GCP.\n\n## Prerequisites\n\nAn existing Ocean cluster is required by this resource. See e.g. the `spotinst.aws.Ocean` resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.spark.Ocean(\"example\", {\n    oceanClusterId: \"ocean-cluster-id\",\n    ingress: {\n        controller: {\n            managed: true,\n        },\n        loadBalancer: {\n            managed: true,\n            targetGroupArn: \"arn:aws:elasticloadbalancing:eu-north-1:XXXXXXXXXXXX:targetgroup/my-spark-cluster-nlb-tg/a38c2b83XXXXXXXX\",\n            serviceAnnotations: {\n                \"service.beta.kubernetes.io/aws-load-balancer-security-groups\": \"sg-XXXXXXXXXXXXXXXXX\",\n                \"some-service-annotation-2\": \"some-service-annotation-value-2\",\n            },\n        },\n        customEndpoint: {\n            enabled: false,\n            address: \"my-spark-cluster-nlb-8cbb8da7XXXXXXXX.elb.us-east-1.amazonaws.com\",\n        },\n        privateLink: {\n            enabled: false,\n            vpcEndpointService: \"com.amazonaws.vpce.eu-north-1.vpce-svc-XXXXXXXXXXXXXXXXX\",\n        },\n    },\n    compute: {\n        createVngs: true,\n        useTaints: true,\n    },\n    logCollection: {\n        collectAppLogs: true,\n    },\n    webhook: {\n        useHostNetwork: false,\n        hostNetworkPorts: [25554],\n    },\n    spark: {\n        additionalAppNamespaces: [\n            \"extra-spark-app-ns-1\",\n            \"extra-spark-app-ns-2\",\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.spark.Ocean(\"example\",\n    ocean_cluster_id=\"ocean-cluster-id\",\n    ingress=spotinst.spark.OceanIngressArgs(\n        controller=spotinst.spark.OceanIngressControllerArgs(\n            managed=True,\n        ),\n        load_balancer=spotinst.spark.OceanIngressLoadBalancerArgs(\n            managed=True,\n            target_group_arn=\"arn:aws:elasticloadbalancing:eu-north-1:XXXXXXXXXXXX:targetgroup/my-spark-cluster-nlb-tg/a38c2b83XXXXXXXX\",\n            service_annotations={\n                \"service.beta.kubernetes.io/aws-load-balancer-security-groups\": \"sg-XXXXXXXXXXXXXXXXX\",\n                \"some-service-annotation-2\": \"some-service-annotation-value-2\",\n            },\n        ),\n        custom_endpoint=spotinst.spark.OceanIngressCustomEndpointArgs(\n            enabled=False,\n            address=\"my-spark-cluster-nlb-8cbb8da7XXXXXXXX.elb.us-east-1.amazonaws.com\",\n        ),\n        private_link=spotinst.spark.OceanIngressPrivateLinkArgs(\n            enabled=False,\n            vpc_endpoint_service=\"com.amazonaws.vpce.eu-north-1.vpce-svc-XXXXXXXXXXXXXXXXX\",\n        ),\n    ),\n    compute=spotinst.spark.OceanComputeArgs(\n        create_vngs=True,\n        use_taints=True,\n    ),\n    log_collection=spotinst.spark.OceanLogCollectionArgs(\n        collect_app_logs=True,\n    ),\n    webhook=spotinst.spark.OceanWebhookArgs(\n        use_host_network=False,\n        host_network_ports=[25554],\n    ),\n    spark=spotinst.spark.OceanSparkArgs(\n        additional_app_namespaces=[\n            \"extra-spark-app-ns-1\",\n            \"extra-spark-app-ns-2\",\n        ],\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new SpotInst.Spark.Ocean(\"example\", new()\n    {\n        OceanClusterId = \"ocean-cluster-id\",\n        Ingress = new SpotInst.Spark.Inputs.OceanIngressArgs\n        {\n            Controller = new SpotInst.Spark.Inputs.OceanIngressControllerArgs\n            {\n                Managed = true,\n            },\n            LoadBalancer = new SpotInst.Spark.Inputs.OceanIngressLoadBalancerArgs\n            {\n                Managed = true,\n                TargetGroupArn = \"arn:aws:elasticloadbalancing:eu-north-1:XXXXXXXXXXXX:targetgroup/my-spark-cluster-nlb-tg/a38c2b83XXXXXXXX\",\n                ServiceAnnotations = \n                {\n                    { \"service.beta.kubernetes.io/aws-load-balancer-security-groups\", \"sg-XXXXXXXXXXXXXXXXX\" },\n                    { \"some-service-annotation-2\", \"some-service-annotation-value-2\" },\n                },\n            },\n            CustomEndpoint = new SpotInst.Spark.Inputs.OceanIngressCustomEndpointArgs\n            {\n                Enabled = false,\n                Address = \"my-spark-cluster-nlb-8cbb8da7XXXXXXXX.elb.us-east-1.amazonaws.com\",\n            },\n            PrivateLink = new SpotInst.Spark.Inputs.OceanIngressPrivateLinkArgs\n            {\n                Enabled = false,\n                VpcEndpointService = \"com.amazonaws.vpce.eu-north-1.vpce-svc-XXXXXXXXXXXXXXXXX\",\n            },\n        },\n        Compute = new SpotInst.Spark.Inputs.OceanComputeArgs\n        {\n            CreateVngs = true,\n            UseTaints = true,\n        },\n        LogCollection = new SpotInst.Spark.Inputs.OceanLogCollectionArgs\n        {\n            CollectAppLogs = true,\n        },\n        Webhook = new SpotInst.Spark.Inputs.OceanWebhookArgs\n        {\n            UseHostNetwork = false,\n            HostNetworkPorts = new[]\n            {\n                25554,\n            },\n        },\n        Spark = new SpotInst.Spark.Inputs.OceanSparkArgs\n        {\n            AdditionalAppNamespaces = new[]\n            {\n                \"extra-spark-app-ns-1\",\n                \"extra-spark-app-ns-2\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/spark\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := spark.NewOcean(ctx, \"example\", \u0026spark.OceanArgs{\n\t\t\tOceanClusterId: pulumi.String(\"ocean-cluster-id\"),\n\t\t\tIngress: \u0026spark.OceanIngressArgs{\n\t\t\t\tController: \u0026spark.OceanIngressControllerArgs{\n\t\t\t\t\tManaged: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t\tLoadBalancer: \u0026spark.OceanIngressLoadBalancerArgs{\n\t\t\t\t\tManaged:        pulumi.Bool(true),\n\t\t\t\t\tTargetGroupArn: pulumi.String(\"arn:aws:elasticloadbalancing:eu-north-1:XXXXXXXXXXXX:targetgroup/my-spark-cluster-nlb-tg/a38c2b83XXXXXXXX\"),\n\t\t\t\t\tServiceAnnotations: pulumi.StringMap{\n\t\t\t\t\t\t\"service.beta.kubernetes.io/aws-load-balancer-security-groups\": pulumi.String(\"sg-XXXXXXXXXXXXXXXXX\"),\n\t\t\t\t\t\t\"some-service-annotation-2\":                                    pulumi.String(\"some-service-annotation-value-2\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tCustomEndpoint: \u0026spark.OceanIngressCustomEndpointArgs{\n\t\t\t\t\tEnabled: pulumi.Bool(false),\n\t\t\t\t\tAddress: pulumi.String(\"my-spark-cluster-nlb-8cbb8da7XXXXXXXX.elb.us-east-1.amazonaws.com\"),\n\t\t\t\t},\n\t\t\t\tPrivateLink: \u0026spark.OceanIngressPrivateLinkArgs{\n\t\t\t\t\tEnabled:            pulumi.Bool(false),\n\t\t\t\t\tVpcEndpointService: pulumi.String(\"com.amazonaws.vpce.eu-north-1.vpce-svc-XXXXXXXXXXXXXXXXX\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tCompute: \u0026spark.OceanComputeArgs{\n\t\t\t\tCreateVngs: pulumi.Bool(true),\n\t\t\t\tUseTaints:  pulumi.Bool(true),\n\t\t\t},\n\t\t\tLogCollection: \u0026spark.OceanLogCollectionArgs{\n\t\t\t\tCollectAppLogs: pulumi.Bool(true),\n\t\t\t},\n\t\t\tWebhook: \u0026spark.OceanWebhookArgs{\n\t\t\t\tUseHostNetwork: pulumi.Bool(false),\n\t\t\t\tHostNetworkPorts: pulumi.IntArray{\n\t\t\t\t\tpulumi.Int(25554),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSpark: \u0026spark.OceanSparkArgs{\n\t\t\t\tAdditionalAppNamespaces: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"extra-spark-app-ns-1\"),\n\t\t\t\t\tpulumi.String(\"extra-spark-app-ns-2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.spark.Ocean;\nimport com.pulumi.spotinst.spark.OceanArgs;\nimport com.pulumi.spotinst.spark.inputs.OceanIngressArgs;\nimport com.pulumi.spotinst.spark.inputs.OceanIngressControllerArgs;\nimport com.pulumi.spotinst.spark.inputs.OceanIngressLoadBalancerArgs;\nimport com.pulumi.spotinst.spark.inputs.OceanIngressCustomEndpointArgs;\nimport com.pulumi.spotinst.spark.inputs.OceanIngressPrivateLinkArgs;\nimport com.pulumi.spotinst.spark.inputs.OceanComputeArgs;\nimport com.pulumi.spotinst.spark.inputs.OceanLogCollectionArgs;\nimport com.pulumi.spotinst.spark.inputs.OceanWebhookArgs;\nimport com.pulumi.spotinst.spark.inputs.OceanSparkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ocean(\"example\", OceanArgs.builder()        \n            .oceanClusterId(\"ocean-cluster-id\")\n            .ingress(OceanIngressArgs.builder()\n                .controller(OceanIngressControllerArgs.builder()\n                    .managed(true)\n                    .build())\n                .loadBalancer(OceanIngressLoadBalancerArgs.builder()\n                    .managed(true)\n                    .targetGroupArn(\"arn:aws:elasticloadbalancing:eu-north-1:XXXXXXXXXXXX:targetgroup/my-spark-cluster-nlb-tg/a38c2b83XXXXXXXX\")\n                    .serviceAnnotations(Map.ofEntries(\n                        Map.entry(\"service.beta.kubernetes.io/aws-load-balancer-security-groups\", \"sg-XXXXXXXXXXXXXXXXX\"),\n                        Map.entry(\"some-service-annotation-2\", \"some-service-annotation-value-2\")\n                    ))\n                    .build())\n                .customEndpoint(OceanIngressCustomEndpointArgs.builder()\n                    .enabled(false)\n                    .address(\"my-spark-cluster-nlb-8cbb8da7XXXXXXXX.elb.us-east-1.amazonaws.com\")\n                    .build())\n                .privateLink(OceanIngressPrivateLinkArgs.builder()\n                    .enabled(false)\n                    .vpcEndpointService(\"com.amazonaws.vpce.eu-north-1.vpce-svc-XXXXXXXXXXXXXXXXX\")\n                    .build())\n                .build())\n            .compute(OceanComputeArgs.builder()\n                .createVngs(true)\n                .useTaints(true)\n                .build())\n            .logCollection(OceanLogCollectionArgs.builder()\n                .collectAppLogs(true)\n                .build())\n            .webhook(OceanWebhookArgs.builder()\n                .useHostNetwork(false)\n                .hostNetworkPorts(25554)\n                .build())\n            .spark(OceanSparkArgs.builder()\n                .additionalAppNamespaces(                \n                    \"extra-spark-app-ns-1\",\n                    \"extra-spark-app-ns-2\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: spotinst:spark:Ocean\n    properties:\n      oceanClusterId: ocean-cluster-id\n      ingress:\n        controller:\n          managed: true\n        loadBalancer:\n          managed: true\n          targetGroupArn: arn:aws:elasticloadbalancing:eu-north-1:XXXXXXXXXXXX:targetgroup/my-spark-cluster-nlb-tg/a38c2b83XXXXXXXX\n          serviceAnnotations:\n            service.beta.kubernetes.io/aws-load-balancer-security-groups: sg-XXXXXXXXXXXXXXXXX\n            some-service-annotation-2: some-service-annotation-value-2\n        customEndpoint:\n          enabled: false\n          address: my-spark-cluster-nlb-8cbb8da7XXXXXXXX.elb.us-east-1.amazonaws.com\n        privateLink:\n          enabled: false\n          vpcEndpointService: com.amazonaws.vpce.eu-north-1.vpce-svc-XXXXXXXXXXXXXXXXX\n      compute:\n        createVngs: true\n        useTaints: true\n      logCollection:\n        collectAppLogs: true\n      webhook:\n        useHostNetwork: false\n        hostNetworkPorts:\n          - 25554\n      spark:\n        additionalAppNamespaces:\n          - extra-spark-app-ns-1\n          - extra-spark-app-ns-2\n```\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const oceanSparkId = spotinst_ocean_spark.example.id;\n```\n```python\nimport pulumi\n\npulumi.export(\"oceanSparkId\", spotinst_ocean_spark[\"example\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"oceanSparkId\"] = spotinst_ocean_spark.Example.Id,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"oceanSparkId\", spotinst_ocean_spark.Example.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        ctx.export(\"oceanSparkId\", spotinst_ocean_spark.example().id());\n    }\n}\n```\n```yaml\noutputs:\n  oceanSparkId: ${spotinst_ocean_spark.example.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "compute": {
                    "$ref": "#/types/spotinst:spark/OceanCompute:OceanCompute"
                },
                "ingress": {
                    "$ref": "#/types/spotinst:spark/OceanIngress:OceanIngress"
                },
                "logCollection": {
                    "$ref": "#/types/spotinst:spark/OceanLogCollection:OceanLogCollection"
                },
                "oceanClusterId": {
                    "type": "string",
                    "description": "- The ID of the Ocean cluster that Ocean for Apache Spark should be installed on.\n"
                },
                "spark": {
                    "$ref": "#/types/spotinst:spark/OceanSpark:OceanSpark"
                },
                "webhook": {
                    "$ref": "#/types/spotinst:spark/OceanWebhook:OceanWebhook"
                }
            },
            "required": [
                "compute",
                "ingress",
                "logCollection",
                "oceanClusterId",
                "spark",
                "webhook"
            ],
            "inputProperties": {
                "compute": {
                    "$ref": "#/types/spotinst:spark/OceanCompute:OceanCompute"
                },
                "ingress": {
                    "$ref": "#/types/spotinst:spark/OceanIngress:OceanIngress"
                },
                "logCollection": {
                    "$ref": "#/types/spotinst:spark/OceanLogCollection:OceanLogCollection"
                },
                "oceanClusterId": {
                    "type": "string",
                    "description": "- The ID of the Ocean cluster that Ocean for Apache Spark should be installed on.\n",
                    "willReplaceOnChanges": true
                },
                "spark": {
                    "$ref": "#/types/spotinst:spark/OceanSpark:OceanSpark"
                },
                "webhook": {
                    "$ref": "#/types/spotinst:spark/OceanWebhook:OceanWebhook"
                }
            },
            "requiredInputs": [
                "oceanClusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ocean resources.\n",
                "properties": {
                    "compute": {
                        "$ref": "#/types/spotinst:spark/OceanCompute:OceanCompute"
                    },
                    "ingress": {
                        "$ref": "#/types/spotinst:spark/OceanIngress:OceanIngress"
                    },
                    "logCollection": {
                        "$ref": "#/types/spotinst:spark/OceanLogCollection:OceanLogCollection"
                    },
                    "oceanClusterId": {
                        "type": "string",
                        "description": "- The ID of the Ocean cluster that Ocean for Apache Spark should be installed on.\n",
                        "willReplaceOnChanges": true
                    },
                    "spark": {
                        "$ref": "#/types/spotinst:spark/OceanSpark:OceanSpark"
                    },
                    "webhook": {
                        "$ref": "#/types/spotinst:spark/OceanWebhook:OceanWebhook"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:spark/oceanVirtualNodeGroup:OceanVirtualNodeGroup": {
            "description": "Manage a dedicated Spotinst Ocean Spark Virtual Node Group resource\n\n## Prerequisites\n\nAn existing Ocean cluster and Ocean VNG is required by this resource\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.spark.OceanVirtualNodeGroup(\"example\", {\n    oceanSparkClusterId: \"cluster_id\",\n    virtualNodeGroupId: \"vng_id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.spark.OceanVirtualNodeGroup(\"example\",\n    ocean_spark_cluster_id=\"cluster_id\",\n    virtual_node_group_id=\"vng_id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new SpotInst.Spark.OceanVirtualNodeGroup(\"example\", new()\n    {\n        OceanSparkClusterId = \"cluster_id\",\n        VirtualNodeGroupId = \"vng_id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/spark\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := spark.NewOceanVirtualNodeGroup(ctx, \"example\", \u0026spark.OceanVirtualNodeGroupArgs{\n\t\t\tOceanSparkClusterId: pulumi.String(\"cluster_id\"),\n\t\t\tVirtualNodeGroupId:  pulumi.String(\"vng_id\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.spotinst.spark.OceanVirtualNodeGroup;\nimport com.pulumi.spotinst.spark.OceanVirtualNodeGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OceanVirtualNodeGroup(\"example\", OceanVirtualNodeGroupArgs.builder()        \n            .oceanSparkClusterId(\"cluster_id\")\n            .virtualNodeGroupId(\"vng_id\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: spotinst:spark:OceanVirtualNodeGroup\n    properties:\n      oceanSparkClusterId: cluster_id\n      virtualNodeGroupId: vng_id\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "oceanSparkClusterId": {
                    "type": "string"
                },
                "virtualNodeGroupId": {
                    "type": "string"
                }
            },
            "required": [
                "oceanSparkClusterId",
                "virtualNodeGroupId"
            ],
            "inputProperties": {
                "oceanSparkClusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "virtualNodeGroupId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "oceanSparkClusterId",
                "virtualNodeGroupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanVirtualNodeGroup resources.\n",
                "properties": {
                    "oceanSparkClusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "virtualNodeGroupId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    }
}
{
    "name": "spotinst",
    "description": "A Pulumi package for creating and managing spotinst cloud resources.",
    "keywords": [
        "pulumi",
        "spotinst"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`spotinst` Terraform Provider](https://github.com/terraform-providers/terraform-provider-spotinst).",
    "repository": "https://github.com/pulumi/pulumi-spotinst",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "account": {
                "type": "string",
                "description": "Spotinst Account ID\n",
                "default": "",
                "defaultInfo": {
                    "environment": [
                        "SPOTINST_ACCOUNT"
                    ]
                }
            },
            "featureFlags": {
                "type": "string",
                "description": "Spotinst SDK Feature Flags\n"
            },
            "token": {
                "type": "string",
                "description": "Spotinst Personal API Access Token\n",
                "default": "",
                "defaultInfo": {
                    "environment": [
                        "SPOTINST_TOKEN"
                    ]
                }
            }
        }
    },
    "types": {
        "spotinst:/HealthCheckCheck:HealthCheckCheck": {
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "The destination for the request.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthy": {
                    "type": "integer",
                    "description": "The number of consecutive successful health checks that must occur before declaring an instance healthy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "The amount of time (in seconds) between each health check (minimum: 10).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the Spotinst HCS (default: 80).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol to use to connect with the instance. Valid values: http, https.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "the amount of time (in seconds) to wait when receiving a response from the health check.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unhealthy": {
                    "type": "integer",
                    "description": "The number of consecutive failed health checks that must occur before declaring an instance unhealthy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endpoint",
                "healthy",
                "interval",
                "port",
                "protocol",
                "timeout",
                "unhealthy"
            ]
        },
        "spotinst:aws/BeanstalkDeploymentPreferences:BeanstalkDeploymentPreferences": {
            "properties": {
                "automaticRoll": {
                    "type": "boolean",
                    "description": "Should roll perform automatically\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizePercentage": {
                    "type": "integer",
                    "description": "Percent size of each batch\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gracePeriod": {
                    "type": "integer",
                    "description": "Amount of time to wait between batches\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/BeanstalkDeploymentPreferencesStrategy:BeanstalkDeploymentPreferencesStrategy"
                    },
                    "description": "Strategy parameters\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/BeanstalkDeploymentPreferencesStrategy:BeanstalkDeploymentPreferencesStrategy": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action to take\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shouldDrainInstances": {
                    "type": "boolean",
                    "description": "Bool value if to wait to drain instance\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/BeanstalkManagedActions:BeanstalkManagedActions": {
            "properties": {
                "platformUpdate": {
                    "$ref": "#/types/spotinst:aws/BeanstalkManagedActionsPlatformUpdate:BeanstalkManagedActionsPlatformUpdate",
                    "description": "Platform Update parameters\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/BeanstalkManagedActionsPlatformUpdate:BeanstalkManagedActionsPlatformUpdate": {
            "properties": {
                "performAt": {
                    "type": "string",
                    "description": "Actions to perform (options: timeWindow, never)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindow": {
                    "type": "string",
                    "description": "Time Window for when action occurs ex. Mon:23:50-Tue:00:20\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updateLevel": {
                    "type": "string",
                    "description": "- Level to update\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/BeanstalkScheduledTask:BeanstalkScheduledTask": {
            "properties": {
                "adjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustmentPercentage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizePercentage": {
                    "type": "string",
                    "description": "Percent size of each batch\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cronExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "frequency": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gracePeriod": {
                    "type": "string",
                    "description": "Amount of time to wait between batches\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleMaxCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleMinCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "taskType"
            ]
        },
        "spotinst:aws/ElastigroupEbsBlockDevice:ElastigroupEbsBlockDevice": {
            "properties": {
                "deleteOnTermination": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deviceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encrypted": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iops": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kmsKeyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snapshotId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "deviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteOnTermination",
                        "deviceName",
                        "encrypted",
                        "volumeType"
                    ]
                }
            }
        },
        "spotinst:aws/ElastigroupEphemeralBlockDevice:ElastigroupEphemeralBlockDevice": {
            "properties": {
                "deviceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "virtualName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "deviceName",
                "virtualName"
            ]
        },
        "spotinst:aws/ElastigroupInstanceTypesWeight:ElastigroupInstanceTypesWeight": {
            "properties": {
                "instanceType": {
                    "type": "string",
                    "description": "Name of instance type (String).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "description": "Weight per instance type (Integer).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "instanceType",
                "weight"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationBeanstalk:ElastigroupIntegrationBeanstalk": {
            "properties": {
                "deploymentPreferences": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationBeanstalkDeploymentPreferences:ElastigroupIntegrationBeanstalkDeploymentPreferences",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "environmentId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "managedActions": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationBeanstalkManagedActions:ElastigroupIntegrationBeanstalkManagedActions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationBeanstalkDeploymentPreferences:ElastigroupIntegrationBeanstalkDeploymentPreferences": {
            "properties": {
                "automaticRoll": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizePercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gracePeriod": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strategy": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategy:ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategy",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategy:ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategy": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shouldDrainInstances": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationBeanstalkManagedActions:ElastigroupIntegrationBeanstalkManagedActions": {
            "properties": {
                "platformUpdate": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdate:ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdate:ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdate": {
            "properties": {
                "performAt": {
                    "type": "string",
                    "description": "In the event of a fallback to On-Demand instances, select the time period to revert back to Spot. Supported Arguments – always (default), timeWindow, never. For timeWindow or never to be valid the group must have availabilityOriented OR persistence defined.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindow": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updateLevel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationCodedeploy:ElastigroupIntegrationCodedeploy": {
            "properties": {
                "cleanupOnFailure": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deploymentGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationCodedeployDeploymentGroup:ElastigroupIntegrationCodedeployDeploymentGroup"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "terminateInstanceOnFailure": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cleanupOnFailure",
                "deploymentGroups",
                "terminateInstanceOnFailure"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationCodedeployDeploymentGroup:ElastigroupIntegrationCodedeployDeploymentGroup": {
            "properties": {
                "applicationName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deploymentGroupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "applicationName",
                "deploymentGroupName"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm": {
            "properties": {
                "autoscaleCooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationDockerSwarmAutoscaleDown:ElastigroupIntegrationDockerSwarmAutoscaleDown",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationDockerSwarmAutoscaleHeadroom:ElastigroupIntegrationDockerSwarmAutoscaleHeadroom",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleIsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "masterHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "masterPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "masterHost",
                "masterPort"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationDockerSwarmAutoscaleDown:ElastigroupIntegrationDockerSwarmAutoscaleDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationDockerSwarmAutoscaleHeadroom:ElastigroupIntegrationDockerSwarmAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numOfUnits": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationEcs:ElastigroupIntegrationEcs": {
            "properties": {
                "autoscaleAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationEcsAutoscaleAttribute:ElastigroupIntegrationEcsAutoscaleAttribute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleCooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationEcsAutoscaleDown:ElastigroupIntegrationEcsAutoscaleDown",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationEcsAutoscaleHeadroom:ElastigroupIntegrationEcsAutoscaleHeadroom",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleIsAutoConfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleIsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleScaleDownNonServiceTasks": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "clusterName"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationEcsAutoscaleAttribute:ElastigroupIntegrationEcsAutoscaleAttribute": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationEcsAutoscaleDown:ElastigroupIntegrationEcsAutoscaleDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxScaleDownPercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationEcsAutoscaleHeadroom:ElastigroupIntegrationEcsAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numOfUnits": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationGitlab:ElastigroupIntegrationGitlab": {
            "properties": {
                "runner": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationGitlabRunner:ElastigroupIntegrationGitlabRunner",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationGitlabRunner:ElastigroupIntegrationGitlabRunner": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes": {
            "properties": {
                "apiServer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleCooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationKubernetesAutoscaleDown:ElastigroupIntegrationKubernetesAutoscaleDown",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationKubernetesAutoscaleHeadroom:ElastigroupIntegrationKubernetesAutoscaleHeadroom",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleIsAutoConfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleIsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationKubernetesAutoscaleLabel:ElastigroupIntegrationKubernetesAutoscaleLabel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterIdentifier": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "integrationMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationKubernetesAutoscaleDown:ElastigroupIntegrationKubernetesAutoscaleDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationKubernetesAutoscaleHeadroom:ElastigroupIntegrationKubernetesAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numOfUnits": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationKubernetesAutoscaleLabel:ElastigroupIntegrationKubernetesAutoscaleLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationMesosphere:ElastigroupIntegrationMesosphere": {
            "properties": {
                "apiServer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apiServer"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime": {
            "properties": {
                "deploymentId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "deploymentId"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationNomad:ElastigroupIntegrationNomad": {
            "properties": {
                "aclToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleConstraints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationNomadAutoscaleConstraint:ElastigroupIntegrationNomadAutoscaleConstraint"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleCooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationNomadAutoscaleDown:ElastigroupIntegrationNomadAutoscaleDown",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationNomadAutoscaleHeadroom:ElastigroupIntegrationNomadAutoscaleHeadroom",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleIsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "masterHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "masterPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "masterHost",
                "masterPort"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationNomadAutoscaleConstraint:ElastigroupIntegrationNomadAutoscaleConstraint": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationNomadAutoscaleDown:ElastigroupIntegrationNomadAutoscaleDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationNomadAutoscaleHeadroom:ElastigroupIntegrationNomadAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numOfUnits": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupIntegrationRancher:ElastigroupIntegrationRancher": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "masterHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "masterHost",
                "secretKey"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationRoute53:ElastigroupIntegrationRoute53": {
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRoute53Domain:ElastigroupIntegrationRoute53Domain"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "domains"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationRoute53Domain:ElastigroupIntegrationRoute53Domain": {
            "properties": {
                "hostedZoneId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recordSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRoute53DomainRecordSet:ElastigroupIntegrationRoute53DomainRecordSet"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spotinstAcctId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hostedZoneId",
                "recordSets"
            ]
        },
        "spotinst:aws/ElastigroupIntegrationRoute53DomainRecordSet:ElastigroupIntegrationRoute53DomainRecordSet": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usePublicIp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/ElastigroupMultaiTargetSet:ElastigroupMultaiTargetSet": {
            "properties": {
                "balancerId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetSetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "balancerId",
                "targetSetId"
            ]
        },
        "spotinst:aws/ElastigroupNetworkInterface:ElastigroupNetworkInterface": {
            "properties": {
                "associateIpv6Address": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "associatePublicIpAddress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deleteOnTermination": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The group description.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deviceIndex": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkInterfaceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateIpAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secondaryPrivateIpAddressCount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "deviceIndex"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteOnTermination",
                        "deviceIndex"
                    ]
                }
            }
        },
        "spotinst:aws/ElastigroupRevertToSpot:ElastigroupRevertToSpot": {
            "properties": {
                "performAt": {
                    "type": "string",
                    "description": "In the event of a fallback to On-Demand instances, select the time period to revert back to Spot. Supported Arguments – always (default), timeWindow, never. For timeWindow or never to be valid the group must have availabilityOriented OR persistence defined.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specify a list of time windows for to execute revertToSpot strategy. Time window format: `ddd:hh:mm-ddd:hh:mm`. Example: `Mon:03:00-Wed:02:30`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "performAt"
            ]
        },
        "spotinst:aws/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "source",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:aws/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/ElastigroupScalingStrategy:ElastigroupScalingStrategy": {
            "properties": {
                "terminateAtEndOfBillingHour": {
                    "type": "boolean",
                    "description": "Specify whether to terminate instances at the end of each billing hour.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "terminationPolicy": {
                    "type": "string",
                    "description": "- Determines whether to terminate the newest instances when performing a scaling action. Valid values: `\"default\"`, `\"newestInstance\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupScalingTargetPolicy:ElastigroupScalingTargetPolicy": {
            "properties": {
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingTargetPolicyDimension:ElastigroupScalingTargetPolicyDimension"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxCapacityPerScale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "predictiveMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "target",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "metricName",
                        "namespace",
                        "policyName",
                        "source",
                        "statistic",
                        "target",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:aws/ElastigroupScalingTargetPolicyDimension:ElastigroupScalingTargetPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "source",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:aws/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/ElastigroupScheduledTask:ElastigroupScheduledTask": {
            "properties": {
                "adjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustmentPercentage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizePercentage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cronExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "frequency": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleMaxCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleMinCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "taskType"
            ]
        },
        "spotinst:aws/ElastigroupSignal:ElastigroupSignal": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/ElastigroupStatefulDeallocation:ElastigroupStatefulDeallocation": {
            "properties": {
                "shouldDeleteImages": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shouldDeleteNetworkInterfaces": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shouldDeleteSnapshots": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shouldDeleteVolumes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupTag:ElastigroupTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy": {
            "properties": {
                "autoApplyTags": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rollConfig": {
                    "$ref": "#/types/spotinst:aws/ElastigroupUpdatePolicyRollConfig:ElastigroupUpdatePolicyRollConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shouldResumeStateful": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shouldRoll": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "shouldResumeStateful",
                "shouldRoll"
            ]
        },
        "spotinst:aws/ElastigroupUpdatePolicyRollConfig:ElastigroupUpdatePolicyRollConfig": {
            "properties": {
                "batchSizePercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gracePeriod": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthCheckType": {
                    "type": "string",
                    "description": "The service that will perform health checks for the instance. Valid values: `\"ELB\"`, `\"HCS\"`, `\"TARGET_GROUP\"`, `\"MLB\"`, `\"EC2\"`, `\"MULTAI_TARGET_SET\"`, `\"MLB_RUNTIME\"`, `\"K8S_NODE\"`, `\"NOMAD_NODE\"`, `\"ECS_CLUSTER_INSTANCE\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strategy": {
                    "$ref": "#/types/spotinst:aws/ElastigroupUpdatePolicyRollConfigStrategy:ElastigroupUpdatePolicyRollConfigStrategy",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitForRollPercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitForRollTimeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "batchSizePercentage"
            ]
        },
        "spotinst:aws/ElastigroupUpdatePolicyRollConfigStrategy:ElastigroupUpdatePolicyRollConfigStrategy": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchMinHealthyPercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onFailure": {
                    "$ref": "#/types/spotinst:aws/ElastigroupUpdatePolicyRollConfigStrategyOnFailure:ElastigroupUpdatePolicyRollConfigStrategyOnFailure",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shouldDrainInstances": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "spotinst:aws/ElastigroupUpdatePolicyRollConfigStrategyOnFailure:ElastigroupUpdatePolicyRollConfigStrategyOnFailure": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchNum": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shouldDecrementTargetCapacity": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shouldHandleAllBatches": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "actionType"
            ]
        },
        "spotinst:aws/ManagedInstanceIntegrationRoute53:ManagedInstanceIntegrationRoute53": {
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceIntegrationRoute53Domain:ManagedInstanceIntegrationRoute53Domain"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "domains"
            ]
        },
        "spotinst:aws/ManagedInstanceIntegrationRoute53Domain:ManagedInstanceIntegrationRoute53Domain": {
            "properties": {
                "hostedZoneId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recordSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceIntegrationRoute53DomainRecordSet:ManagedInstanceIntegrationRoute53DomainRecordSet"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spotinstAcctId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hostedZoneId",
                "recordSets"
            ]
        },
        "spotinst:aws/ManagedInstanceIntegrationRoute53DomainRecordSet:ManagedInstanceIntegrationRoute53DomainRecordSet": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The ManagedInstance name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usePublicIp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/ManagedInstanceLoadBalancer:ManagedInstanceLoadBalancer": {
            "properties": {
                "arn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoWeight": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azAwareness": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "balancerId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The ManagedInstance name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetSetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "spotinst:aws/ManagedInstanceNetworkInterface:ManagedInstanceNetworkInterface": {
            "properties": {
                "associateIpv6Address": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "associatePublicIpAddress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deviceIndex": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "deviceIndex"
            ]
        },
        "spotinst:aws/ManagedInstanceRevertToSpot:ManagedInstanceRevertToSpot": {
            "properties": {
                "performAt": {
                    "type": "string",
                    "description": "Valid values: “always”, “never”, \"timeWindow\".\nDefault `\"never\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "performAt"
            ]
        },
        "spotinst:aws/ManagedInstanceScheduledTask:ManagedInstanceScheduledTask": {
            "properties": {
                "cronExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "frequency": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "taskType"
            ]
        },
        "spotinst:aws/ManagedInstanceTag:ManagedInstanceTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Tag's key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Tag's name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/MrScalarApplication:MrScalarApplication": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The MrScaler name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:aws/MrScalarBootstrapActionsFile:MrScalarBootstrapActionsFile": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "key"
            ]
        },
        "spotinst:aws/MrScalarConfigurationsFile:MrScalarConfigurationsFile": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "key"
            ]
        },
        "spotinst:aws/MrScalarCoreEbsBlockDevice:MrScalarCoreEbsBlockDevice": {
            "properties": {
                "iops": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeInGb": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumesPerInstance": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sizeInGb",
                "volumeType"
            ]
        },
        "spotinst:aws/MrScalarCoreScalingDownPolicy:MrScalarCoreScalingDownPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dimensions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the metric in CloudWatch which the statement will be based on.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": "Must contain the value: `AWS/ElasticMapReduce`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use in order to determine if the policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "The time window in seconds over which the statistic is applied.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "description": "The aggregation method of the given metric. Valid Values: `average` | `sum` | `sampleCount` | `maximum` | `minimum`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "description": "The value that the specified statistic is compared to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for a given metric. Valid Values: `seconds` | `microseconds` | `milliseconds` | `bytes` | `kilobytes` | `megabytes` | `gigabytes` | `terabytes` | `bits` | `kilobits` | `megabits` | `gigabits` | `terabits` | `percent` | `count` | `bytes/second` | `kilobytes/second` | `megabytes/second` | `gigabytes/second` | `terabytes/second` | `bits/second` | `kilobits/second` | `megabits/second` | `gigabits/second` | `terabits/second` | `count/second` | `none`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:aws/MrScalarCoreScalingUpPolicy:MrScalarCoreScalingUpPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dimensions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the metric in CloudWatch which the statement will be based on.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": "Must contain the value: `AWS/ElasticMapReduce`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use in order to determine if the policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "The time window in seconds over which the statistic is applied.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "description": "The aggregation method of the given metric. Valid Values: `average` | `sum` | `sampleCount` | `maximum` | `minimum`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "description": "The value that the specified statistic is compared to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for a given metric. Valid Values: `seconds` | `microseconds` | `milliseconds` | `bytes` | `kilobytes` | `megabytes` | `gigabytes` | `terabytes` | `bits` | `kilobits` | `megabits` | `gigabits` | `terabits` | `percent` | `count` | `bytes/second` | `kilobytes/second` | `megabytes/second` | `gigabytes/second` | `terabytes/second` | `bits/second` | `kilobits/second` | `megabits/second` | `gigabits/second` | `terabits/second` | `count/second` | `none`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:aws/MrScalarInstanceWeight:MrScalarInstanceWeight": {
            "properties": {
                "instanceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weightedCapacity": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "instanceType",
                "weightedCapacity"
            ]
        },
        "spotinst:aws/MrScalarMasterEbsBlockDevice:MrScalarMasterEbsBlockDevice": {
            "properties": {
                "iops": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeInGb": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumesPerInstance": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sizeInGb",
                "volumeType"
            ]
        },
        "spotinst:aws/MrScalarProvisioningTimeout:MrScalarProvisioningTimeout": {
            "properties": {
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeoutAction": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "timeout",
                "timeoutAction"
            ]
        },
        "spotinst:aws/MrScalarScheduledTask:MrScalarScheduledTask": {
            "properties": {
                "cron": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "desiredCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceGroupType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cron",
                "instanceGroupType",
                "taskType"
            ]
        },
        "spotinst:aws/MrScalarStepsFile:MrScalarStepsFile": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "key"
            ]
        },
        "spotinst:aws/MrScalarTag:MrScalarTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:aws/MrScalarTaskEbsBlockDevice:MrScalarTaskEbsBlockDevice": {
            "properties": {
                "iops": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeInGb": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumesPerInstance": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sizeInGb",
                "volumeType"
            ]
        },
        "spotinst:aws/MrScalarTaskScalingDownPolicy:MrScalarTaskScalingDownPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dimensions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the metric in CloudWatch which the statement will be based on.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": "Must contain the value: `AWS/ElasticMapReduce`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use in order to determine if the policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "The time window in seconds over which the statistic is applied.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "description": "The aggregation method of the given metric. Valid Values: `average` | `sum` | `sampleCount` | `maximum` | `minimum`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "description": "The value that the specified statistic is compared to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for a given metric. Valid Values: `seconds` | `microseconds` | `milliseconds` | `bytes` | `kilobytes` | `megabytes` | `gigabytes` | `terabytes` | `bits` | `kilobits` | `megabits` | `gigabits` | `terabits` | `percent` | `count` | `bytes/second` | `kilobytes/second` | `megabytes/second` | `gigabytes/second` | `terabytes/second` | `bits/second` | `kilobits/second` | `megabits/second` | `gigabits/second` | `terabits/second` | `count/second` | `none`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:aws/MrScalarTaskScalingUpPolicy:MrScalarTaskScalingUpPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dimensions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the metric in CloudWatch which the statement will be based on.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": "Must contain the value: `AWS/ElasticMapReduce`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use in order to determine if the policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "The time window in seconds over which the statistic is applied.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "description": "The aggregation method of the given metric. Valid Values: `average` | `sum` | `sampleCount` | `maximum` | `minimum`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "description": "The value that the specified statistic is compared to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for a given metric. Valid Values: `seconds` | `microseconds` | `milliseconds` | `bytes` | `kilobytes` | `megabytes` | `gigabytes` | `terabytes` | `bits` | `kilobits` | `megabits` | `gigabits` | `terabits` | `percent` | `count` | `bytes/second` | `kilobytes/second` | `megabytes/second` | `gigabytes/second` | `terabytes/second` | `bits/second` | `kilobits/second` | `megabits/second` | `gigabits/second` | `terabits/second` | `count/second` | `none`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:aws/MrScalarTerminationPolicy:MrScalarTerminationPolicy": {
            "properties": {
                "statements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTerminationPolicyStatement:MrScalarTerminationPolicyStatement"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "statements"
            ]
        },
        "spotinst:aws/MrScalarTerminationPolicyStatement:MrScalarTerminationPolicyStatement": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "description": "The number of periods over which data is compared to the specified threshold.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "description": "The name of the metric in CloudWatch which the statement will be based on.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "description": "Must contain the value: `AWS/ElasticMapReduce`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "The operator to use in order to determine if the policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "The time window in seconds over which the statistic is applied.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "description": "The aggregation method of the given metric. Valid Values: `average` | `sum` | `sampleCount` | `maximum` | `minimum`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "description": "The value that the specified statistic is compared to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "description": "The unit for a given metric. Valid Values: `seconds` | `microseconds` | `milliseconds` | `bytes` | `kilobytes` | `megabytes` | `gigabytes` | `terabytes` | `bits` | `kilobits` | `megabits` | `gigabits` | `terabits` | `percent` | `count` | `bytes/second` | `kilobytes/second` | `megabytes/second` | `gigabytes/second` | `terabytes/second` | `bits/second` | `kilobits/second` | `megabits/second` | `gigabits/second` | `terabits/second` | `count/second` | `none`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "threshold"
            ]
        },
        "spotinst:aws/OceanAutoscaler:OceanAutoscaler": {
            "properties": {
                "autoHeadroomPercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleCooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:aws/OceanAutoscalerAutoscaleDown:OceanAutoscalerAutoscaleDown",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:aws/OceanAutoscalerAutoscaleHeadroom:OceanAutoscalerAutoscaleHeadroom",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleIsAutoConfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleIsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceLimits": {
                    "$ref": "#/types/spotinst:aws/OceanAutoscalerResourceLimits:OceanAutoscalerResourceLimits",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanAutoscalerAutoscaleDown:OceanAutoscalerAutoscaleDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxScaleDownPercentage": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanAutoscalerAutoscaleHeadroom:OceanAutoscalerAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gpuPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numOfUnits": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanAutoscalerResourceLimits:OceanAutoscalerResourceLimits": {
            "properties": {
                "maxMemoryGib": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxVcpu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of CPUs to allocate for each headroom unit. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of GPUS to allocate for each headroom unit.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the amount of memory (MiB) to allocate for each headroom unit.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU, memory and GPU.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "numOfUnits"
            ]
        },
        "spotinst:aws/OceanLaunchSpecBlockDeviceMapping:OceanLaunchSpecBlockDeviceMapping": {
            "properties": {
                "deviceName": {
                    "type": "string",
                    "description": "String. Set device name. (Example: \"/dev/xvda1\").\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ebs": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecBlockDeviceMappingEbs:OceanLaunchSpecBlockDeviceMappingEbs",
                    "description": "Object. Set Elastic Block Store properties .\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noDevice": {
                    "type": "string",
                    "description": "String. suppresses the specified device included in the block device mapping of the AMI.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "virtualName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "deviceName"
            ]
        },
        "spotinst:aws/OceanLaunchSpecBlockDeviceMappingEbs:OceanLaunchSpecBlockDeviceMappingEbs": {
            "properties": {
                "deleteOnTermination": {
                    "type": "boolean",
                    "description": "Boolean. Flag to delete the EBS on instance termination.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynamicVolumeSize": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSize:OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSize",
                    "description": "Object. Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encrypted": {
                    "type": "boolean",
                    "description": "Boolean. Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iops": {
                    "type": "integer",
                    "description": "Int. The number of I/O operations per second (IOPS) that the volume supports.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "String. Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snapshotId": {
                    "type": "string",
                    "description": "(Optional) String. The Snapshot ID to mount by.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "Int. The size, in GB of the volume.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeType": {
                    "type": "string",
                    "description": "String. The type of the volume (example: \"gp2\").\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteOnTermination",
                        "encrypted",
                        "volumeType"
                    ]
                }
            }
        },
        "spotinst:aws/OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSize:OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSize": {
            "properties": {
                "baseSize": {
                    "type": "integer",
                    "description": "Int. Initial size for volume. (Example: 50)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resource": {
                    "type": "string",
                    "description": "String. Resource type to increase volume size dynamically by. (valid values: \"CPU\")\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizePerResourceUnit": {
                    "type": "integer",
                    "description": "Int. Additional size (in GB) per resource unit. (Example: baseSize= 50, sizePerResourceUnit=20, and instance with 2 CPU is launched - its total disk size will be: 90GB)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "baseSize",
                "resource",
                "sizePerResourceUnit"
            ]
        },
        "spotinst:aws/OceanLaunchSpecElasticIpPool:OceanLaunchSpecElasticIpPool": {
            "properties": {
                "tagSelector": {
                    "$ref": "#/types/spotinst:aws/OceanLaunchSpecElasticIpPoolTagSelector:OceanLaunchSpecElasticIpPoolTagSelector",
                    "description": "Key-value object, which defines an Elastic IP from the customer pool. Can be null.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLaunchSpecElasticIpPoolTagSelector:OceanLaunchSpecElasticIpPoolTagSelector": {
            "properties": {
                "tagKey": {
                    "type": "string",
                    "description": "Elastic IP tag key. The launch spec will consider all elastic IPs tagged with this tag as a part of the elastic IP pool to use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagValue": {
                    "type": "string",
                    "description": "Elastic IP tag value. Can be null.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "tagKey"
            ]
        },
        "spotinst:aws/OceanLaunchSpecLabel:OceanLaunchSpecLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The tag value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:aws/OceanLaunchSpecResourceLimit:OceanLaunchSpecResourceLimit": {
            "properties": {
                "maxInstanceCount": {
                    "type": "integer",
                    "description": "set a maximum number of instances per launch specification. Can be null. If set, value must be greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanLaunchSpecTag:OceanLaunchSpecTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The tag value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:aws/OceanLaunchSpecTaint:OceanLaunchSpecTaint": {
            "properties": {
                "effect": {
                    "type": "string",
                    "description": "The effect of the taint. Valid values: `\"NoSchedule\"`, `\"PreferNoSchedule\"`, `\"NoExecute\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "The tag key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The tag value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "value"
            ]
        },
        "spotinst:aws/OceanLoadBalancer:OceanLoadBalancer": {
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "Required if type is set to TARGET_GROUP\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Required if type is set to CLASSIC\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Can be set to CLASSIC or TARGET_GROUP\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanScheduledTask:OceanScheduledTask": {
            "properties": {
                "shutdownHours": {
                    "$ref": "#/types/spotinst:aws/OceanScheduledTaskShutdownHours:OceanScheduledTaskShutdownHours",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanScheduledTaskTask:OceanScheduledTaskTask"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:aws/OceanScheduledTaskShutdownHours:OceanScheduledTaskShutdownHours": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "timeWindows"
            ]
        },
        "spotinst:aws/OceanScheduledTaskTask:OceanScheduledTaskTask": {
            "properties": {
                "cronExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cronExpression",
                "isEnabled",
                "taskType"
            ]
        },
        "spotinst:aws/OceanTag:OceanTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The tag value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:aws/OceanUpdatePolicy:OceanUpdatePolicy": {
            "properties": {
                "rollConfig": {
                    "$ref": "#/types/spotinst:aws/OceanUpdatePolicyRollConfig:OceanUpdatePolicyRollConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shouldRoll": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "shouldRoll"
            ]
        },
        "spotinst:aws/OceanUpdatePolicyRollConfig:OceanUpdatePolicyRollConfig": {
            "properties": {
                "batchSizePercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "batchSizePercentage"
            ]
        },
        "spotinst:azure/ElastigroupHealthCheck:ElastigroupHealthCheck": {
            "properties": {
                "autoHealing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gracePeriod": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthCheckType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "healthCheckType"
            ]
        },
        "spotinst:azure/ElastigroupImage:ElastigroupImage": {
            "properties": {
                "customs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupImageCustom:ElastigroupImageCustom"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "marketplaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupImageMarketplace:ElastigroupImageMarketplace"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:azure/ElastigroupImageCustom:ElastigroupImageCustom": {
            "properties": {
                "imageName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "The Resource Group that the user-assigned managed identity resides in.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "imageName",
                "resourceGroupName"
            ]
        },
        "spotinst:azure/ElastigroupImageMarketplace:ElastigroupImageMarketplace": {
            "properties": {
                "offer": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publisher": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sku": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "offer",
                "publisher",
                "sku"
            ]
        },
        "spotinst:azure/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes": {
            "properties": {
                "clusterIdentifier": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "clusterIdentifier"
            ]
        },
        "spotinst:azure/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime": {
            "properties": {
                "deploymentId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "deploymentId"
            ]
        },
        "spotinst:azure/ElastigroupLoadBalancer:ElastigroupLoadBalancer": {
            "properties": {
                "autoWeight": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "balancerId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetSetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "spotinst:azure/ElastigroupLogin:ElastigroupLogin": {
            "properties": {
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sshPublicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "userName"
            ]
        },
        "spotinst:azure/ElastigroupManagedServiceIdentity:ElastigroupManagedServiceIdentity": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the managed identity.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "The Resource Group that the user-assigned managed identity resides in.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "resourceGroupName"
            ]
        },
        "spotinst:azure/ElastigroupNetwork:ElastigroupNetwork": {
            "properties": {
                "additionalIpConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupNetworkAdditionalIpConfig:ElastigroupNetworkAdditionalIpConfig"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "assignPublicIp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "The Resource Group that the user-assigned managed identity resides in.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnetName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "virtualNetworkName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "resourceGroupName",
                "subnetName",
                "virtualNetworkName"
            ]
        },
        "spotinst:azure/ElastigroupNetworkAdditionalIpConfig:ElastigroupNetworkAdditionalIpConfig": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the managed identity.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateIpVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:azure/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "statistic",
                        "threshold"
                    ]
                }
            }
        },
        "spotinst:azure/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the managed identity.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:azure/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimum": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "statistic",
                        "threshold"
                    ]
                }
            }
        },
        "spotinst:azure/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the managed identity.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:azure/ElastigroupScheduledTask:ElastigroupScheduledTask": {
            "properties": {
                "adjustment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustmentPercentage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "batchSizePercentage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cronExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gracePeriod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleMaxCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleMinCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleTargetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cronExpression",
                "taskType"
            ]
        },
        "spotinst:azure/ElastigroupStrategy:ElastigroupStrategy": {
            "properties": {
                "drainingTimeout": {
                    "type": "integer",
                    "description": "Time (seconds) to allow the instance to be drained from incoming TCP connections and detached from MLB before terminating it during a scale-down operation.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lowPriorityPercentage": {
                    "type": "integer",
                    "description": "Percentage of Low Priority instances to maintain. Required if `od_count` is not specified.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "odCount": {
                    "type": "integer",
                    "description": "Number of On-Demand instances to maintain. Required if low_priority_percentage is not specified.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:azure/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy": {
            "properties": {
                "rollConfig": {
                    "$ref": "#/types/spotinst:azure/ElastigroupUpdatePolicyRollConfig:ElastigroupUpdatePolicyRollConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shouldRoll": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "shouldRoll"
            ]
        },
        "spotinst:azure/ElastigroupUpdatePolicyRollConfig:ElastigroupUpdatePolicyRollConfig": {
            "properties": {
                "batchSizePercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gracePeriod": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthCheckType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "batchSizePercentage"
            ]
        },
        "spotinst:ecs/OceanAutoscaler:OceanAutoscaler": {
            "properties": {
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "down": {
                    "$ref": "#/types/spotinst:ecs/OceanAutoscalerDown:OceanAutoscalerDown",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headroom": {
                    "$ref": "#/types/spotinst:ecs/OceanAutoscalerHeadroom:OceanAutoscalerHeadroom",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isAutoConfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceLimits": {
                    "$ref": "#/types/spotinst:ecs/OceanAutoscalerResourceLimits:OceanAutoscalerResourceLimits",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanAutoscalerDown:OceanAutoscalerDown": {
            "properties": {
                "maxScaleDownPercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanAutoscalerHeadroom:OceanAutoscalerHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numOfUnits": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanAutoscalerResourceLimits:OceanAutoscalerResourceLimits": {
            "properties": {
                "maxMemoryGib": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxVcpu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanLaunchSpecAttribute:OceanLaunchSpecAttribute": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The label key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The label value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:ecs/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of CPUs to allocate for each headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the amount of memory (MiB) to allocate for each headroom unit.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "numOfUnits"
            ]
        },
        "spotinst:ecs/OceanLaunchSpecTag:OceanLaunchSpecTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The label key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The label value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:ecs/OceanScheduledTask:OceanScheduledTask": {
            "properties": {
                "shutdownHours": {
                    "$ref": "#/types/spotinst:ecs/OceanScheduledTaskShutdownHours:OceanScheduledTaskShutdownHours",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanScheduledTaskTask:OceanScheduledTaskTask"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:ecs/OceanScheduledTaskShutdownHours:OceanScheduledTaskShutdownHours": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "timeWindows"
            ]
        },
        "spotinst:ecs/OceanScheduledTaskTask:OceanScheduledTaskTask": {
            "properties": {
                "cronExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cronExpression",
                "isEnabled",
                "taskType"
            ]
        },
        "spotinst:ecs/OceanTag:OceanTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The tag value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:ecs/OceanUpdatePolicy:OceanUpdatePolicy": {
            "properties": {
                "rollConfig": {
                    "$ref": "#/types/spotinst:ecs/OceanUpdatePolicyRollConfig:OceanUpdatePolicyRollConfig",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shouldRoll": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "shouldRoll"
            ]
        },
        "spotinst:ecs/OceanUpdatePolicyRollConfig:OceanUpdatePolicyRollConfig": {
            "properties": {
                "batchSizePercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "batchSizePercentage"
            ]
        },
        "spotinst:gcp/ElastigroupBackendService:ElastigroupBackendService": {
            "properties": {
                "locationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namedPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupBackendServiceNamedPort:ElastigroupBackendServiceNamedPort"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scheme": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ]
        },
        "spotinst:gcp/ElastigroupBackendServiceNamedPort:ElastigroupBackendServiceNamedPort": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "ports"
            ]
        },
        "spotinst:gcp/ElastigroupDisk:ElastigroupDisk": {
            "properties": {
                "autoDelete": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "boot": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deviceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "initializeParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupDiskInitializeParam:ElastigroupDiskInitializeParam"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interface": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gcp/ElastigroupDiskInitializeParam:ElastigroupDiskInitializeParam": {
            "properties": {
                "diskSizeGb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "diskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceImage"
            ]
        },
        "spotinst:gcp/ElastigroupGpu:ElastigroupGpu": {
            "properties": {
                "count": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "count",
                "type"
            ]
        },
        "spotinst:gcp/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom": {
            "properties": {
                "memoryGib": {
                    "type": "integer",
                    "description": "The memory (in GiB) in the custom instance types. GCP has a number of limitations on accepted memory values.For more information, see the GCP documentation (here.)[https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#specifications]\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vcpu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "memoryGib",
                "vcpu"
            ]
        },
        "spotinst:gcp/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm": {
            "properties": {
                "masterHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "masterPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "masterHost",
                "masterPort"
            ]
        },
        "spotinst:gcp/ElastigroupIntegrationGke:ElastigroupIntegrationGke": {
            "properties": {
                "autoUpdate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleCooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationGkeAutoscaleDown:ElastigroupIntegrationGkeAutoscaleDown",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationGkeAutoscaleHeadroom:ElastigroupIntegrationGkeAutoscaleHeadroom",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleIsAutoConfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleIsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationGkeAutoscaleLabel:ElastigroupIntegrationGkeAutoscaleLabel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "location": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gcp/ElastigroupIntegrationGkeAutoscaleDown:ElastigroupIntegrationGkeAutoscaleDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gcp/ElastigroupIntegrationGkeAutoscaleHeadroom:ElastigroupIntegrationGkeAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numOfUnits": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gcp/ElastigroupIntegrationGkeAutoscaleLabel:ElastigroupIntegrationGkeAutoscaleLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Labels key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Labels value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:gcp/ElastigroupLabel:ElastigroupLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Labels key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Labels value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:gcp/ElastigroupMetadata:ElastigroupMetadata": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Labels key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Labels value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:gcp/ElastigroupNetworkInterface:ElastigroupNetworkInterface": {
            "properties": {
                "accessConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupNetworkInterfaceAccessConfig:ElastigroupNetworkInterfaceAccessConfig"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aliasIpRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupNetworkInterfaceAliasIpRange:ElastigroupNetworkInterfaceAliasIpRange"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "network": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "spotinst:gcp/ElastigroupNetworkInterfaceAccessConfig:ElastigroupNetworkInterfaceAccessConfig": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gcp/ElastigroupNetworkInterfaceAliasIpRange:ElastigroupNetworkInterfaceAliasIpRange": {
            "properties": {
                "ipCidrRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnetworkRangeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ipCidrRange",
                "subnetworkRangeName"
            ]
        },
        "spotinst:gcp/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustment": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "source",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:gcp/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Labels value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:gcp/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustment": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "source",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:gcp/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Labels value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:gcp/ElastigroupScheduledTask:ElastigroupScheduledTask": {
            "properties": {
                "cronExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetCapacity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "taskType"
            ]
        },
        "spotinst:gcp/ElastigroupSubnet:ElastigroupSubnet": {
            "properties": {
                "region": {
                    "type": "string",
                    "description": "The region for the group of subnets.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnetNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of the subnets in the region.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "region",
                "subnetNames"
            ]
        },
        "spotinst:gke/ElastigroupBackendService:ElastigroupBackendService": {
            "properties": {
                "locationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namedPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupBackendServiceNamedPort:ElastigroupBackendServiceNamedPort"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scheme": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ]
        },
        "spotinst:gke/ElastigroupBackendServiceNamedPort:ElastigroupBackendServiceNamedPort": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "ports"
            ]
        },
        "spotinst:gke/ElastigroupDisk:ElastigroupDisk": {
            "properties": {
                "autoDelete": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "boot": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deviceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "initializeParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupDiskInitializeParam:ElastigroupDiskInitializeParam"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interface": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gke/ElastigroupDiskInitializeParam:ElastigroupDiskInitializeParam": {
            "properties": {
                "diskSizeGb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "diskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceImage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceImage"
            ]
        },
        "spotinst:gke/ElastigroupGpu:ElastigroupGpu": {
            "properties": {
                "count": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "count",
                "type"
            ]
        },
        "spotinst:gke/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom": {
            "properties": {
                "memoryGib": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vcpu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "memoryGib",
                "vcpu"
            ]
        },
        "spotinst:gke/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm": {
            "properties": {
                "masterHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "masterPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "masterHost",
                "masterPort"
            ]
        },
        "spotinst:gke/ElastigroupIntegrationGke:ElastigroupIntegrationGke": {
            "properties": {
                "autoUpdate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleCooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleDown": {
                    "$ref": "#/types/spotinst:gke/ElastigroupIntegrationGkeAutoscaleDown:ElastigroupIntegrationGkeAutoscaleDown",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleHeadroom": {
                    "$ref": "#/types/spotinst:gke/ElastigroupIntegrationGkeAutoscaleHeadroom:ElastigroupIntegrationGkeAutoscaleHeadroom",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleIsAutoConfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleIsEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoscaleLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupIntegrationGkeAutoscaleLabel:ElastigroupIntegrationGkeAutoscaleLabel"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clusterId": {
                    "type": "string",
                    "description": "The name of the GKE cluster you wish to import.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "location": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gke/ElastigroupIntegrationGkeAutoscaleDown:ElastigroupIntegrationGkeAutoscaleDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gke/ElastigroupIntegrationGkeAutoscaleHeadroom:ElastigroupIntegrationGkeAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numOfUnits": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gke/ElastigroupIntegrationGkeAutoscaleLabel:ElastigroupIntegrationGkeAutoscaleLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:gke/ElastigroupLabel:ElastigroupLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:gke/ElastigroupMetadata:ElastigroupMetadata": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:gke/ElastigroupNetworkInterface:ElastigroupNetworkInterface": {
            "properties": {
                "accessConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupNetworkInterfaceAccessConfig:ElastigroupNetworkInterfaceAccessConfig"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aliasIpRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupNetworkInterfaceAliasIpRange:ElastigroupNetworkInterfaceAliasIpRange"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "network": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "spotinst:gke/ElastigroupNetworkInterfaceAccessConfig:ElastigroupNetworkInterfaceAccessConfig": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gke/ElastigroupNetworkInterfaceAliasIpRange:ElastigroupNetworkInterfaceAliasIpRange": {
            "properties": {
                "ipCidrRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnetworkRangeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ipCidrRange",
                "subnetworkRangeName"
            ]
        },
        "spotinst:gke/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustment": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "source",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:gke/ElastigroupScalingDownPolicyDimension:ElastigroupScalingDownPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:gke/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "adjustment": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statistic": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace",
                "policyName",
                "threshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cooldown",
                        "evaluationPeriods",
                        "metricName",
                        "namespace",
                        "operator",
                        "period",
                        "policyName",
                        "source",
                        "statistic",
                        "threshold",
                        "unit"
                    ]
                }
            }
        },
        "spotinst:gke/ElastigroupScalingUpPolicyDimension:ElastigroupScalingUpPolicyDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "spotinst:gke/OceanImportAutoscaler:OceanImportAutoscaler": {
            "properties": {
                "autoHeadroomPercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cooldown": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "down": {
                    "$ref": "#/types/spotinst:gke/OceanImportAutoscalerDown:OceanImportAutoscalerDown",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headroom": {
                    "$ref": "#/types/spotinst:gke/OceanImportAutoscalerHeadroom:OceanImportAutoscalerHeadroom",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isAutoConfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceLimits": {
                    "$ref": "#/types/spotinst:gke/OceanImportAutoscalerResourceLimits:OceanImportAutoscalerResourceLimits",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanImportAutoscalerDown:OceanImportAutoscalerDown": {
            "properties": {
                "evaluationPeriods": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxScaleDownPercentage": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanImportAutoscalerHeadroom:OceanImportAutoscalerHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gpuPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numOfUnits": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanImportAutoscalerResourceLimits:OceanImportAutoscalerResourceLimits": {
            "properties": {
                "maxMemoryGib": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxVcpu": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanImportBackendService:OceanImportBackendService": {
            "properties": {
                "locationType": {
                    "type": "string",
                    "description": "Sets which location the backend services will be active. Valid values: `regional`, `global`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namedPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanImportBackendServiceNamedPort:OceanImportBackendServiceNamedPort"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scheme": {
                    "type": "string",
                    "description": "Use when `location_type` is `regional`. Set the traffic for the backend service to either between the instances in the vpc or to traffic from the internet. Valid values: `INTERNAL`, `EXTERNAL`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the backend service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ]
        },
        "spotinst:gke/OceanImportBackendServiceNamedPort:OceanImportBackendServiceNamedPort": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of ports.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "ports"
            ]
        },
        "spotinst:gke/OceanImportScheduledTask:OceanImportScheduledTask": {
            "properties": {
                "shutdownHours": {
                    "$ref": "#/types/spotinst:gke/OceanImportScheduledTaskShutdownHours:OceanImportScheduledTaskShutdownHours",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanImportScheduledTaskTask:OceanImportScheduledTaskTask"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:gke/OceanImportScheduledTaskShutdownHours:OceanImportScheduledTaskShutdownHours": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "timeWindows"
            ]
        },
        "spotinst:gke/OceanImportScheduledTaskTask:OceanImportScheduledTaskTask": {
            "properties": {
                "batchSizePercentage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cronExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "taskType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cronExpression",
                "isEnabled",
                "taskType"
            ]
        },
        "spotinst:gke/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom": {
            "properties": {
                "cpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of CPUs to allocate for each headroom unit. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gpuPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the number of GPUS to allocate for each headroom unit.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryPerUnit": {
                    "type": "integer",
                    "description": "Optionally configure the amount of memory (MB) to allocate for each headroom unit.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numOfUnits": {
                    "type": "integer",
                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU, memory and GPU.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "numOfUnits"
            ]
        },
        "spotinst:gke/OceanLaunchSpecLabel:OceanLaunchSpecLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:gke/OceanLaunchSpecMetadata:OceanLaunchSpecMetadata": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:gke/OceanLaunchSpecTaint:OceanLaunchSpecTaint": {
            "properties": {
                "effect": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "value"
            ]
        },
        "spotinst:multai/BalancerConnectionTimeouts:BalancerConnectionTimeouts": {
            "properties": {
                "draining": {
                    "type": "integer",
                    "description": "The time for the load balancer to keep connections alive before reporting the target as de-registered, in seconds (range: 1 - 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idle": {
                    "type": "integer",
                    "description": "The idle timeout value, in seconds. (range: 1 - 3600).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "spotinst:multai/BalancerTag:BalancerTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag's key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The tag's value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:multai/ListenerTag:ListenerTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag's key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The tag's value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:multai/ListenerTlsConfig:ListenerTlsConfig": {
            "properties": {
                "certificateIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Contains one or more certificate chains to present to the other side of the connection.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cipherSuites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of supported cipher suites. If cipherSuites is nil, TLS uses a list of suites supported by the implementation.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxVersion": {
                    "type": "string",
                    "description": "MaxVersion contains the maximum SSL/TLS version that is acceptable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minVersion": {
                    "type": "string",
                    "description": "MinVersion contains the minimum SSL/TLS version that is acceptable (1.0 is the minimum).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preferServerCipherSuites": {
                    "type": "boolean",
                    "description": "Controls whether the server selects the client’s most preferred ciphersuite, or the server’s most preferred ciphersuite.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionTicketsDisabled": {
                    "type": "boolean",
                    "description": "May be set to true to disable session ticket (resumption) support.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "certificateIds",
                "cipherSuites",
                "maxVersion",
                "minVersion",
                "preferServerCipherSuites",
                "sessionTicketsDisabled"
            ]
        },
        "spotinst:multai/RoutingRuleTag:RoutingRuleTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag's key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The tag's value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:multai/TargetSetHealthCheck:TargetSetHealthCheck": {
            "properties": {
                "healthyThreshold": {
                    "type": "integer",
                    "description": "Total number of allowed healthy Targets.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "The interval for the health check.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to perform the health check.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the load balancer is listening.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol to allow connections to the target for the health check.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "The time out for the health check.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unhealthyThreshold": {
                    "type": "integer",
                    "description": "Total number of allowed unhealthy Targets.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "healthyThreshold",
                "interval",
                "path",
                "protocol",
                "timeout",
                "unhealthyThreshold"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "healthyThreshold",
                        "interval",
                        "path",
                        "port",
                        "protocol",
                        "timeout",
                        "unhealthyThreshold"
                    ]
                }
            }
        },
        "spotinst:multai/TargetSetTag:TargetSetTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag's key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The tag's value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "spotinst:multai/TargetTag:TargetTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag's key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The tag's value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the spotinst package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "inputProperties": {
            "account": {
                "type": "string",
                "description": "Spotinst Account ID\n",
                "default": "",
                "defaultInfo": {
                    "environment": [
                        "SPOTINST_ACCOUNT"
                    ]
                }
            },
            "featureFlags": {
                "type": "string",
                "description": "Spotinst SDK Feature Flags\n"
            },
            "token": {
                "type": "string",
                "description": "Spotinst Personal API Access Token\n",
                "default": "",
                "defaultInfo": {
                    "environment": [
                        "SPOTINST_TOKEN"
                    ]
                }
            }
        }
    },
    "resources": {
        "spotinst:aws/beanstalk:Beanstalk": {
            "description": "Provides a Spotinst AWS group resource using Elastic Beanstalk.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst elastigoup_aws_beanstalk = new spotinst.aws.Beanstalk(\"elastigoup-aws-beanstalk\", {\n    beanstalkEnvironmentId: \"e-example\",\n    beanstalkEnvironmentName: \"example-env\",\n    deploymentPreferences: {\n        automaticRoll: true,\n        batchSizePercentage: 100,\n        gracePeriod: 90,\n        strategies: [{\n            action: \"REPLACE_SERVER\",\n            shouldDrainInstances: true,\n        }],\n    },\n    desiredCapacity: 0,\n    instanceTypesSpots: [\n        \"t2.micro\",\n        \"t2.medium\",\n        \"t2.large\",\n    ],\n    managedActions: {\n        platformUpdate: {\n            performAt: \"timeWindow\",\n            timeWindow: \"Mon:23:50-Tue:00:20\",\n            updateLevel: \"minorAndPatch\",\n        },\n    },\n    maxSize: 1,\n    minSize: 0,\n    product: \"Linux/UNIX\",\n    region: \"us-west-2\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nelastigoup_aws_beanstalk = spotinst.aws.Beanstalk(\"elastigoup-aws-beanstalk\",\n    beanstalk_environment_id=\"e-example\",\n    beanstalk_environment_name=\"example-env\",\n    deployment_preferences={\n        \"automaticRoll\": True,\n        \"batchSizePercentage\": 100,\n        \"grace_period\": 90,\n        \"strategies\": [{\n            \"action\": \"REPLACE_SERVER\",\n            \"shouldDrainInstances\": True,\n        }],\n    },\n    desired_capacity=0,\n    instance_types_spots=[\n        \"t2.micro\",\n        \"t2.medium\",\n        \"t2.large\",\n    ],\n    managed_actions={\n        \"platformUpdate\": {\n            \"performAt\": \"timeWindow\",\n            \"timeWindow\": \"Mon:23:50-Tue:00:20\",\n            \"updateLevel\": \"minorAndPatch\",\n        },\n    },\n    max_size=1,\n    min_size=0,\n    product=\"Linux/UNIX\",\n    region=\"us-west-2\")\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var elastigoup_aws_beanstalk = new SpotInst.Aws.Beanstalk(\"elastigoup-aws-beanstalk\", new SpotInst.Aws.BeanstalkArgs\n        {\n            BeanstalkEnvironmentId = \"e-example\",\n            BeanstalkEnvironmentName = \"example-env\",\n            DeploymentPreferences = new SpotInst.Aws.Inputs.BeanstalkDeploymentPreferencesArgs\n            {\n                AutomaticRoll = true,\n                BatchSizePercentage = 100,\n                GracePeriod = 90,\n                Strategies = \n                {\n                    new SpotInst.Aws.Inputs.BeanstalkDeploymentPreferencesStrategyArgs\n                    {\n                        Action = \"REPLACE_SERVER\",\n                        ShouldDrainInstances = true,\n                    },\n                },\n            },\n            DesiredCapacity = 0,\n            InstanceTypesSpots = \n            {\n                \"t2.micro\",\n                \"t2.medium\",\n                \"t2.large\",\n            },\n            ManagedActions = new SpotInst.Aws.Inputs.BeanstalkManagedActionsArgs\n            {\n                PlatformUpdate = new SpotInst.Aws.Inputs.BeanstalkManagedActionsPlatformUpdateArgs\n                {\n                    PerformAt = \"timeWindow\",\n                    TimeWindow = \"Mon:23:50-Tue:00:20\",\n                    UpdateLevel = \"minorAndPatch\",\n                },\n            },\n            MaxSize = 1,\n            MinSize = 0,\n            Product = \"Linux/UNIX\",\n            Region = \"us-west-2\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewBeanstalk(ctx, \"elastigoup_aws_beanstalk\", \u0026aws.BeanstalkArgs{\n\t\t\tBeanstalkEnvironmentId:   pulumi.String(\"e-example\"),\n\t\t\tBeanstalkEnvironmentName: pulumi.String(\"example-env\"),\n\t\t\tDeploymentPreferences: \u0026aws.BeanstalkDeploymentPreferencesArgs{\n\t\t\t\tAutomaticRoll:       pulumi.Bool(true),\n\t\t\t\tBatchSizePercentage: pulumi.Int(100),\n\t\t\t\tGracePeriod:         pulumi.Int(90),\n\t\t\t\tStrategies: aws.BeanstalkDeploymentPreferencesStrategyArray{\n\t\t\t\t\t\u0026aws.BeanstalkDeploymentPreferencesStrategyArgs{\n\t\t\t\t\t\tAction:               pulumi.String(\"REPLACE_SERVER\"),\n\t\t\t\t\t\tShouldDrainInstances: pulumi.Bool(true),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tDesiredCapacity: pulumi.Int(0),\n\t\t\tInstanceTypesSpots: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"t2.micro\"),\n\t\t\t\tpulumi.String(\"t2.medium\"),\n\t\t\t\tpulumi.String(\"t2.large\"),\n\t\t\t},\n\t\t\tManagedActions: \u0026aws.BeanstalkManagedActionsArgs{\n\t\t\t\tPlatformUpdate: \u0026aws.BeanstalkManagedActionsPlatformUpdateArgs{\n\t\t\t\t\tPerformAt:   pulumi.String(\"timeWindow\"),\n\t\t\t\t\tTimeWindow:  pulumi.String(\"Mon:23:50-Tue:00:20\"),\n\t\t\t\t\tUpdateLevel: pulumi.String(\"minorAndPatch\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tMaxSize: pulumi.Int(1),\n\t\t\tMinSize: pulumi.Int(0),\n\t\t\tProduct: pulumi.String(\"Linux/UNIX\"),\n\t\t\tRegion:  pulumi.String(\"us-west-2\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Scheduled Tasks\n\nEach `scheduled_task` supports the following:\n\n* `task_type` - (Required) The task type to run. Supported task types are: `\"scale\"`, `\"backup_ami\"`, `\"roll\"`, `\"scaleUp\"`, `\"percentageScaleUp\"`, `\"scaleDown\"`, `\"percentageScaleDown\"`, `\"statefulUpdateCapacity\"`.\n* `cron_expression` - (Optional; Required if not using `frequency`) A valid cron expression. The cron is running in UTC time zone and is in [Unix cron format](https://en.wikipedia.org/wiki/Cron).\n* `start_time` - (Optional; Format: ISO 8601) Set a start time for one time tasks.\n* `frequency` - (Optional; Required if not using `cron_expression`) The recurrence frequency to run this task. Supported values are `\"hourly\"`, `\"daily\"`, `\"weekly\"` and `\"continuous\"`.\n* `scale_target_capacity` - (Optional) The desired number of instances the group should have.\n* `scale_min_capacity` - (Optional) The minimum number of instances the group should have.\n* `scale_max_capacity` - (Optional) The maximum number of instances the group should have.\n* `is_enabled` - (Optional, Default: `true`) Setting the task to being enabled or disabled.\n* `target_capacity` - (Optional; Only valid for statefulUpdateCapacity) The desired number of instances the group should have.\n* `min_capacity` - (Optional; Only valid for statefulUpdateCapacity) The minimum number of instances the group should have.\n* `max_capacity` - (Optional; Only valid for statefulUpdateCapacity) The maximum number of instances the group should have.\n* `batch_size_percentage` - (Optional; Required when the `task_type` is `\"roll\"`.) The percentage size of each batch in the scheduled deployment roll.\n* `grace_period` - (Optional) The period of time (seconds) to wait before checking a batch's health after it's deployment.\n* `adjustment` - (Optional; Min 1) The number of instances to add or remove.\n* `adjustment_percentage` - (Optional; Min 1) The percentage of instances to add or remove.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n",
            "properties": {
                "beanstalkEnvironmentId": {
                    "type": "string",
                    "description": "The id of an existing Beanstalk environment.\n"
                },
                "beanstalkEnvironmentName": {
                    "type": "string",
                    "description": "The name of an existing Beanstalk environment.\n"
                },
                "deploymentPreferences": {
                    "$ref": "#/types/spotinst:aws/BeanstalkDeploymentPreferences:BeanstalkDeploymentPreferences",
                    "description": "Preferences when performing a roll\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "instanceTypesSpots": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more instance types. To maximize the availability of Spot instances, select as many instance types as possible.\n"
                },
                "maintenance": {
                    "type": "string"
                },
                "managedActions": {
                    "$ref": "#/types/spotinst:aws/BeanstalkManagedActions:BeanstalkManagedActions",
                    "description": "Managed Actions parameters\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "product": {
                    "type": "string",
                    "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`.\nFor EC2 Classic instances:  `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region your group will be created in. Cannot be changed after the group has been created.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/BeanstalkScheduledTask:BeanstalkScheduledTask"
                    }
                }
            },
            "required": [
                "desiredCapacity",
                "instanceTypesSpots",
                "maxSize",
                "minSize",
                "name",
                "product",
                "region"
            ],
            "inputProperties": {
                "beanstalkEnvironmentId": {
                    "type": "string",
                    "description": "The id of an existing Beanstalk environment.\n"
                },
                "beanstalkEnvironmentName": {
                    "type": "string",
                    "description": "The name of an existing Beanstalk environment.\n"
                },
                "deploymentPreferences": {
                    "$ref": "#/types/spotinst:aws/BeanstalkDeploymentPreferences:BeanstalkDeploymentPreferences",
                    "description": "Preferences when performing a roll\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "instanceTypesSpots": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more instance types. To maximize the availability of Spot instances, select as many instance types as possible.\n"
                },
                "maintenance": {
                    "type": "string"
                },
                "managedActions": {
                    "$ref": "#/types/spotinst:aws/BeanstalkManagedActions:BeanstalkManagedActions",
                    "description": "Managed Actions parameters\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "product": {
                    "type": "string",
                    "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`.\nFor EC2 Classic instances:  `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region your group will be created in. Cannot be changed after the group has been created.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/BeanstalkScheduledTask:BeanstalkScheduledTask"
                    }
                }
            },
            "requiredInputs": [
                "desiredCapacity",
                "instanceTypesSpots",
                "maxSize",
                "minSize",
                "product",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Beanstalk resources.\n",
                "properties": {
                    "beanstalkEnvironmentId": {
                        "type": "string",
                        "description": "The id of an existing Beanstalk environment.\n"
                    },
                    "beanstalkEnvironmentName": {
                        "type": "string",
                        "description": "The name of an existing Beanstalk environment.\n"
                    },
                    "deploymentPreferences": {
                        "$ref": "#/types/spotinst:aws/BeanstalkDeploymentPreferences:BeanstalkDeploymentPreferences",
                        "description": "Preferences when performing a roll\n"
                    },
                    "desiredCapacity": {
                        "type": "integer",
                        "description": "The desired number of instances the group should have at any time.\n"
                    },
                    "instanceTypesSpots": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more instance types. To maximize the availability of Spot instances, select as many instance types as possible.\n"
                    },
                    "maintenance": {
                        "type": "string"
                    },
                    "managedActions": {
                        "$ref": "#/types/spotinst:aws/BeanstalkManagedActions:BeanstalkManagedActions",
                        "description": "Managed Actions parameters\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The maximum number of instances the group should have at any time.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The minimum number of instances the group should have at any time.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name.\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`.\nFor EC2 Classic instances:  `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The AWS region your group will be created in. Cannot be changed after the group has been created.\n"
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/BeanstalkScheduledTask:BeanstalkScheduledTask"
                        }
                    }
                },
                "type": "object"
            }
        },
        "spotinst:aws/elastigroup:Elastigroup": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.\nNote: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:\n`availability_zones = [\"us-east-1a:subnet-123456:ClusterI03\"]`\n"
                },
                "blockDevicesMode": {
                    "type": "string"
                },
                "capacityUnit": {
                    "type": "string",
                    "description": "The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs.\n"
                },
                "cpuCredits": {
                    "type": "string",
                    "description": "Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The group description.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                },
                "ebsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupEbsBlockDevice:ElastigroupEbsBlockDevice"
                    }
                },
                "ebsOptimized": {
                    "type": "boolean",
                    "description": "Enable high bandwidth connectivity between instances and AWS’s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.\n"
                },
                "elasticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.\n"
                },
                "elasticLoadBalancers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enableMonitoring": {
                    "type": "boolean",
                    "description": "Indicates whether monitoring is enabled for the instance.\n"
                },
                "ephemeralBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupEphemeralBlockDevice:ElastigroupEphemeralBlockDevice"
                    }
                },
                "fallbackToOndemand": {
                    "type": "boolean",
                    "description": "In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.\n"
                },
                "healthCheckGracePeriod": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n"
                },
                "healthCheckType": {
                    "type": "string",
                    "description": "The service that will perform health checks for the instance. Valid values: `\"ELB\"`, `\"HCS\"`, `\"TARGET_GROUP\"`, `\"MLB\"`, `\"EC2\"`, `\"MULTAI_TARGET_SET\"`, `\"MLB_RUNTIME\"`, `\"K8S_NODE\"`, `\"NOMAD_NODE\"`, `\"ECS_CLUSTER_INSTANCE\"`.\n"
                },
                "healthCheckUnhealthyDurationBeforeReplacement": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "The ID of the AMI used to launch the instance.\n"
                },
                "instanceTypesOndemand": {
                    "type": "string",
                    "description": "The type of instance determines your instance's CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).\n"
                },
                "instanceTypesPreferredSpots": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.\n"
                },
                "instanceTypesSpots": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more instance types.\n"
                },
                "instanceTypesWeights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupInstanceTypesWeight:ElastigroupInstanceTypesWeight"
                    },
                    "description": "List of weights per instance type for weighted groups. Each object in the list should have the following attributes:\n"
                },
                "integrationBeanstalk": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationBeanstalk:ElastigroupIntegrationBeanstalk"
                },
                "integrationCodedeploy": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationCodedeploy:ElastigroupIntegrationCodedeploy"
                },
                "integrationDockerSwarm": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm"
                },
                "integrationEcs": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationEcs:ElastigroupIntegrationEcs"
                },
                "integrationGitlab": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationGitlab:ElastigroupIntegrationGitlab"
                },
                "integrationKubernetes": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes"
                },
                "integrationMesosphere": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationMesosphere:ElastigroupIntegrationMesosphere"
                },
                "integrationMultaiRuntime": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime"
                },
                "integrationNomad": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationNomad:ElastigroupIntegrationNomad"
                },
                "integrationRancher": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRancher:ElastigroupIntegrationRancher"
                },
                "integrationRoute53": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRoute53:ElastigroupIntegrationRoute53"
                },
                "keyName": {
                    "type": "string",
                    "description": "The key name that should be used for the instance.\n"
                },
                "lifetimePeriod": {
                    "type": "string"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "multaiTargetSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupMultaiTargetSet:ElastigroupMultaiTargetSet"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                    }
                },
                "ondemandCount": {
                    "type": "integer",
                    "description": "Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.\n"
                },
                "orientation": {
                    "type": "string",
                    "description": "Select a prediction strategy. Valid values: `\"balanced\"`, `\"costOriented\"`, `\"equalAzDistribution\"`, `\"availabilityOriented\"`.\n"
                },
                "persistBlockDevices": {
                    "type": "boolean"
                },
                "persistPrivateIp": {
                    "type": "boolean"
                },
                "persistRootDevice": {
                    "type": "boolean"
                },
                "placementTenancy": {
                    "type": "string",
                    "description": "Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used.\n"
                },
                "preferredAvailabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs. \nNote: Must be a sublist of `availability_zones` and `orientation` value must not be `\"equalAzDistribution\"`.\n"
                },
                "privateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "product": {
                    "type": "string",
                    "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`. \nFor EC2 Classic instances:  `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region your group will be created in.\nNote: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).\n"
                },
                "revertToSpot": {
                    "$ref": "#/types/spotinst:aws/ElastigroupRevertToSpot:ElastigroupRevertToSpot",
                    "description": "Hold settings for strategy correction – replacing On-Demand for Spot instances. Supported Values: `\"never\"`, `\"always\"`, `\"timeWindow\"`\n"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    }
                },
                "scalingStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingStrategy:ElastigroupScalingStrategy"
                    },
                    "description": "Set termination policy.\n"
                },
                "scalingTargetPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingTargetPolicy:ElastigroupScalingTargetPolicy"
                    }
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    }
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScheduledTask:ElastigroupScheduledTask"
                    }
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of associated security group IDS.\n"
                },
                "shutdownScript": {
                    "type": "string",
                    "description": "The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n"
                },
                "signals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupSignal:ElastigroupSignal"
                    }
                },
                "spotPercentage": {
                    "type": "number",
                    "description": "The percentage of Spot instances that would spin up from the `desired_capacity` number.\n"
                },
                "statefulDeallocation": {
                    "$ref": "#/types/spotinst:aws/ElastigroupStatefulDeallocation:ElastigroupStatefulDeallocation"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Strings of subnet identifiers.\nNote: When this parameter is set, `availability_zones` should be left unused.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupTag:ElastigroupTag"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n"
                },
                "targetGroupArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:aws/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy"
                },
                "userData": {
                    "type": "string",
                    "description": "The user data to provide when launching the instance.\n"
                },
                "utilizeReservedInstances": {
                    "type": "boolean",
                    "description": "In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.\n"
                },
                "waitForCapacity": {
                    "type": "integer",
                    "description": "Minimum number of instances in a 'HEALTHY' status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.\n"
                },
                "waitForCapacityTimeout": {
                    "type": "integer",
                    "description": "Time (seconds) to wait for instances to report a 'HEALTHY' status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.\n"
                }
            },
            "required": [
                "capacityUnit",
                "drainingTimeout",
                "ebsOptimized",
                "fallbackToOndemand",
                "instanceTypesOndemand",
                "instanceTypesSpots",
                "maxSize",
                "minSize",
                "name",
                "orientation",
                "product",
                "securityGroups"
            ],
            "inputProperties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.\nNote: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:\n`availability_zones = [\"us-east-1a:subnet-123456:ClusterI03\"]`\n"
                },
                "blockDevicesMode": {
                    "type": "string"
                },
                "capacityUnit": {
                    "type": "string",
                    "description": "The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs.\n"
                },
                "cpuCredits": {
                    "type": "string",
                    "description": "Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The group description.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                },
                "ebsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupEbsBlockDevice:ElastigroupEbsBlockDevice"
                    }
                },
                "ebsOptimized": {
                    "type": "boolean",
                    "description": "Enable high bandwidth connectivity between instances and AWS’s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.\n"
                },
                "elasticIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.\n"
                },
                "elasticLoadBalancers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enableMonitoring": {
                    "type": "boolean",
                    "description": "Indicates whether monitoring is enabled for the instance.\n"
                },
                "ephemeralBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupEphemeralBlockDevice:ElastigroupEphemeralBlockDevice"
                    }
                },
                "fallbackToOndemand": {
                    "type": "boolean",
                    "description": "In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.\n"
                },
                "healthCheckGracePeriod": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n"
                },
                "healthCheckType": {
                    "type": "string",
                    "description": "The service that will perform health checks for the instance. Valid values: `\"ELB\"`, `\"HCS\"`, `\"TARGET_GROUP\"`, `\"MLB\"`, `\"EC2\"`, `\"MULTAI_TARGET_SET\"`, `\"MLB_RUNTIME\"`, `\"K8S_NODE\"`, `\"NOMAD_NODE\"`, `\"ECS_CLUSTER_INSTANCE\"`.\n"
                },
                "healthCheckUnhealthyDurationBeforeReplacement": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "The ID of the AMI used to launch the instance.\n"
                },
                "instanceTypesOndemand": {
                    "type": "string",
                    "description": "The type of instance determines your instance's CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).\n"
                },
                "instanceTypesPreferredSpots": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.\n"
                },
                "instanceTypesSpots": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more instance types.\n"
                },
                "instanceTypesWeights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupInstanceTypesWeight:ElastigroupInstanceTypesWeight"
                    },
                    "description": "List of weights per instance type for weighted groups. Each object in the list should have the following attributes:\n"
                },
                "integrationBeanstalk": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationBeanstalk:ElastigroupIntegrationBeanstalk"
                },
                "integrationCodedeploy": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationCodedeploy:ElastigroupIntegrationCodedeploy"
                },
                "integrationDockerSwarm": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm"
                },
                "integrationEcs": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationEcs:ElastigroupIntegrationEcs"
                },
                "integrationGitlab": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationGitlab:ElastigroupIntegrationGitlab"
                },
                "integrationKubernetes": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes"
                },
                "integrationMesosphere": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationMesosphere:ElastigroupIntegrationMesosphere"
                },
                "integrationMultaiRuntime": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime"
                },
                "integrationNomad": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationNomad:ElastigroupIntegrationNomad"
                },
                "integrationRancher": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRancher:ElastigroupIntegrationRancher"
                },
                "integrationRoute53": {
                    "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRoute53:ElastigroupIntegrationRoute53"
                },
                "keyName": {
                    "type": "string",
                    "description": "The key name that should be used for the instance.\n"
                },
                "lifetimePeriod": {
                    "type": "string"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "multaiTargetSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupMultaiTargetSet:ElastigroupMultaiTargetSet"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                    }
                },
                "ondemandCount": {
                    "type": "integer",
                    "description": "Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.\n"
                },
                "orientation": {
                    "type": "string",
                    "description": "Select a prediction strategy. Valid values: `\"balanced\"`, `\"costOriented\"`, `\"equalAzDistribution\"`, `\"availabilityOriented\"`.\n"
                },
                "persistBlockDevices": {
                    "type": "boolean"
                },
                "persistPrivateIp": {
                    "type": "boolean"
                },
                "persistRootDevice": {
                    "type": "boolean"
                },
                "placementTenancy": {
                    "type": "string",
                    "description": "Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used.\n"
                },
                "preferredAvailabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs. \nNote: Must be a sublist of `availability_zones` and `orientation` value must not be `\"equalAzDistribution\"`.\n"
                },
                "privateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "product": {
                    "type": "string",
                    "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`. \nFor EC2 Classic instances:  `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region your group will be created in.\nNote: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).\n"
                },
                "revertToSpot": {
                    "$ref": "#/types/spotinst:aws/ElastigroupRevertToSpot:ElastigroupRevertToSpot",
                    "description": "Hold settings for strategy correction – replacing On-Demand for Spot instances. Supported Values: `\"never\"`, `\"always\"`, `\"timeWindow\"`\n"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    }
                },
                "scalingStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingStrategy:ElastigroupScalingStrategy"
                    },
                    "description": "Set termination policy.\n"
                },
                "scalingTargetPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingTargetPolicy:ElastigroupScalingTargetPolicy"
                    }
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    }
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupScheduledTask:ElastigroupScheduledTask"
                    }
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of associated security group IDS.\n"
                },
                "shutdownScript": {
                    "type": "string",
                    "description": "The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n"
                },
                "signals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupSignal:ElastigroupSignal"
                    }
                },
                "spotPercentage": {
                    "type": "number",
                    "description": "The percentage of Spot instances that would spin up from the `desired_capacity` number.\n"
                },
                "statefulDeallocation": {
                    "$ref": "#/types/spotinst:aws/ElastigroupStatefulDeallocation:ElastigroupStatefulDeallocation"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Strings of subnet identifiers.\nNote: When this parameter is set, `availability_zones` should be left unused.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ElastigroupTag:ElastigroupTag"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n"
                },
                "targetGroupArns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:aws/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy"
                },
                "userData": {
                    "type": "string",
                    "description": "The user data to provide when launching the instance.\n"
                },
                "utilizeReservedInstances": {
                    "type": "boolean",
                    "description": "In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.\n"
                },
                "waitForCapacity": {
                    "type": "integer",
                    "description": "Minimum number of instances in a 'HEALTHY' status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.\n"
                },
                "waitForCapacityTimeout": {
                    "type": "integer",
                    "description": "Time (seconds) to wait for instances to report a 'HEALTHY' status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.\n"
                }
            },
            "requiredInputs": [
                "fallbackToOndemand",
                "instanceTypesOndemand",
                "instanceTypesSpots",
                "orientation",
                "product",
                "securityGroups"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Elastigroup resources.\n",
                "properties": {
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.\nNote: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:\n`availability_zones = [\"us-east-1a:subnet-123456:ClusterI03\"]`\n"
                    },
                    "blockDevicesMode": {
                        "type": "string"
                    },
                    "capacityUnit": {
                        "type": "string",
                        "description": "The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs.\n"
                    },
                    "cpuCredits": {
                        "type": "string",
                        "description": "Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The group description.\n"
                    },
                    "desiredCapacity": {
                        "type": "integer",
                        "description": "The desired number of instances the group should have at any time.\n"
                    },
                    "drainingTimeout": {
                        "type": "integer",
                        "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                    },
                    "ebsBlockDevices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupEbsBlockDevice:ElastigroupEbsBlockDevice"
                        }
                    },
                    "ebsOptimized": {
                        "type": "boolean",
                        "description": "Enable high bandwidth connectivity between instances and AWS’s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.\n"
                    },
                    "elasticIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.\n"
                    },
                    "elasticLoadBalancers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enableMonitoring": {
                        "type": "boolean",
                        "description": "Indicates whether monitoring is enabled for the instance.\n"
                    },
                    "ephemeralBlockDevices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupEphemeralBlockDevice:ElastigroupEphemeralBlockDevice"
                        }
                    },
                    "fallbackToOndemand": {
                        "type": "boolean",
                        "description": "In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.\n"
                    },
                    "healthCheckGracePeriod": {
                        "type": "integer",
                        "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n"
                    },
                    "healthCheckType": {
                        "type": "string",
                        "description": "The service that will perform health checks for the instance. Valid values: `\"ELB\"`, `\"HCS\"`, `\"TARGET_GROUP\"`, `\"MLB\"`, `\"EC2\"`, `\"MULTAI_TARGET_SET\"`, `\"MLB_RUNTIME\"`, `\"K8S_NODE\"`, `\"NOMAD_NODE\"`, `\"ECS_CLUSTER_INSTANCE\"`.\n"
                    },
                    "healthCheckUnhealthyDurationBeforeReplacement": {
                        "type": "integer",
                        "description": "The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).\n"
                    },
                    "iamInstanceProfile": {
                        "type": "string",
                        "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "The ID of the AMI used to launch the instance.\n"
                    },
                    "instanceTypesOndemand": {
                        "type": "string",
                        "description": "The type of instance determines your instance's CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).\n"
                    },
                    "instanceTypesPreferredSpots": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.\n"
                    },
                    "instanceTypesSpots": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more instance types.\n"
                    },
                    "instanceTypesWeights": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupInstanceTypesWeight:ElastigroupInstanceTypesWeight"
                        },
                        "description": "List of weights per instance type for weighted groups. Each object in the list should have the following attributes:\n"
                    },
                    "integrationBeanstalk": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationBeanstalk:ElastigroupIntegrationBeanstalk"
                    },
                    "integrationCodedeploy": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationCodedeploy:ElastigroupIntegrationCodedeploy"
                    },
                    "integrationDockerSwarm": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm"
                    },
                    "integrationEcs": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationEcs:ElastigroupIntegrationEcs"
                    },
                    "integrationGitlab": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationGitlab:ElastigroupIntegrationGitlab"
                    },
                    "integrationKubernetes": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes"
                    },
                    "integrationMesosphere": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationMesosphere:ElastigroupIntegrationMesosphere"
                    },
                    "integrationMultaiRuntime": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime"
                    },
                    "integrationNomad": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationNomad:ElastigroupIntegrationNomad"
                    },
                    "integrationRancher": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRancher:ElastigroupIntegrationRancher"
                    },
                    "integrationRoute53": {
                        "$ref": "#/types/spotinst:aws/ElastigroupIntegrationRoute53:ElastigroupIntegrationRoute53"
                    },
                    "keyName": {
                        "type": "string",
                        "description": "The key name that should be used for the instance.\n"
                    },
                    "lifetimePeriod": {
                        "type": "string"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The maximum number of instances the group should have at any time.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The minimum number of instances the group should have at any time.\n"
                    },
                    "multaiTargetSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupMultaiTargetSet:ElastigroupMultaiTargetSet"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name.\n"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                        }
                    },
                    "ondemandCount": {
                        "type": "integer",
                        "description": "Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.\n"
                    },
                    "orientation": {
                        "type": "string",
                        "description": "Select a prediction strategy. Valid values: `\"balanced\"`, `\"costOriented\"`, `\"equalAzDistribution\"`, `\"availabilityOriented\"`.\n"
                    },
                    "persistBlockDevices": {
                        "type": "boolean"
                    },
                    "persistPrivateIp": {
                        "type": "boolean"
                    },
                    "persistRootDevice": {
                        "type": "boolean"
                    },
                    "placementTenancy": {
                        "type": "string",
                        "description": "Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used.\n"
                    },
                    "preferredAvailabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs. \nNote: Must be a sublist of `availability_zones` and `orientation` value must not be `\"equalAzDistribution\"`.\n"
                    },
                    "privateIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "product": {
                        "type": "string",
                        "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`. \nFor EC2 Classic instances:  `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The AWS region your group will be created in.\nNote: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).\n"
                    },
                    "revertToSpot": {
                        "$ref": "#/types/spotinst:aws/ElastigroupRevertToSpot:ElastigroupRevertToSpot",
                        "description": "Hold settings for strategy correction – replacing On-Demand for Spot instances. Supported Values: `\"never\"`, `\"always\"`, `\"timeWindow\"`\n"
                    },
                    "scalingDownPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                        }
                    },
                    "scalingStrategies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupScalingStrategy:ElastigroupScalingStrategy"
                        },
                        "description": "Set termination policy.\n"
                    },
                    "scalingTargetPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupScalingTargetPolicy:ElastigroupScalingTargetPolicy"
                        }
                    },
                    "scalingUpPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                        }
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupScheduledTask:ElastigroupScheduledTask"
                        }
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of associated security group IDS.\n"
                    },
                    "shutdownScript": {
                        "type": "string",
                        "description": "The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n"
                    },
                    "signals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupSignal:ElastigroupSignal"
                        }
                    },
                    "spotPercentage": {
                        "type": "number",
                        "description": "The percentage of Spot instances that would spin up from the `desired_capacity` number.\n"
                    },
                    "statefulDeallocation": {
                        "$ref": "#/types/spotinst:aws/ElastigroupStatefulDeallocation:ElastigroupStatefulDeallocation"
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Strings of subnet identifiers.\nNote: When this parameter is set, `availability_zones` should be left unused.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ElastigroupTag:ElastigroupTag"
                        },
                        "description": "A key/value mapping of tags to assign to the resource.\n"
                    },
                    "targetGroupArns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatePolicy": {
                        "$ref": "#/types/spotinst:aws/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy"
                    },
                    "userData": {
                        "type": "string",
                        "description": "The user data to provide when launching the instance.\n"
                    },
                    "utilizeReservedInstances": {
                        "type": "boolean",
                        "description": "In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.\n"
                    },
                    "waitForCapacity": {
                        "type": "integer",
                        "description": "Minimum number of instances in a 'HEALTHY' status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.\n"
                    },
                    "waitForCapacityTimeout": {
                        "type": "integer",
                        "description": "Time (seconds) to wait for instances to report a 'HEALTHY' status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:aws/managedInstance:ManagedInstance": {
            "description": "Provides a Spotinst AWS ManagedInstance resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\n// Create an MangedInstance\nconst default_managed_instance = new spotinst.aws.ManagedInstance(\"default-managed-instance\", {\n    autoHealing: true,\n    blockDevicesMode: \"reattach\",\n    cpuCredits: \"standard\",\n    description: \"created by Terraform\",\n    drainingTimeout: 120,\n    ebsOptimized: true,\n    elasticIp: \"ip\",\n    enableMonitoring: true,\n    fallbackToOndemand: false,\n    gracePeriod: 180,\n    healthCheckType: \"EC2\",\n    iamInstanceProfile: \"iam-profile\",\n    imageId: \"ami-1234\",\n    instanceTypes: [\n        \"t1.micro\",\n        \"t3.medium\",\n        \"t3.large\",\n        \"t2.medium\",\n        \"t2.large\",\n        \"z1d.large\",\n    ],\n    keyPair: \"labs-oregon\",\n    lifeCycle: \"on_demand\",\n    optimizationWindows: [\"Mon:03:00-Wed:02:20\"],\n    orientation: \"balanced\",\n    persistBlockDevices: true,\n    persistPrivateIp: false,\n    persistRootDevice: true,\n    placementTenancy: \"default\",\n    preferredType: \"t1.micro\",\n    privateIp: \"ip\",\n    product: \"Linux/UNIX\",\n    region: \"us-west-2\",\n    revertToSpot: {\n        performAt: \"always\",\n    },\n    securityGroupIds: [\"sg-234\"],\n    shutdownScript: \"managed instance bye world\",\n    subnetIds: [\"subnet-123\"],\n    tags: [\n        {\n            key: \"explicit1\",\n            value: \"value1\",\n        },\n        {\n            key: \"explicit2\",\n            value: \"value2\",\n        },\n    ],\n    unhealthyDuration: 60,\n    userData: \"managed instance hello world\",\n    utilizeReservedInstances: true,\n    vpcId: \"vpc-123\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\n# Create an MangedInstance\ndefault_managed_instance = spotinst.aws.ManagedInstance(\"default-managed-instance\",\n    auto_healing=\"true\",\n    block_devices_mode=\"reattach\",\n    cpu_credits=\"standard\",\n    description=\"created by Terraform\",\n    draining_timeout=\"120\",\n    ebs_optimized=\"true\",\n    elastic_ip=\"ip\",\n    enable_monitoring=\"true\",\n    fallback_to_ondemand=False,\n    grace_period=\"180\",\n    health_check_type=\"EC2\",\n    iam_instance_profile=\"iam-profile\",\n    image_id=\"ami-1234\",\n    instance_types=[\n        \"t1.micro\",\n        \"t3.medium\",\n        \"t3.large\",\n        \"t2.medium\",\n        \"t2.large\",\n        \"z1d.large\",\n    ],\n    key_pair=\"labs-oregon\",\n    life_cycle=\"on_demand\",\n    optimization_windows=[\"Mon:03:00-Wed:02:20\"],\n    orientation=\"balanced\",\n    persist_block_devices=\"true\",\n    persist_private_ip=\"false\",\n    persist_root_device=\"true\",\n    placement_tenancy=\"default\",\n    preferred_type=\"t1.micro\",\n    private_ip=\"ip\",\n    product=\"Linux/UNIX\",\n    region=\"us-west-2\",\n    revert_to_spot={\n        \"performAt\": \"always\",\n    },\n    security_group_ids=[\"sg-234\"],\n    shutdown_script=\"managed instance bye world\",\n    subnet_ids=[\"subnet-123\"],\n    tags=[\n        {\n            \"key\": \"explicit1\",\n            \"value\": \"value1\",\n        },\n        {\n            \"key\": \"explicit2\",\n            \"value\": \"value2\",\n        },\n    ],\n    unhealthy_duration=\"60\",\n    user_data=\"managed instance hello world\",\n    utilize_reserved_instances=\"true\",\n    vpc_id=\"vpc-123\")\n```\n{{% /example %}}\n{{% /examples %}}\n## Network Interface - (Optional) List of network interfaces in an EC2 instance.\n\n* `device_index` - (Optional) The position of the network interface in the attachment order. A primary network interface has a device index of 0. If you specify a network interface when launching an instance, you must specify the device index.\n* `associate_public_ip_address` - (Optional) Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is true.\n* `associate_ipv6_address` - (Optional) Indicates whether to assign an IPv6 address. Amazon EC2 chooses the IPv6 addresses from the range of the subnet.\n   Default: false\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"scheduled-task\"\u003e\u003c/a\u003e\n## Scheduled Tasks\n\nEach `scheduled_task` supports the following:\n\n* `is_enabled` - (Optional) Describes whether the task is enabled. When true the task should run when false it should not run.\n* `frequency` - (Optional) Set frequency for the task. Valid values: \"hourly\", \"daily\", \"weekly\", \"continuous\".\n* `start_time` - (Optional) DATETIME in ISO-8601 format. Sets a start time for scheduled actions. If \"frequency\" or \"cronExpression\" are not used - the task will run only once at the start time and will then be deleted from the instance configuration.\n   Example: 2019-05-23T10:55:09Z\n* `cron_expression` - (Optional) A valid cron expression. For example : \" * * * * * \". The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of ‘frequency’ or ‘cronExpression’ should be used at a time.\n   Example: 0 1 * * *\n* `task_type`- (Required) The task type to run. Valid Values: \"pause\", \"resume\", \"recycle\".\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"load-balancers\"\u003e\u003c/a\u003e\n## Load Balancers\n\n   * `loadBalancersConfig` - (Optional) LB integration object.\n       * `load_balancers` - (Optional) List of load balancers configs.\n            * `name` - The AWS resource name. Required for Classic Load Balancer. Optional for Application Load Balancer.\n            * `arn` - The AWS resource ARN (Required only for ALB target groups).\n            * `balancer_id` - The Multai load balancer ID.\n            Default: lb-123456\n            * `target_set_id` - The Multai load target set ID.\n            Default: ts-123456\n            * `auto_weight` - “Auto Weight” will automatically provide a higher weight for instances that are larger as appropriate. For example, if you have configured your Elastigroup with m4.large and m4.xlarge instances the m4.large will have half the weight of an m4.xlarge. This ensures that larger instances receive a higher number of MLB requests.\n            * `zone_awareness` - “AZ Awareness” will ensure that instances within the same AZ are using the corresponding MLB runtime instance in the same AZ. This feature reduces multi-zone data transfer fees.\n            * `type` - The resource type. Valid Values: CLASSIC, TARGET_GROUP, MULTAI_TARGET_SET.\n\nUsage:\n\n   ```hcl\n   load_balancers {\n       arn  = \"arn\"\n       type = \"CLASSIC\"\n       balancer_id   = \"lb-123\"\n       target_set_id = \"ts-123\"\n       auto_weight   = \"true\"\n       az_awareness = \"true\"\n     }\n   ```\n\n\u003ca id=\"route53\"\u003e\u003c/a\u003e",
            "properties": {
                "autoHealing": {
                    "type": "boolean",
                    "description": "Enable the auto healing which auto replaces the instance in case the health check fails, default: `“true”`.\n"
                },
                "blockDevicesMode": {
                    "type": "string",
                    "description": "Determine the way we attach the data volumes to the data devices. Valid values: `\"reattach\"`, `\"onLaunch\"`.\nDefault: `\"onLaunch\"`.\n"
                },
                "cpuCredits": {
                    "type": "string",
                    "description": "cpuCredits can have one of two values: “unlimited”, “standard”.\nDefault: unlimited\n"
                },
                "description": {
                    "type": "string",
                    "description": "The ManagedInstance description.\n"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds to allow the instance be drained from incoming TCP connections and detached from ELB before terminating it, during a scale down operation.\n"
                },
                "ebsOptimized": {
                    "type": "boolean",
                    "description": "Enable EBS optimization for supported instance which is not enabled by default. Note - additional charges will be applied.\nDefault: false\n"
                },
                "elasticIp": {
                    "type": "string",
                    "description": "Elastic IP Allocation Id to associate to the instance.\n"
                },
                "enableMonitoring": {
                    "type": "boolean",
                    "description": "Describes whether instance Enhanced Monitoring is enabled.\nDefault: false\n"
                },
                "fallBackToOd": {
                    "type": "boolean"
                },
                "gracePeriod": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after the instance has launched to starts and check its health, default `“120\"`.\n"
                },
                "healthCheckType": {
                    "type": "string",
                    "description": "The service to use for the health check. Valid values: `“EC2”`, `“ELB”`, `“TARGET_GROUP”`, `“MULTAI_TARGET_SET”`.\nDefault: `“EC2”`.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "Set IAM profile to instance. Set only one of ARN or Name.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "The ID of the image used to launch the instance.\n"
                },
                "instanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Comma separated list of available instance types for instance.\n"
                },
                "integrationRoute53": {
                    "$ref": "#/types/spotinst:aws/ManagedInstanceIntegrationRoute53:ManagedInstanceIntegrationRoute53"
                },
                "keyPair": {
                    "type": "string",
                    "description": "Specify a Key Pair to attach to the instances.\n"
                },
                "lifeCycle": {
                    "type": "string",
                    "description": "Set lifecycle, valid values: `“spot”`, `“on_demand”`.\nDefault `\"spot\"`.\n"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceLoadBalancer:ManagedInstanceLoadBalancer"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The ManagedInstance name.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceNetworkInterface:ManagedInstanceNetworkInterface"
                    }
                },
                "optimizationWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When performAt is 'timeWindow': must specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59.\n"
                },
                "orientation": {
                    "type": "string",
                    "description": "Select a prediction strategy. Valid values: `\"balanced\"`, `\"costOriented\"`, `\"availabilityOriented\"`, `\"cheapest\"`.\nDefault: `\"availabilityOriented\"`.\n"
                },
                "persistBlockDevices": {
                    "type": "boolean",
                    "description": "Should the instance maintain its Data volumes.\n"
                },
                "persistPrivateIp": {
                    "type": "boolean",
                    "description": "Should the instance maintain its private IP.\n"
                },
                "persistRootDevice": {
                    "type": "boolean",
                    "description": "Should the instance maintain its root device volumes.\n"
                },
                "placementTenancy": {
                    "type": "string",
                    "description": "Valid values: \"default\", \"dedicated\"\nDefault: default\n"
                },
                "preferredType": {
                    "type": "string",
                    "description": "Preferred instance types for the instance. We will automatically select optional similar instance types to ensure optimized cost efficiency\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "Private IP Allocation Id to associate to the instance.\n"
                },
                "product": {
                    "type": "string",
                    "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`, `\"Red Hat Enterprise Linux\"`, `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`,  `\"Red Hat Enterprise Linux (Amazon VPC)\"`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region your group will be created in.\n"
                },
                "revertToSpot": {
                    "$ref": "#/types/spotinst:aws/ManagedInstanceRevertToSpot:ManagedInstanceRevertToSpot"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceScheduledTask:ManagedInstanceScheduledTask"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more security group IDs.\n"
                },
                "shutdownScript": {
                    "type": "string",
                    "description": "The Base64-encoded shutdown script to execute prior to instance termination.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A comma-separated list of subnet identifiers for your instance.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceTag:ManagedInstanceTag"
                    },
                    "description": "Set tags for the instance. Items should be unique.\n"
                },
                "unhealthyDuration": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy. After the set time out the instance will be replaced, default `“120\"`.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "The Base64-encoded MIME user data to make available to the instances.\n"
                },
                "utilizeReservedInstances": {
                    "type": "boolean",
                    "description": "In case of any available Reserved Instances, Managed Instance will utilize them before purchasing Spot instances.\nDefault: `\"false\"`.\n"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "ebsOptimized",
                "imageId",
                "instanceTypes",
                "name",
                "persistBlockDevices",
                "product",
                "subnetIds",
                "vpcId"
            ],
            "inputProperties": {
                "autoHealing": {
                    "type": "boolean",
                    "description": "Enable the auto healing which auto replaces the instance in case the health check fails, default: `“true”`.\n"
                },
                "blockDevicesMode": {
                    "type": "string",
                    "description": "Determine the way we attach the data volumes to the data devices. Valid values: `\"reattach\"`, `\"onLaunch\"`.\nDefault: `\"onLaunch\"`.\n"
                },
                "cpuCredits": {
                    "type": "string",
                    "description": "cpuCredits can have one of two values: “unlimited”, “standard”.\nDefault: unlimited\n"
                },
                "description": {
                    "type": "string",
                    "description": "The ManagedInstance description.\n"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds to allow the instance be drained from incoming TCP connections and detached from ELB before terminating it, during a scale down operation.\n"
                },
                "ebsOptimized": {
                    "type": "boolean",
                    "description": "Enable EBS optimization for supported instance which is not enabled by default. Note - additional charges will be applied.\nDefault: false\n"
                },
                "elasticIp": {
                    "type": "string",
                    "description": "Elastic IP Allocation Id to associate to the instance.\n"
                },
                "enableMonitoring": {
                    "type": "boolean",
                    "description": "Describes whether instance Enhanced Monitoring is enabled.\nDefault: false\n"
                },
                "fallBackToOd": {
                    "type": "boolean"
                },
                "gracePeriod": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after the instance has launched to starts and check its health, default `“120\"`.\n"
                },
                "healthCheckType": {
                    "type": "string",
                    "description": "The service to use for the health check. Valid values: `“EC2”`, `“ELB”`, `“TARGET_GROUP”`, `“MULTAI_TARGET_SET”`.\nDefault: `“EC2”`.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "Set IAM profile to instance. Set only one of ARN or Name.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "The ID of the image used to launch the instance.\n"
                },
                "instanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Comma separated list of available instance types for instance.\n"
                },
                "integrationRoute53": {
                    "$ref": "#/types/spotinst:aws/ManagedInstanceIntegrationRoute53:ManagedInstanceIntegrationRoute53"
                },
                "keyPair": {
                    "type": "string",
                    "description": "Specify a Key Pair to attach to the instances.\n"
                },
                "lifeCycle": {
                    "type": "string",
                    "description": "Set lifecycle, valid values: `“spot”`, `“on_demand”`.\nDefault `\"spot\"`.\n"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceLoadBalancer:ManagedInstanceLoadBalancer"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The ManagedInstance name.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceNetworkInterface:ManagedInstanceNetworkInterface"
                    }
                },
                "optimizationWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When performAt is 'timeWindow': must specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59.\n"
                },
                "orientation": {
                    "type": "string",
                    "description": "Select a prediction strategy. Valid values: `\"balanced\"`, `\"costOriented\"`, `\"availabilityOriented\"`, `\"cheapest\"`.\nDefault: `\"availabilityOriented\"`.\n"
                },
                "persistBlockDevices": {
                    "type": "boolean",
                    "description": "Should the instance maintain its Data volumes.\n"
                },
                "persistPrivateIp": {
                    "type": "boolean",
                    "description": "Should the instance maintain its private IP.\n"
                },
                "persistRootDevice": {
                    "type": "boolean",
                    "description": "Should the instance maintain its root device volumes.\n"
                },
                "placementTenancy": {
                    "type": "string",
                    "description": "Valid values: \"default\", \"dedicated\"\nDefault: default\n"
                },
                "preferredType": {
                    "type": "string",
                    "description": "Preferred instance types for the instance. We will automatically select optional similar instance types to ensure optimized cost efficiency\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "Private IP Allocation Id to associate to the instance.\n"
                },
                "product": {
                    "type": "string",
                    "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`, `\"Red Hat Enterprise Linux\"`, `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`,  `\"Red Hat Enterprise Linux (Amazon VPC)\"`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region your group will be created in.\n"
                },
                "revertToSpot": {
                    "$ref": "#/types/spotinst:aws/ManagedInstanceRevertToSpot:ManagedInstanceRevertToSpot"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceScheduledTask:ManagedInstanceScheduledTask"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more security group IDs.\n"
                },
                "shutdownScript": {
                    "type": "string",
                    "description": "The Base64-encoded shutdown script to execute prior to instance termination.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A comma-separated list of subnet identifiers for your instance.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceTag:ManagedInstanceTag"
                    },
                    "description": "Set tags for the instance. Items should be unique.\n"
                },
                "unhealthyDuration": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy. After the set time out the instance will be replaced, default `“120\"`.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "The Base64-encoded MIME user data to make available to the instances.\n"
                },
                "utilizeReservedInstances": {
                    "type": "boolean",
                    "description": "In case of any available Reserved Instances, Managed Instance will utilize them before purchasing Spot instances.\nDefault: `\"false\"`.\n"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "imageId",
                "instanceTypes",
                "persistBlockDevices",
                "product",
                "subnetIds",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagedInstance resources.\n",
                "properties": {
                    "autoHealing": {
                        "type": "boolean",
                        "description": "Enable the auto healing which auto replaces the instance in case the health check fails, default: `“true”`.\n"
                    },
                    "blockDevicesMode": {
                        "type": "string",
                        "description": "Determine the way we attach the data volumes to the data devices. Valid values: `\"reattach\"`, `\"onLaunch\"`.\nDefault: `\"onLaunch\"`.\n"
                    },
                    "cpuCredits": {
                        "type": "string",
                        "description": "cpuCredits can have one of two values: “unlimited”, “standard”.\nDefault: unlimited\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The ManagedInstance description.\n"
                    },
                    "drainingTimeout": {
                        "type": "integer",
                        "description": "The time in seconds to allow the instance be drained from incoming TCP connections and detached from ELB before terminating it, during a scale down operation.\n"
                    },
                    "ebsOptimized": {
                        "type": "boolean",
                        "description": "Enable EBS optimization for supported instance which is not enabled by default. Note - additional charges will be applied.\nDefault: false\n"
                    },
                    "elasticIp": {
                        "type": "string",
                        "description": "Elastic IP Allocation Id to associate to the instance.\n"
                    },
                    "enableMonitoring": {
                        "type": "boolean",
                        "description": "Describes whether instance Enhanced Monitoring is enabled.\nDefault: false\n"
                    },
                    "fallBackToOd": {
                        "type": "boolean"
                    },
                    "gracePeriod": {
                        "type": "integer",
                        "description": "The amount of time, in seconds, after the instance has launched to starts and check its health, default `“120\"`.\n"
                    },
                    "healthCheckType": {
                        "type": "string",
                        "description": "The service to use for the health check. Valid values: `“EC2”`, `“ELB”`, `“TARGET_GROUP”`, `“MULTAI_TARGET_SET”`.\nDefault: `“EC2”`.\n"
                    },
                    "iamInstanceProfile": {
                        "type": "string",
                        "description": "Set IAM profile to instance. Set only one of ARN or Name.\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "The ID of the image used to launch the instance.\n"
                    },
                    "instanceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Comma separated list of available instance types for instance.\n"
                    },
                    "integrationRoute53": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceIntegrationRoute53:ManagedInstanceIntegrationRoute53"
                    },
                    "keyPair": {
                        "type": "string",
                        "description": "Specify a Key Pair to attach to the instances.\n"
                    },
                    "lifeCycle": {
                        "type": "string",
                        "description": "Set lifecycle, valid values: `“spot”`, `“on_demand”`.\nDefault `\"spot\"`.\n"
                    },
                    "loadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ManagedInstanceLoadBalancer:ManagedInstanceLoadBalancer"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The ManagedInstance name.\n"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ManagedInstanceNetworkInterface:ManagedInstanceNetworkInterface"
                        }
                    },
                    "optimizationWindows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "When performAt is 'timeWindow': must specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59.\n"
                    },
                    "orientation": {
                        "type": "string",
                        "description": "Select a prediction strategy. Valid values: `\"balanced\"`, `\"costOriented\"`, `\"availabilityOriented\"`, `\"cheapest\"`.\nDefault: `\"availabilityOriented\"`.\n"
                    },
                    "persistBlockDevices": {
                        "type": "boolean",
                        "description": "Should the instance maintain its Data volumes.\n"
                    },
                    "persistPrivateIp": {
                        "type": "boolean",
                        "description": "Should the instance maintain its private IP.\n"
                    },
                    "persistRootDevice": {
                        "type": "boolean",
                        "description": "Should the instance maintain its root device volumes.\n"
                    },
                    "placementTenancy": {
                        "type": "string",
                        "description": "Valid values: \"default\", \"dedicated\"\nDefault: default\n"
                    },
                    "preferredType": {
                        "type": "string",
                        "description": "Preferred instance types for the instance. We will automatically select optional similar instance types to ensure optimized cost efficiency\n"
                    },
                    "privateIp": {
                        "type": "string",
                        "description": "Private IP Allocation Id to associate to the instance.\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Operation system type. Valid values: `\"Linux/UNIX\"`, `\"SUSE Linux\"`, `\"Windows\"`, `\"Red Hat Enterprise Linux\"`, `\"Linux/UNIX (Amazon VPC)\"`, `\"SUSE Linux (Amazon VPC)\"`, `\"Windows (Amazon VPC)\"`,  `\"Red Hat Enterprise Linux (Amazon VPC)\"`.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The AWS region your group will be created in.\n"
                    },
                    "revertToSpot": {
                        "$ref": "#/types/spotinst:aws/ManagedInstanceRevertToSpot:ManagedInstanceRevertToSpot"
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ManagedInstanceScheduledTask:ManagedInstanceScheduledTask"
                        }
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more security group IDs.\n"
                    },
                    "shutdownScript": {
                        "type": "string",
                        "description": "The Base64-encoded shutdown script to execute prior to instance termination.\n"
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A comma-separated list of subnet identifiers for your instance.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/ManagedInstanceTag:ManagedInstanceTag"
                        },
                        "description": "Set tags for the instance. Items should be unique.\n"
                    },
                    "unhealthyDuration": {
                        "type": "integer",
                        "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy. After the set time out the instance will be replaced, default `“120\"`.\n"
                    },
                    "userData": {
                        "type": "string",
                        "description": "The Base64-encoded MIME user data to make available to the instances.\n"
                    },
                    "utilizeReservedInstances": {
                        "type": "boolean",
                        "description": "In case of any available Reserved Instances, Managed Instance will utilize them before purchasing Spot instances.\nDefault: `\"false\"`.\n"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:aws/mrScalar:MrScalar": {
            "description": "Provides a Spotinst AWS MrScaler resource.\n\n## Provisioning Timeout (Clone, New strategies)\n\n* `timeout` - (Optional) The amount of time (minutes) after which the cluster is automatically terminated if it's still in provisioning status. Minimum: '15'.\n* `timeout_action` - (Optional) The action to take if the timeout is exceeded. Valid values: `terminate`, `terminateAndRetry`.\n\n\u003ca id=\"cluster-config\"\u003e\u003c/a\u003e\n## Cluster Configuration (New strategy only)\n\n* `log_uri` - (Optional) The path to the Amazon S3 location where logs for this cluster are stored.\n* `additional_info` - (Optional) This is meta information about third-party applications that third-party vendors use for testing purposes.\n* `security_config` - (Optional) The name of the security configuration applied to the cluster.\n* `service_role` - (Optional) The IAM role that will be assumed by the Amazon EMR service to access AWS resources on your behalf.\n* `job_flow_role` - (Optional) The IAM role that was specified when the job flow was launched. The EC2 instances of the job flow assume this role.\n* `termination_protected` - (Optional) Specifies whether the Amazon EC2 instances in the cluster are protected from termination by API calls, user intervention, or in the event of a job-flow error.\n* `keep_job_flow_alive` - (Optional) Specifies whether the cluster should remain available after completing all steps.\n* `retries` - (Optional) Specifies the maximum number of times a capacity provisioning should be retried if the provisioning timeout is exceeded.\n\n\u003ca id=\"task-group\"\u003e\u003c/a\u003e\n## Task Group (Wrap, Clone, and New strategies)\n\n* `task_instance_types` - (Required) The MrScaler instance types for the task nodes.\n* `task_target` - (Required) amount of instances in task group.\n* `task_maximum` - (Optional) maximal amount of instances in task group.\n* `task_minimum` - (Optional) The minimal amount of instances in task group.\n* `task_unit` - (Optional, Default: `instance`) Unit of task group for target, min and max. The unit could be `instance` or `weight`. instance - amount of instances. weight - amount of vCPU.\n* `task_lifecycle` - (Required) The MrScaler lifecycle for instances in task group. Allowed values are 'SPOT' and 'ON_DEMAND'.\n* `task_ebs_optimized` - (Optional) EBS Optimization setting for instances in group.\n* `task_ebs_block_device` - (Required) This determines the ebs configuration for your task group instances. Only a single block is allowed.\n    * `volumes_per_instance` - (Optional; Default 1) Amount of volumes per instance in the task group.\n    * `volume_type` - (Required) volume type. Allowed values are 'gp2', 'io1' and others.\n    * `size_in_gb` - (Required) Size of the volume, in GBs.\n    * `iops` - (Optional) IOPS for the volume. Required in some volume types, such as io1.\n\n\u003ca id=\"core-group\"\u003e\u003c/a\u003e\n## Core Group (Clone, New strategies)\n\n* `core_instance_types` - (Required) The MrScaler instance types for the core nodes.\n* `core_target` - (Required) amount of instances in core group.\n* `core_maximum` - (Optional) maximal amount of instances in core group.\n* `core_minimum` - (Optional) The minimal amount of instances in core group.\n* `core_unit` - (Optional, Default: `instance`) Unit of task group for target, min and max. The unit could be `instance` or `weight`. instance - amount of instances. weight - amount of vCPU.\n* `core_lifecycle` - (Required) The MrScaler lifecycle for instances in core group. Allowed values are 'SPOT' and 'ON_DEMAND'.\n* `core_ebs_optimized` - (Optional) EBS Optimization setting for instances in group.\n* `core_ebs_block_device` - (Required) This determines the ebs configuration for your core group instances. Only a single block is allowed.\n    * `volumes_per_instance` - (Optional; Default 1) Amount of volumes per instance in the core group.\n    * `volume_type` - (Required) volume type. Allowed values are 'gp2', 'io1' and others.\n    * `size_in_gb` - (Required) Size of the volume, in GBs.\n    * `iops` - (Optional) IOPS for the volume. Required in some volume types, such as io1.\n\n\u003ca id=\"master-group\"\u003e\u003c/a\u003e\n## Master Group (Clone, New strategies)\n\n* `master_instance_types` - (Required) The MrScaler instance types for the master nodes.\n* `master_lifecycle` - (Required) The MrScaler lifecycle for instances in master group. Allowed values are 'SPOT' and 'ON_DEMAND'.\n* `master_ebs_optimized` - (Optional) EBS Optimization setting for instances in group.\n* `master_ebs_block_device` - (Required) This determines the ebs configuration for your master group instances. Only a single block is allowed.\n    * `volumes_per_instance` - (Optional; Default 1) Amount of volumes per instance in the master group.\n    * `volume_type` - (Required) volume type. Allowed values are 'gp2', 'io1' and others.\n    * `size_in_gb` - (Required) Size of the volume, in GBs.\n    * `iops` - (Optional) IOPS for the volume. Required in some volume types, such as io1.\n\n\u003ca id=\"tags\"\u003e\u003c/a\u003e\n## Tags (Clone, New strategies)\n\n* `tags` - (Optional) A list of tags to assign to the resource. You may define multiple tags.\n    * `key` - (Required) Tag key.\n    * `value` - (Required) Tag value.\n\n\u003ca id=\"Optional Compute Parameters\"\u003e\u003c/a\u003e  \n## Optional Compute Parameters (New strategy)\n\n* `managed_primary_security_group` - (Optional) EMR Managed Security group that will be set to the primary instance group.\n* `managed_replica_security_group` - (Optional) EMR Managed Security group that will be set to the replica instance group.\n* `service_access_security_group` - (Optional) The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.\n* `additional_primary_security_groups` - (Optional) A list of additional Amazon EC2 security group IDs for the master node.\n* `additional_replica_security_groups` - (Optional) A list of additional Amazon EC2 security group IDs for the core and task nodes.\n* `custom_ami_id` - (Optional) The ID of a custom Amazon EBS-backed Linux AMI if the cluster uses a custom AMI.\n* `repo_upgrade_on_boot` - (Optional) Applies only when `custom_ami_id` is used. Specifies the type of updates that are applied from the Amazon Linux AMI package repositories when an instance boots using the AMI. Possible values include: `SECURITY`, `NONE`.\n* `ec2_key_name` - (Optional) The name of an Amazon EC2 key pair that can be used to ssh to the master node.\n* `applications` - (Optional) A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster\n    * `args` - (Optional) Arguments for EMR to pass to the application.\n    * `name` - (Required) The application name.\n    * `version`- (Optional)T he version of the application.\n* `instance_weights` - (Optional) Describes the instance and weights. Check out [Elastigroup Weighted Instances](https://api.spotinst.com/elastigroup-for-aws/concepts/general-concepts/elastigroup-capacity-instances-or-weighted) for more info.\n    * `instance_type` - (Required) The type of the instance.\n    * `weighted_capacity` - (Required) The weight given to the associated instance type. \n\n\u003ca id=\"availability-zone\"\u003e\u003c/a\u003e\n## Availability Zones (Clone, New strategies)\n\n* `availability_zones` - (Required in Clone) List of AZs and their subnet Ids. See example above for usage.\n\n\u003ca id=\"configurations\"\u003e\u003c/a\u003e\n## Configurations (Clone, New strategies)\n\n* `configurations_file` - (Optional) Describes path to S3 file containing description of configurations. [More Information](https://api.spotinst.com/elastigroup-for-aws/services-integrations/elastic-mapreduce/import-an-emr-cluster/advanced/)\n    * `bucket` - (Required) S3 Bucket name for configurations.\n    * `key`- (Required) S3 key for configurations.\n    \n\u003ca id=\"steps\"\u003e\u003c/a\u003e\n## Steps (Clone, New strategies)\n\n* `steps_file` - (Optional) Steps from S3.\n    * `bucket` - (Required) S3 Bucket name for steps.\n    * `key`- (Required) S3 key for steps.\n    \n\u003ca id=\"boostrap-actions\"\u003e\u003c/a\u003e\n## Bootstrap Actions (Clone, New strategies)   \n\n* `bootstrap_actions_file` - (Optional) Describes path to S3 file containing description of bootstrap actions. [More Information](https://api.spotinst.com/elastigroup-for-aws/services-integrations/elastic-mapreduce/import-an-emr-cluster/advanced/)\n    * `bucket` - (Required) S3 Bucket name for bootstrap actions.\n    * `key`- (Required) S3 key for bootstrap actions.\n\n\u003ca id=\"scaling-policy\"\u003e\u003c/a\u003e\n## Scaling Policies\n\nPossible task group scaling policies (Wrap, Clone, and New strategies):\n* `task_scaling_up_policy`\n* `task_scaling_down_policy`\n\nPossible core group scaling policies (Clone, New strategies):\n* `core_scaling_up_policy`\n* `core_scaling_down_policy`\n\nEach `*_scaling_*_policy` supports the following:\n\n* `policy_name` - (Required) The name of the policy.\n* `metric_name` - (Required) The name of the metric, with or without spaces.\n* `statistic` - (Required) The metric statistics to return. For information about specific statistics go to [Statistics](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/index.html?CHAP_TerminologyandKeyConcepts.html#Statistic) in the Amazon CloudWatch Developer Guide.\n* `unit` - (Required) The unit for the metric.\n* `threshold` - (Required) The value against which the specified statistic is compared.\n* `adjustment` - (Optional) The number of instances to add/remove to/from the target capacity when scale is needed.\n* `min_target_capacity` - (Optional) Min target capacity for scale up.\n* `max_target_capacity` - (Optional) Max target capacity for scale down.\n* `namespace` - (Required) The namespace for the metric.\n* `operator` - (Required) The operator to use. Allowed values are : 'gt', 'gte', 'lt' , 'lte'.\n* `evaluation_periods` - (Required) The number of periods over which data is compared to the specified threshold.\n* `period` - (Required) The granularity, in seconds, of the returned datapoints. Period must be at least 60 seconds and must be a multiple of 60.\n* `cooldown` - (Required) The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.\n* `dimensions` - (Optional) A mapping of dimensions describing qualities of the metric.\n* `minimum` - (Optional) The minimum to set when scale is needed.\n* `maximum` - (Optional) The maximum to set when scale is needed.\n* `target` - (Optional) The number of instances to set when scale is needed.\n* `action_type` - (Required) The type of action to perform. Allowed values are : 'adjustment', 'setMinTarget', 'setMaxTarget', 'updateCapacity', 'percentageAdjustment'\n\n\u003ca id=\"scheduled-task\"\u003e\u003c/a\u003e\n## Scheduled Tasks\n\n* `scheduled_task` - (Optional) An array of scheduled tasks.\n* `is_enabled` - (Optional) Enable/Disable the specified scheduling task.\n* `task_type` - (Required) The type of task to be scheduled. Valid values: `setCapacity`.\n* `instance_group_type` - (Required) Select the EMR instance groups to execute the scheduled task on. Valid values: `task`.\n* `cron` - (Required) A cron expression representing the schedule for the task.\n* `desired_capacity` - (Optional) New desired capacity for the elastigroup.\n* `min_capacity` - (Optional) New min capacity for the elastigroup.\n* `max_capacity` - (Optional) New max capacity for the elastigroup.\n\n\u003ca id=\"termination-policies\"\u003e\u003c/a\u003e\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n{{% /example %}}\n{{% example %}}\n### New Strategy\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst terraform_MrScaler_01 = new spotinst.aws.MrScalar(\"Terraform-MrScaler-01\", {\n    additionalInfo: \"{'test':'more information'}\",\n    additionalPrimarySecurityGroups: [\"sg-456321\"],\n    additionalReplicaSecurityGroups: [\"sg-123654\"],\n    applications: [\n        {\n            name: \"Ganglia\",\n            version: \"1.0\",\n        },\n        {\n            name: \"Hadoop\",\n        },\n        {\n            args: [\n                \"fake\",\n                \"args\",\n            ],\n            name: \"Pig\",\n        },\n    ],\n    availabilityZones: [\"us-west-2a:subnet-123456\"],\n    bootstrapActionsFiles: [{\n        bucket: \"terraform-emr-test\",\n        key: \"bootstrap-actions.json\",\n    }],\n    configurationsFiles: [{\n        bucket: \"example-bucket\",\n        key: \"configurations.json\",\n    }],\n    coreDesiredCapacity: 1,\n    coreEbsBlockDevices: [{\n        sizeInGb: 40,\n        volumeType: \"gp2\",\n        volumesPerInstance: 2,\n    }],\n    coreEbsOptimized: false,\n    // --- CORE GROUP -------------\n    coreInstanceTypes: [\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    coreLifecycle: \"ON_DEMAND\",\n    coreMaxSize: 1,\n    coreMinSize: 1,\n    coreUnit: \"instance\",\n    // --- OPTONAL COMPUTE -----\n    customAmiId: \"ami-123456\",\n    description: \"Testing MrScaler creation via Terraform\",\n    ec2KeyName: \"test-key\",\n    instanceWeights: [\n        {\n            instanceType: \"t2.small\",\n            weightedCapacity: 10,\n        },\n        {\n            instanceType: \"t2.medium\",\n            weightedCapacity: 90,\n        },\n    ],\n    jobFlowRole: \"EMR_EC2_ExampleRole\",\n    keepJobFlowAlive: true,\n    // --- CLUSTER ------------\n    logUri: \"s3://example-logs\",\n    managedPrimarySecurityGroup: \"sg-123456\",\n    managedReplicaSecurityGroup: \"sg-987654\",\n    masterEbsBlockDevices: [{\n        sizeInGb: 30,\n        volumeType: \"gp2\",\n        volumesPerInstance: 1,\n    }],\n    masterEbsOptimized: true,\n    // --- MASTER GROUP -------------\n    masterInstanceTypes: [\"c3.xlarge\"],\n    masterLifecycle: \"SPOT\",\n    provisioningTimeout: {\n        timeout: 15,\n        timeoutAction: \"terminate\",\n    },\n    region: \"us-west-2\",\n    releaseLabel: \"emr-5.17.0\",\n    repoUpgradeOnBoot: \"NONE\",\n    retries: 2,\n    securityConfig: \"example-config\",\n    serviceAccessSecurityGroup: \"access-example\",\n    serviceRole: \"example-role\",\n    stepsFiles: [{\n        bucket: \"example-bucket\",\n        key: \"steps.json\",\n    }],\n    strategy: \"new\",\n    // --- TAGS -------------------\n    tags: [{\n        key: \"Creator\",\n        value: \"Terraform\",\n    }],\n    taskDesiredCapacity: 1,\n    taskEbsBlockDevices: [{\n        sizeInGb: 40,\n        volumeType: \"gp2\",\n        volumesPerInstance: 2,\n    }],\n    taskEbsOptimized: false,\n    // --- TASK GROUP -------------\n    taskInstanceTypes: [\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    taskLifecycle: \"SPOT\",\n    taskMaxSize: 30,\n    taskMinSize: 0,\n    taskUnit: \"instance\",\n    terminationProtected: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nterraform__mr_scaler_01 = spotinst.aws.MrScalar(\"terraform-MrScaler-01\",\n    additional_info=\"{'test':'more information'}\",\n    additional_primary_security_groups=[\"sg-456321\"],\n    additional_replica_security_groups=[\"sg-123654\"],\n    applications=[\n        {\n            \"name\": \"Ganglia\",\n            \"version\": \"1.0\",\n        },\n        {\n            \"name\": \"Hadoop\",\n        },\n        {\n            \"args\": [\n                \"fake\",\n                \"args\",\n            ],\n            \"name\": \"Pig\",\n        },\n    ],\n    availability_zones=[\"us-west-2a:subnet-123456\"],\n    bootstrap_actions_files=[{\n        \"bucket\": \"terraform-emr-test\",\n        \"key\": \"bootstrap-actions.json\",\n    }],\n    configurations_files=[{\n        \"bucket\": \"example-bucket\",\n        \"key\": \"configurations.json\",\n    }],\n    core_desired_capacity=1,\n    core_ebs_block_devices=[{\n        \"sizeInGb\": 40,\n        \"volumeType\": \"gp2\",\n        \"volumesPerInstance\": 2,\n    }],\n    core_ebs_optimized=False,\n    core_instance_types=[\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    core_lifecycle=\"ON_DEMAND\",\n    core_max_size=1,\n    core_min_size=1,\n    core_unit=\"instance\",\n    custom_ami_id=\"ami-123456\",\n    description=\"Testing MrScaler creation via Terraform\",\n    ec2_key_name=\"test-key\",\n    instance_weights=[\n        {\n            \"instanceType\": \"t2.small\",\n            \"weightedCapacity\": 10,\n        },\n        {\n            \"instanceType\": \"t2.medium\",\n            \"weightedCapacity\": 90,\n        },\n    ],\n    job_flow_role=\"EMR_EC2_ExampleRole\",\n    keep_job_flow_alive=True,\n    log_uri=\"s3://example-logs\",\n    managed_primary_security_group=\"sg-123456\",\n    managed_replica_security_group=\"sg-987654\",\n    master_ebs_block_devices=[{\n        \"sizeInGb\": 30,\n        \"volumeType\": \"gp2\",\n        \"volumesPerInstance\": 1,\n    }],\n    master_ebs_optimized=True,\n    master_instance_types=[\"c3.xlarge\"],\n    master_lifecycle=\"SPOT\",\n    provisioning_timeout={\n        \"timeout\": 15,\n        \"timeoutAction\": \"terminate\",\n    },\n    region=\"us-west-2\",\n    release_label=\"emr-5.17.0\",\n    repo_upgrade_on_boot=\"NONE\",\n    retries=2,\n    security_config=\"example-config\",\n    service_access_security_group=\"access-example\",\n    service_role=\"example-role\",\n    steps_files=[{\n        \"bucket\": \"example-bucket\",\n        \"key\": \"steps.json\",\n    }],\n    strategy=\"new\",\n    tags=[{\n        \"key\": \"Creator\",\n        \"value\": \"Terraform\",\n    }],\n    task_desired_capacity=1,\n    task_ebs_block_devices=[{\n        \"sizeInGb\": 40,\n        \"volumeType\": \"gp2\",\n        \"volumesPerInstance\": 2,\n    }],\n    task_ebs_optimized=False,\n    task_instance_types=[\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    task_lifecycle=\"SPOT\",\n    task_max_size=30,\n    task_min_size=0,\n    task_unit=\"instance\",\n    termination_protected=False)\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_MrScaler_01 = new SpotInst.Aws.MrScalar(\"terraform-MrScaler-01\", new SpotInst.Aws.MrScalarArgs\n        {\n            AdditionalInfo = \"{'test':'more information'}\",\n            AdditionalPrimarySecurityGroups = \n            {\n                \"sg-456321\",\n            },\n            AdditionalReplicaSecurityGroups = \n            {\n                \"sg-123654\",\n            },\n            Applications = \n            {\n                new SpotInst.Aws.Inputs.MrScalarApplicationArgs\n                {\n                    Name = \"Ganglia\",\n                    Version = \"1.0\",\n                },\n                new SpotInst.Aws.Inputs.MrScalarApplicationArgs\n                {\n                    Name = \"Hadoop\",\n                },\n                new SpotInst.Aws.Inputs.MrScalarApplicationArgs\n                {\n                    Args = \n                    {\n                        \"fake\",\n                        \"args\",\n                    },\n                    Name = \"Pig\",\n                },\n            },\n            AvailabilityZones = \n            {\n                \"us-west-2a:subnet-123456\",\n            },\n            BootstrapActionsFiles = \n            {\n                new SpotInst.Aws.Inputs.MrScalarBootstrapActionsFileArgs\n                {\n                    Bucket = \"terraform-emr-test\",\n                    Key = \"bootstrap-actions.json\",\n                },\n            },\n            ConfigurationsFiles = \n            {\n                new SpotInst.Aws.Inputs.MrScalarConfigurationsFileArgs\n                {\n                    Bucket = \"example-bucket\",\n                    Key = \"configurations.json\",\n                },\n            },\n            CoreDesiredCapacity = 1,\n            CoreEbsBlockDevices = \n            {\n                new SpotInst.Aws.Inputs.MrScalarCoreEbsBlockDeviceArgs\n                {\n                    SizeInGb = 40,\n                    VolumeType = \"gp2\",\n                    VolumesPerInstance = 2,\n                },\n            },\n            CoreEbsOptimized = false,\n            CoreInstanceTypes = \n            {\n                \"c3.xlarge\",\n                \"c4.xlarge\",\n            },\n            CoreLifecycle = \"ON_DEMAND\",\n            CoreMaxSize = 1,\n            CoreMinSize = 1,\n            CoreUnit = \"instance\",\n            CustomAmiId = \"ami-123456\",\n            Description = \"Testing MrScaler creation via Terraform\",\n            Ec2KeyName = \"test-key\",\n            InstanceWeights = \n            {\n                new SpotInst.Aws.Inputs.MrScalarInstanceWeightArgs\n                {\n                    InstanceType = \"t2.small\",\n                    WeightedCapacity = 10,\n                },\n                new SpotInst.Aws.Inputs.MrScalarInstanceWeightArgs\n                {\n                    InstanceType = \"t2.medium\",\n                    WeightedCapacity = 90,\n                },\n            },\n            JobFlowRole = \"EMR_EC2_ExampleRole\",\n            KeepJobFlowAlive = true,\n            LogUri = \"s3://example-logs\",\n            ManagedPrimarySecurityGroup = \"sg-123456\",\n            ManagedReplicaSecurityGroup = \"sg-987654\",\n            MasterEbsBlockDevices = \n            {\n                new SpotInst.Aws.Inputs.MrScalarMasterEbsBlockDeviceArgs\n                {\n                    SizeInGb = 30,\n                    VolumeType = \"gp2\",\n                    VolumesPerInstance = 1,\n                },\n            },\n            MasterEbsOptimized = true,\n            MasterInstanceTypes = \n            {\n                \"c3.xlarge\",\n            },\n            MasterLifecycle = \"SPOT\",\n            ProvisioningTimeout = new SpotInst.Aws.Inputs.MrScalarProvisioningTimeoutArgs\n            {\n                Timeout = 15,\n                TimeoutAction = \"terminate\",\n            },\n            Region = \"us-west-2\",\n            ReleaseLabel = \"emr-5.17.0\",\n            RepoUpgradeOnBoot = \"NONE\",\n            Retries = 2,\n            SecurityConfig = \"example-config\",\n            ServiceAccessSecurityGroup = \"access-example\",\n            ServiceRole = \"example-role\",\n            StepsFiles = \n            {\n                new SpotInst.Aws.Inputs.MrScalarStepsFileArgs\n                {\n                    Bucket = \"example-bucket\",\n                    Key = \"steps.json\",\n                },\n            },\n            Strategy = \"new\",\n            Tags = \n            {\n                new SpotInst.Aws.Inputs.MrScalarTagArgs\n                {\n                    Key = \"Creator\",\n                    Value = \"Terraform\",\n                },\n            },\n            TaskDesiredCapacity = 1,\n            TaskEbsBlockDevices = \n            {\n                new SpotInst.Aws.Inputs.MrScalarTaskEbsBlockDeviceArgs\n                {\n                    SizeInGb = 40,\n                    VolumeType = \"gp2\",\n                    VolumesPerInstance = 2,\n                },\n            },\n            TaskEbsOptimized = false,\n            TaskInstanceTypes = \n            {\n                \"c3.xlarge\",\n                \"c4.xlarge\",\n            },\n            TaskLifecycle = \"SPOT\",\n            TaskMaxSize = 30,\n            TaskMinSize = 0,\n            TaskUnit = \"instance\",\n            TerminationProtected = false,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewMrScalar(ctx, \"terraform_MrScaler_01\", \u0026aws.MrScalarArgs{\n\t\t\tAdditionalInfo: pulumi.String(\"{'test':'more information'}\"),\n\t\t\tAdditionalPrimarySecurityGroups: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sg-456321\"),\n\t\t\t},\n\t\t\tAdditionalReplicaSecurityGroups: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sg-123654\"),\n\t\t\t},\n\t\t\tApplications: aws.MrScalarApplicationArray{\n\t\t\t\t\u0026aws.MrScalarApplicationArgs{\n\t\t\t\t\tName:    pulumi.String(\"Ganglia\"),\n\t\t\t\t\tVersion: pulumi.String(\"1.0\"),\n\t\t\t\t},\n\t\t\t\t\u0026aws.MrScalarApplicationArgs{\n\t\t\t\t\tName: pulumi.String(\"Hadoop\"),\n\t\t\t\t},\n\t\t\t\t\u0026aws.MrScalarApplicationArgs{\n\t\t\t\t\tArgs: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"fake\"),\n\t\t\t\t\t\tpulumi.String(\"args\"),\n\t\t\t\t\t},\n\t\t\t\t\tName: pulumi.String(\"Pig\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAvailabilityZones: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"us-west-2a:subnet-123456\"),\n\t\t\t},\n\t\t\tBootstrapActionsFiles: aws.MrScalarBootstrapActionsFileArray{\n\t\t\t\t\u0026aws.MrScalarBootstrapActionsFileArgs{\n\t\t\t\t\tBucket: pulumi.String(\"terraform-emr-test\"),\n\t\t\t\t\tKey:    pulumi.String(\"bootstrap-actions.json\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tConfigurationsFiles: aws.MrScalarConfigurationsFileArray{\n\t\t\t\t\u0026aws.MrScalarConfigurationsFileArgs{\n\t\t\t\t\tBucket: pulumi.String(\"example-bucket\"),\n\t\t\t\t\tKey:    pulumi.String(\"configurations.json\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tCoreDesiredCapacity: pulumi.Int(1),\n\t\t\tCoreEbsBlockDevices: aws.MrScalarCoreEbsBlockDeviceArray{\n\t\t\t\t\u0026aws.MrScalarCoreEbsBlockDeviceArgs{\n\t\t\t\t\tSizeInGb:           pulumi.Int(40),\n\t\t\t\t\tVolumeType:         pulumi.String(\"gp2\"),\n\t\t\t\t\tVolumesPerInstance: pulumi.Int(2),\n\t\t\t\t},\n\t\t\t},\n\t\t\tCoreEbsOptimized: pulumi.Bool(false),\n\t\t\tCoreInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"c3.xlarge\"),\n\t\t\t\tpulumi.String(\"c4.xlarge\"),\n\t\t\t},\n\t\t\tCoreLifecycle: pulumi.String(\"ON_DEMAND\"),\n\t\t\tCoreMaxSize:   pulumi.Int(1),\n\t\t\tCoreMinSize:   pulumi.Int(1),\n\t\t\tCoreUnit:      pulumi.String(\"instance\"),\n\t\t\tCustomAmiId:   pulumi.String(\"ami-123456\"),\n\t\t\tDescription:   pulumi.String(\"Testing MrScaler creation via Terraform\"),\n\t\t\tEc2KeyName:    pulumi.String(\"test-key\"),\n\t\t\tInstanceWeights: aws.MrScalarInstanceWeightArray{\n\t\t\t\t\u0026aws.MrScalarInstanceWeightArgs{\n\t\t\t\t\tInstanceType:     pulumi.String(\"t2.small\"),\n\t\t\t\t\tWeightedCapacity: pulumi.Int(10),\n\t\t\t\t},\n\t\t\t\t\u0026aws.MrScalarInstanceWeightArgs{\n\t\t\t\t\tInstanceType:     pulumi.String(\"t2.medium\"),\n\t\t\t\t\tWeightedCapacity: pulumi.Int(90),\n\t\t\t\t},\n\t\t\t},\n\t\t\tJobFlowRole:                 pulumi.String(\"EMR_EC2_ExampleRole\"),\n\t\t\tKeepJobFlowAlive:            pulumi.Bool(true),\n\t\t\tLogUri:                      pulumi.String(\"s3://example-logs\"),\n\t\t\tManagedPrimarySecurityGroup: pulumi.String(\"sg-123456\"),\n\t\t\tManagedReplicaSecurityGroup: pulumi.String(\"sg-987654\"),\n\t\t\tMasterEbsBlockDevices: aws.MrScalarMasterEbsBlockDeviceArray{\n\t\t\t\t\u0026aws.MrScalarMasterEbsBlockDeviceArgs{\n\t\t\t\t\tSizeInGb:           pulumi.Int(30),\n\t\t\t\t\tVolumeType:         pulumi.String(\"gp2\"),\n\t\t\t\t\tVolumesPerInstance: pulumi.Int(1),\n\t\t\t\t},\n\t\t\t},\n\t\t\tMasterEbsOptimized: pulumi.Bool(true),\n\t\t\tMasterInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"c3.xlarge\"),\n\t\t\t},\n\t\t\tMasterLifecycle: pulumi.String(\"SPOT\"),\n\t\t\tProvisioningTimeout: \u0026aws.MrScalarProvisioningTimeoutArgs{\n\t\t\t\tTimeout:       pulumi.Int(15),\n\t\t\t\tTimeoutAction: pulumi.String(\"terminate\"),\n\t\t\t},\n\t\t\tRegion:                     pulumi.String(\"us-west-2\"),\n\t\t\tReleaseLabel:               pulumi.String(\"emr-5.17.0\"),\n\t\t\tRepoUpgradeOnBoot:          pulumi.String(\"NONE\"),\n\t\t\tRetries:                    pulumi.Int(2),\n\t\t\tSecurityConfig:             pulumi.String(\"example-config\"),\n\t\t\tServiceAccessSecurityGroup: pulumi.String(\"access-example\"),\n\t\t\tServiceRole:                pulumi.String(\"example-role\"),\n\t\t\tStepsFiles: aws.MrScalarStepsFileArray{\n\t\t\t\t\u0026aws.MrScalarStepsFileArgs{\n\t\t\t\t\tBucket: pulumi.String(\"example-bucket\"),\n\t\t\t\t\tKey:    pulumi.String(\"steps.json\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tStrategy: pulumi.String(\"new\"),\n\t\t\tTags: aws.MrScalarTagArray{\n\t\t\t\t\u0026aws.MrScalarTagArgs{\n\t\t\t\t\tKey:   pulumi.String(\"Creator\"),\n\t\t\t\t\tValue: pulumi.String(\"Terraform\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaskDesiredCapacity: pulumi.Int(1),\n\t\t\tTaskEbsBlockDevices: aws.MrScalarTaskEbsBlockDeviceArray{\n\t\t\t\t\u0026aws.MrScalarTaskEbsBlockDeviceArgs{\n\t\t\t\t\tSizeInGb:           pulumi.Int(40),\n\t\t\t\t\tVolumeType:         pulumi.String(\"gp2\"),\n\t\t\t\t\tVolumesPerInstance: pulumi.Int(2),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaskEbsOptimized: pulumi.Bool(false),\n\t\t\tTaskInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"c3.xlarge\"),\n\t\t\t\tpulumi.String(\"c4.xlarge\"),\n\t\t\t},\n\t\t\tTaskLifecycle:        pulumi.String(\"SPOT\"),\n\t\t\tTaskMaxSize:          pulumi.Int(30),\n\t\t\tTaskMinSize:          pulumi.Int(0),\n\t\t\tTaskUnit:             pulumi.String(\"instance\"),\n\t\t\tTerminationProtected: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n{{% /example %}}\n{{% example %}}\n### Clone Strategy\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst terraform_MrScaler_01 = new spotinst.aws.MrScalar(\"Terraform-MrScaler-01\", {\n    availabilityZones: [\"us-west-2a:subnet-12345678\"],\n    clusterId: \"j-123456789\",\n    coreDesiredCapacity: 1,\n    coreEbsBlockDevices: [{\n        sizeInGb: 40,\n        volumeType: \"gp2\",\n        volumesPerInstance: 2,\n    }],\n    coreEbsOptimized: false,\n    // --- CORE GROUP -------------\n    coreInstanceTypes: [\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    coreLifecycle: \"ON_DEMAND\",\n    coreMaxSize: 1,\n    coreMinSize: 1,\n    coreUnit: \"instance\",\n    description: \"Testing MrScaler creation via Terraform\",\n    exposeClusterId: true,\n    masterEbsBlockDevices: [{\n        sizeInGb: 30,\n        volumeType: \"gp2\",\n        volumesPerInstance: 1,\n    }],\n    masterEbsOptimized: true,\n    // --- MASTER GROUP -------------\n    masterInstanceTypes: [\"c3.xlarge\"],\n    masterLifecycle: \"SPOT\",\n    region: \"us-west-2\",\n    strategy: \"clone\",\n    // --- TAGS -------------------\n    tags: [{\n        key: \"Creator\",\n        value: \"Terraform\",\n    }],\n    taskDesiredCapacity: 1,\n    taskEbsBlockDevices: [{\n        sizeInGb: 40,\n        volumeType: \"gp2\",\n        volumesPerInstance: 2,\n    }],\n    taskEbsOptimized: false,\n    // --- TASK GROUP -------------\n    taskInstanceTypes: [\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    taskLifecycle: \"SPOT\",\n    taskMaxSize: 30,\n    taskMinSize: 0,\n    // --- TASK SCALING POLICY ------\n    taskScalingDownPolicies: [{\n        actionType: \"\",\n        adjustment: \"1\",\n        cooldown: 60,\n        dimensions: {\n            name: \"name-1\",\n            value: \"value-1\",\n        },\n        evaluationPeriods: 10,\n        maxTargetCapacity: \"1\",\n        maximum: \"10\",\n        metricName: \"CPUUtilization\",\n        minimum: \"0\",\n        namespace: \"AWS/EC2\",\n        operator: \"gt\",\n        period: 60,\n        policyName: \"policy-name\",\n        statistic: \"average\",\n        target: \"5\",\n        threshold: 10,\n        unit: \"\",\n    }],\n    taskUnit: \"instance\",\n});\n\nexport const mrscaler_name = terraform_MrScaler_01.name;\nexport const mrscaler_created_cluster_id = terraform_MrScaler_01.outputClusterId;\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nterraform__mr_scaler_01 = spotinst.aws.MrScalar(\"terraform-MrScaler-01\",\n    availability_zones=[\"us-west-2a:subnet-12345678\"],\n    cluster_id=\"j-123456789\",\n    core_desired_capacity=1,\n    core_ebs_block_devices=[{\n        \"sizeInGb\": 40,\n        \"volumeType\": \"gp2\",\n        \"volumesPerInstance\": 2,\n    }],\n    core_ebs_optimized=False,\n    core_instance_types=[\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    core_lifecycle=\"ON_DEMAND\",\n    core_max_size=1,\n    core_min_size=1,\n    core_unit=\"instance\",\n    description=\"Testing MrScaler creation via Terraform\",\n    expose_cluster_id=True,\n    master_ebs_block_devices=[{\n        \"sizeInGb\": 30,\n        \"volumeType\": \"gp2\",\n        \"volumesPerInstance\": 1,\n    }],\n    master_ebs_optimized=True,\n    master_instance_types=[\"c3.xlarge\"],\n    master_lifecycle=\"SPOT\",\n    region=\"us-west-2\",\n    strategy=\"clone\",\n    tags=[{\n        \"key\": \"Creator\",\n        \"value\": \"Terraform\",\n    }],\n    task_desired_capacity=1,\n    task_ebs_block_devices=[{\n        \"sizeInGb\": 40,\n        \"volumeType\": \"gp2\",\n        \"volumesPerInstance\": 2,\n    }],\n    task_ebs_optimized=False,\n    task_instance_types=[\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    task_lifecycle=\"SPOT\",\n    task_max_size=30,\n    task_min_size=0,\n    task_scaling_down_policies=[{\n        \"actionType\": \"\",\n        \"adjustment\": \"1\",\n        \"cooldown\": 60,\n        \"dimensions\": {\n            \"name\": \"name-1\",\n            \"value\": \"value-1\",\n        },\n        \"evaluationPeriods\": 10,\n        \"maxTargetCapacity\": 1,\n        \"maximum\": 10,\n        \"metricName\": \"CPUUtilization\",\n        \"minimum\": 0,\n        \"namespace\": \"AWS/EC2\",\n        \"operator\": \"gt\",\n        \"period\": 60,\n        \"policyName\": \"policy-name\",\n        \"statistic\": \"average\",\n        \"target\": 5,\n        \"threshold\": 10,\n        \"unit\": \"\",\n    }],\n    task_unit=\"instance\")\npulumi.export(\"mrscaler-name\", terraform__mr_scaler_01.name)\npulumi.export(\"mrscaler-created-cluster-id\", terraform__mr_scaler_01.output_cluster_id)\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraform_MrScaler_01 = new SpotInst.Aws.MrScalar(\"terraform-MrScaler-01\", new SpotInst.Aws.MrScalarArgs\n        {\n            AvailabilityZones = \n            {\n                \"us-west-2a:subnet-12345678\",\n            },\n            ClusterId = \"j-123456789\",\n            CoreDesiredCapacity = 1,\n            CoreEbsBlockDevices = \n            {\n                new SpotInst.Aws.Inputs.MrScalarCoreEbsBlockDeviceArgs\n                {\n                    SizeInGb = 40,\n                    VolumeType = \"gp2\",\n                    VolumesPerInstance = 2,\n                },\n            },\n            CoreEbsOptimized = false,\n            CoreInstanceTypes = \n            {\n                \"c3.xlarge\",\n                \"c4.xlarge\",\n            },\n            CoreLifecycle = \"ON_DEMAND\",\n            CoreMaxSize = 1,\n            CoreMinSize = 1,\n            CoreUnit = \"instance\",\n            Description = \"Testing MrScaler creation via Terraform\",\n            ExposeClusterId = true,\n            MasterEbsBlockDevices = \n            {\n                new SpotInst.Aws.Inputs.MrScalarMasterEbsBlockDeviceArgs\n                {\n                    SizeInGb = 30,\n                    VolumeType = \"gp2\",\n                    VolumesPerInstance = 1,\n                },\n            },\n            MasterEbsOptimized = true,\n            MasterInstanceTypes = \n            {\n                \"c3.xlarge\",\n            },\n            MasterLifecycle = \"SPOT\",\n            Region = \"us-west-2\",\n            Strategy = \"clone\",\n            Tags = \n            {\n                new SpotInst.Aws.Inputs.MrScalarTagArgs\n                {\n                    Key = \"Creator\",\n                    Value = \"Terraform\",\n                },\n            },\n            TaskDesiredCapacity = 1,\n            TaskEbsBlockDevices = \n            {\n                new SpotInst.Aws.Inputs.MrScalarTaskEbsBlockDeviceArgs\n                {\n                    SizeInGb = 40,\n                    VolumeType = \"gp2\",\n                    VolumesPerInstance = 2,\n                },\n            },\n            TaskEbsOptimized = false,\n            TaskInstanceTypes = \n            {\n                \"c3.xlarge\",\n                \"c4.xlarge\",\n            },\n            TaskLifecycle = \"SPOT\",\n            TaskMaxSize = 30,\n            TaskMinSize = 0,\n            TaskScalingDownPolicies = \n            {\n                new SpotInst.Aws.Inputs.MrScalarTaskScalingDownPolicyArgs\n                {\n                    ActionType = \"\",\n                    Adjustment = \"1\",\n                    Cooldown = 60,\n                    Dimensions = \n                    {\n                        { \"name\", \"name-1\" },\n                        { \"value\", \"value-1\" },\n                    },\n                    EvaluationPeriods = 10,\n                    MaxTargetCapacity = \"1\",\n                    Maximum = \"10\",\n                    MetricName = \"CPUUtilization\",\n                    Minimum = \"0\",\n                    Namespace = \"AWS/EC2\",\n                    Operator = \"gt\",\n                    Period = 60,\n                    PolicyName = \"policy-name\",\n                    Statistic = \"average\",\n                    Target = \"5\",\n                    Threshold = 10,\n                    Unit = \"\",\n                },\n            },\n            TaskUnit = \"instance\",\n        });\n        this.Mrscaler_name = terraform_MrScaler_01.Name;\n        this.Mrscaler_created_cluster_id = terraform_MrScaler_01.OutputClusterId;\n    }\n\n    [Output(\"mrscaler-name\")]\n    public Output\u003cstring\u003e Mrscaler_name { get; set; }\n    [Output(\"mrscaler-created-cluster-id\")]\n    public Output\u003cstring\u003e Mrscaler_created_cluster_id { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewMrScalar(ctx, \"terraform_MrScaler_01\", \u0026aws.MrScalarArgs{\n\t\t\tAvailabilityZones: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"us-west-2a:subnet-12345678\"),\n\t\t\t},\n\t\t\tClusterId:           pulumi.String(\"j-123456789\"),\n\t\t\tCoreDesiredCapacity: pulumi.Int(1),\n\t\t\tCoreEbsBlockDevices: aws.MrScalarCoreEbsBlockDeviceArray{\n\t\t\t\t\u0026aws.MrScalarCoreEbsBlockDeviceArgs{\n\t\t\t\t\tSizeInGb:           pulumi.Int(40),\n\t\t\t\t\tVolumeType:         pulumi.String(\"gp2\"),\n\t\t\t\t\tVolumesPerInstance: pulumi.Int(2),\n\t\t\t\t},\n\t\t\t},\n\t\t\tCoreEbsOptimized: pulumi.Bool(false),\n\t\t\tCoreInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"c3.xlarge\"),\n\t\t\t\tpulumi.String(\"c4.xlarge\"),\n\t\t\t},\n\t\t\tCoreLifecycle:   pulumi.String(\"ON_DEMAND\"),\n\t\t\tCoreMaxSize:     pulumi.Int(1),\n\t\t\tCoreMinSize:     pulumi.Int(1),\n\t\t\tCoreUnit:        pulumi.String(\"instance\"),\n\t\t\tDescription:     pulumi.String(\"Testing MrScaler creation via Terraform\"),\n\t\t\tExposeClusterId: pulumi.Bool(true),\n\t\t\tMasterEbsBlockDevices: aws.MrScalarMasterEbsBlockDeviceArray{\n\t\t\t\t\u0026aws.MrScalarMasterEbsBlockDeviceArgs{\n\t\t\t\t\tSizeInGb:           pulumi.Int(30),\n\t\t\t\t\tVolumeType:         pulumi.String(\"gp2\"),\n\t\t\t\t\tVolumesPerInstance: pulumi.Int(1),\n\t\t\t\t},\n\t\t\t},\n\t\t\tMasterEbsOptimized: pulumi.Bool(true),\n\t\t\tMasterInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"c3.xlarge\"),\n\t\t\t},\n\t\t\tMasterLifecycle: pulumi.String(\"SPOT\"),\n\t\t\tRegion:          pulumi.String(\"us-west-2\"),\n\t\t\tStrategy:        pulumi.String(\"clone\"),\n\t\t\tTags: aws.MrScalarTagArray{\n\t\t\t\t\u0026aws.MrScalarTagArgs{\n\t\t\t\t\tKey:   pulumi.String(\"Creator\"),\n\t\t\t\t\tValue: pulumi.String(\"Terraform\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaskDesiredCapacity: pulumi.Int(1),\n\t\t\tTaskEbsBlockDevices: aws.MrScalarTaskEbsBlockDeviceArray{\n\t\t\t\t\u0026aws.MrScalarTaskEbsBlockDeviceArgs{\n\t\t\t\t\tSizeInGb:           pulumi.Int(40),\n\t\t\t\t\tVolumeType:         pulumi.String(\"gp2\"),\n\t\t\t\t\tVolumesPerInstance: pulumi.Int(2),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaskEbsOptimized: pulumi.Bool(false),\n\t\t\tTaskInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"c3.xlarge\"),\n\t\t\t\tpulumi.String(\"c4.xlarge\"),\n\t\t\t},\n\t\t\tTaskLifecycle: pulumi.String(\"SPOT\"),\n\t\t\tTaskMaxSize:   pulumi.Int(30),\n\t\t\tTaskMinSize:   pulumi.Int(0),\n\t\t\tTaskScalingDownPolicies: aws.MrScalarTaskScalingDownPolicyArray{\n\t\t\t\t\u0026aws.MrScalarTaskScalingDownPolicyArgs{\n\t\t\t\t\tActionType: pulumi.String(\"\"),\n\t\t\t\t\tAdjustment: pulumi.String(\"1\"),\n\t\t\t\t\tCooldown:   pulumi.Int(60),\n\t\t\t\t\tDimensions: pulumi.StringMap{\n\t\t\t\t\t\t\"name\":  pulumi.String(\"name-1\"),\n\t\t\t\t\t\t\"value\": pulumi.String(\"value-1\"),\n\t\t\t\t\t},\n\t\t\t\t\tEvaluationPeriods: pulumi.Int(10),\n\t\t\t\t\tMaxTargetCapacity: pulumi.String(\"1\"),\n\t\t\t\t\tMaximum:           pulumi.String(\"10\"),\n\t\t\t\t\tMetricName:        pulumi.String(\"CPUUtilization\"),\n\t\t\t\t\tMinimum:           pulumi.String(\"0\"),\n\t\t\t\t\tNamespace:         pulumi.String(\"AWS/EC2\"),\n\t\t\t\t\tOperator:          pulumi.String(\"gt\"),\n\t\t\t\t\tPeriod:            pulumi.Int(60),\n\t\t\t\t\tPolicyName:        pulumi.String(\"policy-name\"),\n\t\t\t\t\tStatistic:         pulumi.String(\"average\"),\n\t\t\t\t\tTarget:            pulumi.String(\"5\"),\n\t\t\t\t\tThreshold:         pulumi.Float64(10),\n\t\t\t\t\tUnit:              pulumi.String(\"\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaskUnit: pulumi.String(\"instance\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"mrscaler-name\", terraform_MrScaler_01.Name)\n\t\tctx.Export(\"mrscaler-created-cluster-id\", terraform_MrScaler_01.OutputClusterId)\n\t\treturn nil\n\t})\n}\n```\n\n{{% /example %}}\n{{% example %}}\n### Wrap Strategy\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example_scaler_2 = new spotinst.aws.MrScalar(\"example-scaler-2\", {\n    clusterId: \"j-27UVDEHXL4OQM\",\n    description: \"created by Terraform\",\n    region: \"us-west-2\",\n    strategy: \"wrap\",\n    taskDesiredCapacity: 2,\n    taskEbsBlockDevices: [{\n        sizeInGb: 20,\n        volumeType: \"gp2\",\n        volumesPerInstance: 1,\n    }],\n    // --- TASK GROUP -------------\n    taskInstanceTypes: [\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    taskLifecycle: \"SPOT\",\n    taskMaxSize: 4,\n    taskMinSize: 0,\n    taskUnit: \"instance\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample_scaler_2 = spotinst.aws.MrScalar(\"example-scaler-2\",\n    cluster_id=\"j-27UVDEHXL4OQM\",\n    description=\"created by Terraform\",\n    region=\"us-west-2\",\n    strategy=\"wrap\",\n    task_desired_capacity=2,\n    task_ebs_block_devices=[{\n        \"sizeInGb\": 20,\n        \"volumeType\": \"gp2\",\n        \"volumesPerInstance\": 1,\n    }],\n    task_instance_types=[\n        \"c3.xlarge\",\n        \"c4.xlarge\",\n    ],\n    task_lifecycle=\"SPOT\",\n    task_max_size=4,\n    task_min_size=0,\n    task_unit=\"instance\")\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example_scaler_2 = new SpotInst.Aws.MrScalar(\"example-scaler-2\", new SpotInst.Aws.MrScalarArgs\n        {\n            ClusterId = \"j-27UVDEHXL4OQM\",\n            Description = \"created by Terraform\",\n            Region = \"us-west-2\",\n            Strategy = \"wrap\",\n            TaskDesiredCapacity = 2,\n            TaskEbsBlockDevices = \n            {\n                new SpotInst.Aws.Inputs.MrScalarTaskEbsBlockDeviceArgs\n                {\n                    SizeInGb = 20,\n                    VolumeType = \"gp2\",\n                    VolumesPerInstance = 1,\n                },\n            },\n            TaskInstanceTypes = \n            {\n                \"c3.xlarge\",\n                \"c4.xlarge\",\n            },\n            TaskLifecycle = \"SPOT\",\n            TaskMaxSize = 4,\n            TaskMinSize = 0,\n            TaskUnit = \"instance\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewMrScalar(ctx, \"example_scaler_2\", \u0026aws.MrScalarArgs{\n\t\t\tClusterId:           pulumi.String(\"j-27UVDEHXL4OQM\"),\n\t\t\tDescription:         pulumi.String(\"created by Terraform\"),\n\t\t\tRegion:              pulumi.String(\"us-west-2\"),\n\t\t\tStrategy:            pulumi.String(\"wrap\"),\n\t\t\tTaskDesiredCapacity: pulumi.Int(2),\n\t\t\tTaskEbsBlockDevices: aws.MrScalarTaskEbsBlockDeviceArray{\n\t\t\t\t\u0026aws.MrScalarTaskEbsBlockDeviceArgs{\n\t\t\t\t\tSizeInGb:           pulumi.Int(20),\n\t\t\t\t\tVolumeType:         pulumi.String(\"gp2\"),\n\t\t\t\t\tVolumesPerInstance: pulumi.Int(1),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaskInstanceTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"c3.xlarge\"),\n\t\t\t\tpulumi.String(\"c4.xlarge\"),\n\t\t\t},\n\t\t\tTaskLifecycle: pulumi.String(\"SPOT\"),\n\t\t\tTaskMaxSize:   pulumi.Int(4),\n\t\t\tTaskMinSize:   pulumi.Int(0),\n\t\t\tTaskUnit:      pulumi.String(\"instance\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "additionalInfo": {
                    "type": "string"
                },
                "additionalPrimarySecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "additionalReplicaSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarApplication:MrScalarApplication"
                    }
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bootstrapActionsFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarBootstrapActionsFile:MrScalarBootstrapActionsFile"
                    }
                },
                "clusterId": {
                    "type": "string",
                    "description": "The MrScaler cluster id.\n"
                },
                "configurationsFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarConfigurationsFile:MrScalarConfigurationsFile"
                    }
                },
                "coreDesiredCapacity": {
                    "type": "integer"
                },
                "coreEbsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarCoreEbsBlockDevice:MrScalarCoreEbsBlockDevice"
                    }
                },
                "coreEbsOptimized": {
                    "type": "boolean"
                },
                "coreInstanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "coreLifecycle": {
                    "type": "string"
                },
                "coreMaxSize": {
                    "type": "integer"
                },
                "coreMinSize": {
                    "type": "integer"
                },
                "coreScalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarCoreScalingDownPolicy:MrScalarCoreScalingDownPolicy"
                    }
                },
                "coreScalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarCoreScalingUpPolicy:MrScalarCoreScalingUpPolicy"
                    }
                },
                "coreUnit": {
                    "type": "string"
                },
                "customAmiId": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The MrScaler description.\n"
                },
                "ebsRootVolumeSize": {
                    "type": "integer"
                },
                "ec2KeyName": {
                    "type": "string"
                },
                "exposeClusterId": {
                    "type": "boolean"
                },
                "instanceWeights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarInstanceWeight:MrScalarInstanceWeight"
                    }
                },
                "jobFlowRole": {
                    "type": "string"
                },
                "keepJobFlowAlive": {
                    "type": "boolean"
                },
                "logUri": {
                    "type": "string"
                },
                "managedPrimarySecurityGroup": {
                    "type": "string"
                },
                "managedReplicaSecurityGroup": {
                    "type": "string"
                },
                "masterEbsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarMasterEbsBlockDevice:MrScalarMasterEbsBlockDevice"
                    }
                },
                "masterEbsOptimized": {
                    "type": "boolean"
                },
                "masterInstanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "masterLifecycle": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The MrScaler name.\n"
                },
                "outputClusterId": {
                    "type": "string"
                },
                "provisioningTimeout": {
                    "$ref": "#/types/spotinst:aws/MrScalarProvisioningTimeout:MrScalarProvisioningTimeout"
                },
                "region": {
                    "type": "string",
                    "description": "The MrScaler region.\n"
                },
                "releaseLabel": {
                    "type": "string"
                },
                "repoUpgradeOnBoot": {
                    "type": "string"
                },
                "retries": {
                    "type": "integer"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarScheduledTask:MrScalarScheduledTask"
                    }
                },
                "securityConfig": {
                    "type": "string"
                },
                "serviceAccessSecurityGroup": {
                    "type": "string"
                },
                "serviceRole": {
                    "type": "string"
                },
                "stepsFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarStepsFile:MrScalarStepsFile"
                    }
                },
                "strategy": {
                    "type": "string",
                    "description": "The MrScaler strategy. Allowed values are `new` `clone` and `wrap`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTag:MrScalarTag"
                    }
                },
                "taskDesiredCapacity": {
                    "type": "integer"
                },
                "taskEbsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTaskEbsBlockDevice:MrScalarTaskEbsBlockDevice"
                    }
                },
                "taskEbsOptimized": {
                    "type": "boolean"
                },
                "taskInstanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "taskLifecycle": {
                    "type": "string"
                },
                "taskMaxSize": {
                    "type": "integer"
                },
                "taskMinSize": {
                    "type": "integer"
                },
                "taskScalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTaskScalingDownPolicy:MrScalarTaskScalingDownPolicy"
                    }
                },
                "taskScalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTaskScalingUpPolicy:MrScalarTaskScalingUpPolicy"
                    }
                },
                "taskUnit": {
                    "type": "string"
                },
                "terminationPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTerminationPolicy:MrScalarTerminationPolicy"
                    },
                    "description": "Allows defining termination policies for EMR clusters based on CloudWatch Metrics.\n"
                },
                "terminationProtected": {
                    "type": "boolean"
                },
                "visibleToAllUsers": {
                    "type": "boolean",
                    "deprecationMessage": "This field has been removed from our API and is no longer functional."
                }
            },
            "required": [
                "name",
                "outputClusterId",
                "strategy"
            ],
            "inputProperties": {
                "additionalInfo": {
                    "type": "string"
                },
                "additionalPrimarySecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "additionalReplicaSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarApplication:MrScalarApplication"
                    }
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bootstrapActionsFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarBootstrapActionsFile:MrScalarBootstrapActionsFile"
                    }
                },
                "clusterId": {
                    "type": "string",
                    "description": "The MrScaler cluster id.\n"
                },
                "configurationsFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarConfigurationsFile:MrScalarConfigurationsFile"
                    }
                },
                "coreDesiredCapacity": {
                    "type": "integer"
                },
                "coreEbsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarCoreEbsBlockDevice:MrScalarCoreEbsBlockDevice"
                    }
                },
                "coreEbsOptimized": {
                    "type": "boolean"
                },
                "coreInstanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "coreLifecycle": {
                    "type": "string"
                },
                "coreMaxSize": {
                    "type": "integer"
                },
                "coreMinSize": {
                    "type": "integer"
                },
                "coreScalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarCoreScalingDownPolicy:MrScalarCoreScalingDownPolicy"
                    }
                },
                "coreScalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarCoreScalingUpPolicy:MrScalarCoreScalingUpPolicy"
                    }
                },
                "coreUnit": {
                    "type": "string"
                },
                "customAmiId": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The MrScaler description.\n"
                },
                "ebsRootVolumeSize": {
                    "type": "integer"
                },
                "ec2KeyName": {
                    "type": "string"
                },
                "exposeClusterId": {
                    "type": "boolean"
                },
                "instanceWeights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarInstanceWeight:MrScalarInstanceWeight"
                    }
                },
                "jobFlowRole": {
                    "type": "string"
                },
                "keepJobFlowAlive": {
                    "type": "boolean"
                },
                "logUri": {
                    "type": "string"
                },
                "managedPrimarySecurityGroup": {
                    "type": "string"
                },
                "managedReplicaSecurityGroup": {
                    "type": "string"
                },
                "masterEbsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarMasterEbsBlockDevice:MrScalarMasterEbsBlockDevice"
                    }
                },
                "masterEbsOptimized": {
                    "type": "boolean"
                },
                "masterInstanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "masterLifecycle": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The MrScaler name.\n"
                },
                "provisioningTimeout": {
                    "$ref": "#/types/spotinst:aws/MrScalarProvisioningTimeout:MrScalarProvisioningTimeout"
                },
                "region": {
                    "type": "string",
                    "description": "The MrScaler region.\n"
                },
                "releaseLabel": {
                    "type": "string"
                },
                "repoUpgradeOnBoot": {
                    "type": "string"
                },
                "retries": {
                    "type": "integer"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarScheduledTask:MrScalarScheduledTask"
                    }
                },
                "securityConfig": {
                    "type": "string"
                },
                "serviceAccessSecurityGroup": {
                    "type": "string"
                },
                "serviceRole": {
                    "type": "string"
                },
                "stepsFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarStepsFile:MrScalarStepsFile"
                    }
                },
                "strategy": {
                    "type": "string",
                    "description": "The MrScaler strategy. Allowed values are `new` `clone` and `wrap`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTag:MrScalarTag"
                    }
                },
                "taskDesiredCapacity": {
                    "type": "integer"
                },
                "taskEbsBlockDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTaskEbsBlockDevice:MrScalarTaskEbsBlockDevice"
                    }
                },
                "taskEbsOptimized": {
                    "type": "boolean"
                },
                "taskInstanceTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "taskLifecycle": {
                    "type": "string"
                },
                "taskMaxSize": {
                    "type": "integer"
                },
                "taskMinSize": {
                    "type": "integer"
                },
                "taskScalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTaskScalingDownPolicy:MrScalarTaskScalingDownPolicy"
                    }
                },
                "taskScalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTaskScalingUpPolicy:MrScalarTaskScalingUpPolicy"
                    }
                },
                "taskUnit": {
                    "type": "string"
                },
                "terminationPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/MrScalarTerminationPolicy:MrScalarTerminationPolicy"
                    },
                    "description": "Allows defining termination policies for EMR clusters based on CloudWatch Metrics.\n"
                },
                "terminationProtected": {
                    "type": "boolean"
                },
                "visibleToAllUsers": {
                    "type": "boolean",
                    "deprecationMessage": "This field has been removed from our API and is no longer functional."
                }
            },
            "requiredInputs": [
                "strategy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MrScalar resources.\n",
                "properties": {
                    "additionalInfo": {
                        "type": "string"
                    },
                    "additionalPrimarySecurityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "additionalReplicaSecurityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarApplication:MrScalarApplication"
                        }
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bootstrapActionsFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarBootstrapActionsFile:MrScalarBootstrapActionsFile"
                        }
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The MrScaler cluster id.\n"
                    },
                    "configurationsFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarConfigurationsFile:MrScalarConfigurationsFile"
                        }
                    },
                    "coreDesiredCapacity": {
                        "type": "integer"
                    },
                    "coreEbsBlockDevices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarCoreEbsBlockDevice:MrScalarCoreEbsBlockDevice"
                        }
                    },
                    "coreEbsOptimized": {
                        "type": "boolean"
                    },
                    "coreInstanceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "coreLifecycle": {
                        "type": "string"
                    },
                    "coreMaxSize": {
                        "type": "integer"
                    },
                    "coreMinSize": {
                        "type": "integer"
                    },
                    "coreScalingDownPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarCoreScalingDownPolicy:MrScalarCoreScalingDownPolicy"
                        }
                    },
                    "coreScalingUpPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarCoreScalingUpPolicy:MrScalarCoreScalingUpPolicy"
                        }
                    },
                    "coreUnit": {
                        "type": "string"
                    },
                    "customAmiId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "The MrScaler description.\n"
                    },
                    "ebsRootVolumeSize": {
                        "type": "integer"
                    },
                    "ec2KeyName": {
                        "type": "string"
                    },
                    "exposeClusterId": {
                        "type": "boolean"
                    },
                    "instanceWeights": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarInstanceWeight:MrScalarInstanceWeight"
                        }
                    },
                    "jobFlowRole": {
                        "type": "string"
                    },
                    "keepJobFlowAlive": {
                        "type": "boolean"
                    },
                    "logUri": {
                        "type": "string"
                    },
                    "managedPrimarySecurityGroup": {
                        "type": "string"
                    },
                    "managedReplicaSecurityGroup": {
                        "type": "string"
                    },
                    "masterEbsBlockDevices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarMasterEbsBlockDevice:MrScalarMasterEbsBlockDevice"
                        }
                    },
                    "masterEbsOptimized": {
                        "type": "boolean"
                    },
                    "masterInstanceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "masterLifecycle": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The MrScaler name.\n"
                    },
                    "outputClusterId": {
                        "type": "string"
                    },
                    "provisioningTimeout": {
                        "$ref": "#/types/spotinst:aws/MrScalarProvisioningTimeout:MrScalarProvisioningTimeout"
                    },
                    "region": {
                        "type": "string",
                        "description": "The MrScaler region.\n"
                    },
                    "releaseLabel": {
                        "type": "string"
                    },
                    "repoUpgradeOnBoot": {
                        "type": "string"
                    },
                    "retries": {
                        "type": "integer"
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarScheduledTask:MrScalarScheduledTask"
                        }
                    },
                    "securityConfig": {
                        "type": "string"
                    },
                    "serviceAccessSecurityGroup": {
                        "type": "string"
                    },
                    "serviceRole": {
                        "type": "string"
                    },
                    "stepsFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarStepsFile:MrScalarStepsFile"
                        }
                    },
                    "strategy": {
                        "type": "string",
                        "description": "The MrScaler strategy. Allowed values are `new` `clone` and `wrap`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarTag:MrScalarTag"
                        }
                    },
                    "taskDesiredCapacity": {
                        "type": "integer"
                    },
                    "taskEbsBlockDevices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarTaskEbsBlockDevice:MrScalarTaskEbsBlockDevice"
                        }
                    },
                    "taskEbsOptimized": {
                        "type": "boolean"
                    },
                    "taskInstanceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "taskLifecycle": {
                        "type": "string"
                    },
                    "taskMaxSize": {
                        "type": "integer"
                    },
                    "taskMinSize": {
                        "type": "integer"
                    },
                    "taskScalingDownPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarTaskScalingDownPolicy:MrScalarTaskScalingDownPolicy"
                        }
                    },
                    "taskScalingUpPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarTaskScalingUpPolicy:MrScalarTaskScalingUpPolicy"
                        }
                    },
                    "taskUnit": {
                        "type": "string"
                    },
                    "terminationPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/MrScalarTerminationPolicy:MrScalarTerminationPolicy"
                        },
                        "description": "Allows defining termination policies for EMR clusters based on CloudWatch Metrics.\n"
                    },
                    "terminationProtected": {
                        "type": "boolean"
                    },
                    "visibleToAllUsers": {
                        "type": "boolean",
                        "deprecationMessage": "This field has been removed from our API and is no longer functional."
                    }
                },
                "type": "object"
            }
        },
        "spotinst:aws/ocean:Ocean": {
            "description": "Provides a Spotinst Ocean AWS resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.aws.Ocean(\"example\", {\n    associatePublicIpAddress: true,\n    controllerId: \"fakeClusterId\",\n    desiredCapacity: 2,\n    drainingTimeout: 120,\n    ebsOptimized: true,\n    // --- STRATEGY --------------------\n    fallbackToOndemand: true,\n    gracePeriod: 600,\n    iamInstanceProfile: \"iam-profile\",\n    // --- LAUNCH CONFIGURATION --------------\n    imageId: \"ami-123456\",\n    keyName: \"fake key\",\n    loadBalancers: [\n        {\n            arn: \"arn:aws:elasticloadbalancing:us-west-2:fake-arn\",\n            type: \"TARGET_GROUP\",\n        },\n        {\n            name: \"AntonK\",\n            type: \"CLASSIC\",\n        },\n    ],\n    maxSize: 2,\n    minSize: 1,\n    monitoring: true,\n    region: \"us-west-2\",\n    rootVolumeSize: 20,\n    securityGroups: [\"sg-987654321\"],\n    subnetIds: [\"subnet-123456789\"],\n    tags: [{\n        key: \"fakeKey\",\n        value: \"fakeValue\",\n    }],\n    userData: \"echo hello world\",\n    utilizeReservedInstances: false,\n    whitelists: [\n        \"t1.micro\",\n        \"m1.small\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.aws.Ocean(\"example\",\n    associate_public_ip_address=True,\n    controller_id=\"fakeClusterId\",\n    desired_capacity=2,\n    draining_timeout=120,\n    ebs_optimized=True,\n    fallback_to_ondemand=True,\n    grace_period=600,\n    iam_instance_profile=\"iam-profile\",\n    image_id=\"ami-123456\",\n    key_name=\"fake key\",\n    load_balancers=[\n        {\n            \"arn\": \"arn:aws:elasticloadbalancing:us-west-2:fake-arn\",\n            \"type\": \"TARGET_GROUP\",\n        },\n        {\n            \"name\": \"AntonK\",\n            \"type\": \"CLASSIC\",\n        },\n    ],\n    max_size=2,\n    min_size=1,\n    monitoring=True,\n    region=\"us-west-2\",\n    root_volume_size=20,\n    security_groups=[\"sg-987654321\"],\n    subnet_ids=[\"subnet-123456789\"],\n    tags=[{\n        \"key\": \"fakeKey\",\n        \"value\": \"fakeValue\",\n    }],\n    user_data=\"echo hello world\",\n    utilize_reserved_instances=False,\n    whitelists=[\n        \"t1.micro\",\n        \"m1.small\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new SpotInst.Aws.Ocean(\"example\", new SpotInst.Aws.OceanArgs\n        {\n            AssociatePublicIpAddress = true,\n            ControllerId = \"fakeClusterId\",\n            DesiredCapacity = 2,\n            DrainingTimeout = 120,\n            EbsOptimized = true,\n            FallbackToOndemand = true,\n            GracePeriod = 600,\n            IamInstanceProfile = \"iam-profile\",\n            ImageId = \"ami-123456\",\n            KeyName = \"fake key\",\n            LoadBalancers = \n            {\n                new SpotInst.Aws.Inputs.OceanLoadBalancerArgs\n                {\n                    Arn = \"arn:aws:elasticloadbalancing:us-west-2:fake-arn\",\n                    Type = \"TARGET_GROUP\",\n                },\n                new SpotInst.Aws.Inputs.OceanLoadBalancerArgs\n                {\n                    Name = \"AntonK\",\n                    Type = \"CLASSIC\",\n                },\n            },\n            MaxSize = 2,\n            MinSize = 1,\n            Monitoring = true,\n            Region = \"us-west-2\",\n            RootVolumeSize = 20,\n            SecurityGroups = \n            {\n                \"sg-987654321\",\n            },\n            SubnetIds = \n            {\n                \"subnet-123456789\",\n            },\n            Tags = \n            {\n                new SpotInst.Aws.Inputs.OceanTagArgs\n                {\n                    Key = \"fakeKey\",\n                    Value = \"fakeValue\",\n                },\n            },\n            UserData = \"echo hello world\",\n            UtilizeReservedInstances = false,\n            Whitelists = \n            {\n                \"t1.micro\",\n                \"m1.small\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewOcean(ctx, \"example\", \u0026aws.OceanArgs{\n\t\t\tAssociatePublicIpAddress: pulumi.Bool(true),\n\t\t\tControllerId:             pulumi.String(\"fakeClusterId\"),\n\t\t\tDesiredCapacity:          pulumi.Int(2),\n\t\t\tDrainingTimeout:          pulumi.Int(120),\n\t\t\tEbsOptimized:             pulumi.Bool(true),\n\t\t\tFallbackToOndemand:       pulumi.Bool(true),\n\t\t\tGracePeriod:              pulumi.Int(600),\n\t\t\tIamInstanceProfile:       pulumi.String(\"iam-profile\"),\n\t\t\tImageId:                  pulumi.String(\"ami-123456\"),\n\t\t\tKeyName:                  pulumi.String(\"fake key\"),\n\t\t\tLoadBalancers: aws.OceanLoadBalancerArray{\n\t\t\t\t\u0026aws.OceanLoadBalancerArgs{\n\t\t\t\t\tArn:  pulumi.String(\"arn:aws:elasticloadbalancing:us-west-2:fake-arn\"),\n\t\t\t\t\tType: pulumi.String(\"TARGET_GROUP\"),\n\t\t\t\t},\n\t\t\t\t\u0026aws.OceanLoadBalancerArgs{\n\t\t\t\t\tName: pulumi.String(\"AntonK\"),\n\t\t\t\t\tType: pulumi.String(\"CLASSIC\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tMaxSize:        pulumi.Int(2),\n\t\t\tMinSize:        pulumi.Int(1),\n\t\t\tMonitoring:     pulumi.Bool(true),\n\t\t\tRegion:         pulumi.String(\"us-west-2\"),\n\t\t\tRootVolumeSize: pulumi.Int(20),\n\t\t\tSecurityGroups: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sg-987654321\"),\n\t\t\t},\n\t\t\tSubnetIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"subnet-123456789\"),\n\t\t\t},\n\t\t\tTags: aws.OceanTagArray{\n\t\t\t\t\u0026aws.OceanTagArgs{\n\t\t\t\t\tKey:   pulumi.String(\"fakeKey\"),\n\t\t\t\t\tValue: pulumi.String(\"fakeValue\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUserData:                 pulumi.String(\"echo hello world\"),\n\t\t\tUtilizeReservedInstances: pulumi.Bool(false),\n\t\t\tWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"t1.micro\"),\n\t\t\t\tpulumi.String(\"m1.small\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Auto Scaler\n\n* `autoscaler` - (Optional) Describes the Ocean Kubernetes autoscaler.\n* `autoscale_is_enabled` - (Optional, Default: `true`) Enable the Ocean Kubernetes autoscaler.\n* `autoscale_is_auto_config` - (Optional, Default: `true`) Automatically configure and optimize headroom resources.\n* `autoscale_cooldown` - (Optional, Default: `null`) Cooldown period between scaling actions.\n* `auto_headroom_percentage` - (Optional) Set the auto headroom percentage (a number in the range [0, 200]) which controls the percentage of headroom from the cluster. Relevant only when `isAutoConfig` toggled on.\n* `autoscale_headroom` - (Optional) Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n* `cpu_per_unit` - (Optional) Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n* `gpu_per_unit` - (Optional) Optionally configure the number of GPUS to allocate the headroom.\n* `memory_per_unit` - (Optional) Optionally configure the amount of memory (MB) to allocate the headroom.\n* `num_of_units` - (Optional) The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n* `autoscale_down` - (Optional) Auto Scaling scale down operations.\n* `max_scale_down_percentage` - (Optional) Would represent the maximum % to scale-down. Number between 1-100.\n* `resource_limits` - (Optional) Optionally set upper and lower bounds on the resource usage of the cluster.\n* `max_vcpu` - (Optional) The maximum cpu in vCPU units that can be allocated to the cluster.\n* `max_memory_gib` - (Optional) The maximum memory in GiB units that can be allocated to the cluster.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"update-policy\"\u003e\u003c/a\u003e\n## Update Policy\n\n* `update_policy` - (Optional)\n    * `should_roll` - (Required) Enables the roll.\n    * `roll_config` - (Required) While used, you can control whether the group should perform a deployment after an update to the configuration.\n        * `batch_size_percentage` - (Required) Sets the percentage of the instances to deploy in each batch.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"scheduled-task\"\u003e\u003c/a\u003e\n## scheduled task\n\n* `scheduled_task` - (Optional) Set scheduling object.\n    * `shutdown_hours` - (Optional) Set shutdown hours for cluster object.\n        * `is_enabled` - (Optional)  Flag to enable / disable the shutdown hours.\n                                     Example: True\n        * `time_windows` - (Required) Set time windows for shutdown hours. specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59. Time windows should not overlap. required on cluster.scheduling.isEnabled = True. API Times are in UTC\n                                      Example: Fri:15:30-Wed:14:30\n    * `tasks` - (Optional) The scheduling tasks for the cluster.\n        * `is_enabled` - (Required)  Describes whether the task is enabled. When true the task should run when false it should not run. Required for cluster.scheduling.tasks object.\n        * `cron_expression` - (Required) A valid cron expression. For example : \" * * * * * \".The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of ‘frequency’ or ‘cronExpression’ should be used at a time. Required for cluster.scheduling.tasks object\n                                         Example: 0 1 * * *\n        * `task_type` - (Required) Valid values: \"clusterRoll\". Required for cluster.scheduling.tasks object\n                                   Example: clusterRoll\n             \n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n",
            "properties": {
                "associatePublicIpAddress": {
                    "type": "boolean",
                    "description": "Configure public IP address allocation.\n"
                },
                "autoscaler": {
                    "$ref": "#/types/spotinst:aws/OceanAutoscaler:OceanAutoscaler"
                },
                "blacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types not allowed in the Ocean cluster. Cannot be configured if `whitelist` is configured.\n"
                },
                "controllerId": {
                    "type": "string",
                    "description": "The ocean cluster identifier. Example: `ocean.k8s`\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The number of instances to launch and maintain in the cluster.\n"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                },
                "ebsOptimized": {
                    "type": "boolean",
                    "description": "Enable EBS optimized for cluster. Flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized this flag will be ignored.\n"
                },
                "fallbackToOndemand": {
                    "type": "boolean",
                    "description": "If not Spot instance markets are available, enable Ocean to launch On-Demand instances instead.\n"
                },
                "gracePeriod": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after the instance has launched to start checking its health.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The instance profile iam role.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "ID of the image used to launch the instances.\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "The key pair to attach the instances.\n"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLoadBalancer:OceanLoadBalancer"
                    },
                    "description": "- Array of load balancer objects to add to ocean cluster\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The upper limit of instances the cluster can scale up to.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The lower limit of instances the cluster can scale down to.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Enable detailed monitoring for cluster. Flag will enable Cloud Watch detailed detailed monitoring (one minute increments). Note: there are additional hourly costs for this service based on the region used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Required if type is set to CLASSIC\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region the cluster will run in.\n"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "description": "The size (in Gb) to allocate for the root volume. Minimum `20`.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanScheduledTask:OceanScheduledTask"
                    }
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more security group ids.\n"
                },
                "spotPercentage": {
                    "type": "number"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public ip.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanTag:OceanTag"
                    },
                    "description": "Optionally adds tags to instances launched in an Ocean cluster.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:aws/OceanUpdatePolicy:OceanUpdatePolicy"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                },
                "utilizeReservedInstances": {
                    "type": "boolean",
                    "description": "If Reserved instances exist, Ocean will utilize them before launching Spot instances.\n"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types allowed in the Ocean cluster. Cannot be configured if `blacklist` is configured.\n"
                }
            },
            "required": [
                "desiredCapacity",
                "minSize",
                "name",
                "securityGroups",
                "subnetIds"
            ],
            "inputProperties": {
                "associatePublicIpAddress": {
                    "type": "boolean",
                    "description": "Configure public IP address allocation.\n"
                },
                "autoscaler": {
                    "$ref": "#/types/spotinst:aws/OceanAutoscaler:OceanAutoscaler"
                },
                "blacklists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types not allowed in the Ocean cluster. Cannot be configured if `whitelist` is configured.\n"
                },
                "controllerId": {
                    "type": "string",
                    "description": "The ocean cluster identifier. Example: `ocean.k8s`\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The number of instances to launch and maintain in the cluster.\n"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                },
                "ebsOptimized": {
                    "type": "boolean",
                    "description": "Enable EBS optimized for cluster. Flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized this flag will be ignored.\n"
                },
                "fallbackToOndemand": {
                    "type": "boolean",
                    "description": "If not Spot instance markets are available, enable Ocean to launch On-Demand instances instead.\n"
                },
                "gracePeriod": {
                    "type": "integer",
                    "description": "The amount of time, in seconds, after the instance has launched to start checking its health.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The instance profile iam role.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "ID of the image used to launch the instances.\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "The key pair to attach the instances.\n"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLoadBalancer:OceanLoadBalancer"
                    },
                    "description": "- Array of load balancer objects to add to ocean cluster\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The upper limit of instances the cluster can scale up to.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The lower limit of instances the cluster can scale down to.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Enable detailed monitoring for cluster. Flag will enable Cloud Watch detailed detailed monitoring (one minute increments). Note: there are additional hourly costs for this service based on the region used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Required if type is set to CLASSIC\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region the cluster will run in.\n"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "description": "The size (in Gb) to allocate for the root volume. Minimum `20`.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanScheduledTask:OceanScheduledTask"
                    }
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more security group ids.\n"
                },
                "spotPercentage": {
                    "type": "number"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public ip.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanTag:OceanTag"
                    },
                    "description": "Optionally adds tags to instances launched in an Ocean cluster.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:aws/OceanUpdatePolicy:OceanUpdatePolicy"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                },
                "utilizeReservedInstances": {
                    "type": "boolean",
                    "description": "If Reserved instances exist, Ocean will utilize them before launching Spot instances.\n"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types allowed in the Ocean cluster. Cannot be configured if `blacklist` is configured.\n"
                }
            },
            "requiredInputs": [
                "securityGroups",
                "subnetIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ocean resources.\n",
                "properties": {
                    "associatePublicIpAddress": {
                        "type": "boolean",
                        "description": "Configure public IP address allocation.\n"
                    },
                    "autoscaler": {
                        "$ref": "#/types/spotinst:aws/OceanAutoscaler:OceanAutoscaler"
                    },
                    "blacklists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Instance types not allowed in the Ocean cluster. Cannot be configured if `whitelist` is configured.\n"
                    },
                    "controllerId": {
                        "type": "string",
                        "description": "The ocean cluster identifier. Example: `ocean.k8s`\n"
                    },
                    "desiredCapacity": {
                        "type": "integer",
                        "description": "The number of instances to launch and maintain in the cluster.\n"
                    },
                    "drainingTimeout": {
                        "type": "integer",
                        "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                    },
                    "ebsOptimized": {
                        "type": "boolean",
                        "description": "Enable EBS optimized for cluster. Flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized this flag will be ignored.\n"
                    },
                    "fallbackToOndemand": {
                        "type": "boolean",
                        "description": "If not Spot instance markets are available, enable Ocean to launch On-Demand instances instead.\n"
                    },
                    "gracePeriod": {
                        "type": "integer",
                        "description": "The amount of time, in seconds, after the instance has launched to start checking its health.\n"
                    },
                    "iamInstanceProfile": {
                        "type": "string",
                        "description": "The instance profile iam role.\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "ID of the image used to launch the instances.\n"
                    },
                    "keyName": {
                        "type": "string",
                        "description": "The key pair to attach the instances.\n"
                    },
                    "loadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLoadBalancer:OceanLoadBalancer"
                        },
                        "description": "- Array of load balancer objects to add to ocean cluster\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The upper limit of instances the cluster can scale up to.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The lower limit of instances the cluster can scale down to.\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Enable detailed monitoring for cluster. Flag will enable Cloud Watch detailed detailed monitoring (one minute increments). Note: there are additional hourly costs for this service based on the region used.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Required if type is set to CLASSIC\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region the cluster will run in.\n"
                    },
                    "rootVolumeSize": {
                        "type": "integer",
                        "description": "The size (in Gb) to allocate for the root volume. Minimum `20`.\n"
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanScheduledTask:OceanScheduledTask"
                        }
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more security group ids.\n"
                    },
                    "spotPercentage": {
                        "type": "number"
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public ip.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanTag:OceanTag"
                        },
                        "description": "Optionally adds tags to instances launched in an Ocean cluster.\n"
                    },
                    "updatePolicy": {
                        "$ref": "#/types/spotinst:aws/OceanUpdatePolicy:OceanUpdatePolicy"
                    },
                    "userData": {
                        "type": "string",
                        "description": "Base64-encoded MIME user data to make available to the instances.\n"
                    },
                    "utilizeReservedInstances": {
                        "type": "boolean",
                        "description": "If Reserved instances exist, Ocean will utilize them before launching Spot instances.\n"
                    },
                    "whitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Instance types allowed in the Ocean cluster. Cannot be configured if `blacklist` is configured.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:aws/oceanLaunchSpec:OceanLaunchSpec": {
            "description": "Provides a custom Spotinst Ocean AWS Launch Spec resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.aws.OceanLaunchSpec(\"example\", {\n    autoscaleHeadrooms: [{\n        cpuPerUnit: 1000,\n        gpuPerUnit: 0,\n        memoryPerUnit: 2048,\n        numOfUnits: 5,\n    }],\n    blockDeviceMappings: [{\n        deviceName: \"/dev/xvda1\",\n        ebs: {\n            deleteOnTermination: true,\n            dynamicVolumeSize: {\n                baseSize: 50,\n                resource: \"CPU\",\n                sizePerResourceUnit: 20,\n            },\n            encrypted: false,\n            volumeSize: 50,\n            volumeType: \"gp2\",\n        },\n    }],\n    elasticIpPools: [{\n        tagSelector: {\n            tagKey: \"key\",\n            tagValue: \"value\",\n        },\n    }],\n    iamInstanceProfile: \"iam-profile\",\n    imageId: \"ami-123456\",\n    labels: [{\n        key: \"fakeKey\",\n        value: \"fakeValue\",\n    }],\n    oceanId: \"o-123456\",\n    resourceLimits: [{\n        maxInstanceCount: 4,\n    }],\n    rootVolumeSize: 30,\n    securityGroups: [\"sg-987654321\"],\n    subnetIds: [\"subnet-1234\"],\n    tags: [{\n        key: \"Env\",\n        value: \"production\",\n    }],\n    taints: [{\n        effect: \"NoExecute\",\n        key: \"taint key updated\",\n        value: \"taint value updated\",\n    }],\n    userData: \"echo hello world\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.aws.OceanLaunchSpec(\"example\",\n    autoscale_headrooms=[{\n        \"cpuPerUnit\": 1000,\n        \"gpuPerUnit\": 0,\n        \"memoryPerUnit\": 2048,\n        \"numOfUnits\": 5,\n    }],\n    block_device_mappings=[{\n        \"deviceName\": \"/dev/xvda1\",\n        \"ebs\": {\n            \"deleteOnTermination\": \"true\",\n            \"dynamicVolumeSize\": {\n                \"baseSize\": 50,\n                \"resource\": \"CPU\",\n                \"sizePerResourceUnit\": 20,\n            },\n            \"encrypted\": \"false\",\n            \"volumeSize\": 50,\n            \"volumeType\": \"gp2\",\n        },\n    }],\n    elastic_ip_pools=[{\n        \"tagSelector\": {\n            \"tagKey\": \"key\",\n            \"tagValue\": \"value\",\n        },\n    }],\n    iam_instance_profile=\"iam-profile\",\n    image_id=\"ami-123456\",\n    labels=[{\n        \"key\": \"fakeKey\",\n        \"value\": \"fakeValue\",\n    }],\n    ocean_id=\"o-123456\",\n    resource_limits=[{\n        \"maxInstanceCount\": 4,\n    }],\n    root_volume_size=30,\n    security_groups=[\"sg-987654321\"],\n    subnet_ids=[\"subnet-1234\"],\n    tags=[{\n        \"key\": \"Env\",\n        \"value\": \"production\",\n    }],\n    taints=[{\n        \"effect\": \"NoExecute\",\n        \"key\": \"taint key updated\",\n        \"value\": \"taint value updated\",\n    }],\n    user_data=\"echo hello world\")\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new SpotInst.Aws.OceanLaunchSpec(\"example\", new SpotInst.Aws.OceanLaunchSpecArgs\n        {\n            AutoscaleHeadrooms = \n            {\n                new SpotInst.Aws.Inputs.OceanLaunchSpecAutoscaleHeadroomArgs\n                {\n                    CpuPerUnit = 1000,\n                    GpuPerUnit = 0,\n                    MemoryPerUnit = 2048,\n                    NumOfUnits = 5,\n                },\n            },\n            BlockDeviceMappings = \n            {\n                new SpotInst.Aws.Inputs.OceanLaunchSpecBlockDeviceMappingArgs\n                {\n                    DeviceName = \"/dev/xvda1\",\n                    Ebs = new SpotInst.Aws.Inputs.OceanLaunchSpecBlockDeviceMappingEbsArgs\n                    {\n                        DeleteOnTermination = true,\n                        DynamicVolumeSize = new SpotInst.Aws.Inputs.OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSizeArgs\n                        {\n                            BaseSize = 50,\n                            Resource = \"CPU\",\n                            SizePerResourceUnit = 20,\n                        },\n                        Encrypted = false,\n                        VolumeSize = 50,\n                        VolumeType = \"gp2\",\n                    },\n                },\n            },\n            ElasticIpPools = \n            {\n                new SpotInst.Aws.Inputs.OceanLaunchSpecElasticIpPoolArgs\n                {\n                    TagSelector = new SpotInst.Aws.Inputs.OceanLaunchSpecElasticIpPoolTagSelectorArgs\n                    {\n                        TagKey = \"key\",\n                        TagValue = \"value\",\n                    },\n                },\n            },\n            IamInstanceProfile = \"iam-profile\",\n            ImageId = \"ami-123456\",\n            Labels = \n            {\n                new SpotInst.Aws.Inputs.OceanLaunchSpecLabelArgs\n                {\n                    Key = \"fakeKey\",\n                    Value = \"fakeValue\",\n                },\n            },\n            OceanId = \"o-123456\",\n            ResourceLimits = \n            {\n                new SpotInst.Aws.Inputs.OceanLaunchSpecResourceLimitArgs\n                {\n                    MaxInstanceCount = 4,\n                },\n            },\n            RootVolumeSize = 30,\n            SecurityGroups = \n            {\n                \"sg-987654321\",\n            },\n            SubnetIds = \n            {\n                \"subnet-1234\",\n            },\n            Tags = \n            {\n                new SpotInst.Aws.Inputs.OceanLaunchSpecTagArgs\n                {\n                    Key = \"Env\",\n                    Value = \"production\",\n                },\n            },\n            Taints = \n            {\n                new SpotInst.Aws.Inputs.OceanLaunchSpecTaintArgs\n                {\n                    Effect = \"NoExecute\",\n                    Key = \"taint key updated\",\n                    Value = \"taint value updated\",\n                },\n            },\n            UserData = \"echo hello world\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewOceanLaunchSpec(ctx, \"example\", \u0026aws.OceanLaunchSpecArgs{\n\t\t\tAutoscaleHeadrooms: aws.OceanLaunchSpecAutoscaleHeadroomArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecAutoscaleHeadroomArgs{\n\t\t\t\t\tCpuPerUnit:    pulumi.Int(1000),\n\t\t\t\t\tGpuPerUnit:    pulumi.Int(0),\n\t\t\t\t\tMemoryPerUnit: pulumi.Int(2048),\n\t\t\t\t\tNumOfUnits:    pulumi.Int(5),\n\t\t\t\t},\n\t\t\t},\n\t\t\tBlockDeviceMappings: aws.OceanLaunchSpecBlockDeviceMappingArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecBlockDeviceMappingArgs{\n\t\t\t\t\tDeviceName: pulumi.String(\"/dev/xvda1\"),\n\t\t\t\t\tEbs: \u0026aws.OceanLaunchSpecBlockDeviceMappingEbsArgs{\n\t\t\t\t\t\tDeleteOnTermination: pulumi.Bool(true),\n\t\t\t\t\t\tDynamicVolumeSize: \u0026aws.OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSizeArgs{\n\t\t\t\t\t\t\tBaseSize:            pulumi.Int(50),\n\t\t\t\t\t\t\tResource:            pulumi.String(\"CPU\"),\n\t\t\t\t\t\t\tSizePerResourceUnit: pulumi.Int(20),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tEncrypted:  pulumi.Bool(false),\n\t\t\t\t\t\tVolumeSize: pulumi.Int(50),\n\t\t\t\t\t\tVolumeType: pulumi.String(\"gp2\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tElasticIpPools: aws.OceanLaunchSpecElasticIpPoolArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecElasticIpPoolArgs{\n\t\t\t\t\tTagSelector: \u0026aws.OceanLaunchSpecElasticIpPoolTagSelectorArgs{\n\t\t\t\t\t\tTagKey:   pulumi.String(\"key\"),\n\t\t\t\t\t\tTagValue: pulumi.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tIamInstanceProfile: pulumi.String(\"iam-profile\"),\n\t\t\tImageId:            pulumi.String(\"ami-123456\"),\n\t\t\tLabels: aws.OceanLaunchSpecLabelArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecLabelArgs{\n\t\t\t\t\tKey:   pulumi.String(\"fakeKey\"),\n\t\t\t\t\tValue: pulumi.String(\"fakeValue\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOceanId: pulumi.String(\"o-123456\"),\n\t\t\tResourceLimits: aws.OceanLaunchSpecResourceLimitArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecResourceLimitArgs{\n\t\t\t\t\tMaxInstanceCount: pulumi.Int(4),\n\t\t\t\t},\n\t\t\t},\n\t\t\tRootVolumeSize: pulumi.Int(30),\n\t\t\tSecurityGroups: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sg-987654321\"),\n\t\t\t},\n\t\t\tSubnetIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"subnet-1234\"),\n\t\t\t},\n\t\t\tTags: aws.OceanLaunchSpecTagArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecTagArgs{\n\t\t\t\t\tKey:   pulumi.String(\"Env\"),\n\t\t\t\t\tValue: pulumi.String(\"production\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTaints: aws.OceanLaunchSpecTaintArray{\n\t\t\t\t\u0026aws.OceanLaunchSpecTaintArgs{\n\t\t\t\t\tEffect: pulumi.String(\"NoExecute\"),\n\t\t\t\t\tKey:    pulumi.String(\"taint key updated\"),\n\t\t\t\t\tValue:  pulumi.String(\"taint value updated\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUserData: pulumi.String(\"echo hello world\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "autoscaleHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                    },
                    "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                },
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecBlockDeviceMapping:OceanLaunchSpecBlockDeviceMapping"
                    },
                    "description": "Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.\n"
                },
                "elasticIpPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecElasticIpPool:OceanLaunchSpecElasticIpPool"
                    },
                    "description": "Assign an Elastic IP to the instances spun by the launch spec. Can be null.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "ID of the image used to launch the instances.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecLabel:OceanLaunchSpecLabel"
                    },
                    "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Set Launch Specification name\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The ocean cluster you wish to\n"
                },
                "resourceLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecResourceLimit:OceanLaunchSpecResourceLimit"
                    }
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "description": "Set root volume size (in GB).\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optionally adds security group IDs.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set subnets in launchSpec. Each element in array should be subnet ID.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecTag:OceanLaunchSpecTag"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecTaint:OceanLaunchSpecTaint"
                    },
                    "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                }
            },
            "required": [
                "name",
                "oceanId"
            ],
            "inputProperties": {
                "autoscaleHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                    },
                    "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                },
                "blockDeviceMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecBlockDeviceMapping:OceanLaunchSpecBlockDeviceMapping"
                    },
                    "description": "Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.\n"
                },
                "elasticIpPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecElasticIpPool:OceanLaunchSpecElasticIpPool"
                    },
                    "description": "Assign an Elastic IP to the instances spun by the launch spec. Can be null.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "ID of the image used to launch the instances.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecLabel:OceanLaunchSpecLabel"
                    },
                    "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Set Launch Specification name\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The ocean cluster you wish to\n"
                },
                "resourceLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecResourceLimit:OceanLaunchSpecResourceLimit"
                    }
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "description": "Set root volume size (in GB).\n"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optionally adds security group IDs.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set subnets in launchSpec. Each element in array should be subnet ID.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecTag:OceanLaunchSpecTag"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:aws/OceanLaunchSpecTaint:OceanLaunchSpecTaint"
                    },
                    "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                }
            },
            "requiredInputs": [
                "oceanId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanLaunchSpec resources.\n",
                "properties": {
                    "autoscaleHeadrooms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                        },
                        "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                    },
                    "blockDeviceMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecBlockDeviceMapping:OceanLaunchSpecBlockDeviceMapping"
                        },
                        "description": "Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.\n"
                    },
                    "elasticIpPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecElasticIpPool:OceanLaunchSpecElasticIpPool"
                        },
                        "description": "Assign an Elastic IP to the instances spun by the launch spec. Can be null.\n"
                    },
                    "iamInstanceProfile": {
                        "type": "string",
                        "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "ID of the image used to launch the instances.\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecLabel:OceanLaunchSpecLabel"
                        },
                        "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Set Launch Specification name\n"
                    },
                    "oceanId": {
                        "type": "string",
                        "description": "The ocean cluster you wish to\n"
                    },
                    "resourceLimits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecResourceLimit:OceanLaunchSpecResourceLimit"
                        }
                    },
                    "rootVolumeSize": {
                        "type": "integer",
                        "description": "Set root volume size (in GB).\n"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Optionally adds security group IDs.\n"
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set subnets in launchSpec. Each element in array should be subnet ID.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecTag:OceanLaunchSpecTag"
                        },
                        "description": "A key/value mapping of tags to assign to the resource.\n"
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:aws/OceanLaunchSpecTaint:OceanLaunchSpecTaint"
                        },
                        "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                    },
                    "userData": {
                        "type": "string",
                        "description": "Base64-encoded MIME user data to make available to the instances.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:azure/elastigroup:Elastigroup": {
            "description": "Provides a Spotinst elastigroup Azure resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst testAzureGroup = new spotinst.azure.Elastigroup(\"test_azure_group\", {\n    desiredCapacity: 1,\n    // --- HEALTH-CHECKS -------------------------------------------------\n    healthCheck: {\n        autoHealing: true,\n        gracePeriod: 120,\n        healthCheckType: \"INSTANCE_STATE\",\n    },\n    // --- IMAGE ---------------------------------------------------------\n    images: [{\n        marketplaces: [{\n            offer: \"UbuntuServer\",\n            publisher: \"Canonical\",\n            sku: \"16.04-LTS\",\n        }],\n    }],\n    // --- LOAD BALANCERS ------------------------------------------------\n    loadBalancers: [{\n        autoWeight: true,\n        balancerId: \"lb-1ee2e3q\",\n        targetSetId: \"ts-3eq\",\n        type: \"MULTAI_TARGET_SET\",\n    }],\n    // --- LOGIN ---------------------------------------------------------\n    login: {\n        sshPublicKey: \"33a2s1f3g5a1df5g1ad3f2g1adfg56dfg==\",\n        userName: \"admin\",\n    },\n    lowPrioritySizes: [\n        \"standard_a1_v1\",\n        \"standard_a1_v2\",\n    ],\n    managedServiceIdentities: [{\n        name: \"example-identity\",\n        resourceGroupName: \"spotinst-azure\",\n    }],\n    maxSize: 1,\n    // --- CAPACITY ------------------------------------------------------\n    minSize: 0,\n    // --- NETWORK -------------------------------------------------------\n    network: {\n        assignPublicIp: true,\n        resourceGroupName: \"subnetResourceGroup\",\n        subnetName: \"my-subnet-name\",\n        virtualNetworkName: \"vname\",\n    },\n    // --- INSTANCE TYPES ------------------------------------------------\n    odSizes: [\n        \"standard_a1_v1\",\n        \"standard_a1_v2\",\n    ],\n    product: \"Linux\",\n    region: \"eastus\",\n    resourceGroupName: \"spotinst-azure\",\n    scalingDownPolicies: [{\n        actionType: \"adjustment\",\n        adjustment: \"MIN(5,10)\",\n        cooldown: 60,\n        dimensions: [{\n            name: \"name-1\",\n            value: \"value-1\",\n        }],\n        evaluationPeriods: 10,\n        metricName: \"CPUUtilization\",\n        namespace: \"Microsoft.Compute\",\n        operator: \"gt\",\n        period: 60,\n        policyName: \"policy-name\",\n        statistic: \"average\",\n        threshold: 10,\n        unit: \"percent\",\n    }],\n    // --- SCALING POLICIES ----------------------------------------------\n    scalingUpPolicies: [{\n        actionType: \"setMinTarget\",\n        cooldown: 60,\n        dimensions: [\n            {\n                name: \"resourceName\",\n                value: \"resource-name\",\n            },\n            {\n                name: \"resourceGroupName\",\n                value: \"resource-group-name\",\n            },\n        ],\n        evaluationPeriods: 10,\n        metricName: \"CPUUtilization\",\n        minTargetCapacity: \"1\",\n        namespace: \"Microsoft.Compute\",\n        operator: \"gt\",\n        period: 60,\n        policyName: \"policy-name\",\n        statistic: \"average\",\n        threshold: 10,\n        unit: \"percent\",\n    }],\n    // --- SCHEDULED TASK ------------------------------------------------\n    scheduledTasks: [{\n        adjustment: \"2\",\n        adjustmentPercentage: \"50\",\n        batchSizePercentage: \"33\",\n        cronExpression: \"* * * * *\",\n        gracePeriod: \"300\",\n        isEnabled: true,\n        scaleMaxCapacity: \"8\",\n        scaleMinCapacity: \"5\",\n        scaleTargetCapacity: \"6\",\n        taskType: \"scale\",\n    }],\n    shutdownScript: \"\",\n    // --- STRATEGY ------------------------------------------------------\n    strategy: {\n        drainingTimeout: 300,\n        odCount: 1,\n    },\n    userData: \"\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\ntest_azure_group = spotinst.azure.Elastigroup(\"testAzureGroup\",\n    desired_capacity=1,\n    health_check={\n        \"auto_healing\": True,\n        \"grace_period\": 120,\n        \"health_check_type\": \"INSTANCE_STATE\",\n    },\n    images=[{\n        \"marketplaces\": [{\n            \"offer\": \"UbuntuServer\",\n            \"publisher\": \"Canonical\",\n            \"sku\": \"16.04-LTS\",\n        }],\n    }],\n    load_balancers=[{\n        \"autoWeight\": True,\n        \"balancer_id\": \"lb-1ee2e3q\",\n        \"target_set_id\": \"ts-3eq\",\n        \"type\": \"MULTAI_TARGET_SET\",\n    }],\n    login={\n        \"sshPublicKey\": \"33a2s1f3g5a1df5g1ad3f2g1adfg56dfg==\",\n        \"userName\": \"admin\",\n    },\n    low_priority_sizes=[\n        \"standard_a1_v1\",\n        \"standard_a1_v2\",\n    ],\n    managed_service_identities=[{\n        \"name\": \"example-identity\",\n        \"resource_group_name\": \"spotinst-azure\",\n    }],\n    max_size=1,\n    min_size=0,\n    network={\n        \"assignPublicIp\": True,\n        \"resource_group_name\": \"subnetResourceGroup\",\n        \"subnetName\": \"my-subnet-name\",\n        \"virtualNetworkName\": \"vname\",\n    },\n    od_sizes=[\n        \"standard_a1_v1\",\n        \"standard_a1_v2\",\n    ],\n    product=\"Linux\",\n    region=\"eastus\",\n    resource_group_name=\"spotinst-azure\",\n    scaling_down_policies=[{\n        \"actionType\": \"adjustment\",\n        \"adjustment\": \"MIN(5,10)\",\n        \"cooldown\": 60,\n        \"dimensions\": [{\n            \"name\": \"name-1\",\n            \"value\": \"value-1\",\n        }],\n        \"evaluationPeriods\": \"10\",\n        \"metricName\": \"CPUUtilization\",\n        \"namespace\": \"Microsoft.Compute\",\n        \"operator\": \"gt\",\n        \"period\": \"60\",\n        \"policyName\": \"policy-name\",\n        \"statistic\": \"average\",\n        \"threshold\": 10,\n        \"unit\": \"percent\",\n    }],\n    scaling_up_policies=[{\n        \"actionType\": \"setMinTarget\",\n        \"cooldown\": 60,\n        \"dimensions\": [\n            {\n                \"name\": \"resourceName\",\n                \"value\": \"resource-name\",\n            },\n            {\n                \"name\": \"resourceGroupName\",\n                \"value\": \"resource-group-name\",\n            },\n        ],\n        \"evaluationPeriods\": \"10\",\n        \"metricName\": \"CPUUtilization\",\n        \"minTargetCapacity\": 1,\n        \"namespace\": \"Microsoft.Compute\",\n        \"operator\": \"gt\",\n        \"period\": \"60\",\n        \"policyName\": \"policy-name\",\n        \"statistic\": \"average\",\n        \"threshold\": 10,\n        \"unit\": \"percent\",\n    }],\n    scheduled_tasks=[{\n        \"adjustment\": 2,\n        \"adjustmentPercentage\": 50,\n        \"batchSizePercentage\": 33,\n        \"cronExpression\": \"* * * * *\",\n        \"grace_period\": 300,\n        \"isEnabled\": True,\n        \"scaleMaxCapacity\": 8,\n        \"scaleMinCapacity\": 5,\n        \"scaleTargetCapacity\": 6,\n        \"taskType\": \"scale\",\n    }],\n    shutdown_script=\"\",\n    strategy={\n        \"draining_timeout\": 300,\n        \"odCount\": 1,\n    },\n    user_data=\"\")\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var testAzureGroup = new SpotInst.Azure.Elastigroup(\"testAzureGroup\", new SpotInst.Azure.ElastigroupArgs\n        {\n            DesiredCapacity = 1,\n            HealthCheck = new SpotInst.Azure.Inputs.ElastigroupHealthCheckArgs\n            {\n                AutoHealing = true,\n                GracePeriod = 120,\n                HealthCheckType = \"INSTANCE_STATE\",\n            },\n            Images = \n            {\n                new SpotInst.Azure.Inputs.ElastigroupImageArgs\n                {\n                    Marketplaces = \n                    {\n                        new SpotInst.Azure.Inputs.ElastigroupImageMarketplaceArgs\n                        {\n                            Offer = \"UbuntuServer\",\n                            Publisher = \"Canonical\",\n                            Sku = \"16.04-LTS\",\n                        },\n                    },\n                },\n            },\n            LoadBalancers = \n            {\n                new SpotInst.Azure.Inputs.ElastigroupLoadBalancerArgs\n                {\n                    AutoWeight = true,\n                    BalancerId = \"lb-1ee2e3q\",\n                    TargetSetId = \"ts-3eq\",\n                    Type = \"MULTAI_TARGET_SET\",\n                },\n            },\n            Login = new SpotInst.Azure.Inputs.ElastigroupLoginArgs\n            {\n                SshPublicKey = \"33a2s1f3g5a1df5g1ad3f2g1adfg56dfg==\",\n                UserName = \"admin\",\n            },\n            LowPrioritySizes = \n            {\n                \"standard_a1_v1\",\n                \"standard_a1_v2\",\n            },\n            ManagedServiceIdentities = \n            {\n                new SpotInst.Azure.Inputs.ElastigroupManagedServiceIdentityArgs\n                {\n                    Name = \"example-identity\",\n                    ResourceGroupName = \"spotinst-azure\",\n                },\n            },\n            MaxSize = 1,\n            MinSize = 0,\n            Network = new SpotInst.Azure.Inputs.ElastigroupNetworkArgs\n            {\n                AssignPublicIp = true,\n                ResourceGroupName = \"subnetResourceGroup\",\n                SubnetName = \"my-subnet-name\",\n                VirtualNetworkName = \"vname\",\n            },\n            OdSizes = \n            {\n                \"standard_a1_v1\",\n                \"standard_a1_v2\",\n            },\n            Product = \"Linux\",\n            Region = \"eastus\",\n            ResourceGroupName = \"spotinst-azure\",\n            ScalingDownPolicies = \n            {\n                new SpotInst.Azure.Inputs.ElastigroupScalingDownPolicyArgs\n                {\n                    ActionType = \"adjustment\",\n                    Adjustment = \"MIN(5,10)\",\n                    Cooldown = 60,\n                    Dimensions = \n                    {\n                        new SpotInst.Azure.Inputs.ElastigroupScalingDownPolicyDimensionArgs\n                        {\n                            Name = \"name-1\",\n                            Value = \"value-1\",\n                        },\n                    },\n                    EvaluationPeriods = 10,\n                    MetricName = \"CPUUtilization\",\n                    Namespace = \"Microsoft.Compute\",\n                    Operator = \"gt\",\n                    Period = 60,\n                    PolicyName = \"policy-name\",\n                    Statistic = \"average\",\n                    Threshold = 10,\n                    Unit = \"percent\",\n                },\n            },\n            ScalingUpPolicies = \n            {\n                new SpotInst.Azure.Inputs.ElastigroupScalingUpPolicyArgs\n                {\n                    ActionType = \"setMinTarget\",\n                    Cooldown = 60,\n                    Dimensions = \n                    {\n                        new SpotInst.Azure.Inputs.ElastigroupScalingUpPolicyDimensionArgs\n                        {\n                            Name = \"resourceName\",\n                            Value = \"resource-name\",\n                        },\n                        new SpotInst.Azure.Inputs.ElastigroupScalingUpPolicyDimensionArgs\n                        {\n                            Name = \"resourceGroupName\",\n                            Value = \"resource-group-name\",\n                        },\n                    },\n                    EvaluationPeriods = 10,\n                    MetricName = \"CPUUtilization\",\n                    MinTargetCapacity = \"1\",\n                    Namespace = \"Microsoft.Compute\",\n                    Operator = \"gt\",\n                    Period = 60,\n                    PolicyName = \"policy-name\",\n                    Statistic = \"average\",\n                    Threshold = 10,\n                    Unit = \"percent\",\n                },\n            },\n            ScheduledTasks = \n            {\n                new SpotInst.Azure.Inputs.ElastigroupScheduledTaskArgs\n                {\n                    Adjustment = \"2\",\n                    AdjustmentPercentage = \"50\",\n                    BatchSizePercentage = \"33\",\n                    CronExpression = \"* * * * *\",\n                    GracePeriod = \"300\",\n                    IsEnabled = true,\n                    ScaleMaxCapacity = \"8\",\n                    ScaleMinCapacity = \"5\",\n                    ScaleTargetCapacity = \"6\",\n                    TaskType = \"scale\",\n                },\n            },\n            ShutdownScript = \"\",\n            Strategy = new SpotInst.Azure.Inputs.ElastigroupStrategyArgs\n            {\n                DrainingTimeout = 300,\n                OdCount = 1,\n            },\n            UserData = \"\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/azure\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azure.NewElastigroup(ctx, \"testAzureGroup\", \u0026azure.ElastigroupArgs{\n\t\t\tDesiredCapacity: pulumi.Int(1),\n\t\t\tHealthCheck: \u0026azure.ElastigroupHealthCheckArgs{\n\t\t\t\tAutoHealing:     pulumi.Bool(true),\n\t\t\t\tGracePeriod:     pulumi.Int(120),\n\t\t\t\tHealthCheckType: pulumi.String(\"INSTANCE_STATE\"),\n\t\t\t},\n\t\t\tImages: azure.ElastigroupImageArray{\n\t\t\t\t\u0026azure.ElastigroupImageArgs{\n\t\t\t\t\tMarketplaces: azure.ElastigroupImageMarketplaceArray{\n\t\t\t\t\t\t\u0026azure.ElastigroupImageMarketplaceArgs{\n\t\t\t\t\t\t\tOffer:     pulumi.String(\"UbuntuServer\"),\n\t\t\t\t\t\t\tPublisher: pulumi.String(\"Canonical\"),\n\t\t\t\t\t\t\tSku:       pulumi.String(\"16.04-LTS\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tLoadBalancers: azure.ElastigroupLoadBalancerArray{\n\t\t\t\t\u0026azure.ElastigroupLoadBalancerArgs{\n\t\t\t\t\tAutoWeight:  pulumi.Bool(true),\n\t\t\t\t\tBalancerId:  pulumi.String(\"lb-1ee2e3q\"),\n\t\t\t\t\tTargetSetId: pulumi.String(\"ts-3eq\"),\n\t\t\t\t\tType:        pulumi.String(\"MULTAI_TARGET_SET\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tLogin: \u0026azure.ElastigroupLoginArgs{\n\t\t\t\tSshPublicKey: pulumi.String(\"33a2s1f3g5a1df5g1ad3f2g1adfg56dfg==\"),\n\t\t\t\tUserName:     pulumi.String(\"admin\"),\n\t\t\t},\n\t\t\tLowPrioritySizes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"standard_a1_v1\"),\n\t\t\t\tpulumi.String(\"standard_a1_v2\"),\n\t\t\t},\n\t\t\tManagedServiceIdentities: azure.ElastigroupManagedServiceIdentityArray{\n\t\t\t\t\u0026azure.ElastigroupManagedServiceIdentityArgs{\n\t\t\t\t\tName:              pulumi.String(\"example-identity\"),\n\t\t\t\t\tResourceGroupName: pulumi.String(\"spotinst-azure\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tMaxSize: pulumi.Int(1),\n\t\t\tMinSize: pulumi.Int(0),\n\t\t\tNetwork: \u0026azure.ElastigroupNetworkArgs{\n\t\t\t\tAssignPublicIp:     pulumi.Bool(true),\n\t\t\t\tResourceGroupName:  pulumi.String(\"subnetResourceGroup\"),\n\t\t\t\tSubnetName:         pulumi.String(\"my-subnet-name\"),\n\t\t\t\tVirtualNetworkName: pulumi.String(\"vname\"),\n\t\t\t},\n\t\t\tOdSizes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"standard_a1_v1\"),\n\t\t\t\tpulumi.String(\"standard_a1_v2\"),\n\t\t\t},\n\t\t\tProduct:           pulumi.String(\"Linux\"),\n\t\t\tRegion:            pulumi.String(\"eastus\"),\n\t\t\tResourceGroupName: pulumi.String(\"spotinst-azure\"),\n\t\t\tScalingDownPolicies: azure.ElastigroupScalingDownPolicyArray{\n\t\t\t\t\u0026azure.ElastigroupScalingDownPolicyArgs{\n\t\t\t\t\tActionType: pulumi.String(\"adjustment\"),\n\t\t\t\t\tAdjustment: pulumi.String(\"MIN(5,10)\"),\n\t\t\t\t\tCooldown:   pulumi.Int(60),\n\t\t\t\t\tDimensions: azure.ElastigroupScalingDownPolicyDimensionArray{\n\t\t\t\t\t\t\u0026azure.ElastigroupScalingDownPolicyDimensionArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"name-1\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"value-1\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tEvaluationPeriods: pulumi.Int(10),\n\t\t\t\t\tMetricName:        pulumi.String(\"CPUUtilization\"),\n\t\t\t\t\tNamespace:         pulumi.String(\"Microsoft.Compute\"),\n\t\t\t\t\tOperator:          pulumi.String(\"gt\"),\n\t\t\t\t\tPeriod:            pulumi.Int(60),\n\t\t\t\t\tPolicyName:        pulumi.String(\"policy-name\"),\n\t\t\t\t\tStatistic:         pulumi.String(\"average\"),\n\t\t\t\t\tThreshold:         pulumi.Float64(10),\n\t\t\t\t\tUnit:              pulumi.String(\"percent\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tScalingUpPolicies: azure.ElastigroupScalingUpPolicyArray{\n\t\t\t\t\u0026azure.ElastigroupScalingUpPolicyArgs{\n\t\t\t\t\tActionType: pulumi.String(\"setMinTarget\"),\n\t\t\t\t\tCooldown:   pulumi.Int(60),\n\t\t\t\t\tDimensions: azure.ElastigroupScalingUpPolicyDimensionArray{\n\t\t\t\t\t\t\u0026azure.ElastigroupScalingUpPolicyDimensionArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"resourceName\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"resource-name\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026azure.ElastigroupScalingUpPolicyDimensionArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"resourceGroupName\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"resource-group-name\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tEvaluationPeriods: pulumi.Int(10),\n\t\t\t\t\tMetricName:        pulumi.String(\"CPUUtilization\"),\n\t\t\t\t\tMinTargetCapacity: pulumi.String(\"1\"),\n\t\t\t\t\tNamespace:         pulumi.String(\"Microsoft.Compute\"),\n\t\t\t\t\tOperator:          pulumi.String(\"gt\"),\n\t\t\t\t\tPeriod:            pulumi.Int(60),\n\t\t\t\t\tPolicyName:        pulumi.String(\"policy-name\"),\n\t\t\t\t\tStatistic:         pulumi.String(\"average\"),\n\t\t\t\t\tThreshold:         pulumi.Float64(10),\n\t\t\t\t\tUnit:              pulumi.String(\"percent\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tScheduledTasks: azure.ElastigroupScheduledTaskArray{\n\t\t\t\t\u0026azure.ElastigroupScheduledTaskArgs{\n\t\t\t\t\tAdjustment:           pulumi.String(\"2\"),\n\t\t\t\t\tAdjustmentPercentage: pulumi.String(\"50\"),\n\t\t\t\t\tBatchSizePercentage:  pulumi.String(\"33\"),\n\t\t\t\t\tCronExpression:       pulumi.String(\"* * * * *\"),\n\t\t\t\t\tGracePeriod:          pulumi.String(\"300\"),\n\t\t\t\t\tIsEnabled:            pulumi.Bool(true),\n\t\t\t\t\tScaleMaxCapacity:     pulumi.String(\"8\"),\n\t\t\t\t\tScaleMinCapacity:     pulumi.String(\"5\"),\n\t\t\t\t\tScaleTargetCapacity:  pulumi.String(\"6\"),\n\t\t\t\t\tTaskType:             pulumi.String(\"scale\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tShutdownScript: pulumi.String(\"\"),\n\t\t\tStrategy: \u0026azure.ElastigroupStrategyArgs{\n\t\t\t\tDrainingTimeout: pulumi.Int(300),\n\t\t\t\tOdCount:         pulumi.Int(1),\n\t\t\t},\n\t\t\tUserData: pulumi.String(\"\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Load Balancers\n\n* `load_balancers` - (Required) Describes a set of one or more classic load balancer target groups and/or Multai load balancer target sets.\n* `type` - (Required) The resource type. Valid values: CLASSIC, TARGET_GROUP, MULTAI_TARGET_SET.\n* `balancer_id` - (Required) The balancer ID.\n* `target_set_id` - (Required) The scale set ID associated with the load balancer.\n* `auto_weight` - (Optional, Default: `false`)\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"image\"\u003e\u003c/a\u003e\n## Image\n\n* `image` - (Required) Image of a VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace) or use a custom image.\n* `publisher` - (Optional) Image publisher. Required if resource_group_name is not specified.\n* `offer` - (Optional) Name of the image to use. Required if publisher is specified.\n* `sku` - (Optional) Image's Stock Keeping Unit, which is the specific version of the image. Required if publisher is specified.\n* `resource_group_name` - (Optional) Name of Resource Group for custom image. Required if publisher not specified.\n* `image_name` - (Optional) Name of the custom image. Required if resource_group_name is specified.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"health-check\"\u003e\u003c/a\u003e\n## Health Check\n\n* `health_check` - (Optional) Describes the health check configuration.\n* `health_check_type` - (Optional) Health check used to validate VM health. Valid values: “INSTANCE_STATE”.\n* `grace_period` - (Optional) Period of time (seconds) to wait for VM to reach healthiness before monitoring for unhealthiness.\n* `auto_healing` - (Optional) Enable auto-healing of unhealthy VMs.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"network\"\u003e\u003c/a\u003e\n## Network\n\n* `network` - (Required) Defines the Virtual Network and Subnet for your Elastigroup.\n* `virtual_network_name` - (Required) Name of Vnet.\n* `subnet_name` - (Required) ID of subnet.\n* `resource_group_name` - (Required) Vnet Resource Group Name.\n* `assign_public_up` - (Optional, Default: `false`) Assign a public IP to each VM in the Elastigroup.\n* `additional_ip_configs` - (Optional) Array of additional IP configuration objects.\n* `name` - (Required) The IP configuration name.\n* `private_ip_version` - (Optional) Available from Azure Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Valid values: `IPv4`, `IPv6`.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"login\"\u003e\u003c/a\u003e\n## Login\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"login\"\u003e\u003c/a\u003e\n## Login\n\n* `login` - (Required) Describes the login configuration.\n* `user_name` - (Required) Set admin access for accessing your VMs.\n* `ssh_public_key` - (Optional) SSH for admin access to Linux VMs. Required for Linux product types.\n* `password` - (Optional) Password for admin access to Windows VMs. Required for Windows product types.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"scaling-policy\"\u003e\u003c/a\u003e\n## Scheduling\n\n* `scheduled_task` - (Optional) Describes the configuration of one or more scheduled tasks.\n* `is_enabled` - (Optional, Default: `true`) Describes whether the task is enabled. When true the task should run when false it should not run.\n* `cron_expression` - (Required) A valid cron expression (`* * * * *`). The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script.\n* `task_type` - (Required) The task type to run. Valid Values: `backup_ami`, `scale`, `scaleUp`, `roll`, `statefulUpdateCapacity`, `statefulRecycle`.\n* `scale_min_capacity` - (Optional) The min capacity of the group. Should be used when choosing ‘task_type' of ‘scale'.\n* `scale_max_capacity` - (Optional) The max capacity of the group. Required when ‘task_type' is ‘scale'.\n* `scale_target_capacity` - (Optional) The target capacity of the group. Should be used when choosing ‘task_type' of ‘scale'.\n* `adjustment` - (Optional) The number of instances to add/remove to/from the target capacity when scale is needed.\n* `adjustment_percentage` - (Optional) The percent of instances to add/remove to/from the target capacity when scale is needed.\n* `batch_size_percentage` - (Optional) The percentage size of each batch in the scheduled deployment roll. Required when the 'task_type' is 'roll'.\n* `grace_period` - (Optional) The time to allow instances to become healthy.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"update-policy\"\u003e\u003c/a\u003e\n## Update Policy\n\n* `update_policy` - (Optional)\n\n    * `should_roll` - (Required) Sets the enablement of the roll option.\n    * `roll_config` - (Required) While used, you can control whether the group should perform a deployment after an update to the configuration.\n        * `batch_size_percentage` - (Required) Sets the percentage of the instances to deploy in each batch.\n        * `health_check_type` - (Optional) Sets the health check type to use. Valid values: `\"INSTANCE_STATE\"`, `\"NONE\"`.\n        * `grace_period` - (Optional) Sets the grace period for new instances to become healthy.\n       \n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"third-party-integrations\"\u003e\u003c/a\u003e\n## Third-Party Integrations\n\n* `integration_kubernetes` - (Optional) Describes the [Kubernetes](https://kubernetes.io/) integration.\n    * `cluster_identifier` - (Required) The cluster ID.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n* `integration_multai_runtime` - (Optional) Describes the [Multai Runtime](https://spotinst.com/) integration.\n    * `deployment_id` - (Optional) The deployment id you want to get\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n",
            "properties": {
                "customData": {
                    "type": "string"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "healthCheck": {
                    "$ref": "#/types/spotinst:azure/ElastigroupHealthCheck:ElastigroupHealthCheck"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupImage:ElastigroupImage"
                    }
                },
                "integrationKubernetes": {
                    "$ref": "#/types/spotinst:azure/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes"
                },
                "integrationMultaiRuntime": {
                    "$ref": "#/types/spotinst:azure/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupLoadBalancer:ElastigroupLoadBalancer"
                    }
                },
                "login": {
                    "$ref": "#/types/spotinst:azure/ElastigroupLogin:ElastigroupLogin"
                },
                "lowPrioritySizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Available Low-Priority sizes.\n"
                },
                "managedServiceIdentities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupManagedServiceIdentity:ElastigroupManagedServiceIdentity"
                    }
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the managed identity.\n"
                },
                "network": {
                    "$ref": "#/types/spotinst:azure/ElastigroupNetwork:ElastigroupNetwork"
                },
                "odSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Available On-Demand sizes\n"
                },
                "product": {
                    "type": "string",
                    "description": "Operation system type. Valid values: `\"Linux\"`, `\"Windows\"`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region your Azure group will be created in.\n"
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "The Resource Group that the user-assigned managed identity resides in.\n"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    }
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    }
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScheduledTask:ElastigroupScheduledTask"
                    }
                },
                "shutdownScript": {
                    "type": "string",
                    "description": "Shutdown script for the group. Value should be passed as a string encoded at Base64 only.\n"
                },
                "strategy": {
                    "$ref": "#/types/spotinst:azure/ElastigroupStrategy:ElastigroupStrategy",
                    "description": "Describes the deployment strategy.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:azure/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                }
            },
            "required": [
                "lowPrioritySizes",
                "maxSize",
                "minSize",
                "name",
                "network",
                "odSizes",
                "product",
                "region",
                "resourceGroupName",
                "strategy"
            ],
            "inputProperties": {
                "customData": {
                    "type": "string"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "healthCheck": {
                    "$ref": "#/types/spotinst:azure/ElastigroupHealthCheck:ElastigroupHealthCheck"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupImage:ElastigroupImage"
                    }
                },
                "integrationKubernetes": {
                    "$ref": "#/types/spotinst:azure/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes"
                },
                "integrationMultaiRuntime": {
                    "$ref": "#/types/spotinst:azure/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupLoadBalancer:ElastigroupLoadBalancer"
                    }
                },
                "login": {
                    "$ref": "#/types/spotinst:azure/ElastigroupLogin:ElastigroupLogin"
                },
                "lowPrioritySizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Available Low-Priority sizes.\n"
                },
                "managedServiceIdentities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupManagedServiceIdentity:ElastigroupManagedServiceIdentity"
                    }
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the managed identity.\n"
                },
                "network": {
                    "$ref": "#/types/spotinst:azure/ElastigroupNetwork:ElastigroupNetwork"
                },
                "odSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Available On-Demand sizes\n"
                },
                "product": {
                    "type": "string",
                    "description": "Operation system type. Valid values: `\"Linux\"`, `\"Windows\"`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region your Azure group will be created in.\n"
                },
                "resourceGroupName": {
                    "type": "string",
                    "description": "The Resource Group that the user-assigned managed identity resides in.\n"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    }
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    }
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:azure/ElastigroupScheduledTask:ElastigroupScheduledTask"
                    }
                },
                "shutdownScript": {
                    "type": "string",
                    "description": "Shutdown script for the group. Value should be passed as a string encoded at Base64 only.\n"
                },
                "strategy": {
                    "$ref": "#/types/spotinst:azure/ElastigroupStrategy:ElastigroupStrategy",
                    "description": "Describes the deployment strategy.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:azure/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                }
            },
            "requiredInputs": [
                "lowPrioritySizes",
                "network",
                "odSizes",
                "product",
                "region",
                "resourceGroupName",
                "strategy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Elastigroup resources.\n",
                "properties": {
                    "customData": {
                        "type": "string"
                    },
                    "desiredCapacity": {
                        "type": "integer",
                        "description": "The desired number of instances the group should have at any time.\n"
                    },
                    "healthCheck": {
                        "$ref": "#/types/spotinst:azure/ElastigroupHealthCheck:ElastigroupHealthCheck"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/ElastigroupImage:ElastigroupImage"
                        }
                    },
                    "integrationKubernetes": {
                        "$ref": "#/types/spotinst:azure/ElastigroupIntegrationKubernetes:ElastigroupIntegrationKubernetes"
                    },
                    "integrationMultaiRuntime": {
                        "$ref": "#/types/spotinst:azure/ElastigroupIntegrationMultaiRuntime:ElastigroupIntegrationMultaiRuntime"
                    },
                    "loadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/ElastigroupLoadBalancer:ElastigroupLoadBalancer"
                        }
                    },
                    "login": {
                        "$ref": "#/types/spotinst:azure/ElastigroupLogin:ElastigroupLogin"
                    },
                    "lowPrioritySizes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Available Low-Priority sizes.\n"
                    },
                    "managedServiceIdentities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/ElastigroupManagedServiceIdentity:ElastigroupManagedServiceIdentity"
                        }
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The maximum number of instances the group should have at any time.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The minimum number of instances the group should have at any time.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the managed identity.\n"
                    },
                    "network": {
                        "$ref": "#/types/spotinst:azure/ElastigroupNetwork:ElastigroupNetwork"
                    },
                    "odSizes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Available On-Demand sizes\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Operation system type. Valid values: `\"Linux\"`, `\"Windows\"`.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region your Azure group will be created in.\n"
                    },
                    "resourceGroupName": {
                        "type": "string",
                        "description": "The Resource Group that the user-assigned managed identity resides in.\n"
                    },
                    "scalingDownPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                        }
                    },
                    "scalingUpPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                        }
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:azure/ElastigroupScheduledTask:ElastigroupScheduledTask"
                        }
                    },
                    "shutdownScript": {
                        "type": "string",
                        "description": "Shutdown script for the group. Value should be passed as a string encoded at Base64 only.\n"
                    },
                    "strategy": {
                        "$ref": "#/types/spotinst:azure/ElastigroupStrategy:ElastigroupStrategy",
                        "description": "Describes the deployment strategy.\n"
                    },
                    "updatePolicy": {
                        "$ref": "#/types/spotinst:azure/ElastigroupUpdatePolicy:ElastigroupUpdatePolicy"
                    },
                    "userData": {
                        "type": "string",
                        "description": "Base64-encoded MIME user data to make available to the instances.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:ecs/ocean:Ocean": {
            "description": "Provides a Spotinst Ocean ECS resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.ecs.Ocean(\"example\", {\n    associatePublicIpAddress: false,\n    clusterName: \"terraform-ecs-cluster\",\n    desiredCapacity: 0,\n    drainingTimeout: 120,\n    ebsOptimized: true,\n    iamInstanceProfile: \"iam-profile\",\n    imageId: \"ami-12345\",\n    keyPair: \"KeyPair\",\n    maxSize: 1,\n    minSize: 0,\n    monitoring: true,\n    region: \"us-west-2\",\n    securityGroupIds: [\"sg-12345\"],\n    subnetIds: [\"subnet-12345\"],\n    tags: [{\n        key: \"fakeKey\",\n        value: \"fakeValue\",\n    }],\n    userData: \"echo hello world\",\n    utilizeReservedInstances: false,\n    whitelists: [\"t3.medium\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.ecs.Ocean(\"example\",\n    associate_public_ip_address=False,\n    cluster_name=\"terraform-ecs-cluster\",\n    desired_capacity=\"0\",\n    draining_timeout=120,\n    ebs_optimized=True,\n    iam_instance_profile=\"iam-profile\",\n    image_id=\"ami-12345\",\n    key_pair=\"KeyPair\",\n    max_size=\"1\",\n    min_size=\"0\",\n    monitoring=True,\n    region=\"us-west-2\",\n    security_group_ids=[\"sg-12345\"],\n    subnet_ids=[\"subnet-12345\"],\n    tags=[{\n        \"key\": \"fakeKey\",\n        \"value\": \"fakeValue\",\n    }],\n    user_data=\"echo hello world\",\n    utilize_reserved_instances=False,\n    whitelists=[\"t3.medium\"])\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new SpotInst.Ecs.Ocean(\"example\", new SpotInst.Ecs.OceanArgs\n        {\n            AssociatePublicIpAddress = false,\n            ClusterName = \"terraform-ecs-cluster\",\n            DesiredCapacity = 0,\n            DrainingTimeout = 120,\n            EbsOptimized = true,\n            IamInstanceProfile = \"iam-profile\",\n            ImageId = \"ami-12345\",\n            KeyPair = \"KeyPair\",\n            MaxSize = 1,\n            MinSize = 0,\n            Monitoring = true,\n            Region = \"us-west-2\",\n            SecurityGroupIds = \n            {\n                \"sg-12345\",\n            },\n            SubnetIds = \n            {\n                \"subnet-12345\",\n            },\n            Tags = \n            {\n                new SpotInst.Ecs.Inputs.OceanTagArgs\n                {\n                    Key = \"fakeKey\",\n                    Value = \"fakeValue\",\n                },\n            },\n            UserData = \"echo hello world\",\n            UtilizeReservedInstances = false,\n            Whitelists = \n            {\n                \"t3.medium\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/ecs\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ecs.NewOcean(ctx, \"example\", \u0026ecs.OceanArgs{\n\t\t\tAssociatePublicIpAddress: pulumi.Bool(false),\n\t\t\tClusterName:              pulumi.String(\"terraform-ecs-cluster\"),\n\t\t\tDesiredCapacity:          pulumi.Int(0),\n\t\t\tDrainingTimeout:          pulumi.Int(120),\n\t\t\tEbsOptimized:             pulumi.Bool(true),\n\t\t\tIamInstanceProfile:       pulumi.String(\"iam-profile\"),\n\t\t\tImageId:                  pulumi.String(\"ami-12345\"),\n\t\t\tKeyPair:                  pulumi.String(\"KeyPair\"),\n\t\t\tMaxSize:                  pulumi.Int(1),\n\t\t\tMinSize:                  pulumi.Int(0),\n\t\t\tMonitoring:               pulumi.Bool(true),\n\t\t\tRegion:                   pulumi.String(\"us-west-2\"),\n\t\t\tSecurityGroupIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sg-12345\"),\n\t\t\t},\n\t\t\tSubnetIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"subnet-12345\"),\n\t\t\t},\n\t\t\tTags: ecs.OceanTagArray{\n\t\t\t\t\u0026ecs.OceanTagArgs{\n\t\t\t\t\tKey:   pulumi.String(\"fakeKey\"),\n\t\t\t\t\tValue: pulumi.String(\"fakeValue\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUserData:                 pulumi.String(\"echo hello world\"),\n\t\t\tUtilizeReservedInstances: pulumi.Bool(false),\n\t\t\tWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"t3.medium\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Auto Scaler\n\n* `autoscaler` - (Optional) Describes the Ocean ECS autoscaler.\n    * `is_enabled` - (Optional, Default: `true`) Enable the Ocean ECS autoscaler.\n    * `is_auto_config` - (Optional, Default: `true`) Automatically configure and optimize headroom resources.\n    * `cooldown` - (Optional, Default: `null`) Cooldown period between scaling actions.\n    * `headroom` - (Optional) Spare resource capacity management enabling fast assignment of tasks without waiting for new resources to launch.\n        * `cpu_per_unit` - (Optional) Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n        * `memory_per_unit` - (Optional) Optionally configure the amount of memory (MB) to allocate the headroom.\n        * `num_of_units` - (Optional) The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n    * `down` - (Optional) Auto Scaling scale down operations.\n        * `max_scale_down_percentage` - (Optional) Would represent the maximum % to scale-down. Number between 1-100\n    * `resource_limits` - (Optional) Optionally set upper and lower bounds on the resource usage of the cluster.\n        * `max_vcpu` - (Optional) The maximum cpu in vCPU units that can be allocated to the cluster.\n        * `max_memory_gib` - (Optional) The maximum memory in GiB units that can be allocated to the cluster.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\n\u003ca id=\"update-policy\"\u003e\u003c/a\u003e\n## Update Policy\n\n* `update_policy` - (Optional) While used, you can control whether the group should perform a deployment after an update to the configuration.\n    * `should_roll` - (Required) Enables the roll.\n    * `roll_config` - (Required) \n        * `batch_size_percentage` - (Required) Sets the percentage of the instances to deploy in each batch.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\n\u003ca id=\"scheduled-task\"\u003e\u003c/a\u003e\n## scheduled task\n\n* `scheduled_task` - (Optional) While used, you can control whether the group should perform a deployment after an update to the configuration.\n    * `shutdown_hours` - (Optional) Set shutdown hours for cluster object.\n        * `is_enabled` - (Optional)  Flag to enable / disable the shutdown hours.\n                                     Example: True\n        * `time_windows` - (Required) Set time windows for shutdown hours. specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59. Time windows should not overlap. required on cluster.scheduling.isEnabled = True. API Times are in UTC\n                                      Example: Fri:15:30-Wed:14:30\n    * `tasks` - (Optional) The scheduling tasks for the cluster.\n        * `is_enabled` - (Required)  Describes whether the task is enabled. When true the task should run when false it should not run. Required for cluster.scheduling.tasks object.\n        * `cron_expression` - (Required) A valid cron expression. For example : \" * * * * * \".The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of ‘frequency’ or ‘cronExpression’ should be used at a time. Required for cluster.scheduling.tasks object\n                                         Example: 0 1 * * *.\n        * `task_type` - (Required) Valid values: \"clusterRoll\". Required for cluster.scheduling.tasks object\n                                   Example: clusterRoll.\n             \n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n",
            "properties": {
                "associatePublicIpAddress": {
                    "type": "boolean",
                    "description": "Configure public IP address allocation.\n"
                },
                "autoscaler": {
                    "$ref": "#/types/spotinst:ecs/OceanAutoscaler:OceanAutoscaler"
                },
                "clusterName": {
                    "type": "string",
                    "description": "The ocean cluster name.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The number of instances to launch and maintain in the cluster.\n"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                },
                "ebsOptimized": {
                    "type": "boolean",
                    "description": "Enable EBS optimized for cluster. Flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized this flag will be ignored.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The instance profile iam role.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "ID of the image used to launch the instances.\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The key pair to attach the instances.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The upper limit of instances the cluster can scale up to.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The lower limit of instances the cluster can scale down to.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Enable detailed monitoring for cluster. Flag will enable Cloud Watch detailed detailed monitoring (one minute increments). Note: there are additional hourly costs for this service based on the region used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Ocean cluster name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region the cluster will run in.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanScheduledTask:OceanScheduledTask"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more security group ids.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public ip.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanTag:OceanTag"
                    },
                    "description": "Optionally adds tags to instances launched in an Ocean cluster.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:ecs/OceanUpdatePolicy:OceanUpdatePolicy"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                },
                "utilizeReservedInstances": {
                    "type": "boolean",
                    "description": "If Reserved instances exist, OCean will utilize them before launching Spot instances.\n"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types allowed in the Ocean cluster, Cannot be configured if blacklist is configured.\n"
                }
            },
            "required": [
                "clusterName",
                "desiredCapacity",
                "maxSize",
                "minSize",
                "name",
                "region",
                "securityGroupIds",
                "subnetIds"
            ],
            "inputProperties": {
                "associatePublicIpAddress": {
                    "type": "boolean",
                    "description": "Configure public IP address allocation.\n"
                },
                "autoscaler": {
                    "$ref": "#/types/spotinst:ecs/OceanAutoscaler:OceanAutoscaler"
                },
                "clusterName": {
                    "type": "string",
                    "description": "The ocean cluster name.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The number of instances to launch and maintain in the cluster.\n"
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                },
                "ebsOptimized": {
                    "type": "boolean",
                    "description": "Enable EBS optimized for cluster. Flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized this flag will be ignored.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The instance profile iam role.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "ID of the image used to launch the instances.\n"
                },
                "keyPair": {
                    "type": "string",
                    "description": "The key pair to attach the instances.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The upper limit of instances the cluster can scale up to.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The lower limit of instances the cluster can scale down to.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Enable detailed monitoring for cluster. Flag will enable Cloud Watch detailed detailed monitoring (one minute increments). Note: there are additional hourly costs for this service based on the region used.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Ocean cluster name.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region the cluster will run in.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanScheduledTask:OceanScheduledTask"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more security group ids.\n"
                },
                "subnetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public ip.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanTag:OceanTag"
                    },
                    "description": "Optionally adds tags to instances launched in an Ocean cluster.\n"
                },
                "updatePolicy": {
                    "$ref": "#/types/spotinst:ecs/OceanUpdatePolicy:OceanUpdatePolicy"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                },
                "utilizeReservedInstances": {
                    "type": "boolean",
                    "description": "If Reserved instances exist, OCean will utilize them before launching Spot instances.\n"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Instance types allowed in the Ocean cluster, Cannot be configured if blacklist is configured.\n"
                }
            },
            "requiredInputs": [
                "clusterName",
                "region",
                "securityGroupIds",
                "subnetIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ocean resources.\n",
                "properties": {
                    "associatePublicIpAddress": {
                        "type": "boolean",
                        "description": "Configure public IP address allocation.\n"
                    },
                    "autoscaler": {
                        "$ref": "#/types/spotinst:ecs/OceanAutoscaler:OceanAutoscaler"
                    },
                    "clusterName": {
                        "type": "string",
                        "description": "The ocean cluster name.\n"
                    },
                    "desiredCapacity": {
                        "type": "integer",
                        "description": "The number of instances to launch and maintain in the cluster.\n"
                    },
                    "drainingTimeout": {
                        "type": "integer",
                        "description": "The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.\n"
                    },
                    "ebsOptimized": {
                        "type": "boolean",
                        "description": "Enable EBS optimized for cluster. Flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized this flag will be ignored.\n"
                    },
                    "iamInstanceProfile": {
                        "type": "string",
                        "description": "The instance profile iam role.\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "ID of the image used to launch the instances.\n"
                    },
                    "keyPair": {
                        "type": "string",
                        "description": "The key pair to attach the instances.\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The upper limit of instances the cluster can scale up to.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The lower limit of instances the cluster can scale down to.\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Enable detailed monitoring for cluster. Flag will enable Cloud Watch detailed detailed monitoring (one minute increments). Note: there are additional hourly costs for this service based on the region used.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Ocean cluster name.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region the cluster will run in.\n"
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanScheduledTask:OceanScheduledTask"
                        }
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more security group ids.\n"
                    },
                    "subnetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public ip.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanTag:OceanTag"
                        },
                        "description": "Optionally adds tags to instances launched in an Ocean cluster.\n"
                    },
                    "updatePolicy": {
                        "$ref": "#/types/spotinst:ecs/OceanUpdatePolicy:OceanUpdatePolicy"
                    },
                    "userData": {
                        "type": "string",
                        "description": "Base64-encoded MIME user data to make available to the instances.\n"
                    },
                    "utilizeReservedInstances": {
                        "type": "boolean",
                        "description": "If Reserved instances exist, OCean will utilize them before launching Spot instances.\n"
                    },
                    "whitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Instance types allowed in the Ocean cluster, Cannot be configured if blacklist is configured.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:ecs/oceanLaunchSpec:OceanLaunchSpec": {
            "description": "Provides a custom Spotinst Ocean ECS Launch Spec resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.ecs.OceanLaunchSpec(\"example\", {\n    attributes: [{\n        key: \"fakeKey\",\n        value: \"fakeValue\",\n    }],\n    autoscaleHeadrooms: [{\n        cpuPerUnit: 1000,\n        memoryPerUnit: 2048,\n        numOfUnits: 5,\n    }],\n    iamInstanceProfile: \"iam-profile\",\n    imageId: \"ami-123456\",\n    oceanId: \"o-123456\",\n    securityGroupIds: [\"awseb-12345\"],\n    tags: [{\n        key: \"Env\",\n        value: \"production\",\n    }],\n    userData: \"echo hello world\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.ecs.OceanLaunchSpec(\"example\",\n    attributes=[{\n        \"key\": \"fakeKey\",\n        \"value\": \"fakeValue\",\n    }],\n    autoscale_headrooms=[{\n        \"cpuPerUnit\": 1000,\n        \"memoryPerUnit\": 2048,\n        \"numOfUnits\": 5,\n    }],\n    iam_instance_profile=\"iam-profile\",\n    image_id=\"ami-123456\",\n    ocean_id=\"o-123456\",\n    security_group_ids=[\"awseb-12345\"],\n    tags=[{\n        \"key\": \"Env\",\n        \"value\": \"production\",\n    }],\n    user_data=\"echo hello world\")\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new SpotInst.Ecs.OceanLaunchSpec(\"example\", new SpotInst.Ecs.OceanLaunchSpecArgs\n        {\n            Attributes = \n            {\n                new SpotInst.Ecs.Inputs.OceanLaunchSpecAttributeArgs\n                {\n                    Key = \"fakeKey\",\n                    Value = \"fakeValue\",\n                },\n            },\n            AutoscaleHeadrooms = \n            {\n                new SpotInst.Ecs.Inputs.OceanLaunchSpecAutoscaleHeadroomArgs\n                {\n                    CpuPerUnit = 1000,\n                    MemoryPerUnit = 2048,\n                    NumOfUnits = 5,\n                },\n            },\n            IamInstanceProfile = \"iam-profile\",\n            ImageId = \"ami-123456\",\n            OceanId = \"o-123456\",\n            SecurityGroupIds = \n            {\n                \"awseb-12345\",\n            },\n            Tags = \n            {\n                new SpotInst.Ecs.Inputs.OceanLaunchSpecTagArgs\n                {\n                    Key = \"Env\",\n                    Value = \"production\",\n                },\n            },\n            UserData = \"echo hello world\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/ecs\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ecs.NewOceanLaunchSpec(ctx, \"example\", \u0026ecs.OceanLaunchSpecArgs{\n\t\t\tAttributes: ecs.OceanLaunchSpecAttributeArray{\n\t\t\t\t\u0026ecs.OceanLaunchSpecAttributeArgs{\n\t\t\t\t\tKey:   pulumi.String(\"fakeKey\"),\n\t\t\t\t\tValue: pulumi.String(\"fakeValue\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAutoscaleHeadrooms: ecs.OceanLaunchSpecAutoscaleHeadroomArray{\n\t\t\t\t\u0026ecs.OceanLaunchSpecAutoscaleHeadroomArgs{\n\t\t\t\t\tCpuPerUnit:    pulumi.Int(1000),\n\t\t\t\t\tMemoryPerUnit: pulumi.Int(2048),\n\t\t\t\t\tNumOfUnits:    pulumi.Int(5),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIamInstanceProfile: pulumi.String(\"iam-profile\"),\n\t\t\tImageId:            pulumi.String(\"ami-123456\"),\n\t\t\tOceanId:            pulumi.String(\"o-123456\"),\n\t\t\tSecurityGroupIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"awseb-12345\"),\n\t\t\t},\n\t\t\tTags: ecs.OceanLaunchSpecTagArray{\n\t\t\t\t\u0026ecs.OceanLaunchSpecTagArgs{\n\t\t\t\t\tKey:   pulumi.String(\"Env\"),\n\t\t\t\t\tValue: pulumi.String(\"production\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUserData: pulumi.String(\"echo hello world\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecAttribute:OceanLaunchSpecAttribute"
                    },
                    "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                },
                "autoscaleHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                    },
                    "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "ID of the image used to launch the instances.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Ocean Launch Specification name.\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The Ocean cluster ID .\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more security group ids.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecTag:OceanLaunchSpecTag"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                }
            },
            "required": [
                "name",
                "oceanId"
            ],
            "inputProperties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecAttribute:OceanLaunchSpecAttribute"
                    },
                    "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                },
                "autoscaleHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                    },
                    "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                },
                "iamInstanceProfile": {
                    "type": "string",
                    "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "ID of the image used to launch the instances.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Ocean Launch Specification name.\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The Ocean cluster ID .\n"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more security group ids.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:ecs/OceanLaunchSpecTag:OceanLaunchSpecTag"
                    },
                    "description": "A key/value mapping of tags to assign to the resource.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "Base64-encoded MIME user data to make available to the instances.\n"
                }
            },
            "requiredInputs": [
                "oceanId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanLaunchSpec resources.\n",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanLaunchSpecAttribute:OceanLaunchSpecAttribute"
                        },
                        "description": "Optionally adds labels to instances launched in an Ocean cluster.\n"
                    },
                    "autoscaleHeadrooms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                        },
                        "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                    },
                    "iamInstanceProfile": {
                        "type": "string",
                        "description": "The ARN or name of an IAM instance profile to associate with launched instances.\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "ID of the image used to launch the instances.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Ocean Launch Specification name.\n"
                    },
                    "oceanId": {
                        "type": "string",
                        "description": "The Ocean cluster ID .\n"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more security group ids.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:ecs/OceanLaunchSpecTag:OceanLaunchSpecTag"
                        },
                        "description": "A key/value mapping of tags to assign to the resource.\n"
                    },
                    "userData": {
                        "type": "string",
                        "description": "Base64-encoded MIME user data to make available to the instances.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:gcp/elastigroup:Elastigroup": {
            "description": "Provides a Spotinst elastigroup GCP resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.gcp.Elastigroup(\"example\", {\n    availabilityZones: [\n        \"asia-east1-c\",\n        \"us-central1-a\",\n    ],\n    backendServicesConfig: [{\n        ports: [{\n            portName: \"port-name\",\n            ports: [\n                8000,\n                6000,\n            ],\n        }],\n        serviceName: \"spotinst-elb-backend-service\",\n    }],\n    description: \"spotinst gcp group\",\n    desiredCapacity: 1,\n    disks: [{\n        autoDelete: true,\n        boot: true,\n        deviceName: \"device\",\n        initializeParams: [{\n            diskSizeGb: 10,\n            diskType: \"pd-standard\",\n            sourceImage: \"\",\n        }],\n        interface: \"SCSI\",\n        mode: \"READ_WRITE\",\n        type: \"PERSISTENT\",\n    }],\n    drainingTimeout: 180,\n    // on_demand_count      = 2\n    fallbackToOndemand: true,\n    instanceTypesCustoms: [{\n        memoryGiB: 7.5,\n        vCPU: 2,\n    }],\n    instanceTypesOndemand: [\"n1-standard-1\"],\n    instanceTypesPreemptibles: [\n        \"n1-standard-1\",\n        \"n1-standard-2\",\n    ],\n    labels: [{\n        key: \"test_key\",\n        value: \"test_value\",\n    }],\n    maxSize: 1,\n    minSize: 0,\n    networkInterfaces: [{\n        network: \"spot-network\",\n    }],\n    preemptiblePercentage: 50,\n    scaling: [{\n        up: [{\n            action: [{\n                adjustment: 1,\n                type: \"adjustment\",\n            }],\n            cooldown: 300,\n            dimensions: [{\n                name: \"storage_type\",\n                value: \"pd-ssd\",\n            }],\n            evaluationPeriods: 1,\n            metricName: \"instance/disk/read_ops_count\",\n            namespace: \"compute\",\n            operator: \"gte\",\n            period: 300,\n            policyName: \"scale_up_1\",\n            source: \"stackdriver\",\n            statistic: \"average\",\n            threshold: 10000,\n            unit: \"percent\",\n        }],\n    }],\n    serviceAccount: \"example@myProject.iam.gservicecct.com\",\n    startupScript: \"\",\n    subnets: [{\n        region: \"asia-east1\",\n        subnetNames: \"\",\n    }],\n    tags: [\n        \"http\",\n        \"https\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.gcp.Elastigroup(\"example\",\n    availability_zones=[\n        \"asia-east1-c\",\n        \"us-central1-a\",\n    ],\n    backend_services_config=[{\n        \"ports\": [{\n            \"portName\": \"port-name\",\n            \"ports\": [\n                8000,\n                6000,\n            ],\n        }],\n        \"serviceName\": \"spotinst-elb-backend-service\",\n    }],\n    description=\"spotinst gcp group\",\n    desired_capacity=1,\n    disks=[{\n        \"autoDelete\": True,\n        \"boot\": True,\n        \"deviceName\": \"device\",\n        \"initializeParams\": [{\n            \"diskSizeGb\": 10,\n            \"diskType\": \"pd-standard\",\n            \"source_image\": \"\",\n        }],\n        \"interface\": \"SCSI\",\n        \"mode\": \"READ_WRITE\",\n        \"type\": \"PERSISTENT\",\n    }],\n    draining_timeout=180,\n    fallback_to_ondemand=True,\n    instance_types_customs=[{\n        \"memoryGiB\": 7.5,\n        \"vCPU\": 2,\n    }],\n    instance_types_ondemand=[\"n1-standard-1\"],\n    instance_types_preemptibles=[\n        \"n1-standard-1\",\n        \"n1-standard-2\",\n    ],\n    labels=[{\n        \"key\": \"test_key\",\n        \"value\": \"test_value\",\n    }],\n    max_size=1,\n    min_size=0,\n    network_interfaces=[{\n        \"network\": \"spot-network\",\n    }],\n    preemptible_percentage=50,\n    scaling=[{\n        \"up\": [{\n            \"action\": [{\n                \"adjustment\": 1,\n                \"type\": \"adjustment\",\n            }],\n            \"cooldown\": 300,\n            \"dimensions\": [{\n                \"name\": \"storage_type\",\n                \"value\": \"pd-ssd\",\n            }],\n            \"evaluationPeriods\": 1,\n            \"metricName\": \"instance/disk/read_ops_count\",\n            \"namespace\": \"compute\",\n            \"operator\": \"gte\",\n            \"period\": 300,\n            \"policyName\": \"scale_up_1\",\n            \"source\": \"stackdriver\",\n            \"statistic\": \"average\",\n            \"threshold\": 10000,\n            \"unit\": \"percent\",\n        }],\n    }],\n    service_account=\"example@myProject.iam.gservicecct.com\",\n    startup_script=\"\",\n    subnets=[{\n        \"region\": \"asia-east1\",\n        \"subnetNames\": \"\",\n    }],\n    tags=[\n        \"http\",\n        \"https\",\n    ])\n```\n{{% /example %}}\n{{% /examples %}}\n## GPU\n\n* `gpu` - (Optional) Defines the GPU configuration.\n    * `type` - (Required) The type of GPU instance. Valid values: `nvidia-tesla-v100`, `nvidia-tesla-p100`, `nvidia-tesla-k80`.\n    * `count` - (Required) The number of GPUs. Must be 0, 2, 4, 6, 8.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"health-check\"\u003e\u003c/a\u003e\n## Backend Services\n\n* `backend_services` - (Optional) Describes the backend service configurations.\n    * `service_name` - (Required) The name of the backend service.\n    * `location_type` - (Optional) Sets which location the backend services will be active. Valid values: `regional`, `global`.\n    * `scheme` - (Optional) Use when `location_type` is \"regional\". Set the traffic for the backend service to either between the instances in the vpc or to traffic from the internet. Valid values: `INTERNAL`, `EXTERNAL`.\n    * `named_port` - (Optional) Describes a named port and a list of ports.\n        * `port_name` - (Required) The name of the port.\n        * `ports` - (Required) A list of ports.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"disks\"\u003e\u003c/a\u003e\n## Disks\n\n* `disks` - (Optional) Array of disks associated with this instance. Persistent disks must be created before you can assign them.\n    * `auto_delete` - (Optional) Specifies whether the disk will be auto-deleted when the instance is deleted.\n    * `boot` - (Optional) Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.\n    * `device_name` - (Optional) Specifies a unique device name of your choice.\n    * `interface` - (Optional, Default: `SCSI`) Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. \n    * `mode` - (Optional, Default: `READ_WRITE`) The mode in which to attach this disk, either READ_WRITE or READ_ONLY.\n    * `source` - (Optional) Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only applicable for persistent disks.\n    * `type` - (Optional, Default: `PERSISTENT`) Specifies the type of disk, either SCRATCH or PERSISTENT.\n    * `initialize_params` - (Optional) Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance.\n        * `disk_size_gb` - (Optional) Specifies disk size in gigabytes. Must be in increments of 2.\n        * `disk_type` - (Optional, Default\" `pd-standard`) Specifies the disk type to use to create the instance. Valid values: pd-ssd, local-ssd.\n        * `source_image` - (Optional) A source image used to create the disk. You can provide a private (custom) image, and Compute Engine will use the corresponding image from your project.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"network-interface\"\u003e\u003c/a\u003e\n## Network Interfaces\n\nEach of the `network_interface` attributes controls a portion of the GCP\nInstance's \"Network Interfaces\". It's a good idea to familiarize yourself with [GCP's Network\nInterfaces docs](https://cloud.google.com/vpc/docs/multiple-interfaces-concepts)\nto understand the implications of using these attributes.\n\n* `network_interface` - (Required, minimum 1) Array of objects representing the network configuration for the elastigroup.\n    * `network` - (Required) Network resource for this group.\n    * `access_configs` - (Optional) Array of configurations.\n        * `name` - (Optional) Name of this access configuration.\n        * `type` - (Optional) Array of configurations for this interface. Currently, only ONE_TO_ONE_NAT is supported.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"scaling-policy\"\u003e\u003c/a\u003e\n## Scaling Policies\n\n* `scaling_up_policy` - (Optional) Contains scaling policies for scaling the Elastigroup up.\n* `scaling_down_policy` - (Optional) Contains scaling policies for scaling the Elastigroup down.\n\nEach `scaling_*_policy` supports the following:\n\n* `policy_name` - (Optional) Name of scaling policy.\n* `metric_name` - (Optional) Metric to monitor. Valid values: \"Percentage CPU\", \"Network In\", \"Network Out\", \"Disk Read Bytes\", \"Disk Write Bytes\", \"Disk Write Operations/Sec\", \"Disk Read Operations/Sec\".\n* `statistic` - (Optional) Statistic by which to evaluate the selected metric. Valid values: \"AVERAGE\", \"SAMPLE_COUNT\", \"SUM\", \"MINIMUM\", \"MAXIMUM\", \"PERCENTILE\", \"COUNT\".\n* `threshold` - (Optional) The value at which the scaling action is triggered.\n* `period` - (Optional) Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.\n* `evaluation_periods` - (Optional) Number of consecutive periods in which the threshold must be met in order to trigger a scaling action.\n* `cooldown` - (Optional) Time (seconds) to wait after a scaling action before resuming monitoring.\n* `operator` - (Optional) The operator used to evaluate the threshold against the current metric value. Valid values: \"gt\" (greater than), \"get\" (greater-than or equal), \"lt\" (less than), \"lte\" (less than or equal).\n* `action` - (Optional) Scaling action to take when the policy is triggered.\n    * `type` - (Optional) Type of scaling action to take when the scaling policy is triggered. Valid values: \"adjustment\", \"setMinTarget\", \"updateCapacity\", \"percentageAdjustment\"\n    * `adjustment` - (Optional) Value to which the action type will be adjusted. Required if using \"numeric\" or \"percentageAdjustment\" action types.\n* `dimensions` - (Optional) A list of dimensions describing qualities of the metric.\n    * `name` - (Required) The dimension name.\n    * `value` - (Required) The dimension value.\n    \nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"third-party-integrations\"\u003e\u003c/a\u003e\n## Third-Party Integrations\n\n* `integration_docker_swarm` - (Optional) Describes the [Docker Swarm](https://api.spotinst.com/integration-docs/elastigroup/container-management/docker-swarm/docker-swarm-integration/) integration.\n    * `master_host` - (Required) IP or FQDN of one of your swarm managers.\n    * `master_port` - (Required) Network port used by your swarm.\n            \nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"scheduled-task\"\u003e\u003c/a\u003e\n## Scheduled Tasks\n\nEach `scheduled_task` supports the following:\n\n* `task_type` - (Required) The task type to run. Valid values: `\"setCapacity\"`.\n* `cron_expression` - (Optional) A valid cron expression. The cron is running in UTC time zone and is in [Unix cron format](https://en.wikipedia.org/wiki/Cron).\n* `is_enabled` - (Optional, Default: `true`) Setting the task to being enabled or disabled.\n* `target_capacity` - (Optional) The desired number of instances the group should have.\n* `min_capacity` - (Optional) The minimum number of instances the group should have.\n* `max_capacity` - (Optional) The maximum number of instances the group should have.\n\nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n",
            "properties": {
                "autoHealing": {
                    "type": "boolean"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of availability zones for the group.\n",
                    "deprecationMessage": "This field will soon be handled by Region in Subnets"
                },
                "backendServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupBackendService:ElastigroupBackendService"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The region your GCP group will be created in.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupDisk:ElastigroupDisk"
                    }
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "Time (seconds) the instance is allowed to run after it is detached from the group. This is to allow the instance time to drain all the current TCP connections before terminating it.\n"
                },
                "fallbackToOndemand": {
                    "type": "boolean",
                    "description": "Activate fallback-to-on-demand. When provisioning an instance, if no Preemptible market is available, fallback-to-on-demand will provision an On-Demand instance to maintain the group capacity.\n"
                },
                "gpu": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupGpu:ElastigroupGpu"
                    }
                },
                "healthCheckGracePeriod": {
                    "type": "integer"
                },
                "healthCheckType": {
                    "type": "string"
                },
                "instanceTypesCustoms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom"
                    },
                    "description": "Defines a set of custom instance types. Required if instance_types_preemptible and instance_types_ondemand are not set.\n"
                },
                "instanceTypesOndemand": {
                    "type": "string",
                    "description": "The regular VM instance type to use for mixed-type groups and when falling back to on-demand. Required if instance_types_preemptible is not set.\n"
                },
                "instanceTypesPreemptibles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The preemptible VMs instance type. To maximize cost savings and market availability, select as many types as possible. Required if instance_types_ondemand is not set.\n"
                },
                "integrationDockerSwarm": {
                    "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm"
                },
                "integrationGke": {
                    "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationGke:ElastigroupIntegrationGke"
                },
                "ipForwarding": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupLabel:ElastigroupLabel"
                    },
                    "description": "Array of objects with key-value pairs.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupMetadata:ElastigroupMetadata"
                    },
                    "description": "Array of objects with key-value pairs.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                    }
                },
                "ondemandCount": {
                    "type": "integer"
                },
                "preemptiblePercentage": {
                    "type": "integer",
                    "description": "Percentage of Preemptible VMs to spin up from the \"desired_capacity\".\n"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    }
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    }
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScheduledTask:ElastigroupScheduledTask"
                    }
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "The email of the service account in which the group instances will be launched.\n"
                },
                "shutdownScript": {
                    "type": "string",
                    "description": "The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n"
                },
                "startupScript": {
                    "type": "string",
                    "description": "Create and run your own startup scripts on your virtual machines to perform automated tasks every time your instance boots up.\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupSubnet:ElastigroupSubnet"
                    },
                    "description": "A list of regions and subnets.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags to mark created instances.\n"
                },
                "unhealthyDuration": {
                    "type": "integer"
                }
            },
            "required": [
                "desiredCapacity",
                "maxSize",
                "minSize",
                "name"
            ],
            "inputProperties": {
                "autoHealing": {
                    "type": "boolean"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of availability zones for the group.\n",
                    "deprecationMessage": "This field will soon be handled by Region in Subnets"
                },
                "backendServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupBackendService:ElastigroupBackendService"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The region your GCP group will be created in.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The desired number of instances the group should have at any time.\n"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupDisk:ElastigroupDisk"
                    }
                },
                "drainingTimeout": {
                    "type": "integer",
                    "description": "Time (seconds) the instance is allowed to run after it is detached from the group. This is to allow the instance time to drain all the current TCP connections before terminating it.\n"
                },
                "fallbackToOndemand": {
                    "type": "boolean",
                    "description": "Activate fallback-to-on-demand. When provisioning an instance, if no Preemptible market is available, fallback-to-on-demand will provision an On-Demand instance to maintain the group capacity.\n"
                },
                "gpu": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupGpu:ElastigroupGpu"
                    }
                },
                "healthCheckGracePeriod": {
                    "type": "integer"
                },
                "healthCheckType": {
                    "type": "string"
                },
                "instanceTypesCustoms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom"
                    },
                    "description": "Defines a set of custom instance types. Required if instance_types_preemptible and instance_types_ondemand are not set.\n"
                },
                "instanceTypesOndemand": {
                    "type": "string",
                    "description": "The regular VM instance type to use for mixed-type groups and when falling back to on-demand. Required if instance_types_preemptible is not set.\n"
                },
                "instanceTypesPreemptibles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The preemptible VMs instance type. To maximize cost savings and market availability, select as many types as possible. Required if instance_types_ondemand is not set.\n"
                },
                "integrationDockerSwarm": {
                    "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm"
                },
                "integrationGke": {
                    "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationGke:ElastigroupIntegrationGke"
                },
                "ipForwarding": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupLabel:ElastigroupLabel"
                    },
                    "description": "Array of objects with key-value pairs.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The maximum number of instances the group should have at any time.\n"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupMetadata:ElastigroupMetadata"
                    },
                    "description": "Array of objects with key-value pairs.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The minimum number of instances the group should have at any time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name.\n"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                    }
                },
                "ondemandCount": {
                    "type": "integer"
                },
                "preemptiblePercentage": {
                    "type": "integer",
                    "description": "Percentage of Preemptible VMs to spin up from the \"desired_capacity\".\n"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    }
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    }
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupScheduledTask:ElastigroupScheduledTask"
                    }
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "The email of the service account in which the group instances will be launched.\n"
                },
                "shutdownScript": {
                    "type": "string",
                    "description": "The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n"
                },
                "startupScript": {
                    "type": "string",
                    "description": "Create and run your own startup scripts on your virtual machines to perform automated tasks every time your instance boots up.\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupSubnet:ElastigroupSubnet"
                    },
                    "description": "A list of regions and subnets.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags to mark created instances.\n"
                },
                "unhealthyDuration": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "desiredCapacity"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Elastigroup resources.\n",
                "properties": {
                    "autoHealing": {
                        "type": "boolean"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of availability zones for the group.\n",
                        "deprecationMessage": "This field will soon be handled by Region in Subnets"
                    },
                    "backendServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupBackendService:ElastigroupBackendService"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "The region your GCP group will be created in.\n"
                    },
                    "desiredCapacity": {
                        "type": "integer",
                        "description": "The desired number of instances the group should have at any time.\n"
                    },
                    "disks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupDisk:ElastigroupDisk"
                        }
                    },
                    "drainingTimeout": {
                        "type": "integer",
                        "description": "Time (seconds) the instance is allowed to run after it is detached from the group. This is to allow the instance time to drain all the current TCP connections before terminating it.\n"
                    },
                    "fallbackToOndemand": {
                        "type": "boolean",
                        "description": "Activate fallback-to-on-demand. When provisioning an instance, if no Preemptible market is available, fallback-to-on-demand will provision an On-Demand instance to maintain the group capacity.\n"
                    },
                    "gpu": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupGpu:ElastigroupGpu"
                        }
                    },
                    "healthCheckGracePeriod": {
                        "type": "integer"
                    },
                    "healthCheckType": {
                        "type": "string"
                    },
                    "instanceTypesCustoms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom"
                        },
                        "description": "Defines a set of custom instance types. Required if instance_types_preemptible and instance_types_ondemand are not set.\n"
                    },
                    "instanceTypesOndemand": {
                        "type": "string",
                        "description": "The regular VM instance type to use for mixed-type groups and when falling back to on-demand. Required if instance_types_preemptible is not set.\n"
                    },
                    "instanceTypesPreemptibles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The preemptible VMs instance type. To maximize cost savings and market availability, select as many types as possible. Required if instance_types_ondemand is not set.\n"
                    },
                    "integrationDockerSwarm": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm"
                    },
                    "integrationGke": {
                        "$ref": "#/types/spotinst:gcp/ElastigroupIntegrationGke:ElastigroupIntegrationGke"
                    },
                    "ipForwarding": {
                        "type": "boolean"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupLabel:ElastigroupLabel"
                        },
                        "description": "Array of objects with key-value pairs.\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The maximum number of instances the group should have at any time.\n"
                    },
                    "metadatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupMetadata:ElastigroupMetadata"
                        },
                        "description": "Array of objects with key-value pairs.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The minimum number of instances the group should have at any time.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name.\n"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                        }
                    },
                    "ondemandCount": {
                        "type": "integer"
                    },
                    "preemptiblePercentage": {
                        "type": "integer",
                        "description": "Percentage of Preemptible VMs to spin up from the \"desired_capacity\".\n"
                    },
                    "scalingDownPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                        }
                    },
                    "scalingUpPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                        }
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupScheduledTask:ElastigroupScheduledTask"
                        }
                    },
                    "serviceAccount": {
                        "type": "string",
                        "description": "The email of the service account in which the group instances will be launched.\n"
                    },
                    "shutdownScript": {
                        "type": "string",
                        "description": "The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n"
                    },
                    "startupScript": {
                        "type": "string",
                        "description": "Create and run your own startup scripts on your virtual machines to perform automated tasks every time your instance boots up.\n"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gcp/ElastigroupSubnet:ElastigroupSubnet"
                        },
                        "description": "A list of regions and subnets.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags to mark created instances.\n"
                    },
                    "unhealthyDuration": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:gke/elastigroup:Elastigroup": {
            "description": "Provides a Spotinst Elastigroup GKE resource. Please see [Importing a GKE cluster](https://api.spotinst.com/elastigroup-for-google-cloud/tutorials/import-a-gke-cluster-as-an-elastigroup/) for detailed information.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nA spotinst.gke.Elastigroup supports all of the fields defined in spotinst_elastigroup_gcp. \n\nThere are two main differences:\n\n* you must include `cluster_zone_name` and `cluster_id`\n* a handful of parameters are created remotely and will not appear in the diff. A complete list can be found below.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example_gke_elastigroup = new spotinst.gke.Elastigroup(\"example-gke-elastigroup\", {\n    backendServices: [{\n        locationType: \"global\",\n        namedPorts: [{\n            name: \"http\",\n            ports: [\n                \"80\",\n                \"8080\",\n            ],\n        }],\n        serviceName: \"backend-service\",\n    }],\n    // cluster_id        = \"terraform-acc-test-cluster\" // deprecated\n    clusterZoneName: \"us-central1-a\",\n    desiredCapacity: 3,\n    // --- INSTANCE TYPES --------------------------------\n    instanceTypesOndemand: \"n1-standard-1\",\n    instanceTypesPreemptibles: [\n        \"n1-standard-1\",\n        \"n1-standard-2\",\n    ],\n    integrationGke: {\n        autoscaleCooldown: 300,\n        autoscaleDown: {\n            evaluationPeriods: 300,\n        },\n        autoscaleHeadroom: {\n            cpuPerUnit: 1024,\n            memoryPerUnit: 512,\n            numOfUnits: 2,\n        },\n        autoscaleIsAutoConfig: false,\n        autoscaleIsEnabled: true,\n        autoscaleLabels: [{\n            key: \"label_key\",\n            value: \"label_value\",\n        }],\n        clusterId: \"example-cluster-id\",\n        location: \"us-central1-a\",\n    },\n    // --- CAPACITY ------------\n    maxSize: 5,\n    minSize: 1,\n    nodeImage: \"COS\",\n    // --- STRATEGY --------------------\n    preemptiblePercentage: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample_gke_elastigroup = spotinst.gke.Elastigroup(\"example-gke-elastigroup\",\n    backend_services=[{\n        \"locationType\": \"global\",\n        \"namedPorts\": [{\n            \"name\": \"http\",\n            \"ports\": [\n                80,\n                8080,\n            ],\n        }],\n        \"serviceName\": \"backend-service\",\n    }],\n    cluster_zone_name=\"us-central1-a\",\n    desired_capacity=3,\n    instance_types_ondemand=\"n1-standard-1\",\n    instance_types_preemptibles=[\n        \"n1-standard-1\",\n        \"n1-standard-2\",\n    ],\n    integration_gke={\n        \"autoscaleCooldown\": 300,\n        \"autoscaleDown\": {\n            \"evaluationPeriods\": 300,\n        },\n        \"autoscaleHeadroom\": {\n            \"cpuPerUnit\": 1024,\n            \"memoryPerUnit\": 512,\n            \"numOfUnits\": 2,\n        },\n        \"autoscaleIsAutoConfig\": False,\n        \"autoscaleIsEnabled\": True,\n        \"autoscaleLabels\": [{\n            \"key\": \"label_key\",\n            \"value\": \"label_value\",\n        }],\n        \"cluster_id\": \"example-cluster-id\",\n        \"location\": \"us-central1-a\",\n    },\n    max_size=5,\n    min_size=1,\n    node_image=\"COS\",\n    preemptible_percentage=100)\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example_gke_elastigroup = new SpotInst.Gke.Elastigroup(\"example-gke-elastigroup\", new SpotInst.Gke.ElastigroupArgs\n        {\n            BackendServices = \n            {\n                new SpotInst.Gke.Inputs.ElastigroupBackendServiceArgs\n                {\n                    LocationType = \"global\",\n                    NamedPorts = \n                    {\n                        new SpotInst.Gke.Inputs.ElastigroupBackendServiceNamedPortArgs\n                        {\n                            Name = \"http\",\n                            Ports = \n                            {\n                                \"80\",\n                                \"8080\",\n                            },\n                        },\n                    },\n                    ServiceName = \"backend-service\",\n                },\n            },\n            ClusterZoneName = \"us-central1-a\",\n            DesiredCapacity = 3,\n            InstanceTypesOndemand = \"n1-standard-1\",\n            InstanceTypesPreemptibles = \n            {\n                \"n1-standard-1\",\n                \"n1-standard-2\",\n            },\n            IntegrationGke = new SpotInst.Gke.Inputs.ElastigroupIntegrationGkeArgs\n            {\n                AutoscaleCooldown = 300,\n                AutoscaleDown = new SpotInst.Gke.Inputs.ElastigroupIntegrationGkeAutoscaleDownArgs\n                {\n                    EvaluationPeriods = 300,\n                },\n                AutoscaleHeadroom = new SpotInst.Gke.Inputs.ElastigroupIntegrationGkeAutoscaleHeadroomArgs\n                {\n                    CpuPerUnit = 1024,\n                    MemoryPerUnit = 512,\n                    NumOfUnits = 2,\n                },\n                AutoscaleIsAutoConfig = false,\n                AutoscaleIsEnabled = true,\n                AutoscaleLabels = \n                {\n                    new SpotInst.Gke.Inputs.ElastigroupIntegrationGkeAutoscaleLabelArgs\n                    {\n                        Key = \"label_key\",\n                        Value = \"label_value\",\n                    },\n                },\n                ClusterId = \"example-cluster-id\",\n                Location = \"us-central1-a\",\n            },\n            MaxSize = 5,\n            MinSize = 1,\n            NodeImage = \"COS\",\n            PreemptiblePercentage = 100,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/gke\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := gke.NewElastigroup(ctx, \"example_gke_elastigroup\", \u0026gke.ElastigroupArgs{\n\t\t\tBackendServices: gke.ElastigroupBackendServiceArray{\n\t\t\t\t\u0026gke.ElastigroupBackendServiceArgs{\n\t\t\t\t\tLocationType: pulumi.String(\"global\"),\n\t\t\t\t\tNamedPorts: gke.ElastigroupBackendServiceNamedPortArray{\n\t\t\t\t\t\t\u0026gke.ElastigroupBackendServiceNamedPortArgs{\n\t\t\t\t\t\t\tName: pulumi.String(\"http\"),\n\t\t\t\t\t\t\tPorts: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"80\"),\n\t\t\t\t\t\t\t\tpulumi.String(\"8080\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tServiceName: pulumi.String(\"backend-service\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tClusterZoneName:       pulumi.String(\"us-central1-a\"),\n\t\t\tDesiredCapacity:       pulumi.Int(3),\n\t\t\tInstanceTypesOndemand: pulumi.String(\"n1-standard-1\"),\n\t\t\tInstanceTypesPreemptibles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"n1-standard-1\"),\n\t\t\t\tpulumi.String(\"n1-standard-2\"),\n\t\t\t},\n\t\t\tIntegrationGke: \u0026gke.ElastigroupIntegrationGkeArgs{\n\t\t\t\tAutoscaleCooldown: pulumi.Int(300),\n\t\t\t\tAutoscaleDown: \u0026gke.ElastigroupIntegrationGkeAutoscaleDownArgs{\n\t\t\t\t\tEvaluationPeriods: pulumi.Int(300),\n\t\t\t\t},\n\t\t\t\tAutoscaleHeadroom: \u0026gke.ElastigroupIntegrationGkeAutoscaleHeadroomArgs{\n\t\t\t\t\tCpuPerUnit:    pulumi.Int(1024),\n\t\t\t\t\tMemoryPerUnit: pulumi.Int(512),\n\t\t\t\t\tNumOfUnits:    pulumi.Int(2),\n\t\t\t\t},\n\t\t\t\tAutoscaleIsAutoConfig: pulumi.Bool(false),\n\t\t\t\tAutoscaleIsEnabled:    pulumi.Bool(true),\n\t\t\t\tAutoscaleLabels: gke.ElastigroupIntegrationGkeAutoscaleLabelArray{\n\t\t\t\t\t\u0026gke.ElastigroupIntegrationGkeAutoscaleLabelArgs{\n\t\t\t\t\t\tKey:   pulumi.String(\"label_key\"),\n\t\t\t\t\t\tValue: pulumi.String(\"label_value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tClusterId: pulumi.String(\"example-cluster-id\"),\n\t\t\t\tLocation:  pulumi.String(\"us-central1-a\"),\n\t\t\t},\n\t\t\tMaxSize:               pulumi.Int(5),\n\t\t\tMinSize:               pulumi.Int(1),\n\t\t\tNodeImage:             pulumi.String(\"COS\"),\n\t\t\tPreemptiblePercentage: pulumi.Int(100),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Third-Party Integrations\n\n* `integration_gke` - (Required) Describes the GKE integration.\n\n    * `location` - (Optional) The location of your GKE cluster.\n    * `cluster_id` - (Optional) The GKE cluster ID you wish to import.\n    * `autoscale_is_enabled` -  (Optional, Default: `false`) Specifies whether the auto scaling feature is enabled.\n    * `autoscale_is_autoconfig` - (Optional, Default: `false`) Enabling the automatic auto-scaler functionality. For more information please see: .\n    * `autoscale_cooldown` - (Optional, Default: `300`) The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n    \n    * `autoscale_headroom` - (Optional) Headroom for the cluster.\n        * `cpu_per_unit` - (Optional, Default: `0`) Cpu units for compute.\n        * `memory_per_unit` - (Optional, Default: `0`) RAM units for compute.\n        * `num_of_units` - (Optional, Default: `0`) Amount of units for compute.\n    \n    * `autoscale_down` - (Optional) Enabling scale down.\n        * `evaluation_periods` - (Optional, Default: `5`) Amount of cooldown evaluation periods for scale down.\n    \n    * `autoscale_labels` - (Optional) Labels to assign to the resource.\n        * `key` - (Optional) The label name.\n        * `value` - (Optional) The label value.\n    \n            \nUsage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"diff-suppressed-parameters\"\u003e\u003c/a\u003e\n## Diff-suppressed Parameters\n\nThe following parameters are created remotely and imported. The diffs have been suppressed in order to maintain plan legibility. You may update the values of these\nimported parameters by defining them in your template with your desired new value (including null values).\n\n* `backend_services`\n    * `service_name`\n    * `location_type`\n    * `scheme`\n    * `named_port`\n        * `port_name`\n        * `ports`\n* `labels`\n    * `key`\n    * `value`\n* `metadata`\n    * `key`\n    * `value`\n* `tags`\n    * `key`\n    * `value`\n* `service_account`\n* `ip_forwarding`\n* `fallback_to_od`\n* `subnets`\n    * `region`\n    * `subnet_name`\n",
            "properties": {
                "backendServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupBackendService:ElastigroupBackendService"
                    }
                },
                "clusterId": {
                    "type": "string",
                    "description": "The name of the GKE cluster you wish to import.\n",
                    "deprecationMessage": "Please define cluster_id under integration_gke"
                },
                "clusterZoneName": {
                    "type": "string",
                    "description": "The zone where the cluster is hosted.\n"
                },
                "desiredCapacity": {
                    "type": "integer"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupDisk:ElastigroupDisk"
                    }
                },
                "drainingTimeout": {
                    "type": "integer"
                },
                "fallbackToOndemand": {
                    "type": "boolean"
                },
                "gpu": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupGpu:ElastigroupGpu"
                    }
                },
                "instanceTypesCustoms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom"
                    }
                },
                "instanceTypesOndemand": {
                    "type": "string"
                },
                "instanceTypesPreemptibles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "integrationDockerSwarm": {
                    "$ref": "#/types/spotinst:gke/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm"
                },
                "integrationGke": {
                    "$ref": "#/types/spotinst:gke/ElastigroupIntegrationGke:ElastigroupIntegrationGke"
                },
                "ipForwarding": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupLabel:ElastigroupLabel"
                    }
                },
                "maxSize": {
                    "type": "integer"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupMetadata:ElastigroupMetadata"
                    }
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                    }
                },
                "nodeImage": {
                    "type": "string",
                    "description": "The image that will be used for the node VMs. Possible values: COS, UBUNTU.\n"
                },
                "ondemandCount": {
                    "type": "integer"
                },
                "preemptiblePercentage": {
                    "type": "integer"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    }
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    }
                },
                "serviceAccount": {
                    "type": "string"
                },
                "shutdownScript": {
                    "type": "string"
                },
                "startupScript": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "clusterZoneName",
                "desiredCapacity",
                "maxSize",
                "minSize",
                "name"
            ],
            "inputProperties": {
                "backendServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupBackendService:ElastigroupBackendService"
                    }
                },
                "clusterId": {
                    "type": "string",
                    "description": "The name of the GKE cluster you wish to import.\n",
                    "deprecationMessage": "Please define cluster_id under integration_gke"
                },
                "clusterZoneName": {
                    "type": "string",
                    "description": "The zone where the cluster is hosted.\n"
                },
                "desiredCapacity": {
                    "type": "integer"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupDisk:ElastigroupDisk"
                    }
                },
                "drainingTimeout": {
                    "type": "integer"
                },
                "fallbackToOndemand": {
                    "type": "boolean"
                },
                "gpu": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupGpu:ElastigroupGpu"
                    }
                },
                "instanceTypesCustoms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom"
                    }
                },
                "instanceTypesOndemand": {
                    "type": "string"
                },
                "instanceTypesPreemptibles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "integrationDockerSwarm": {
                    "$ref": "#/types/spotinst:gke/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm"
                },
                "integrationGke": {
                    "$ref": "#/types/spotinst:gke/ElastigroupIntegrationGke:ElastigroupIntegrationGke"
                },
                "ipForwarding": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupLabel:ElastigroupLabel"
                    }
                },
                "maxSize": {
                    "type": "integer"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupMetadata:ElastigroupMetadata"
                    }
                },
                "minSize": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "networkInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                    }
                },
                "nodeImage": {
                    "type": "string",
                    "description": "The image that will be used for the node VMs. Possible values: COS, UBUNTU.\n"
                },
                "ondemandCount": {
                    "type": "integer"
                },
                "preemptiblePercentage": {
                    "type": "integer"
                },
                "scalingDownPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                    }
                },
                "scalingUpPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                    }
                },
                "serviceAccount": {
                    "type": "string"
                },
                "shutdownScript": {
                    "type": "string"
                },
                "startupScript": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "clusterZoneName",
                "desiredCapacity"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Elastigroup resources.\n",
                "properties": {
                    "backendServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupBackendService:ElastigroupBackendService"
                        }
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The name of the GKE cluster you wish to import.\n",
                        "deprecationMessage": "Please define cluster_id under integration_gke"
                    },
                    "clusterZoneName": {
                        "type": "string",
                        "description": "The zone where the cluster is hosted.\n"
                    },
                    "desiredCapacity": {
                        "type": "integer"
                    },
                    "disks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupDisk:ElastigroupDisk"
                        }
                    },
                    "drainingTimeout": {
                        "type": "integer"
                    },
                    "fallbackToOndemand": {
                        "type": "boolean"
                    },
                    "gpu": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupGpu:ElastigroupGpu"
                        }
                    },
                    "instanceTypesCustoms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupInstanceTypesCustom:ElastigroupInstanceTypesCustom"
                        }
                    },
                    "instanceTypesOndemand": {
                        "type": "string"
                    },
                    "instanceTypesPreemptibles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "integrationDockerSwarm": {
                        "$ref": "#/types/spotinst:gke/ElastigroupIntegrationDockerSwarm:ElastigroupIntegrationDockerSwarm"
                    },
                    "integrationGke": {
                        "$ref": "#/types/spotinst:gke/ElastigroupIntegrationGke:ElastigroupIntegrationGke"
                    },
                    "ipForwarding": {
                        "type": "boolean"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupLabel:ElastigroupLabel"
                        }
                    },
                    "maxSize": {
                        "type": "integer"
                    },
                    "metadatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupMetadata:ElastigroupMetadata"
                        }
                    },
                    "minSize": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkInterfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupNetworkInterface:ElastigroupNetworkInterface"
                        }
                    },
                    "nodeImage": {
                        "type": "string",
                        "description": "The image that will be used for the node VMs. Possible values: COS, UBUNTU.\n"
                    },
                    "ondemandCount": {
                        "type": "integer"
                    },
                    "preemptiblePercentage": {
                        "type": "integer"
                    },
                    "scalingDownPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupScalingDownPolicy:ElastigroupScalingDownPolicy"
                        }
                    },
                    "scalingUpPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/ElastigroupScalingUpPolicy:ElastigroupScalingUpPolicy"
                        }
                    },
                    "serviceAccount": {
                        "type": "string"
                    },
                    "shutdownScript": {
                        "type": "string"
                    },
                    "startupScript": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "spotinst:gke/oceanImport:OceanImport": {
            "description": "Provides a Spotinst Ocean GKE import resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.gke.OceanImport(\"example\", {\n    backendServices: [{\n        locationType: \"regional\",\n        namedPorts: [{\n            name: \"http\",\n            ports: [\n                \"80\",\n                \"8080\",\n            ],\n        }],\n        scheme: \"INTERNAL\",\n        serviceName: \"example-backend-service\",\n    }],\n    clusterName: \"example-cluster-name\",\n    desiredCapacity: 0,\n    location: \"us-central1-a\",\n    maxSize: 2,\n    minSize: 0,\n    whitelists: [\n        \"n1-standard-1\",\n        \"n1-standard-2\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.gke.OceanImport(\"example\",\n    backend_services=[{\n        \"locationType\": \"regional\",\n        \"namedPorts\": [{\n            \"name\": \"http\",\n            \"ports\": [\n                80,\n                8080,\n            ],\n        }],\n        \"scheme\": \"INTERNAL\",\n        \"serviceName\": \"example-backend-service\",\n    }],\n    cluster_name=\"example-cluster-name\",\n    desired_capacity=0,\n    location=\"us-central1-a\",\n    max_size=2,\n    min_size=0,\n    whitelists=[\n        \"n1-standard-1\",\n        \"n1-standard-2\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new SpotInst.Gke.OceanImport(\"example\", new SpotInst.Gke.OceanImportArgs\n        {\n            BackendServices = \n            {\n                new SpotInst.Gke.Inputs.OceanImportBackendServiceArgs\n                {\n                    LocationType = \"regional\",\n                    NamedPorts = \n                    {\n                        new SpotInst.Gke.Inputs.OceanImportBackendServiceNamedPortArgs\n                        {\n                            Name = \"http\",\n                            Ports = \n                            {\n                                \"80\",\n                                \"8080\",\n                            },\n                        },\n                    },\n                    Scheme = \"INTERNAL\",\n                    ServiceName = \"example-backend-service\",\n                },\n            },\n            ClusterName = \"example-cluster-name\",\n            DesiredCapacity = 0,\n            Location = \"us-central1-a\",\n            MaxSize = 2,\n            MinSize = 0,\n            Whitelists = \n            {\n                \"n1-standard-1\",\n                \"n1-standard-2\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/gke\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := gke.NewOceanImport(ctx, \"example\", \u0026gke.OceanImportArgs{\n\t\t\tBackendServices: gke.OceanImportBackendServiceArray{\n\t\t\t\t\u0026gke.OceanImportBackendServiceArgs{\n\t\t\t\t\tLocationType: pulumi.String(\"regional\"),\n\t\t\t\t\tNamedPorts: gke.OceanImportBackendServiceNamedPortArray{\n\t\t\t\t\t\t\u0026gke.OceanImportBackendServiceNamedPortArgs{\n\t\t\t\t\t\t\tName: pulumi.String(\"http\"),\n\t\t\t\t\t\t\tPorts: pulumi.StringArray{\n\t\t\t\t\t\t\t\tpulumi.String(\"80\"),\n\t\t\t\t\t\t\t\tpulumi.String(\"8080\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tScheme:      pulumi.String(\"INTERNAL\"),\n\t\t\t\t\tServiceName: pulumi.String(\"example-backend-service\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tClusterName:     pulumi.String(\"example-cluster-name\"),\n\t\t\tDesiredCapacity: pulumi.Int(0),\n\t\t\tLocation:        pulumi.String(\"us-central1-a\"),\n\t\t\tMaxSize:         pulumi.Int(2),\n\t\t\tMinSize:         pulumi.Int(0),\n\t\t\tWhitelists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"n1-standard-1\"),\n\t\t\t\tpulumi.String(\"n1-standard-2\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\n\nexport const controllerClusterId = spotinst_ocean_gke_import_ocean_gke_example.clusterControllerId;\n```\n```python\nimport pulumi\n\npulumi.export(\"controllerClusterId\", spotinst_ocean_gke_import[\"ocean-gke-example\"][\"cluster_controller_id\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.ControllerClusterId = spotinst_ocean_gke_import.Ocean_gke_example.Cluster_controller_id;\n    }\n\n    [Output(\"controllerClusterId\")]\n    public Output\u003cstring\u003e ControllerClusterId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"controllerClusterId\", spotinst_ocean_gke_import.Ocean-gke-example.Cluster_controller_id)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## scheduled task\n\n* `scheduled_task` - (Optional) Set scheduling object.\n    * `shutdown_hours` - (Optional) Set shutdown hours for cluster object.\n        * `is_enabled` - (Optional)  Flag to enable / disable the shutdown hours.\n                                     Example: True\n        * `time_windows` - (Required) Set time windows for shutdown hours. specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59. Time windows should not overlap. required on cluster.scheduling.isEnabled = True. API Times are in UTC\n                                      Example: Fri:15:30-Wed:14:30\n    * `tasks` - (Optional) The scheduling tasks for the cluster.\n        * `is_enabled` - (Required)  Describes whether the task is enabled. When true the task should run when false it should not run. Required for cluster.scheduling.tasks object.\n        * `cron_expression` - (Required) A valid cron expression. For example : \" * * * * * \".The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of ‘frequency’ or ‘cronExpression’ should be used at a time. Required for cluster.scheduling.tasks object\n                                         Example: 0 1 * * *\n        * `task_type` - (Required) Valid values: \"clusterRoll\". Required for cluster.scheduling.tasks object.\n        * `batch_size_percentage` - (Optional)  Value in % to set size of batch in roll. Valid values are 0-100\n                                                Example: 20.\n                          \n             \n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n\u003ca id=\"autoscaler\"\u003e\u003c/a\u003e\n## Autoscaler\n\n* `autoscaler` - (Optional) The Ocean Kubernetes Autoscaler object.\n* `is_enabled` - (Optional, Default: `true`) Enable the Ocean Kubernetes Autoscaler.\n* `is_auto_config` - (Optional, Default: `true`) Automatically configure and optimize headroom resources.\n* `auto_headroom_percentage` - Optionally set the auto headroom percentage, set a number between 0-200 to control the headroom % from the cluster. Relevant when isAutoConfig=true.\n* `cooldown` - (Optional, Default: `null`) Cooldown period between scaling actions.\n* `headroom` - (Optional) Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n* `cpu_per_unit` - (Optional) Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n* `memory_per_unit` - (Optional) Optionally configure the amount of memory (MiB) to allocate the headroom.\n* `gpu_per_unit` - (Optional) How much GPU allocate for headroom unit.\n* `num_of_units` - (Optional) The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n* `down` - (Optional) Auto Scaling scale down operations.\n* `evaluation_periods` - (Optional, Default: `null`) The number of evaluation periods that should accumulate before a scale down action takes place.\n* `max_scale_down_percentage` - (Optional) Would represent the maximum % to scale-down. Number between 1-100.\n* `resource_limits` - (Optional) Optionally set upper and lower bounds on the resource usage of the cluster.\n* `max_vcpu` - (Optional) The maximum cpu in vCpu units that can be allocated to the cluster.\n* `max_memory_gib` - (Optional) The maximum memory in GiB units that can be allocated to the cluster.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n",
            "properties": {
                "autoscaler": {
                    "$ref": "#/types/spotinst:gke/OceanImportAutoscaler:OceanImportAutoscaler"
                },
                "backendServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanImportBackendService:OceanImportBackendService"
                    },
                    "description": "Describes the backend service configurations.\n"
                },
                "clusterControllerId": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string",
                    "description": "The GKE cluster name.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The number of instances to launch and maintain in the cluster.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The zone the master cluster is located in.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The upper limit of instances the cluster can scale up to.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The lower limit of instances the cluster can scale down to.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanImportScheduledTask:OceanImportScheduledTask"
                    }
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "autoscaler",
                "clusterControllerId",
                "clusterName",
                "desiredCapacity",
                "location",
                "maxSize",
                "minSize"
            ],
            "inputProperties": {
                "autoscaler": {
                    "$ref": "#/types/spotinst:gke/OceanImportAutoscaler:OceanImportAutoscaler"
                },
                "backendServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanImportBackendService:OceanImportBackendService"
                    },
                    "description": "Describes the backend service configurations.\n"
                },
                "clusterName": {
                    "type": "string",
                    "description": "The GKE cluster name.\n"
                },
                "desiredCapacity": {
                    "type": "integer",
                    "description": "The number of instances to launch and maintain in the cluster.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The zone the master cluster is located in.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "The upper limit of instances the cluster can scale up to.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "The lower limit of instances the cluster can scale down to.\n"
                },
                "scheduledTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanImportScheduledTask:OceanImportScheduledTask"
                    }
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "clusterName",
                "location"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanImport resources.\n",
                "properties": {
                    "autoscaler": {
                        "$ref": "#/types/spotinst:gke/OceanImportAutoscaler:OceanImportAutoscaler"
                    },
                    "backendServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanImportBackendService:OceanImportBackendService"
                        },
                        "description": "Describes the backend service configurations.\n"
                    },
                    "clusterControllerId": {
                        "type": "string"
                    },
                    "clusterName": {
                        "type": "string",
                        "description": "The GKE cluster name.\n"
                    },
                    "desiredCapacity": {
                        "type": "integer",
                        "description": "The number of instances to launch and maintain in the cluster.\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The zone the master cluster is located in.\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "The upper limit of instances the cluster can scale up to.\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "The lower limit of instances the cluster can scale down to.\n"
                    },
                    "scheduledTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanImportScheduledTask:OceanImportScheduledTask"
                        }
                    },
                    "whitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "spotinst:gke/oceanLaunchSpec:OceanLaunchSpec": {
            "description": "Provides a custom Spotinst Ocean GKE Launch Spec resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.gke.OceanLaunchSpec(\"example\", {\n    autoscaleHeadrooms: [{\n        cpuPerUnit: 1000,\n        gpuPerUnit: 0,\n        memoryPerUnit: 2048,\n        numOfUnits: 5,\n    }],\n    labels: [{\n        key: \"labelKey\",\n        value: \"labelVal\",\n    }],\n    metadatas: [{\n        key: \"gci-update-strategy\",\n        value: \"update_disabled\",\n    }],\n    oceanId: \"o-123456\",\n    sourceImage: \"image\",\n    taints: [{\n        effect: \"taintEffect\",\n        key: \"taintKey\",\n        value: \"taintVal\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.gke.OceanLaunchSpec(\"example\",\n    autoscale_headrooms=[{\n        \"cpuPerUnit\": 1000,\n        \"gpuPerUnit\": 0,\n        \"memoryPerUnit\": 2048,\n        \"numOfUnits\": 5,\n    }],\n    labels=[{\n        \"key\": \"labelKey\",\n        \"value\": \"labelVal\",\n    }],\n    metadatas=[{\n        \"key\": \"gci-update-strategy\",\n        \"value\": \"update_disabled\",\n    }],\n    ocean_id=\"o-123456\",\n    source_image=\"image\",\n    taints=[{\n        \"effect\": \"taintEffect\",\n        \"key\": \"taintKey\",\n        \"value\": \"taintVal\",\n    }])\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new SpotInst.Gke.OceanLaunchSpec(\"example\", new SpotInst.Gke.OceanLaunchSpecArgs\n        {\n            AutoscaleHeadrooms = \n            {\n                new SpotInst.Gke.Inputs.OceanLaunchSpecAutoscaleHeadroomArgs\n                {\n                    CpuPerUnit = 1000,\n                    GpuPerUnit = 0,\n                    MemoryPerUnit = 2048,\n                    NumOfUnits = 5,\n                },\n            },\n            Labels = \n            {\n                new SpotInst.Gke.Inputs.OceanLaunchSpecLabelArgs\n                {\n                    Key = \"labelKey\",\n                    Value = \"labelVal\",\n                },\n            },\n            Metadatas = \n            {\n                new SpotInst.Gke.Inputs.OceanLaunchSpecMetadataArgs\n                {\n                    Key = \"gci-update-strategy\",\n                    Value = \"update_disabled\",\n                },\n            },\n            OceanId = \"o-123456\",\n            SourceImage = \"image\",\n            Taints = \n            {\n                new SpotInst.Gke.Inputs.OceanLaunchSpecTaintArgs\n                {\n                    Effect = \"taintEffect\",\n                    Key = \"taintKey\",\n                    Value = \"taintVal\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/gke\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := gke.NewOceanLaunchSpec(ctx, \"example\", \u0026gke.OceanLaunchSpecArgs{\n\t\t\tAutoscaleHeadrooms: gke.OceanLaunchSpecAutoscaleHeadroomArray{\n\t\t\t\t\u0026gke.OceanLaunchSpecAutoscaleHeadroomArgs{\n\t\t\t\t\tCpuPerUnit:    pulumi.Int(1000),\n\t\t\t\t\tGpuPerUnit:    pulumi.Int(0),\n\t\t\t\t\tMemoryPerUnit: pulumi.Int(2048),\n\t\t\t\t\tNumOfUnits:    pulumi.Int(5),\n\t\t\t\t},\n\t\t\t},\n\t\t\tLabels: gke.OceanLaunchSpecLabelArray{\n\t\t\t\t\u0026gke.OceanLaunchSpecLabelArgs{\n\t\t\t\t\tKey:   pulumi.String(\"labelKey\"),\n\t\t\t\t\tValue: pulumi.String(\"labelVal\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tMetadatas: gke.OceanLaunchSpecMetadataArray{\n\t\t\t\t\u0026gke.OceanLaunchSpecMetadataArgs{\n\t\t\t\t\tKey:   pulumi.String(\"gci-update-strategy\"),\n\t\t\t\t\tValue: pulumi.String(\"update_disabled\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOceanId:     pulumi.String(\"o-123456\"),\n\t\t\tSourceImage: pulumi.String(\"image\"),\n\t\t\tTaints: gke.OceanLaunchSpecTaintArray{\n\t\t\t\t\u0026gke.OceanLaunchSpecTaintArgs{\n\t\t\t\t\tEffect: pulumi.String(\"taintEffect\"),\n\t\t\t\t\tKey:    pulumi.String(\"taintKey\"),\n\t\t\t\t\tValue:  pulumi.String(\"taintVal\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "autoscaleHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                    },
                    "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecLabel:OceanLaunchSpecLabel"
                    },
                    "description": "Cluster's labels.\n"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecMetadata:OceanLaunchSpecMetadata"
                    },
                    "description": "Cluster's metadata.\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The Ocean cluster ID required for launchSpec create.\n"
                },
                "sourceImage": {
                    "type": "string",
                    "description": "Image URL.\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecTaint:OceanLaunchSpecTaint"
                    },
                    "description": "Cluster's taints.\n"
                }
            },
            "required": [
                "metadatas",
                "oceanId",
                "sourceImage"
            ],
            "inputProperties": {
                "autoscaleHeadrooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                    },
                    "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecLabel:OceanLaunchSpecLabel"
                    },
                    "description": "Cluster's labels.\n"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecMetadata:OceanLaunchSpecMetadata"
                    },
                    "description": "Cluster's metadata.\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The Ocean cluster ID required for launchSpec create.\n"
                },
                "sourceImage": {
                    "type": "string",
                    "description": "Image URL.\n"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:gke/OceanLaunchSpecTaint:OceanLaunchSpecTaint"
                    },
                    "description": "Cluster's taints.\n"
                }
            },
            "requiredInputs": [
                "metadatas",
                "oceanId",
                "sourceImage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanLaunchSpec resources.\n",
                "properties": {
                    "autoscaleHeadrooms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanLaunchSpecAutoscaleHeadroom:OceanLaunchSpecAutoscaleHeadroom"
                        },
                        "description": "Set custom headroom per launch spec. provide list of headrooms object.\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanLaunchSpecLabel:OceanLaunchSpecLabel"
                        },
                        "description": "Cluster's labels.\n"
                    },
                    "metadatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanLaunchSpecMetadata:OceanLaunchSpecMetadata"
                        },
                        "description": "Cluster's metadata.\n"
                    },
                    "oceanId": {
                        "type": "string",
                        "description": "The Ocean cluster ID required for launchSpec create.\n"
                    },
                    "sourceImage": {
                        "type": "string",
                        "description": "Image URL.\n"
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:gke/OceanLaunchSpecTaint:OceanLaunchSpecTaint"
                        },
                        "description": "Cluster's taints.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:gke/oceanLaunchSpecImport:OceanLaunchSpecImport": {
            "description": "Provides a custom Spotinst Ocean GKE Launch Spec Import resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst example = new spotinst.gke.OceanLaunchSpecImport(\"example\", {\n    nodePoolName: \"default-pool\",\n    oceanId: \"o-123456\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nexample = spotinst.gke.OceanLaunchSpecImport(\"example\",\n    node_pool_name=\"default-pool\",\n    ocean_id=\"o-123456\")\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new SpotInst.Gke.OceanLaunchSpecImport(\"example\", new SpotInst.Gke.OceanLaunchSpecImportArgs\n        {\n            NodePoolName = \"default-pool\",\n            OceanId = \"o-123456\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/gke\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := gke.NewOceanLaunchSpecImport(ctx, \"example\", \u0026gke.OceanLaunchSpecImportArgs{\n\t\t\tNodePoolName: pulumi.String(\"default-pool\"),\n\t\t\tOceanId:      pulumi.String(\"o-123456\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "nodePoolName": {
                    "type": "string",
                    "description": "The node pool you wish to use in your launchSpec.\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The Ocean cluster ID required for launchSpec create.\n"
                }
            },
            "required": [
                "nodePoolName",
                "oceanId"
            ],
            "inputProperties": {
                "nodePoolName": {
                    "type": "string",
                    "description": "The node pool you wish to use in your launchSpec.\n"
                },
                "oceanId": {
                    "type": "string",
                    "description": "The Ocean cluster ID required for launchSpec create.\n"
                }
            },
            "requiredInputs": [
                "nodePoolName",
                "oceanId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OceanLaunchSpecImport resources.\n",
                "properties": {
                    "nodePoolName": {
                        "type": "string",
                        "description": "The node pool you wish to use in your launchSpec.\n"
                    },
                    "oceanId": {
                        "type": "string",
                        "description": "The Ocean cluster ID required for launchSpec create.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:index/healthCheck:HealthCheck": {
            "description": "Provides a Spotinst Health Check resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst httpCheck = new spotinst.HealthCheck(\"http_check\", {\n    check: {\n        endpoint: \"http://endpoint.com\",\n        healthy: 1,\n        interval: 10,\n        port: 1337,\n        protocol: \"http\",\n        timeout: 10,\n        unhealthy: 1,\n    },\n    proxyAddress: \"http://proxy.com\",\n    proxyPort: 80,\n    resourceId: \"sig-123\",\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nhttp_check = spotinst.HealthCheck(\"httpCheck\",\n    check={\n        \"endpoint\": \"http://endpoint.com\",\n        \"healthy\": 1,\n        \"interval\": 10,\n        \"port\": 1337,\n        \"protocol\": \"http\",\n        \"timeout\": 10,\n        \"unhealthy\": 1,\n    },\n    proxy_address=\"http://proxy.com\",\n    proxy_port=80,\n    resource_id=\"sig-123\")\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var httpCheck = new SpotInst.HealthCheck(\"httpCheck\", new SpotInst.HealthCheckArgs\n        {\n            Check = new SpotInst.Inputs.HealthCheckCheckArgs\n            {\n                Endpoint = \"http://endpoint.com\",\n                Healthy = 1,\n                Interval = 10,\n                Port = 1337,\n                Protocol = \"http\",\n                Timeout = 10,\n                Unhealthy = 1,\n            },\n            ProxyAddress = \"http://proxy.com\",\n            ProxyPort = 80,\n            ResourceId = \"sig-123\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := spotinst.NewHealthCheck(ctx, \"httpCheck\", \u0026spotinst.HealthCheckArgs{\n\t\t\tCheck: \u0026spotinst.HealthCheckCheckArgs{\n\t\t\t\tEndpoint:  pulumi.String(\"http://endpoint.com\"),\n\t\t\t\tHealthy:   pulumi.Int(1),\n\t\t\t\tInterval:  pulumi.Int(10),\n\t\t\t\tPort:      pulumi.Int(1337),\n\t\t\t\tProtocol:  pulumi.String(\"http\"),\n\t\t\t\tTimeout:   pulumi.Int(10),\n\t\t\t\tUnhealthy: pulumi.Int(1),\n\t\t\t},\n\t\t\tProxyAddress: pulumi.String(\"http://proxy.com\"),\n\t\t\tProxyPort:    pulumi.Int(80),\n\t\t\tResourceId:   pulumi.String(\"sig-123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "check": {
                    "$ref": "#/types/spotinst:/HealthCheckCheck:HealthCheckCheck",
                    "description": "Describes the check to execute.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the health check.\n"
                },
                "proxyAddress": {
                    "type": "string"
                },
                "proxyPort": {
                    "type": "integer"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of the resource to check.\n"
                }
            },
            "required": [
                "name",
                "proxyAddress",
                "resourceId"
            ],
            "inputProperties": {
                "check": {
                    "$ref": "#/types/spotinst:/HealthCheckCheck:HealthCheckCheck",
                    "description": "Describes the check to execute.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the health check.\n"
                },
                "proxyAddress": {
                    "type": "string"
                },
                "proxyPort": {
                    "type": "integer"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of the resource to check.\n"
                }
            },
            "requiredInputs": [
                "proxyAddress",
                "resourceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HealthCheck resources.\n",
                "properties": {
                    "check": {
                        "$ref": "#/types/spotinst:/HealthCheckCheck:HealthCheckCheck",
                        "description": "Describes the check to execute.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the health check.\n"
                    },
                    "proxyAddress": {
                        "type": "string"
                    },
                    "proxyPort": {
                        "type": "integer"
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "The ID of the resource to check.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:index/subscription:Subscription": {
            "description": "Provides a Spotinst subscription resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\n// Create a Subscription\nconst default_subscription = new spotinst.Subscription(\"default-subscription\", {\n    endpoint: \"http://endpoint.com\",\n    eventType: \"AWS_EC2_INSTANCE_LAUNCH\",\n    format: {\n        event: \"%event%\",\n        instance_id: \"%instance-id%\",\n        resource_id: \"%resource-id%\",\n        resource_name: \"%resource-name%\",\n        tags: \"foo,baz,baz\",\n    },\n    protocol: \"http\",\n    resourceId: spotinst_elastigroup_aws_my_eg.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\n# Create a Subscription\ndefault_subscription = spotinst.Subscription(\"default-subscription\",\n    endpoint=\"http://endpoint.com\",\n    event_type=\"AWS_EC2_INSTANCE_LAUNCH\",\n    format={\n        \"event\": \"%event%\",\n        \"instance_id\": \"%instance-id%\",\n        \"resource_id\": \"%resource-id%\",\n        \"resource_name\": \"%resource-name%\",\n        \"tags\": \"foo,baz,baz\",\n    },\n    protocol=\"http\",\n    resource_id=spotinst_elastigroup_aws[\"my-eg\"][\"id\"])\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a Subscription\n        var default_subscription = new SpotInst.Subscription(\"default-subscription\", new SpotInst.SubscriptionArgs\n        {\n            Endpoint = \"http://endpoint.com\",\n            EventType = \"AWS_EC2_INSTANCE_LAUNCH\",\n            Format = \n            {\n                { \"event\", \"%event%\" },\n                { \"instance_id\", \"%instance-id%\" },\n                { \"resource_id\", \"%resource-id%\" },\n                { \"resource_name\", \"%resource-name%\" },\n                { \"tags\", \"foo,baz,baz\" },\n            },\n            Protocol = \"http\",\n            ResourceId = spotinst_elastigroup_aws.My_eg.Id,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := spotinst.NewSubscription(ctx, \"default_subscription\", \u0026spotinst.SubscriptionArgs{\n\t\t\tEndpoint:  pulumi.String(\"http://endpoint.com\"),\n\t\t\tEventType: pulumi.String(\"AWS_EC2_INSTANCE_LAUNCH\"),\n\t\t\tFormat: pulumi.StringMap{\n\t\t\t\t\"event\":         pulumi.String(fmt.Sprintf(\"%v%v%v\", \"%\", \"event\", \"%\")),\n\t\t\t\t\"instance_id\":   pulumi.String(fmt.Sprintf(\"%v%v%v\", \"%\", \"instance-id\", \"%\")),\n\t\t\t\t\"resource_id\":   pulumi.String(fmt.Sprintf(\"%v%v%v\", \"%\", \"resource-id\", \"%\")),\n\t\t\t\t\"resource_name\": pulumi.String(fmt.Sprintf(\"%v%v%v\", \"%\", \"resource-name\", \"%\")),\n\t\t\t\t\"tags\":          pulumi.String(\"foo,baz,baz\"),\n\t\t\t},\n\t\t\tProtocol:   pulumi.String(\"http\"),\n\t\t\tResourceId: pulumi.String(spotinst_elastigroup_aws.My - eg.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "The endpoint the notification will be sent to. url in case of `\"http\"`/`\"https\"`/`\"web\"`, email address in case of `\"email\"`/`\"email-json\"` and sns-topic-arn in case of `\"aws-sns\"`.\n"
                },
                "eventType": {
                    "type": "string",
                    "description": "The event to send the notification when triggered. Valid values: `\"AWS_EC2_INSTANCE_TERMINATE\"`, `\"AWS_EC2_INSTANCE_TERMINATED\"`, `\"AWS_EC2_INSTANCE_LAUNCH\"`, `\"AWS_EC2_INSTANCE_READY_SIGNAL_TIMEOUT\"`, `\"AWS_EC2_CANT_SPIN_OD\"`, `\"AWS_EC2_INSTANCE_UNHEALTHY_IN_ELB\"`, `\"GROUP_ROLL_FAILED\"`, `\"GROUP_ROLL_FINISHED\"`,\n`\"CANT_SCALE_UP_GROUP_MAX_CAPACITY\"`,\n`\"GROUP_UPDATED\"`,\n`\"AWS_EMR_PROVISION_TIMEOUT\"`,\n`\"GROUP_BEANSTALK_INIT_READY\"`,\n`\"AZURE_VM_TERMINATED\"`,\n`\"AZURE_VM_TERMINATE\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_PAUSING\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_RESUMING\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_RECYCLING\"`,`\"AWS_EC2_MANAGED_INSTANCE_DELETING\"`.\nOcean Events:`\"CLUSTER_ROLL_FINISHED\"`,`\"GROUP_ROLL_FAILED\"`.\n"
                },
                "format": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "The format of the notification content (JSON Format - Key+Value). Valid Values : `\"instance-id\"`, `\"event\"`, `\"resource-id\"`, `\"resource-name\"`, `\"subnet-id\"`, `\"availability-zone\"`, `\"reason\"`, `\"private-ip\"`, `\"launchspec-id\"`\nExample: {\"event\": `\"event\"`, `\"resourceId\"`: `\"resource-id\"`, `\"resourceName\"`: `\"resource-name\"`\", `\"myCustomKey\"`: `\"My content is set here\"` }\nDefault: {`\"event\"`: `\"\u003cevent\u003e\"`, `\"instanceId\"`: `\"\u003cinstance-id\u003e\"`, `\"resourceId\"`: `\"\u003cresource-id\u003e\"`, `\"resourceName\"`: `\"\u003cresource-name\u003e\"` }.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol to send the notification. Valid values: `\"email\"`, `\"email-json\"`, `\"aws-sns\"`, `\"web\"`. \nThe following values are deprecated: `\"http\"` , `\"https\"`\nYou can use the generic `\"web\"` protocol instead.\n`\"aws-sns\"` is only supported with AWS provider\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "Spotinst Resource id (Elastigroup or Ocean ID).\n"
                }
            },
            "required": [
                "endpoint",
                "eventType",
                "protocol",
                "resourceId"
            ],
            "inputProperties": {
                "endpoint": {
                    "type": "string",
                    "description": "The endpoint the notification will be sent to. url in case of `\"http\"`/`\"https\"`/`\"web\"`, email address in case of `\"email\"`/`\"email-json\"` and sns-topic-arn in case of `\"aws-sns\"`.\n"
                },
                "eventType": {
                    "type": "string",
                    "description": "The event to send the notification when triggered. Valid values: `\"AWS_EC2_INSTANCE_TERMINATE\"`, `\"AWS_EC2_INSTANCE_TERMINATED\"`, `\"AWS_EC2_INSTANCE_LAUNCH\"`, `\"AWS_EC2_INSTANCE_READY_SIGNAL_TIMEOUT\"`, `\"AWS_EC2_CANT_SPIN_OD\"`, `\"AWS_EC2_INSTANCE_UNHEALTHY_IN_ELB\"`, `\"GROUP_ROLL_FAILED\"`, `\"GROUP_ROLL_FINISHED\"`,\n`\"CANT_SCALE_UP_GROUP_MAX_CAPACITY\"`,\n`\"GROUP_UPDATED\"`,\n`\"AWS_EMR_PROVISION_TIMEOUT\"`,\n`\"GROUP_BEANSTALK_INIT_READY\"`,\n`\"AZURE_VM_TERMINATED\"`,\n`\"AZURE_VM_TERMINATE\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_PAUSING\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_RESUMING\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_RECYCLING\"`,`\"AWS_EC2_MANAGED_INSTANCE_DELETING\"`.\nOcean Events:`\"CLUSTER_ROLL_FINISHED\"`,`\"GROUP_ROLL_FAILED\"`.\n"
                },
                "format": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "The format of the notification content (JSON Format - Key+Value). Valid Values : `\"instance-id\"`, `\"event\"`, `\"resource-id\"`, `\"resource-name\"`, `\"subnet-id\"`, `\"availability-zone\"`, `\"reason\"`, `\"private-ip\"`, `\"launchspec-id\"`\nExample: {\"event\": `\"event\"`, `\"resourceId\"`: `\"resource-id\"`, `\"resourceName\"`: `\"resource-name\"`\", `\"myCustomKey\"`: `\"My content is set here\"` }\nDefault: {`\"event\"`: `\"\u003cevent\u003e\"`, `\"instanceId\"`: `\"\u003cinstance-id\u003e\"`, `\"resourceId\"`: `\"\u003cresource-id\u003e\"`, `\"resourceName\"`: `\"\u003cresource-name\u003e\"` }.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol to send the notification. Valid values: `\"email\"`, `\"email-json\"`, `\"aws-sns\"`, `\"web\"`. \nThe following values are deprecated: `\"http\"` , `\"https\"`\nYou can use the generic `\"web\"` protocol instead.\n`\"aws-sns\"` is only supported with AWS provider\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "Spotinst Resource id (Elastigroup or Ocean ID).\n"
                }
            },
            "requiredInputs": [
                "endpoint",
                "eventType",
                "protocol",
                "resourceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Subscription resources.\n",
                "properties": {
                    "endpoint": {
                        "type": "string",
                        "description": "The endpoint the notification will be sent to. url in case of `\"http\"`/`\"https\"`/`\"web\"`, email address in case of `\"email\"`/`\"email-json\"` and sns-topic-arn in case of `\"aws-sns\"`.\n"
                    },
                    "eventType": {
                        "type": "string",
                        "description": "The event to send the notification when triggered. Valid values: `\"AWS_EC2_INSTANCE_TERMINATE\"`, `\"AWS_EC2_INSTANCE_TERMINATED\"`, `\"AWS_EC2_INSTANCE_LAUNCH\"`, `\"AWS_EC2_INSTANCE_READY_SIGNAL_TIMEOUT\"`, `\"AWS_EC2_CANT_SPIN_OD\"`, `\"AWS_EC2_INSTANCE_UNHEALTHY_IN_ELB\"`, `\"GROUP_ROLL_FAILED\"`, `\"GROUP_ROLL_FINISHED\"`,\n`\"CANT_SCALE_UP_GROUP_MAX_CAPACITY\"`,\n`\"GROUP_UPDATED\"`,\n`\"AWS_EMR_PROVISION_TIMEOUT\"`,\n`\"GROUP_BEANSTALK_INIT_READY\"`,\n`\"AZURE_VM_TERMINATED\"`,\n`\"AZURE_VM_TERMINATE\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_PAUSING\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_RESUMING\"`,\n`\"AWS_EC2_MANAGED_INSTANCE_RECYCLING\"`,`\"AWS_EC2_MANAGED_INSTANCE_DELETING\"`.\nOcean Events:`\"CLUSTER_ROLL_FINISHED\"`,`\"GROUP_ROLL_FAILED\"`.\n"
                    },
                    "format": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "The format of the notification content (JSON Format - Key+Value). Valid Values : `\"instance-id\"`, `\"event\"`, `\"resource-id\"`, `\"resource-name\"`, `\"subnet-id\"`, `\"availability-zone\"`, `\"reason\"`, `\"private-ip\"`, `\"launchspec-id\"`\nExample: {\"event\": `\"event\"`, `\"resourceId\"`: `\"resource-id\"`, `\"resourceName\"`: `\"resource-name\"`\", `\"myCustomKey\"`: `\"My content is set here\"` }\nDefault: {`\"event\"`: `\"\u003cevent\u003e\"`, `\"instanceId\"`: `\"\u003cinstance-id\u003e\"`, `\"resourceId\"`: `\"\u003cresource-id\u003e\"`, `\"resourceName\"`: `\"\u003cresource-name\u003e\"` }.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol to send the notification. Valid values: `\"email\"`, `\"email-json\"`, `\"aws-sns\"`, `\"web\"`. \nThe following values are deprecated: `\"http\"` , `\"https\"`\nYou can use the generic `\"web\"` protocol instead.\n`\"aws-sns\"` is only supported with AWS provider\n"
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "Spotinst Resource id (Elastigroup or Ocean ID).\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:multai/balancer:Balancer": {
            "description": "Provides a Spotinst Multai Balancer.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst myBalancer = new spotinst.multai.Balancer(\"my_balancer\", {\n    connectionTimeouts: {\n        draining: 10,\n        idle: 10,\n    },\n    scheme: \"internal\",\n    tags: [{\n        key: \"env\",\n        value: \"prod\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nmy_balancer = spotinst.multai.Balancer(\"myBalancer\",\n    connection_timeouts={\n        \"draining\": 10,\n        \"idle\": 10,\n    },\n    scheme=\"internal\",\n    tags=[{\n        \"key\": \"env\",\n        \"value\": \"prod\",\n    }])\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myBalancer = new SpotInst.Multai.Balancer(\"myBalancer\", new SpotInst.Multai.BalancerArgs\n        {\n            ConnectionTimeouts = new SpotInst.Multai.Inputs.BalancerConnectionTimeoutsArgs\n            {\n                Draining = 10,\n                Idle = 10,\n            },\n            Scheme = \"internal\",\n            Tags = \n            {\n                new SpotInst.Multai.Inputs.BalancerTagArgs\n                {\n                    Key = \"env\",\n                    Value = \"prod\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/multai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := multai.NewBalancer(ctx, \"myBalancer\", \u0026multai.BalancerArgs{\n\t\t\tConnectionTimeouts: \u0026multai.BalancerConnectionTimeoutsArgs{\n\t\t\t\tDraining: pulumi.Int(10),\n\t\t\t\tIdle:     pulumi.Int(10),\n\t\t\t},\n\t\t\tScheme: pulumi.String(\"internal\"),\n\t\t\tTags: multai.BalancerTagArray{\n\t\t\t\t\u0026multai.BalancerTagArgs{\n\t\t\t\t\tKey:   pulumi.String(\"env\"),\n\t\t\t\t\tValue: pulumi.String(\"prod\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "connectionTimeouts": {
                    "$ref": "#/types/spotinst:multai/BalancerConnectionTimeouts:BalancerConnectionTimeouts"
                },
                "dnsCnameAliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The balancer name. May contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.\n"
                },
                "scheme": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:multai/BalancerTag:BalancerTag"
                    },
                    "description": "A list of key:value paired tags.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "connectionTimeouts": {
                    "$ref": "#/types/spotinst:multai/BalancerConnectionTimeouts:BalancerConnectionTimeouts"
                },
                "dnsCnameAliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The balancer name. May contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.\n"
                },
                "scheme": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:multai/BalancerTag:BalancerTag"
                    },
                    "description": "A list of key:value paired tags.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Balancer resources.\n",
                "properties": {
                    "connectionTimeouts": {
                        "$ref": "#/types/spotinst:multai/BalancerConnectionTimeouts:BalancerConnectionTimeouts"
                    },
                    "dnsCnameAliases": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The balancer name. May contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.\n"
                    },
                    "scheme": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:multai/BalancerTag:BalancerTag"
                        },
                        "description": "A list of key:value paired tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:multai/deployment:Deployment": {
            "description": "Provides a Spotinst Multai Deployment.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst myDeployment = new spotinst.multai.Deployment(\"my_deployment\", {});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nmy_deployment = spotinst.multai.Deployment(\"myDeployment\")\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myDeployment = new SpotInst.Multai.Deployment(\"myDeployment\", new SpotInst.Multai.DeploymentArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/multai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := multai.NewDeployment(ctx, \"myDeployment\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The deployment name.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The deployment name.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Deployment resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The deployment name.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:multai/listener:Listener": {
            "description": "Provides a Spotinst Multai Listener.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst myListener = new spotinst.multai.Listener(\"my_listener\", {\n    balancerId: \"b-12345\",\n    name: \"foo\",\n    port: 1337,\n    protocol: \"http\",\n    tags: [{\n        key: \"env\",\n        value: \"prod\",\n    }],\n    tlsConfig: {\n        certificateIds: [\"ce-12345\"],\n        cipherSuites: [\"\"],\n        maxVersion: \"TLS12\",\n        minVersion: \"TLS10\",\n        preferServerCipherSuites: true,\n        sessionTicketsDisabled: false,\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nmy_listener = spotinst.multai.Listener(\"myListener\",\n    balancer_id=\"b-12345\",\n    name=\"foo\",\n    port=1337,\n    protocol=\"http\",\n    tags=[{\n        \"key\": \"env\",\n        \"value\": \"prod\",\n    }],\n    tls_config={\n        \"certificateIds\": [\"ce-12345\"],\n        \"cipherSuites\": [\"\"],\n        \"maxVersion\": \"TLS12\",\n        \"minVersion\": \"TLS10\",\n        \"preferServerCipherSuites\": True,\n        \"sessionTicketsDisabled\": False,\n    })\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "balancerId": {
                    "type": "string",
                    "description": "The ID of the balancer.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the load balancer is listening.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol to allow connections to the load balancer.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:multai/ListenerTag:ListenerTag"
                    },
                    "description": "A list of key:value paired tags.\n"
                },
                "tlsConfig": {
                    "$ref": "#/types/spotinst:multai/ListenerTlsConfig:ListenerTlsConfig",
                    "description": "Describes the TLSConfig configuration.\n"
                }
            },
            "required": [
                "balancerId",
                "port",
                "protocol"
            ],
            "inputProperties": {
                "balancerId": {
                    "type": "string",
                    "description": "The ID of the balancer.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the load balancer is listening.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol to allow connections to the load balancer.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:multai/ListenerTag:ListenerTag"
                    },
                    "description": "A list of key:value paired tags.\n"
                },
                "tlsConfig": {
                    "$ref": "#/types/spotinst:multai/ListenerTlsConfig:ListenerTlsConfig",
                    "description": "Describes the TLSConfig configuration.\n"
                }
            },
            "requiredInputs": [
                "balancerId",
                "port",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Listener resources.\n",
                "properties": {
                    "balancerId": {
                        "type": "string",
                        "description": "The ID of the balancer.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port on which the load balancer is listening.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol to allow connections to the load balancer.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:multai/ListenerTag:ListenerTag"
                        },
                        "description": "A list of key:value paired tags.\n"
                    },
                    "tlsConfig": {
                        "$ref": "#/types/spotinst:multai/ListenerTlsConfig:ListenerTlsConfig",
                        "description": "Describes the TLSConfig configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:multai/routingRule:RoutingRule": {
            "description": "Provides a Spotinst Multai Routing Rule.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst myRoutingRule = new spotinst.multai.RoutingRule(\"my_routing_rule\", {\n    balancerId: \"b-12345\",\n    listenerId: \"l-98765\",\n    route: \"Path(`/bar`)\",\n    strategy: \"LEASTCONN\",\n    tags: [{\n        key: \"env\",\n        value: \"prod\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nmy_routing_rule = spotinst.multai.RoutingRule(\"myRoutingRule\",\n    balancer_id=\"b-12345\",\n    listener_id=\"l-98765\",\n    route=\"Path(`/bar`)\",\n    strategy=\"LEASTCONN\",\n    tags=[{\n        \"key\": \"env\",\n        \"value\": \"prod\",\n    }])\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myRoutingRule = new SpotInst.Multai.RoutingRule(\"myRoutingRule\", new SpotInst.Multai.RoutingRuleArgs\n        {\n            BalancerId = \"b-12345\",\n            ListenerId = \"l-98765\",\n            Route = \"Path(`/bar`)\",\n            Strategy = \"LEASTCONN\",\n            Tags = \n            {\n                new SpotInst.Multai.Inputs.RoutingRuleTagArgs\n                {\n                    Key = \"env\",\n                    Value = \"prod\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/multai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := multai.NewRoutingRule(ctx, \"myRoutingRule\", \u0026multai.RoutingRuleArgs{\n\t\t\tBalancerId: pulumi.String(\"b-12345\"),\n\t\t\tListenerId: pulumi.String(\"l-98765\"),\n\t\t\tRoute:      pulumi.String(\"Path(`/bar`)\"),\n\t\t\tStrategy:   pulumi.String(\"LEASTCONN\"),\n\t\t\tTags: multai.RoutingRuleTagArray{\n\t\t\t\t\u0026multai.RoutingRuleTagArgs{\n\t\t\t\t\tKey:   pulumi.String(\"env\"),\n\t\t\t\t\tValue: pulumi.String(\"prod\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "balancerId": {
                    "type": "string",
                    "description": "The ID of the balancer.\n"
                },
                "listenerId": {
                    "type": "string",
                    "description": "The ID of the listener.\n"
                },
                "middlewareIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "priority": {
                    "type": "integer"
                },
                "route": {
                    "type": "string",
                    "description": "Route defines a simple language for matching HTTP requests and route the traffic accordingly. Route provides series of matchers that follow the syntax: Path matcher: — Path(\"/foo/bar\") // trie-based PathRegexp(“/foo/.*”) // regexp-based Method matcher: — Method(“GET”) // trie-based MethodRegexp(“POST|PUT”) // regexp based Header matcher: — Header(“Content-Type”, “application/json”) // trie-based HeaderRegexp(“Content-Type”, “application/.*”) // regexp based Matchers can be combined using \u0026\u0026 operator: — Method(“POST”) \u0026\u0026 Path(\"/v1\")\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "Balancing strategy. Valid values: `ROUNDROBIN`, `RANDOM`, `LEASTCONN`, `IPHASH`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:multai/RoutingRuleTag:RoutingRuleTag"
                    },
                    "description": "A list of key:value paired tags.\n"
                },
                "targetSetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "balancerId",
                "listenerId",
                "route",
                "targetSetIds"
            ],
            "inputProperties": {
                "balancerId": {
                    "type": "string",
                    "description": "The ID of the balancer.\n"
                },
                "listenerId": {
                    "type": "string",
                    "description": "The ID of the listener.\n"
                },
                "middlewareIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "priority": {
                    "type": "integer"
                },
                "route": {
                    "type": "string",
                    "description": "Route defines a simple language for matching HTTP requests and route the traffic accordingly. Route provides series of matchers that follow the syntax: Path matcher: — Path(\"/foo/bar\") // trie-based PathRegexp(“/foo/.*”) // regexp-based Method matcher: — Method(“GET”) // trie-based MethodRegexp(“POST|PUT”) // regexp based Header matcher: — Header(“Content-Type”, “application/json”) // trie-based HeaderRegexp(“Content-Type”, “application/.*”) // regexp based Matchers can be combined using \u0026\u0026 operator: — Method(“POST”) \u0026\u0026 Path(\"/v1\")\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "Balancing strategy. Valid values: `ROUNDROBIN`, `RANDOM`, `LEASTCONN`, `IPHASH`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:multai/RoutingRuleTag:RoutingRuleTag"
                    },
                    "description": "A list of key:value paired tags.\n"
                },
                "targetSetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "balancerId",
                "listenerId",
                "route",
                "targetSetIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RoutingRule resources.\n",
                "properties": {
                    "balancerId": {
                        "type": "string",
                        "description": "The ID of the balancer.\n"
                    },
                    "listenerId": {
                        "type": "string",
                        "description": "The ID of the listener.\n"
                    },
                    "middlewareIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "route": {
                        "type": "string",
                        "description": "Route defines a simple language for matching HTTP requests and route the traffic accordingly. Route provides series of matchers that follow the syntax: Path matcher: — Path(\"/foo/bar\") // trie-based PathRegexp(“/foo/.*”) // regexp-based Method matcher: — Method(“GET”) // trie-based MethodRegexp(“POST|PUT”) // regexp based Header matcher: — Header(“Content-Type”, “application/json”) // trie-based HeaderRegexp(“Content-Type”, “application/.*”) // regexp based Matchers can be combined using \u0026\u0026 operator: — Method(“POST”) \u0026\u0026 Path(\"/v1\")\n"
                    },
                    "strategy": {
                        "type": "string",
                        "description": "Balancing strategy. Valid values: `ROUNDROBIN`, `RANDOM`, `LEASTCONN`, `IPHASH`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:multai/RoutingRuleTag:RoutingRuleTag"
                        },
                        "description": "A list of key:value paired tags.\n"
                    },
                    "targetSetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "spotinst:multai/target:Target": {
            "description": "Provides a Spotinst Multai Target.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst myTarget = new spotinst.multai.Target(\"my_target\", {\n    balancerId: \"b-12345\",\n    host: \"host\",\n    port: 1338,\n    tags: [{\n        key: \"env\",\n        value: \"prod\",\n    }],\n    targetSetId: \"l-98765\",\n    weight: 1,\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nmy_target = spotinst.multai.Target(\"myTarget\",\n    balancer_id=\"b-12345\",\n    host=\"host\",\n    port=1338,\n    tags=[{\n        \"key\": \"env\",\n        \"value\": \"prod\",\n    }],\n    target_set_id=\"l-98765\",\n    weight=1)\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myTarget = new SpotInst.Multai.Target(\"myTarget\", new SpotInst.Multai.TargetArgs\n        {\n            BalancerId = \"b-12345\",\n            Host = \"host\",\n            Port = 1338,\n            Tags = \n            {\n                new SpotInst.Multai.Inputs.TargetTagArgs\n                {\n                    Key = \"env\",\n                    Value = \"prod\",\n                },\n            },\n            TargetSetId = \"l-98765\",\n            Weight = 1,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/multai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := multai.NewTarget(ctx, \"myTarget\", \u0026multai.TargetArgs{\n\t\t\tBalancerId: pulumi.String(\"b-12345\"),\n\t\t\tHost:       pulumi.String(\"host\"),\n\t\t\tPort:       pulumi.Int(1338),\n\t\t\tTags: multai.TargetTagArray{\n\t\t\t\t\u0026multai.TargetTagArgs{\n\t\t\t\t\tKey:   pulumi.String(\"env\"),\n\t\t\t\t\tValue: pulumi.String(\"prod\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTargetSetId: pulumi.String(\"l-98765\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "balancerId": {
                    "type": "string",
                    "description": "The ID of the balancer.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The address (IP or URL) of the targets to register\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Target . Must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port the target will register to.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:multai/TargetTag:TargetTag"
                    },
                    "description": "A list of key:value paired tags.\n"
                },
                "targetSetId": {
                    "type": "string",
                    "description": "The ID of the target set.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Defines how traffic is distributed between targets.\n"
                }
            },
            "required": [
                "balancerId",
                "host",
                "name",
                "targetSetId",
                "weight"
            ],
            "inputProperties": {
                "balancerId": {
                    "type": "string",
                    "description": "The ID of the balancer.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The address (IP or URL) of the targets to register\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Target . Must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port the target will register to.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:multai/TargetTag:TargetTag"
                    },
                    "description": "A list of key:value paired tags.\n"
                },
                "targetSetId": {
                    "type": "string",
                    "description": "The ID of the target set.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Defines how traffic is distributed between targets.\n"
                }
            },
            "requiredInputs": [
                "balancerId",
                "host",
                "targetSetId",
                "weight"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Target resources.\n",
                "properties": {
                    "balancerId": {
                        "type": "string",
                        "description": "The ID of the balancer.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "The address (IP or URL) of the targets to register\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Target . Must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port the target will register to.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:multai/TargetTag:TargetTag"
                        },
                        "description": "A list of key:value paired tags.\n"
                    },
                    "targetSetId": {
                        "type": "string",
                        "description": "The ID of the target set.\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Defines how traffic is distributed between targets.\n"
                    }
                },
                "type": "object"
            }
        },
        "spotinst:multai/targetSet:TargetSet": {
            "description": "Provides a Spotinst Multai Target Set.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as spotinst from \"@pulumi/spotinst\";\n\nconst myTargetSet = new spotinst.multai.TargetSet(\"my_target_set\", {\n    balancerId: \"b-12345\",\n    deploymentId: \"dp-12345\",\n    healthCheck: {\n        healthyThreshold: 3,\n        interval: 20,\n        path: \"/\",\n        port: 3001,\n        protocol: \"http\",\n        timeout: 5,\n        unhealthyThreshold: 3,\n    },\n    port: 1338,\n    protocol: \"http\",\n    tags: [{\n        key: \"env\",\n        value: \"prod\",\n    }],\n    weight: 2,\n});\n```\n```python\nimport pulumi\nimport pulumi_spotinst as spotinst\n\nmy_target_set = spotinst.multai.TargetSet(\"myTargetSet\",\n    balancer_id=\"b-12345\",\n    deployment_id=\"dp-12345\",\n    health_check={\n        \"healthyThreshold\": 3,\n        \"interval\": 20,\n        \"path\": \"/\",\n        \"port\": 3001,\n        \"protocol\": \"http\",\n        \"timeout\": 5,\n        \"unhealthyThreshold\": 3,\n    },\n    port=1338,\n    protocol=\"http\",\n    tags=[{\n        \"key\": \"env\",\n        \"value\": \"prod\",\n    }],\n    weight=2)\n```\n```csharp\nusing Pulumi;\nusing SpotInst = Pulumi.SpotInst;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myTargetSet = new SpotInst.Multai.TargetSet(\"myTargetSet\", new SpotInst.Multai.TargetSetArgs\n        {\n            BalancerId = \"b-12345\",\n            DeploymentId = \"dp-12345\",\n            HealthCheck = new SpotInst.Multai.Inputs.TargetSetHealthCheckArgs\n            {\n                HealthyThreshold = 3,\n                Interval = 20,\n                Path = \"/\",\n                Port = 3001,\n                Protocol = \"http\",\n                Timeout = 5,\n                UnhealthyThreshold = 3,\n            },\n            Port = 1338,\n            Protocol = \"http\",\n            Tags = \n            {\n                new SpotInst.Multai.Inputs.TargetSetTagArgs\n                {\n                    Key = \"env\",\n                    Value = \"prod\",\n                },\n            },\n            Weight = 2,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst/multai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := multai.NewTargetSet(ctx, \"myTargetSet\", \u0026multai.TargetSetArgs{\n\t\t\tBalancerId:   pulumi.String(\"b-12345\"),\n\t\t\tDeploymentId: pulumi.String(\"dp-12345\"),\n\t\t\tHealthCheck: \u0026multai.TargetSetHealthCheckArgs{\n\t\t\t\tHealthyThreshold:   pulumi.Int(3),\n\t\t\t\tInterval:           pulumi.Int(20),\n\t\t\t\tPath:               pulumi.String(\"/\"),\n\t\t\t\tPort:               pulumi.Int(3001),\n\t\t\t\tProtocol:           pulumi.String(\"http\"),\n\t\t\t\tTimeout:            pulumi.Int(5),\n\t\t\t\tUnhealthyThreshold: pulumi.Int(3),\n\t\t\t},\n\t\t\tPort:     pulumi.Int(1338),\n\t\t\tProtocol: pulumi.String(\"http\"),\n\t\t\tTags: multai.TargetSetTagArray{\n\t\t\t\t\u0026multai.TargetSetTagArgs{\n\t\t\t\t\tKey:   pulumi.String(\"env\"),\n\t\t\t\t\tValue: pulumi.String(\"prod\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tWeight: pulumi.Int(2),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "balancerId": {
                    "type": "string",
                    "description": "The id of the balancer.\n"
                },
                "deploymentId": {
                    "type": "string",
                    "description": "The id of the deployment.\n"
                },
                "healthCheck": {
                    "$ref": "#/types/spotinst:multai/TargetSetHealthCheck:TargetSetHealthCheck"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Target Set. Must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the load balancer is listening.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol to allow connections to the target for the health check.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:multai/TargetSetTag:TargetSetTag"
                    },
                    "description": "A list of key:value paired tags.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Defines how traffic is distributed between the Target Set.\n"
                }
            },
            "required": [
                "balancerId",
                "deploymentId",
                "healthCheck",
                "name",
                "protocol",
                "weight"
            ],
            "inputProperties": {
                "balancerId": {
                    "type": "string",
                    "description": "The id of the balancer.\n"
                },
                "deploymentId": {
                    "type": "string",
                    "description": "The id of the deployment.\n"
                },
                "healthCheck": {
                    "$ref": "#/types/spotinst:multai/TargetSetHealthCheck:TargetSetHealthCheck"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Target Set. Must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the load balancer is listening.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol to allow connections to the target for the health check.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/spotinst:multai/TargetSetTag:TargetSetTag"
                    },
                    "description": "A list of key:value paired tags.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Defines how traffic is distributed between the Target Set.\n"
                }
            },
            "requiredInputs": [
                "balancerId",
                "deploymentId",
                "healthCheck",
                "protocol",
                "weight"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TargetSet resources.\n",
                "properties": {
                    "balancerId": {
                        "type": "string",
                        "description": "The id of the balancer.\n"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "The id of the deployment.\n"
                    },
                    "healthCheck": {
                        "$ref": "#/types/spotinst:multai/TargetSetHealthCheck:TargetSetHealthCheck"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Target Set. Must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port on which the load balancer is listening.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol to allow connections to the target for the health check.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/spotinst:multai/TargetSetTag:TargetSetTag"
                        },
                        "description": "A list of key:value paired tags.\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Defines how traffic is distributed between the Target Set.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "language": {
        "csharp": {
            "namespaces": {
                "aws": "Aws",
                "azure": "Azure",
                "ecs": "Ecs",
                "gcp": "Gcp",
                "gke": "Gke",
                "index": "Index",
                "multai": "Multai",
                "spotinst": "SpotInst"
            },
            "packageReferences": {
                "Pulumi": "2.*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "nodejs": {
            "dependencies": {
                "@pulumi/pulumi": "^2.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^8.0.25"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing spotinst cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-spotinst)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-spotinst` repo](https://github.com/pulumi/pulumi-spotinst/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-spotinst` repo](https://github.com/terraform-providers/terraform-provider-spotinst/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-spotinst)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-spotinst` repo](https://github.com/pulumi/pulumi-spotinst/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-spotinst` repo](https://github.com/terraform-providers/terraform-provider-spotinst/issues).",
            "requires": {
                "pulumi": "\u003e=2.0.0,\u003c3.0.0"
            }
        }
    }
}
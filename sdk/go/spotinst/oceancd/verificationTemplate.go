// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oceancd

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Spotinst OceanCD Verfification Template resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/oceancd"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := oceancd.NewVerificationTemplate(ctx, "test", &oceancd.VerificationTemplateArgs{
//				Name: pulumi.String("test-verification-template-tes"),
//				Args: oceancd.VerificationTemplateArgArray{
//					&oceancd.VerificationTemplateArgArgs{
//						ArgName: pulumi.String("test-arg"),
//						Value:   pulumi.String("test"),
//						ValueFrom: &oceancd.VerificationTemplateArgValueFromArgs{
//							SecretKeyRef: &oceancd.VerificationTemplateArgValueFromSecretKeyRefArgs{
//								Name: pulumi.String("test_key"),
//								Key:  pulumi.String("key-value-test"),
//							},
//						},
//					},
//				},
//				Metrics: oceancd.VerificationTemplateMetricArray{
//					&oceancd.VerificationTemplateMetricArgs{
//						MetricsName:           pulumi.String("test-metrics-names"),
//						DryRun:                pulumi.Bool(false),
//						Interval:              pulumi.String("10m"),
//						InitialDelay:          pulumi.String("1m"),
//						Count:                 pulumi.Int(10),
//						SuccessCondition:      pulumi.String("result[0] <= 0.95"),
//						FailureCondition:      pulumi.String("result[0] >= 0.95"),
//						FailureLimit:          pulumi.Int(2),
//						ConsecutiveErrorLimit: pulumi.Int(1),
//						Providers: oceancd.VerificationTemplateMetricProviderArray{
//							&oceancd.VerificationTemplateMetricProviderArgs{
//								Prometheus: &oceancd.VerificationTemplateMetricProviderPrometheusArgs{
//									PrometheusQuery: pulumi.String("http_requests_new"),
//								},
//								Datadog: &oceancd.VerificationTemplateMetricProviderDatadogArgs{
//									Duration:     pulumi.String("1m"),
//									DatadogQuery: pulumi.String("avg:kubernetes.cpu.user.total"),
//								},
//								NewRelic: &oceancd.VerificationTemplateMetricProviderNewRelicArgs{
//									Profile:       pulumi.String("test"),
//									NewRelicQuery: pulumi.String("FROM Metric SELECT count"),
//								},
//								CloudWatch: &oceancd.VerificationTemplateMetricProviderCloudWatchArgs{
//									Duration: pulumi.String("5m"),
//									MetricDataQueries: oceancd.VerificationTemplateMetricProviderCloudWatchMetricDataQueryArray{
//										&oceancd.VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs{
//											Id: pulumi.String("utilization"),
//											MetricStat: &oceancd.VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatArgs{
//												Metric: &oceancd.VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatMetricArgs{
//													MetricName: pulumi.String("Test"),
//													Namespace:  pulumi.String("AWS/EC2"),
//													Dimensions: oceancd.VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatMetricDimensionArray{
//														&oceancd.VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatMetricDimensionArgs{
//															DimensionName:  pulumi.String("instandId"),
//															DimensionValue: pulumi.String("i-123044"),
//														},
//													},
//												},
//												MetricPeriod: pulumi.Int(400),
//												Stat:         pulumi.String("average"),
//												Unit:         pulumi.String("None"),
//											},
//											Expression: pulumi.String("SELECT AVG(CPUUtilization) FROM SCHEMA"),
//											Label:      pulumi.String("TestLabel"),
//											ReturnData: pulumi.Bool(false),
//											Period:     pulumi.Int(300),
//										},
//									},
//								},
//								Web: &oceancd.VerificationTemplateMetricProviderWebArgs{
//									Method: pulumi.String("GET"),
//									Url:    pulumi.String("https://oceancd.com/api/v1/metrics?clusterId= args.clusterId"),
//									WebHeaders: oceancd.VerificationTemplateMetricProviderWebWebHeaderArray{
//										&oceancd.VerificationTemplateMetricProviderWebWebHeaderArgs{
//											WebHeaderKey:   pulumi.String("Autorization"),
//											WebHeaderValue: pulumi.String("Bearer=args.token"),
//										},
//									},
//									Body:           pulumi.String("{\"key\": \"test\"}"),
//									TimeoutSeconds: pulumi.Int(20),
//									JsonPath:       pulumi.String("$.data"),
//									Insecure:       pulumi.Bool(false),
//								},
//								Job: &oceancd.VerificationTemplateMetricProviderJobArgs{
//									Specs: oceancd.VerificationTemplateMetricProviderJobSpecArray{
//										&oceancd.VerificationTemplateMetricProviderJobSpecArgs{
//											BackoffLimit: pulumi.Int(1),
//											JobTemplates: oceancd.VerificationTemplateMetricProviderJobSpecJobTemplateArray{
//												&oceancd.VerificationTemplateMetricProviderJobSpecJobTemplateArgs{
//													TemplateSpecs: oceancd.VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecArray{
//														&oceancd.VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecArgs{
//															Containers: oceancd.VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecContainerArray{
//																&oceancd.VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecContainerArgs{
//																	ContainerName: pulumi.String("hello"),
//																	Commands: pulumi.StringArray{
//																		pulumi.String("sh"),
//																		pulumi.String("-c"),
//																	},
//																	Image: pulumi.String("nginx.2.1"),
//																},
//															},
//															RestartPolicy: pulumi.String("never"),
//														},
//													},
//												},
//											},
//										},
//									},
//								},
//								Jenkins: &oceancd.VerificationTemplateMetricProviderJenkinsArgs{
//									PipelineName:    pulumi.String("testPipelineName"),
//									TlsVerification: pulumi.Bool(true),
//									Timeout:         pulumi.String("2m"),
//									JenkinsInterval: pulumi.String("5s"),
//									JenkinsParameters: &oceancd.VerificationTemplateMetricProviderJenkinsJenkinsParametersArgs{
//										ParameterKey:   pulumi.String("app"),
//										ParameterValue: pulumi.String("my-app"),
//									},
//								},
//							},
//						},
//						Baseline: &oceancd.VerificationTemplateMetricBaselineArgs{
//							BaselineProviders: oceancd.VerificationTemplateMetricBaselineBaselineProviderArray{
//								&oceancd.VerificationTemplateMetricBaselineBaselineProviderArgs{
//									Prometheus: &oceancd.VerificationTemplateMetricBaselineBaselineProviderPrometheusArgs{
//										PrometheusQuery: pulumi.String("http_requests_total.status!"),
//									},
//									Datadog: &oceancd.VerificationTemplateMetricBaselineBaselineProviderDatadogArgs{
//										Duration:     pulumi.String("2m"),
//										DatadogQuery: pulumi.String("avg:kubernetes.cpu.user"),
//									},
//									NewRelic: &oceancd.VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs{
//										Profile:       pulumi.String("test"),
//										NewRelicQuery: pulumi.String("FROM Metric SELECT count*"),
//									},
//								},
//							},
//							MinRange:  pulumi.Int(40),
//							MaxRange:  pulumi.Int(50),
//							Threshold: pulumi.String("range"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type VerificationTemplate struct {
	pulumi.CustomResourceState

	// List of verification arguments. You may specify either `value` OR `valueFrom` but not both.In case `args`:`value` is already defined in the RolloutSpec entity, there is no need to also specify it in the VerificationTemplate entity.
	Args VerificationTemplateArgArrayOutput `pulumi:"args"`
	// List of verification metrics.
	Metrics VerificationTemplateMetricArrayOutput `pulumi:"metrics"`
	// Identifier name for Ocean CD Verification Template. Must be unique.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewVerificationTemplate registers a new resource with the given unique name, arguments, and options.
func NewVerificationTemplate(ctx *pulumi.Context,
	name string, args *VerificationTemplateArgs, opts ...pulumi.ResourceOption) (*VerificationTemplate, error) {
	if args == nil {
		args = &VerificationTemplateArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VerificationTemplate
	err := ctx.RegisterResource("spotinst:oceancd/verificationTemplate:VerificationTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVerificationTemplate gets an existing VerificationTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVerificationTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VerificationTemplateState, opts ...pulumi.ResourceOption) (*VerificationTemplate, error) {
	var resource VerificationTemplate
	err := ctx.ReadResource("spotinst:oceancd/verificationTemplate:VerificationTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VerificationTemplate resources.
type verificationTemplateState struct {
	// List of verification arguments. You may specify either `value` OR `valueFrom` but not both.In case `args`:`value` is already defined in the RolloutSpec entity, there is no need to also specify it in the VerificationTemplate entity.
	Args []VerificationTemplateArg `pulumi:"args"`
	// List of verification metrics.
	Metrics []VerificationTemplateMetric `pulumi:"metrics"`
	// Identifier name for Ocean CD Verification Template. Must be unique.
	Name *string `pulumi:"name"`
}

type VerificationTemplateState struct {
	// List of verification arguments. You may specify either `value` OR `valueFrom` but not both.In case `args`:`value` is already defined in the RolloutSpec entity, there is no need to also specify it in the VerificationTemplate entity.
	Args VerificationTemplateArgArrayInput
	// List of verification metrics.
	Metrics VerificationTemplateMetricArrayInput
	// Identifier name for Ocean CD Verification Template. Must be unique.
	Name pulumi.StringPtrInput
}

func (VerificationTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*verificationTemplateState)(nil)).Elem()
}

type verificationTemplateArgs struct {
	// List of verification arguments. You may specify either `value` OR `valueFrom` but not both.In case `args`:`value` is already defined in the RolloutSpec entity, there is no need to also specify it in the VerificationTemplate entity.
	Args []VerificationTemplateArg `pulumi:"args"`
	// List of verification metrics.
	Metrics []VerificationTemplateMetric `pulumi:"metrics"`
	// Identifier name for Ocean CD Verification Template. Must be unique.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a VerificationTemplate resource.
type VerificationTemplateArgs struct {
	// List of verification arguments. You may specify either `value` OR `valueFrom` but not both.In case `args`:`value` is already defined in the RolloutSpec entity, there is no need to also specify it in the VerificationTemplate entity.
	Args VerificationTemplateArgArrayInput
	// List of verification metrics.
	Metrics VerificationTemplateMetricArrayInput
	// Identifier name for Ocean CD Verification Template. Must be unique.
	Name pulumi.StringPtrInput
}

func (VerificationTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*verificationTemplateArgs)(nil)).Elem()
}

type VerificationTemplateInput interface {
	pulumi.Input

	ToVerificationTemplateOutput() VerificationTemplateOutput
	ToVerificationTemplateOutputWithContext(ctx context.Context) VerificationTemplateOutput
}

func (*VerificationTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**VerificationTemplate)(nil)).Elem()
}

func (i *VerificationTemplate) ToVerificationTemplateOutput() VerificationTemplateOutput {
	return i.ToVerificationTemplateOutputWithContext(context.Background())
}

func (i *VerificationTemplate) ToVerificationTemplateOutputWithContext(ctx context.Context) VerificationTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerificationTemplateOutput)
}

// VerificationTemplateArrayInput is an input type that accepts VerificationTemplateArray and VerificationTemplateArrayOutput values.
// You can construct a concrete instance of `VerificationTemplateArrayInput` via:
//
//	VerificationTemplateArray{ VerificationTemplateArgs{...} }
type VerificationTemplateArrayInput interface {
	pulumi.Input

	ToVerificationTemplateArrayOutput() VerificationTemplateArrayOutput
	ToVerificationTemplateArrayOutputWithContext(context.Context) VerificationTemplateArrayOutput
}

type VerificationTemplateArray []VerificationTemplateInput

func (VerificationTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VerificationTemplate)(nil)).Elem()
}

func (i VerificationTemplateArray) ToVerificationTemplateArrayOutput() VerificationTemplateArrayOutput {
	return i.ToVerificationTemplateArrayOutputWithContext(context.Background())
}

func (i VerificationTemplateArray) ToVerificationTemplateArrayOutputWithContext(ctx context.Context) VerificationTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerificationTemplateArrayOutput)
}

// VerificationTemplateMapInput is an input type that accepts VerificationTemplateMap and VerificationTemplateMapOutput values.
// You can construct a concrete instance of `VerificationTemplateMapInput` via:
//
//	VerificationTemplateMap{ "key": VerificationTemplateArgs{...} }
type VerificationTemplateMapInput interface {
	pulumi.Input

	ToVerificationTemplateMapOutput() VerificationTemplateMapOutput
	ToVerificationTemplateMapOutputWithContext(context.Context) VerificationTemplateMapOutput
}

type VerificationTemplateMap map[string]VerificationTemplateInput

func (VerificationTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VerificationTemplate)(nil)).Elem()
}

func (i VerificationTemplateMap) ToVerificationTemplateMapOutput() VerificationTemplateMapOutput {
	return i.ToVerificationTemplateMapOutputWithContext(context.Background())
}

func (i VerificationTemplateMap) ToVerificationTemplateMapOutputWithContext(ctx context.Context) VerificationTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerificationTemplateMapOutput)
}

type VerificationTemplateOutput struct{ *pulumi.OutputState }

func (VerificationTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VerificationTemplate)(nil)).Elem()
}

func (o VerificationTemplateOutput) ToVerificationTemplateOutput() VerificationTemplateOutput {
	return o
}

func (o VerificationTemplateOutput) ToVerificationTemplateOutputWithContext(ctx context.Context) VerificationTemplateOutput {
	return o
}

// List of verification arguments. You may specify either `value` OR `valueFrom` but not both.In case `args`:`value` is already defined in the RolloutSpec entity, there is no need to also specify it in the VerificationTemplate entity.
func (o VerificationTemplateOutput) Args() VerificationTemplateArgArrayOutput {
	return o.ApplyT(func(v *VerificationTemplate) VerificationTemplateArgArrayOutput { return v.Args }).(VerificationTemplateArgArrayOutput)
}

// List of verification metrics.
func (o VerificationTemplateOutput) Metrics() VerificationTemplateMetricArrayOutput {
	return o.ApplyT(func(v *VerificationTemplate) VerificationTemplateMetricArrayOutput { return v.Metrics }).(VerificationTemplateMetricArrayOutput)
}

// Identifier name for Ocean CD Verification Template. Must be unique.
func (o VerificationTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VerificationTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type VerificationTemplateArrayOutput struct{ *pulumi.OutputState }

func (VerificationTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VerificationTemplate)(nil)).Elem()
}

func (o VerificationTemplateArrayOutput) ToVerificationTemplateArrayOutput() VerificationTemplateArrayOutput {
	return o
}

func (o VerificationTemplateArrayOutput) ToVerificationTemplateArrayOutputWithContext(ctx context.Context) VerificationTemplateArrayOutput {
	return o
}

func (o VerificationTemplateArrayOutput) Index(i pulumi.IntInput) VerificationTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VerificationTemplate {
		return vs[0].([]*VerificationTemplate)[vs[1].(int)]
	}).(VerificationTemplateOutput)
}

type VerificationTemplateMapOutput struct{ *pulumi.OutputState }

func (VerificationTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VerificationTemplate)(nil)).Elem()
}

func (o VerificationTemplateMapOutput) ToVerificationTemplateMapOutput() VerificationTemplateMapOutput {
	return o
}

func (o VerificationTemplateMapOutput) ToVerificationTemplateMapOutputWithContext(ctx context.Context) VerificationTemplateMapOutput {
	return o
}

func (o VerificationTemplateMapOutput) MapIndex(k pulumi.StringInput) VerificationTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VerificationTemplate {
		return vs[0].(map[string]*VerificationTemplate)[vs[1].(string)]
	}).(VerificationTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VerificationTemplateInput)(nil)).Elem(), &VerificationTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*VerificationTemplateArrayInput)(nil)).Elem(), VerificationTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VerificationTemplateMapInput)(nil)).Elem(), VerificationTemplateMap{})
	pulumi.RegisterOutputType(VerificationTemplateOutput{})
	pulumi.RegisterOutputType(VerificationTemplateArrayOutput{})
	pulumi.RegisterOutputType(VerificationTemplateMapOutput{})
}

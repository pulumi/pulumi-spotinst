// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package gke

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Spotinst Elastigroup GKE resource. Please see [Importing a GKE cluster](https://api.spotinst.com/elastigroup-for-google-cloud/tutorials/import-a-gke-cluster-as-an-elastigroup/) for detailed information.
//
//
//
// ## Diff-suppressed Parameters
//
// The following parameters are created remotely and imported. The diffs have been suppressed in order to maintain plan legibility. You may update the values of these
// imported parameters by defining them in your template with your desired new value (including null values).
//
// * `backendServices`
//     * `serviceName`
//     * `locationType`
//     * `scheme`
//     * `namedPort`
//         * `portName`
//         * `ports`
// * `labels`
//     * `key`
//     * `value`
// * `metadata`
//     * `key`
//     * `value`
// * `tags`
//     * `key`
//     * `value`
// * `serviceAccount`
// * `ipForwarding`
// * `fallbackToOd`
// * `subnets`
//     * `region`
//     * `subnetName`
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-spotinst/blob/master/website/docs/r/elastigroup_gke.html.markdown.
type Elastigroup struct {
	pulumi.CustomResourceState

	BackendServices ElastigroupBackendServiceArrayOutput `pulumi:"backendServices"`
	// The name of the GKE cluster you wish to import.
	ClusterId pulumi.StringPtrOutput `pulumi:"clusterId"`
	// The zone where the cluster is hosted.
	ClusterZoneName           pulumi.StringOutput                        `pulumi:"clusterZoneName"`
	DesiredCapacity           pulumi.IntOutput                           `pulumi:"desiredCapacity"`
	Disks                     ElastigroupDiskArrayOutput                 `pulumi:"disks"`
	DrainingTimeout           pulumi.IntPtrOutput                        `pulumi:"drainingTimeout"`
	FallbackToOndemand        pulumi.BoolPtrOutput                       `pulumi:"fallbackToOndemand"`
	Gpu                       ElastigroupGpuArrayOutput                  `pulumi:"gpu"`
	InstanceTypesCustoms      ElastigroupInstanceTypesCustomArrayOutput  `pulumi:"instanceTypesCustoms"`
	InstanceTypesOndemand     pulumi.StringPtrOutput                     `pulumi:"instanceTypesOndemand"`
	InstanceTypesPreemptibles pulumi.StringArrayOutput                   `pulumi:"instanceTypesPreemptibles"`
	IntegrationDockerSwarm    ElastigroupIntegrationDockerSwarmPtrOutput `pulumi:"integrationDockerSwarm"`
	IntegrationGke            ElastigroupIntegrationGkePtrOutput         `pulumi:"integrationGke"`
	IpForwarding              pulumi.BoolPtrOutput                       `pulumi:"ipForwarding"`
	Labels                    ElastigroupLabelArrayOutput                `pulumi:"labels"`
	MaxSize                   pulumi.IntOutput                           `pulumi:"maxSize"`
	Metadatas                 ElastigroupMetadataArrayOutput             `pulumi:"metadatas"`
	MinSize                   pulumi.IntOutput                           `pulumi:"minSize"`
	Name                      pulumi.StringOutput                        `pulumi:"name"`
	NetworkInterfaces         ElastigroupNetworkInterfaceArrayOutput     `pulumi:"networkInterfaces"`
	// The image that will be used for the node VMs. Possible values: COS, UBUNTU.
	NodeImage             pulumi.StringPtrOutput                  `pulumi:"nodeImage"`
	OndemandCount         pulumi.IntPtrOutput                     `pulumi:"ondemandCount"`
	PreemptiblePercentage pulumi.IntPtrOutput                     `pulumi:"preemptiblePercentage"`
	ScalingDownPolicies   ElastigroupScalingDownPolicyArrayOutput `pulumi:"scalingDownPolicies"`
	ScalingUpPolicies     ElastigroupScalingUpPolicyArrayOutput   `pulumi:"scalingUpPolicies"`
	ServiceAccount        pulumi.StringPtrOutput                  `pulumi:"serviceAccount"`
	ShutdownScript        pulumi.StringPtrOutput                  `pulumi:"shutdownScript"`
	StartupScript         pulumi.StringPtrOutput                  `pulumi:"startupScript"`
	Tags                  pulumi.StringArrayOutput                `pulumi:"tags"`
}

// NewElastigroup registers a new resource with the given unique name, arguments, and options.
func NewElastigroup(ctx *pulumi.Context,
	name string, args *ElastigroupArgs, opts ...pulumi.ResourceOption) (*Elastigroup, error) {
	if args == nil || args.ClusterZoneName == nil {
		return nil, errors.New("missing required argument 'ClusterZoneName'")
	}
	if args == nil || args.DesiredCapacity == nil {
		return nil, errors.New("missing required argument 'DesiredCapacity'")
	}
	if args == nil {
		args = &ElastigroupArgs{}
	}
	var resource Elastigroup
	err := ctx.RegisterResource("spotinst:gke/elastigroup:Elastigroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetElastigroup gets an existing Elastigroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetElastigroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ElastigroupState, opts ...pulumi.ResourceOption) (*Elastigroup, error) {
	var resource Elastigroup
	err := ctx.ReadResource("spotinst:gke/elastigroup:Elastigroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Elastigroup resources.
type elastigroupState struct {
	BackendServices []ElastigroupBackendService `pulumi:"backendServices"`
	// The name of the GKE cluster you wish to import.
	ClusterId *string `pulumi:"clusterId"`
	// The zone where the cluster is hosted.
	ClusterZoneName           *string                            `pulumi:"clusterZoneName"`
	DesiredCapacity           *int                               `pulumi:"desiredCapacity"`
	Disks                     []ElastigroupDisk                  `pulumi:"disks"`
	DrainingTimeout           *int                               `pulumi:"drainingTimeout"`
	FallbackToOndemand        *bool                              `pulumi:"fallbackToOndemand"`
	Gpu                       []ElastigroupGpu                   `pulumi:"gpu"`
	InstanceTypesCustoms      []ElastigroupInstanceTypesCustom   `pulumi:"instanceTypesCustoms"`
	InstanceTypesOndemand     *string                            `pulumi:"instanceTypesOndemand"`
	InstanceTypesPreemptibles []string                           `pulumi:"instanceTypesPreemptibles"`
	IntegrationDockerSwarm    *ElastigroupIntegrationDockerSwarm `pulumi:"integrationDockerSwarm"`
	IntegrationGke            *ElastigroupIntegrationGke         `pulumi:"integrationGke"`
	IpForwarding              *bool                              `pulumi:"ipForwarding"`
	Labels                    []ElastigroupLabel                 `pulumi:"labels"`
	MaxSize                   *int                               `pulumi:"maxSize"`
	Metadatas                 []ElastigroupMetadata              `pulumi:"metadatas"`
	MinSize                   *int                               `pulumi:"minSize"`
	Name                      *string                            `pulumi:"name"`
	NetworkInterfaces         []ElastigroupNetworkInterface      `pulumi:"networkInterfaces"`
	// The image that will be used for the node VMs. Possible values: COS, UBUNTU.
	NodeImage             *string                        `pulumi:"nodeImage"`
	OndemandCount         *int                           `pulumi:"ondemandCount"`
	PreemptiblePercentage *int                           `pulumi:"preemptiblePercentage"`
	ScalingDownPolicies   []ElastigroupScalingDownPolicy `pulumi:"scalingDownPolicies"`
	ScalingUpPolicies     []ElastigroupScalingUpPolicy   `pulumi:"scalingUpPolicies"`
	ServiceAccount        *string                        `pulumi:"serviceAccount"`
	ShutdownScript        *string                        `pulumi:"shutdownScript"`
	StartupScript         *string                        `pulumi:"startupScript"`
	Tags                  []string                       `pulumi:"tags"`
}

type ElastigroupState struct {
	BackendServices ElastigroupBackendServiceArrayInput
	// The name of the GKE cluster you wish to import.
	ClusterId pulumi.StringPtrInput
	// The zone where the cluster is hosted.
	ClusterZoneName           pulumi.StringPtrInput
	DesiredCapacity           pulumi.IntPtrInput
	Disks                     ElastigroupDiskArrayInput
	DrainingTimeout           pulumi.IntPtrInput
	FallbackToOndemand        pulumi.BoolPtrInput
	Gpu                       ElastigroupGpuArrayInput
	InstanceTypesCustoms      ElastigroupInstanceTypesCustomArrayInput
	InstanceTypesOndemand     pulumi.StringPtrInput
	InstanceTypesPreemptibles pulumi.StringArrayInput
	IntegrationDockerSwarm    ElastigroupIntegrationDockerSwarmPtrInput
	IntegrationGke            ElastigroupIntegrationGkePtrInput
	IpForwarding              pulumi.BoolPtrInput
	Labels                    ElastigroupLabelArrayInput
	MaxSize                   pulumi.IntPtrInput
	Metadatas                 ElastigroupMetadataArrayInput
	MinSize                   pulumi.IntPtrInput
	Name                      pulumi.StringPtrInput
	NetworkInterfaces         ElastigroupNetworkInterfaceArrayInput
	// The image that will be used for the node VMs. Possible values: COS, UBUNTU.
	NodeImage             pulumi.StringPtrInput
	OndemandCount         pulumi.IntPtrInput
	PreemptiblePercentage pulumi.IntPtrInput
	ScalingDownPolicies   ElastigroupScalingDownPolicyArrayInput
	ScalingUpPolicies     ElastigroupScalingUpPolicyArrayInput
	ServiceAccount        pulumi.StringPtrInput
	ShutdownScript        pulumi.StringPtrInput
	StartupScript         pulumi.StringPtrInput
	Tags                  pulumi.StringArrayInput
}

func (ElastigroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*elastigroupState)(nil)).Elem()
}

type elastigroupArgs struct {
	BackendServices []ElastigroupBackendService `pulumi:"backendServices"`
	// The name of the GKE cluster you wish to import.
	ClusterId *string `pulumi:"clusterId"`
	// The zone where the cluster is hosted.
	ClusterZoneName           string                             `pulumi:"clusterZoneName"`
	DesiredCapacity           int                                `pulumi:"desiredCapacity"`
	Disks                     []ElastigroupDisk                  `pulumi:"disks"`
	DrainingTimeout           *int                               `pulumi:"drainingTimeout"`
	FallbackToOndemand        *bool                              `pulumi:"fallbackToOndemand"`
	Gpu                       []ElastigroupGpu                   `pulumi:"gpu"`
	InstanceTypesCustoms      []ElastigroupInstanceTypesCustom   `pulumi:"instanceTypesCustoms"`
	InstanceTypesOndemand     *string                            `pulumi:"instanceTypesOndemand"`
	InstanceTypesPreemptibles []string                           `pulumi:"instanceTypesPreemptibles"`
	IntegrationDockerSwarm    *ElastigroupIntegrationDockerSwarm `pulumi:"integrationDockerSwarm"`
	IntegrationGke            *ElastigroupIntegrationGke         `pulumi:"integrationGke"`
	IpForwarding              *bool                              `pulumi:"ipForwarding"`
	Labels                    []ElastigroupLabel                 `pulumi:"labels"`
	MaxSize                   *int                               `pulumi:"maxSize"`
	Metadatas                 []ElastigroupMetadata              `pulumi:"metadatas"`
	MinSize                   *int                               `pulumi:"minSize"`
	Name                      *string                            `pulumi:"name"`
	NetworkInterfaces         []ElastigroupNetworkInterface      `pulumi:"networkInterfaces"`
	// The image that will be used for the node VMs. Possible values: COS, UBUNTU.
	NodeImage             *string                        `pulumi:"nodeImage"`
	OndemandCount         *int                           `pulumi:"ondemandCount"`
	PreemptiblePercentage *int                           `pulumi:"preemptiblePercentage"`
	ScalingDownPolicies   []ElastigroupScalingDownPolicy `pulumi:"scalingDownPolicies"`
	ScalingUpPolicies     []ElastigroupScalingUpPolicy   `pulumi:"scalingUpPolicies"`
	ServiceAccount        *string                        `pulumi:"serviceAccount"`
	ShutdownScript        *string                        `pulumi:"shutdownScript"`
	StartupScript         *string                        `pulumi:"startupScript"`
	Tags                  []string                       `pulumi:"tags"`
}

// The set of arguments for constructing a Elastigroup resource.
type ElastigroupArgs struct {
	BackendServices ElastigroupBackendServiceArrayInput
	// The name of the GKE cluster you wish to import.
	ClusterId pulumi.StringPtrInput
	// The zone where the cluster is hosted.
	ClusterZoneName           pulumi.StringInput
	DesiredCapacity           pulumi.IntInput
	Disks                     ElastigroupDiskArrayInput
	DrainingTimeout           pulumi.IntPtrInput
	FallbackToOndemand        pulumi.BoolPtrInput
	Gpu                       ElastigroupGpuArrayInput
	InstanceTypesCustoms      ElastigroupInstanceTypesCustomArrayInput
	InstanceTypesOndemand     pulumi.StringPtrInput
	InstanceTypesPreemptibles pulumi.StringArrayInput
	IntegrationDockerSwarm    ElastigroupIntegrationDockerSwarmPtrInput
	IntegrationGke            ElastigroupIntegrationGkePtrInput
	IpForwarding              pulumi.BoolPtrInput
	Labels                    ElastigroupLabelArrayInput
	MaxSize                   pulumi.IntPtrInput
	Metadatas                 ElastigroupMetadataArrayInput
	MinSize                   pulumi.IntPtrInput
	Name                      pulumi.StringPtrInput
	NetworkInterfaces         ElastigroupNetworkInterfaceArrayInput
	// The image that will be used for the node VMs. Possible values: COS, UBUNTU.
	NodeImage             pulumi.StringPtrInput
	OndemandCount         pulumi.IntPtrInput
	PreemptiblePercentage pulumi.IntPtrInput
	ScalingDownPolicies   ElastigroupScalingDownPolicyArrayInput
	ScalingUpPolicies     ElastigroupScalingUpPolicyArrayInput
	ServiceAccount        pulumi.StringPtrInput
	ShutdownScript        pulumi.StringPtrInput
	StartupScript         pulumi.StringPtrInput
	Tags                  pulumi.StringArrayInput
}

func (ElastigroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*elastigroupArgs)(nil)).Elem()
}

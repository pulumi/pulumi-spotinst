// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package spotinst

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Spotinst Health Check resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-spotinst/sdk/v2/go/spotinst"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := spotinst.NewHealthCheck(ctx, "httpCheck", &spotinst.HealthCheckArgs{
// 			Check: &spotinst.HealthCheckCheckArgs{
// 				Endpoint:  pulumi.String("http://endpoint.com"),
// 				Healthy:   pulumi.Int(1),
// 				Interval:  pulumi.Int(10),
// 				Port:      pulumi.Int(1337),
// 				Protocol:  pulumi.String("http"),
// 				Timeout:   pulumi.Int(10),
// 				Unhealthy: pulumi.Int(1),
// 			},
// 			ProxyAddress: pulumi.String("http://proxy.com"),
// 			ProxyPort:    pulumi.Int(80),
// 			ResourceId:   pulumi.String("sig-123"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type HealthCheck struct {
	pulumi.CustomResourceState

	// Describes the check to execute.
	Check HealthCheckCheckPtrOutput `pulumi:"check"`
	// The name of the health check.
	Name         pulumi.StringOutput `pulumi:"name"`
	ProxyAddress pulumi.StringOutput `pulumi:"proxyAddress"`
	ProxyPort    pulumi.IntPtrOutput `pulumi:"proxyPort"`
	// The ID of the resource to check.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
}

// NewHealthCheck registers a new resource with the given unique name, arguments, and options.
func NewHealthCheck(ctx *pulumi.Context,
	name string, args *HealthCheckArgs, opts ...pulumi.ResourceOption) (*HealthCheck, error) {
	if args == nil || args.ProxyAddress == nil {
		return nil, errors.New("missing required argument 'ProxyAddress'")
	}
	if args == nil || args.ResourceId == nil {
		return nil, errors.New("missing required argument 'ResourceId'")
	}
	if args == nil {
		args = &HealthCheckArgs{}
	}
	var resource HealthCheck
	err := ctx.RegisterResource("spotinst:index/healthCheck:HealthCheck", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHealthCheck gets an existing HealthCheck resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHealthCheck(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HealthCheckState, opts ...pulumi.ResourceOption) (*HealthCheck, error) {
	var resource HealthCheck
	err := ctx.ReadResource("spotinst:index/healthCheck:HealthCheck", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HealthCheck resources.
type healthCheckState struct {
	// Describes the check to execute.
	Check *HealthCheckCheck `pulumi:"check"`
	// The name of the health check.
	Name         *string `pulumi:"name"`
	ProxyAddress *string `pulumi:"proxyAddress"`
	ProxyPort    *int    `pulumi:"proxyPort"`
	// The ID of the resource to check.
	ResourceId *string `pulumi:"resourceId"`
}

type HealthCheckState struct {
	// Describes the check to execute.
	Check HealthCheckCheckPtrInput
	// The name of the health check.
	Name         pulumi.StringPtrInput
	ProxyAddress pulumi.StringPtrInput
	ProxyPort    pulumi.IntPtrInput
	// The ID of the resource to check.
	ResourceId pulumi.StringPtrInput
}

func (HealthCheckState) ElementType() reflect.Type {
	return reflect.TypeOf((*healthCheckState)(nil)).Elem()
}

type healthCheckArgs struct {
	// Describes the check to execute.
	Check *HealthCheckCheck `pulumi:"check"`
	// The name of the health check.
	Name         *string `pulumi:"name"`
	ProxyAddress string  `pulumi:"proxyAddress"`
	ProxyPort    *int    `pulumi:"proxyPort"`
	// The ID of the resource to check.
	ResourceId string `pulumi:"resourceId"`
}

// The set of arguments for constructing a HealthCheck resource.
type HealthCheckArgs struct {
	// Describes the check to execute.
	Check HealthCheckCheckPtrInput
	// The name of the health check.
	Name         pulumi.StringPtrInput
	ProxyAddress pulumi.StringInput
	ProxyPort    pulumi.IntPtrInput
	// The ID of the resource to check.
	ResourceId pulumi.StringInput
}

func (HealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*healthCheckArgs)(nil)).Elem()
}

type HealthCheckInput interface {
	pulumi.Input

	ToHealthCheckOutput() HealthCheckOutput
	ToHealthCheckOutputWithContext(ctx context.Context) HealthCheckOutput
}

func (HealthCheck) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheck)(nil)).Elem()
}

func (i HealthCheck) ToHealthCheckOutput() HealthCheckOutput {
	return i.ToHealthCheckOutputWithContext(context.Background())
}

func (i HealthCheck) ToHealthCheckOutputWithContext(ctx context.Context) HealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckOutput)
}

type HealthCheckOutput struct {
	*pulumi.OutputState
}

func (HealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckOutput)(nil)).Elem()
}

func (o HealthCheckOutput) ToHealthCheckOutput() HealthCheckOutput {
	return o
}

func (o HealthCheckOutput) ToHealthCheckOutputWithContext(ctx context.Context) HealthCheckOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(HealthCheckOutput{})
}

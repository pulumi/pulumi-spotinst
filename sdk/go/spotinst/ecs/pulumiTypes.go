// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type OceanAutoscaler struct {
	// Cooldown period between scaling actions.
	Cooldown *int `pulumi:"cooldown"`
	// Auto Scaling scale down operations.
	Down *OceanAutoscalerDown `pulumi:"down"`
	// Spare resource capacity management enabling fast assignment of tasks without waiting for new resources to launch.
	Headroom *OceanAutoscalerHeadroom `pulumi:"headroom"`
	// Automatically configure and optimize headroom resources.
	IsAutoConfig *bool `pulumi:"isAutoConfig"`
	// Enable the Ocean ECS autoscaler.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Optionally set upper and lower bounds on the resource usage of the cluster.
	ResourceLimits *OceanAutoscalerResourceLimits `pulumi:"resourceLimits"`
}

type OceanAutoscalerInput interface {
	pulumi.Input

	ToOceanAutoscalerOutput() OceanAutoscalerOutput
	ToOceanAutoscalerOutputWithContext(context.Context) OceanAutoscalerOutput
}

type OceanAutoscalerArgs struct {
	// Cooldown period between scaling actions.
	Cooldown pulumi.IntPtrInput `pulumi:"cooldown"`
	// Auto Scaling scale down operations.
	Down OceanAutoscalerDownPtrInput `pulumi:"down"`
	// Spare resource capacity management enabling fast assignment of tasks without waiting for new resources to launch.
	Headroom OceanAutoscalerHeadroomPtrInput `pulumi:"headroom"`
	// Automatically configure and optimize headroom resources.
	IsAutoConfig pulumi.BoolPtrInput `pulumi:"isAutoConfig"`
	// Enable the Ocean ECS autoscaler.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// Optionally set upper and lower bounds on the resource usage of the cluster.
	ResourceLimits OceanAutoscalerResourceLimitsPtrInput `pulumi:"resourceLimits"`
}

func (OceanAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanAutoscaler)(nil)).Elem()
}

func (i OceanAutoscalerArgs) ToOceanAutoscalerOutput() OceanAutoscalerOutput {
	return i.ToOceanAutoscalerOutputWithContext(context.Background())
}

func (i OceanAutoscalerArgs) ToOceanAutoscalerOutputWithContext(ctx context.Context) OceanAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanAutoscalerOutput)
}

func (i OceanAutoscalerArgs) ToOceanAutoscalerPtrOutput() OceanAutoscalerPtrOutput {
	return i.ToOceanAutoscalerPtrOutputWithContext(context.Background())
}

func (i OceanAutoscalerArgs) ToOceanAutoscalerPtrOutputWithContext(ctx context.Context) OceanAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanAutoscalerOutput).ToOceanAutoscalerPtrOutputWithContext(ctx)
}

type OceanAutoscalerPtrInput interface {
	pulumi.Input

	ToOceanAutoscalerPtrOutput() OceanAutoscalerPtrOutput
	ToOceanAutoscalerPtrOutputWithContext(context.Context) OceanAutoscalerPtrOutput
}

type oceanAutoscalerPtrType OceanAutoscalerArgs

func OceanAutoscalerPtr(v *OceanAutoscalerArgs) OceanAutoscalerPtrInput {	return (*oceanAutoscalerPtrType)(v)
}

func (*oceanAutoscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanAutoscaler)(nil)).Elem()
}

func (i *oceanAutoscalerPtrType) ToOceanAutoscalerPtrOutput() OceanAutoscalerPtrOutput {
	return i.ToOceanAutoscalerPtrOutputWithContext(context.Background())
}

func (i *oceanAutoscalerPtrType) ToOceanAutoscalerPtrOutputWithContext(ctx context.Context) OceanAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanAutoscalerPtrOutput)
}

type OceanAutoscalerOutput struct { *pulumi.OutputState }

func (OceanAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanAutoscaler)(nil)).Elem()
}

func (o OceanAutoscalerOutput) ToOceanAutoscalerOutput() OceanAutoscalerOutput {
	return o
}

func (o OceanAutoscalerOutput) ToOceanAutoscalerOutputWithContext(ctx context.Context) OceanAutoscalerOutput {
	return o
}

func (o OceanAutoscalerOutput) ToOceanAutoscalerPtrOutput() OceanAutoscalerPtrOutput {
	return o.ToOceanAutoscalerPtrOutputWithContext(context.Background())
}

func (o OceanAutoscalerOutput) ToOceanAutoscalerPtrOutputWithContext(ctx context.Context) OceanAutoscalerPtrOutput {
	return o.ApplyT(func(v OceanAutoscaler) *OceanAutoscaler {
		return &v
	}).(OceanAutoscalerPtrOutput)
}
// Cooldown period between scaling actions.
func (o OceanAutoscalerOutput) Cooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanAutoscaler) *int { return v.Cooldown }).(pulumi.IntPtrOutput)
}

// Auto Scaling scale down operations.
func (o OceanAutoscalerOutput) Down() OceanAutoscalerDownPtrOutput {
	return o.ApplyT(func (v OceanAutoscaler) *OceanAutoscalerDown { return v.Down }).(OceanAutoscalerDownPtrOutput)
}

// Spare resource capacity management enabling fast assignment of tasks without waiting for new resources to launch.
func (o OceanAutoscalerOutput) Headroom() OceanAutoscalerHeadroomPtrOutput {
	return o.ApplyT(func (v OceanAutoscaler) *OceanAutoscalerHeadroom { return v.Headroom }).(OceanAutoscalerHeadroomPtrOutput)
}

// Automatically configure and optimize headroom resources.
func (o OceanAutoscalerOutput) IsAutoConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v OceanAutoscaler) *bool { return v.IsAutoConfig }).(pulumi.BoolPtrOutput)
}

// Enable the Ocean ECS autoscaler.
func (o OceanAutoscalerOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v OceanAutoscaler) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Optionally set upper and lower bounds on the resource usage of the cluster.
func (o OceanAutoscalerOutput) ResourceLimits() OceanAutoscalerResourceLimitsPtrOutput {
	return o.ApplyT(func (v OceanAutoscaler) *OceanAutoscalerResourceLimits { return v.ResourceLimits }).(OceanAutoscalerResourceLimitsPtrOutput)
}

type OceanAutoscalerPtrOutput struct { *pulumi.OutputState}

func (OceanAutoscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanAutoscaler)(nil)).Elem()
}

func (o OceanAutoscalerPtrOutput) ToOceanAutoscalerPtrOutput() OceanAutoscalerPtrOutput {
	return o
}

func (o OceanAutoscalerPtrOutput) ToOceanAutoscalerPtrOutputWithContext(ctx context.Context) OceanAutoscalerPtrOutput {
	return o
}

func (o OceanAutoscalerPtrOutput) Elem() OceanAutoscalerOutput {
	return o.ApplyT(func (v *OceanAutoscaler) OceanAutoscaler { return *v }).(OceanAutoscalerOutput)
}

// Cooldown period between scaling actions.
func (o OceanAutoscalerPtrOutput) Cooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanAutoscaler) *int { return v.Cooldown }).(pulumi.IntPtrOutput)
}

// Auto Scaling scale down operations.
func (o OceanAutoscalerPtrOutput) Down() OceanAutoscalerDownPtrOutput {
	return o.ApplyT(func (v OceanAutoscaler) *OceanAutoscalerDown { return v.Down }).(OceanAutoscalerDownPtrOutput)
}

// Spare resource capacity management enabling fast assignment of tasks without waiting for new resources to launch.
func (o OceanAutoscalerPtrOutput) Headroom() OceanAutoscalerHeadroomPtrOutput {
	return o.ApplyT(func (v OceanAutoscaler) *OceanAutoscalerHeadroom { return v.Headroom }).(OceanAutoscalerHeadroomPtrOutput)
}

// Automatically configure and optimize headroom resources.
func (o OceanAutoscalerPtrOutput) IsAutoConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v OceanAutoscaler) *bool { return v.IsAutoConfig }).(pulumi.BoolPtrOutput)
}

// Enable the Ocean ECS autoscaler.
func (o OceanAutoscalerPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v OceanAutoscaler) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Optionally set upper and lower bounds on the resource usage of the cluster.
func (o OceanAutoscalerPtrOutput) ResourceLimits() OceanAutoscalerResourceLimitsPtrOutput {
	return o.ApplyT(func (v OceanAutoscaler) *OceanAutoscalerResourceLimits { return v.ResourceLimits }).(OceanAutoscalerResourceLimitsPtrOutput)
}

type OceanAutoscalerDown struct {
	// Would represent the maximum % to scale-down. Number between 1-100
	MaxScaleDownPercentage *int `pulumi:"maxScaleDownPercentage"`
}

type OceanAutoscalerDownInput interface {
	pulumi.Input

	ToOceanAutoscalerDownOutput() OceanAutoscalerDownOutput
	ToOceanAutoscalerDownOutputWithContext(context.Context) OceanAutoscalerDownOutput
}

type OceanAutoscalerDownArgs struct {
	// Would represent the maximum % to scale-down. Number between 1-100
	MaxScaleDownPercentage pulumi.IntPtrInput `pulumi:"maxScaleDownPercentage"`
}

func (OceanAutoscalerDownArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanAutoscalerDown)(nil)).Elem()
}

func (i OceanAutoscalerDownArgs) ToOceanAutoscalerDownOutput() OceanAutoscalerDownOutput {
	return i.ToOceanAutoscalerDownOutputWithContext(context.Background())
}

func (i OceanAutoscalerDownArgs) ToOceanAutoscalerDownOutputWithContext(ctx context.Context) OceanAutoscalerDownOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanAutoscalerDownOutput)
}

func (i OceanAutoscalerDownArgs) ToOceanAutoscalerDownPtrOutput() OceanAutoscalerDownPtrOutput {
	return i.ToOceanAutoscalerDownPtrOutputWithContext(context.Background())
}

func (i OceanAutoscalerDownArgs) ToOceanAutoscalerDownPtrOutputWithContext(ctx context.Context) OceanAutoscalerDownPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanAutoscalerDownOutput).ToOceanAutoscalerDownPtrOutputWithContext(ctx)
}

type OceanAutoscalerDownPtrInput interface {
	pulumi.Input

	ToOceanAutoscalerDownPtrOutput() OceanAutoscalerDownPtrOutput
	ToOceanAutoscalerDownPtrOutputWithContext(context.Context) OceanAutoscalerDownPtrOutput
}

type oceanAutoscalerDownPtrType OceanAutoscalerDownArgs

func OceanAutoscalerDownPtr(v *OceanAutoscalerDownArgs) OceanAutoscalerDownPtrInput {	return (*oceanAutoscalerDownPtrType)(v)
}

func (*oceanAutoscalerDownPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanAutoscalerDown)(nil)).Elem()
}

func (i *oceanAutoscalerDownPtrType) ToOceanAutoscalerDownPtrOutput() OceanAutoscalerDownPtrOutput {
	return i.ToOceanAutoscalerDownPtrOutputWithContext(context.Background())
}

func (i *oceanAutoscalerDownPtrType) ToOceanAutoscalerDownPtrOutputWithContext(ctx context.Context) OceanAutoscalerDownPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanAutoscalerDownPtrOutput)
}

type OceanAutoscalerDownOutput struct { *pulumi.OutputState }

func (OceanAutoscalerDownOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanAutoscalerDown)(nil)).Elem()
}

func (o OceanAutoscalerDownOutput) ToOceanAutoscalerDownOutput() OceanAutoscalerDownOutput {
	return o
}

func (o OceanAutoscalerDownOutput) ToOceanAutoscalerDownOutputWithContext(ctx context.Context) OceanAutoscalerDownOutput {
	return o
}

func (o OceanAutoscalerDownOutput) ToOceanAutoscalerDownPtrOutput() OceanAutoscalerDownPtrOutput {
	return o.ToOceanAutoscalerDownPtrOutputWithContext(context.Background())
}

func (o OceanAutoscalerDownOutput) ToOceanAutoscalerDownPtrOutputWithContext(ctx context.Context) OceanAutoscalerDownPtrOutput {
	return o.ApplyT(func(v OceanAutoscalerDown) *OceanAutoscalerDown {
		return &v
	}).(OceanAutoscalerDownPtrOutput)
}
// Would represent the maximum % to scale-down. Number between 1-100
func (o OceanAutoscalerDownOutput) MaxScaleDownPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanAutoscalerDown) *int { return v.MaxScaleDownPercentage }).(pulumi.IntPtrOutput)
}

type OceanAutoscalerDownPtrOutput struct { *pulumi.OutputState}

func (OceanAutoscalerDownPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanAutoscalerDown)(nil)).Elem()
}

func (o OceanAutoscalerDownPtrOutput) ToOceanAutoscalerDownPtrOutput() OceanAutoscalerDownPtrOutput {
	return o
}

func (o OceanAutoscalerDownPtrOutput) ToOceanAutoscalerDownPtrOutputWithContext(ctx context.Context) OceanAutoscalerDownPtrOutput {
	return o
}

func (o OceanAutoscalerDownPtrOutput) Elem() OceanAutoscalerDownOutput {
	return o.ApplyT(func (v *OceanAutoscalerDown) OceanAutoscalerDown { return *v }).(OceanAutoscalerDownOutput)
}

// Would represent the maximum % to scale-down. Number between 1-100
func (o OceanAutoscalerDownPtrOutput) MaxScaleDownPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanAutoscalerDown) *int { return v.MaxScaleDownPercentage }).(pulumi.IntPtrOutput)
}

type OceanAutoscalerHeadroom struct {
	// Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.
	CpuPerUnit *int `pulumi:"cpuPerUnit"`
	// Optionally configure the amount of memory (MB) to allocate the headroom.
	MemoryPerUnit *int `pulumi:"memoryPerUnit"`
	// The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.
	NumOfUnits *int `pulumi:"numOfUnits"`
}

type OceanAutoscalerHeadroomInput interface {
	pulumi.Input

	ToOceanAutoscalerHeadroomOutput() OceanAutoscalerHeadroomOutput
	ToOceanAutoscalerHeadroomOutputWithContext(context.Context) OceanAutoscalerHeadroomOutput
}

type OceanAutoscalerHeadroomArgs struct {
	// Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.
	CpuPerUnit pulumi.IntPtrInput `pulumi:"cpuPerUnit"`
	// Optionally configure the amount of memory (MB) to allocate the headroom.
	MemoryPerUnit pulumi.IntPtrInput `pulumi:"memoryPerUnit"`
	// The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.
	NumOfUnits pulumi.IntPtrInput `pulumi:"numOfUnits"`
}

func (OceanAutoscalerHeadroomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanAutoscalerHeadroom)(nil)).Elem()
}

func (i OceanAutoscalerHeadroomArgs) ToOceanAutoscalerHeadroomOutput() OceanAutoscalerHeadroomOutput {
	return i.ToOceanAutoscalerHeadroomOutputWithContext(context.Background())
}

func (i OceanAutoscalerHeadroomArgs) ToOceanAutoscalerHeadroomOutputWithContext(ctx context.Context) OceanAutoscalerHeadroomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanAutoscalerHeadroomOutput)
}

func (i OceanAutoscalerHeadroomArgs) ToOceanAutoscalerHeadroomPtrOutput() OceanAutoscalerHeadroomPtrOutput {
	return i.ToOceanAutoscalerHeadroomPtrOutputWithContext(context.Background())
}

func (i OceanAutoscalerHeadroomArgs) ToOceanAutoscalerHeadroomPtrOutputWithContext(ctx context.Context) OceanAutoscalerHeadroomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanAutoscalerHeadroomOutput).ToOceanAutoscalerHeadroomPtrOutputWithContext(ctx)
}

type OceanAutoscalerHeadroomPtrInput interface {
	pulumi.Input

	ToOceanAutoscalerHeadroomPtrOutput() OceanAutoscalerHeadroomPtrOutput
	ToOceanAutoscalerHeadroomPtrOutputWithContext(context.Context) OceanAutoscalerHeadroomPtrOutput
}

type oceanAutoscalerHeadroomPtrType OceanAutoscalerHeadroomArgs

func OceanAutoscalerHeadroomPtr(v *OceanAutoscalerHeadroomArgs) OceanAutoscalerHeadroomPtrInput {	return (*oceanAutoscalerHeadroomPtrType)(v)
}

func (*oceanAutoscalerHeadroomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanAutoscalerHeadroom)(nil)).Elem()
}

func (i *oceanAutoscalerHeadroomPtrType) ToOceanAutoscalerHeadroomPtrOutput() OceanAutoscalerHeadroomPtrOutput {
	return i.ToOceanAutoscalerHeadroomPtrOutputWithContext(context.Background())
}

func (i *oceanAutoscalerHeadroomPtrType) ToOceanAutoscalerHeadroomPtrOutputWithContext(ctx context.Context) OceanAutoscalerHeadroomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanAutoscalerHeadroomPtrOutput)
}

type OceanAutoscalerHeadroomOutput struct { *pulumi.OutputState }

func (OceanAutoscalerHeadroomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanAutoscalerHeadroom)(nil)).Elem()
}

func (o OceanAutoscalerHeadroomOutput) ToOceanAutoscalerHeadroomOutput() OceanAutoscalerHeadroomOutput {
	return o
}

func (o OceanAutoscalerHeadroomOutput) ToOceanAutoscalerHeadroomOutputWithContext(ctx context.Context) OceanAutoscalerHeadroomOutput {
	return o
}

func (o OceanAutoscalerHeadroomOutput) ToOceanAutoscalerHeadroomPtrOutput() OceanAutoscalerHeadroomPtrOutput {
	return o.ToOceanAutoscalerHeadroomPtrOutputWithContext(context.Background())
}

func (o OceanAutoscalerHeadroomOutput) ToOceanAutoscalerHeadroomPtrOutputWithContext(ctx context.Context) OceanAutoscalerHeadroomPtrOutput {
	return o.ApplyT(func(v OceanAutoscalerHeadroom) *OceanAutoscalerHeadroom {
		return &v
	}).(OceanAutoscalerHeadroomPtrOutput)
}
// Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.
func (o OceanAutoscalerHeadroomOutput) CpuPerUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanAutoscalerHeadroom) *int { return v.CpuPerUnit }).(pulumi.IntPtrOutput)
}

// Optionally configure the amount of memory (MB) to allocate the headroom.
func (o OceanAutoscalerHeadroomOutput) MemoryPerUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanAutoscalerHeadroom) *int { return v.MemoryPerUnit }).(pulumi.IntPtrOutput)
}

// The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.
func (o OceanAutoscalerHeadroomOutput) NumOfUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanAutoscalerHeadroom) *int { return v.NumOfUnits }).(pulumi.IntPtrOutput)
}

type OceanAutoscalerHeadroomPtrOutput struct { *pulumi.OutputState}

func (OceanAutoscalerHeadroomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanAutoscalerHeadroom)(nil)).Elem()
}

func (o OceanAutoscalerHeadroomPtrOutput) ToOceanAutoscalerHeadroomPtrOutput() OceanAutoscalerHeadroomPtrOutput {
	return o
}

func (o OceanAutoscalerHeadroomPtrOutput) ToOceanAutoscalerHeadroomPtrOutputWithContext(ctx context.Context) OceanAutoscalerHeadroomPtrOutput {
	return o
}

func (o OceanAutoscalerHeadroomPtrOutput) Elem() OceanAutoscalerHeadroomOutput {
	return o.ApplyT(func (v *OceanAutoscalerHeadroom) OceanAutoscalerHeadroom { return *v }).(OceanAutoscalerHeadroomOutput)
}

// Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.
func (o OceanAutoscalerHeadroomPtrOutput) CpuPerUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanAutoscalerHeadroom) *int { return v.CpuPerUnit }).(pulumi.IntPtrOutput)
}

// Optionally configure the amount of memory (MB) to allocate the headroom.
func (o OceanAutoscalerHeadroomPtrOutput) MemoryPerUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanAutoscalerHeadroom) *int { return v.MemoryPerUnit }).(pulumi.IntPtrOutput)
}

// The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.
func (o OceanAutoscalerHeadroomPtrOutput) NumOfUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanAutoscalerHeadroom) *int { return v.NumOfUnits }).(pulumi.IntPtrOutput)
}

type OceanAutoscalerResourceLimits struct {
	// The maximum memory in GiB units that can be allocated to the cluster.
	MaxMemoryGib *int `pulumi:"maxMemoryGib"`
	// The maximum cpu in vCPU units that can be allocated to the cluster.
	MaxVcpu *int `pulumi:"maxVcpu"`
}

type OceanAutoscalerResourceLimitsInput interface {
	pulumi.Input

	ToOceanAutoscalerResourceLimitsOutput() OceanAutoscalerResourceLimitsOutput
	ToOceanAutoscalerResourceLimitsOutputWithContext(context.Context) OceanAutoscalerResourceLimitsOutput
}

type OceanAutoscalerResourceLimitsArgs struct {
	// The maximum memory in GiB units that can be allocated to the cluster.
	MaxMemoryGib pulumi.IntPtrInput `pulumi:"maxMemoryGib"`
	// The maximum cpu in vCPU units that can be allocated to the cluster.
	MaxVcpu pulumi.IntPtrInput `pulumi:"maxVcpu"`
}

func (OceanAutoscalerResourceLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanAutoscalerResourceLimits)(nil)).Elem()
}

func (i OceanAutoscalerResourceLimitsArgs) ToOceanAutoscalerResourceLimitsOutput() OceanAutoscalerResourceLimitsOutput {
	return i.ToOceanAutoscalerResourceLimitsOutputWithContext(context.Background())
}

func (i OceanAutoscalerResourceLimitsArgs) ToOceanAutoscalerResourceLimitsOutputWithContext(ctx context.Context) OceanAutoscalerResourceLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanAutoscalerResourceLimitsOutput)
}

func (i OceanAutoscalerResourceLimitsArgs) ToOceanAutoscalerResourceLimitsPtrOutput() OceanAutoscalerResourceLimitsPtrOutput {
	return i.ToOceanAutoscalerResourceLimitsPtrOutputWithContext(context.Background())
}

func (i OceanAutoscalerResourceLimitsArgs) ToOceanAutoscalerResourceLimitsPtrOutputWithContext(ctx context.Context) OceanAutoscalerResourceLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanAutoscalerResourceLimitsOutput).ToOceanAutoscalerResourceLimitsPtrOutputWithContext(ctx)
}

type OceanAutoscalerResourceLimitsPtrInput interface {
	pulumi.Input

	ToOceanAutoscalerResourceLimitsPtrOutput() OceanAutoscalerResourceLimitsPtrOutput
	ToOceanAutoscalerResourceLimitsPtrOutputWithContext(context.Context) OceanAutoscalerResourceLimitsPtrOutput
}

type oceanAutoscalerResourceLimitsPtrType OceanAutoscalerResourceLimitsArgs

func OceanAutoscalerResourceLimitsPtr(v *OceanAutoscalerResourceLimitsArgs) OceanAutoscalerResourceLimitsPtrInput {	return (*oceanAutoscalerResourceLimitsPtrType)(v)
}

func (*oceanAutoscalerResourceLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanAutoscalerResourceLimits)(nil)).Elem()
}

func (i *oceanAutoscalerResourceLimitsPtrType) ToOceanAutoscalerResourceLimitsPtrOutput() OceanAutoscalerResourceLimitsPtrOutput {
	return i.ToOceanAutoscalerResourceLimitsPtrOutputWithContext(context.Background())
}

func (i *oceanAutoscalerResourceLimitsPtrType) ToOceanAutoscalerResourceLimitsPtrOutputWithContext(ctx context.Context) OceanAutoscalerResourceLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanAutoscalerResourceLimitsPtrOutput)
}

type OceanAutoscalerResourceLimitsOutput struct { *pulumi.OutputState }

func (OceanAutoscalerResourceLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanAutoscalerResourceLimits)(nil)).Elem()
}

func (o OceanAutoscalerResourceLimitsOutput) ToOceanAutoscalerResourceLimitsOutput() OceanAutoscalerResourceLimitsOutput {
	return o
}

func (o OceanAutoscalerResourceLimitsOutput) ToOceanAutoscalerResourceLimitsOutputWithContext(ctx context.Context) OceanAutoscalerResourceLimitsOutput {
	return o
}

func (o OceanAutoscalerResourceLimitsOutput) ToOceanAutoscalerResourceLimitsPtrOutput() OceanAutoscalerResourceLimitsPtrOutput {
	return o.ToOceanAutoscalerResourceLimitsPtrOutputWithContext(context.Background())
}

func (o OceanAutoscalerResourceLimitsOutput) ToOceanAutoscalerResourceLimitsPtrOutputWithContext(ctx context.Context) OceanAutoscalerResourceLimitsPtrOutput {
	return o.ApplyT(func(v OceanAutoscalerResourceLimits) *OceanAutoscalerResourceLimits {
		return &v
	}).(OceanAutoscalerResourceLimitsPtrOutput)
}
// The maximum memory in GiB units that can be allocated to the cluster.
func (o OceanAutoscalerResourceLimitsOutput) MaxMemoryGib() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanAutoscalerResourceLimits) *int { return v.MaxMemoryGib }).(pulumi.IntPtrOutput)
}

// The maximum cpu in vCPU units that can be allocated to the cluster.
func (o OceanAutoscalerResourceLimitsOutput) MaxVcpu() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanAutoscalerResourceLimits) *int { return v.MaxVcpu }).(pulumi.IntPtrOutput)
}

type OceanAutoscalerResourceLimitsPtrOutput struct { *pulumi.OutputState}

func (OceanAutoscalerResourceLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanAutoscalerResourceLimits)(nil)).Elem()
}

func (o OceanAutoscalerResourceLimitsPtrOutput) ToOceanAutoscalerResourceLimitsPtrOutput() OceanAutoscalerResourceLimitsPtrOutput {
	return o
}

func (o OceanAutoscalerResourceLimitsPtrOutput) ToOceanAutoscalerResourceLimitsPtrOutputWithContext(ctx context.Context) OceanAutoscalerResourceLimitsPtrOutput {
	return o
}

func (o OceanAutoscalerResourceLimitsPtrOutput) Elem() OceanAutoscalerResourceLimitsOutput {
	return o.ApplyT(func (v *OceanAutoscalerResourceLimits) OceanAutoscalerResourceLimits { return *v }).(OceanAutoscalerResourceLimitsOutput)
}

// The maximum memory in GiB units that can be allocated to the cluster.
func (o OceanAutoscalerResourceLimitsPtrOutput) MaxMemoryGib() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanAutoscalerResourceLimits) *int { return v.MaxMemoryGib }).(pulumi.IntPtrOutput)
}

// The maximum cpu in vCPU units that can be allocated to the cluster.
func (o OceanAutoscalerResourceLimitsPtrOutput) MaxVcpu() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanAutoscalerResourceLimits) *int { return v.MaxVcpu }).(pulumi.IntPtrOutput)
}

type OceanLaunchSpecAttribute struct {
	// The label key.
	Key string `pulumi:"key"`
	// The label value.
	Value string `pulumi:"value"`
}

type OceanLaunchSpecAttributeInput interface {
	pulumi.Input

	ToOceanLaunchSpecAttributeOutput() OceanLaunchSpecAttributeOutput
	ToOceanLaunchSpecAttributeOutputWithContext(context.Context) OceanLaunchSpecAttributeOutput
}

type OceanLaunchSpecAttributeArgs struct {
	// The label key.
	Key pulumi.StringInput `pulumi:"key"`
	// The label value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (OceanLaunchSpecAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanLaunchSpecAttribute)(nil)).Elem()
}

func (i OceanLaunchSpecAttributeArgs) ToOceanLaunchSpecAttributeOutput() OceanLaunchSpecAttributeOutput {
	return i.ToOceanLaunchSpecAttributeOutputWithContext(context.Background())
}

func (i OceanLaunchSpecAttributeArgs) ToOceanLaunchSpecAttributeOutputWithContext(ctx context.Context) OceanLaunchSpecAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanLaunchSpecAttributeOutput)
}

type OceanLaunchSpecAttributeArrayInput interface {
	pulumi.Input

	ToOceanLaunchSpecAttributeArrayOutput() OceanLaunchSpecAttributeArrayOutput
	ToOceanLaunchSpecAttributeArrayOutputWithContext(context.Context) OceanLaunchSpecAttributeArrayOutput
}

type OceanLaunchSpecAttributeArray []OceanLaunchSpecAttributeInput

func (OceanLaunchSpecAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanLaunchSpecAttribute)(nil)).Elem()
}

func (i OceanLaunchSpecAttributeArray) ToOceanLaunchSpecAttributeArrayOutput() OceanLaunchSpecAttributeArrayOutput {
	return i.ToOceanLaunchSpecAttributeArrayOutputWithContext(context.Background())
}

func (i OceanLaunchSpecAttributeArray) ToOceanLaunchSpecAttributeArrayOutputWithContext(ctx context.Context) OceanLaunchSpecAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanLaunchSpecAttributeArrayOutput)
}

type OceanLaunchSpecAttributeOutput struct { *pulumi.OutputState }

func (OceanLaunchSpecAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanLaunchSpecAttribute)(nil)).Elem()
}

func (o OceanLaunchSpecAttributeOutput) ToOceanLaunchSpecAttributeOutput() OceanLaunchSpecAttributeOutput {
	return o
}

func (o OceanLaunchSpecAttributeOutput) ToOceanLaunchSpecAttributeOutputWithContext(ctx context.Context) OceanLaunchSpecAttributeOutput {
	return o
}

// The label key.
func (o OceanLaunchSpecAttributeOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v OceanLaunchSpecAttribute) string { return v.Key }).(pulumi.StringOutput)
}

// The label value.
func (o OceanLaunchSpecAttributeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v OceanLaunchSpecAttribute) string { return v.Value }).(pulumi.StringOutput)
}

type OceanLaunchSpecAttributeArrayOutput struct { *pulumi.OutputState}

func (OceanLaunchSpecAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanLaunchSpecAttribute)(nil)).Elem()
}

func (o OceanLaunchSpecAttributeArrayOutput) ToOceanLaunchSpecAttributeArrayOutput() OceanLaunchSpecAttributeArrayOutput {
	return o
}

func (o OceanLaunchSpecAttributeArrayOutput) ToOceanLaunchSpecAttributeArrayOutputWithContext(ctx context.Context) OceanLaunchSpecAttributeArrayOutput {
	return o
}

func (o OceanLaunchSpecAttributeArrayOutput) Index(i pulumi.IntInput) OceanLaunchSpecAttributeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) OceanLaunchSpecAttribute {
		return vs[0].([]OceanLaunchSpecAttribute)[vs[1].(int)]
	}).(OceanLaunchSpecAttributeOutput)
}

type OceanLaunchSpecAutoscaleHeadroom struct {
	// Optionally configure the number of CPUs to allocate for each headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.
	CpuPerUnit *int `pulumi:"cpuPerUnit"`
	// Optionally configure the amount of memory (MiB) to allocate for each headroom unit.
	MemoryPerUnit *int `pulumi:"memoryPerUnit"`
	// The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.
	NumOfUnits int `pulumi:"numOfUnits"`
}

type OceanLaunchSpecAutoscaleHeadroomInput interface {
	pulumi.Input

	ToOceanLaunchSpecAutoscaleHeadroomOutput() OceanLaunchSpecAutoscaleHeadroomOutput
	ToOceanLaunchSpecAutoscaleHeadroomOutputWithContext(context.Context) OceanLaunchSpecAutoscaleHeadroomOutput
}

type OceanLaunchSpecAutoscaleHeadroomArgs struct {
	// Optionally configure the number of CPUs to allocate for each headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.
	CpuPerUnit pulumi.IntPtrInput `pulumi:"cpuPerUnit"`
	// Optionally configure the amount of memory (MiB) to allocate for each headroom unit.
	MemoryPerUnit pulumi.IntPtrInput `pulumi:"memoryPerUnit"`
	// The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.
	NumOfUnits pulumi.IntInput `pulumi:"numOfUnits"`
}

func (OceanLaunchSpecAutoscaleHeadroomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanLaunchSpecAutoscaleHeadroom)(nil)).Elem()
}

func (i OceanLaunchSpecAutoscaleHeadroomArgs) ToOceanLaunchSpecAutoscaleHeadroomOutput() OceanLaunchSpecAutoscaleHeadroomOutput {
	return i.ToOceanLaunchSpecAutoscaleHeadroomOutputWithContext(context.Background())
}

func (i OceanLaunchSpecAutoscaleHeadroomArgs) ToOceanLaunchSpecAutoscaleHeadroomOutputWithContext(ctx context.Context) OceanLaunchSpecAutoscaleHeadroomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanLaunchSpecAutoscaleHeadroomOutput)
}

type OceanLaunchSpecAutoscaleHeadroomArrayInput interface {
	pulumi.Input

	ToOceanLaunchSpecAutoscaleHeadroomArrayOutput() OceanLaunchSpecAutoscaleHeadroomArrayOutput
	ToOceanLaunchSpecAutoscaleHeadroomArrayOutputWithContext(context.Context) OceanLaunchSpecAutoscaleHeadroomArrayOutput
}

type OceanLaunchSpecAutoscaleHeadroomArray []OceanLaunchSpecAutoscaleHeadroomInput

func (OceanLaunchSpecAutoscaleHeadroomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanLaunchSpecAutoscaleHeadroom)(nil)).Elem()
}

func (i OceanLaunchSpecAutoscaleHeadroomArray) ToOceanLaunchSpecAutoscaleHeadroomArrayOutput() OceanLaunchSpecAutoscaleHeadroomArrayOutput {
	return i.ToOceanLaunchSpecAutoscaleHeadroomArrayOutputWithContext(context.Background())
}

func (i OceanLaunchSpecAutoscaleHeadroomArray) ToOceanLaunchSpecAutoscaleHeadroomArrayOutputWithContext(ctx context.Context) OceanLaunchSpecAutoscaleHeadroomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanLaunchSpecAutoscaleHeadroomArrayOutput)
}

type OceanLaunchSpecAutoscaleHeadroomOutput struct { *pulumi.OutputState }

func (OceanLaunchSpecAutoscaleHeadroomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanLaunchSpecAutoscaleHeadroom)(nil)).Elem()
}

func (o OceanLaunchSpecAutoscaleHeadroomOutput) ToOceanLaunchSpecAutoscaleHeadroomOutput() OceanLaunchSpecAutoscaleHeadroomOutput {
	return o
}

func (o OceanLaunchSpecAutoscaleHeadroomOutput) ToOceanLaunchSpecAutoscaleHeadroomOutputWithContext(ctx context.Context) OceanLaunchSpecAutoscaleHeadroomOutput {
	return o
}

// Optionally configure the number of CPUs to allocate for each headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.
func (o OceanLaunchSpecAutoscaleHeadroomOutput) CpuPerUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanLaunchSpecAutoscaleHeadroom) *int { return v.CpuPerUnit }).(pulumi.IntPtrOutput)
}

// Optionally configure the amount of memory (MiB) to allocate for each headroom unit.
func (o OceanLaunchSpecAutoscaleHeadroomOutput) MemoryPerUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func (v OceanLaunchSpecAutoscaleHeadroom) *int { return v.MemoryPerUnit }).(pulumi.IntPtrOutput)
}

// The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.
func (o OceanLaunchSpecAutoscaleHeadroomOutput) NumOfUnits() pulumi.IntOutput {
	return o.ApplyT(func (v OceanLaunchSpecAutoscaleHeadroom) int { return v.NumOfUnits }).(pulumi.IntOutput)
}

type OceanLaunchSpecAutoscaleHeadroomArrayOutput struct { *pulumi.OutputState}

func (OceanLaunchSpecAutoscaleHeadroomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanLaunchSpecAutoscaleHeadroom)(nil)).Elem()
}

func (o OceanLaunchSpecAutoscaleHeadroomArrayOutput) ToOceanLaunchSpecAutoscaleHeadroomArrayOutput() OceanLaunchSpecAutoscaleHeadroomArrayOutput {
	return o
}

func (o OceanLaunchSpecAutoscaleHeadroomArrayOutput) ToOceanLaunchSpecAutoscaleHeadroomArrayOutputWithContext(ctx context.Context) OceanLaunchSpecAutoscaleHeadroomArrayOutput {
	return o
}

func (o OceanLaunchSpecAutoscaleHeadroomArrayOutput) Index(i pulumi.IntInput) OceanLaunchSpecAutoscaleHeadroomOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) OceanLaunchSpecAutoscaleHeadroom {
		return vs[0].([]OceanLaunchSpecAutoscaleHeadroom)[vs[1].(int)]
	}).(OceanLaunchSpecAutoscaleHeadroomOutput)
}

type OceanTag struct {
	// The tag key.
	Key string `pulumi:"key"`
	// The tag value.
	Value string `pulumi:"value"`
}

type OceanTagInput interface {
	pulumi.Input

	ToOceanTagOutput() OceanTagOutput
	ToOceanTagOutputWithContext(context.Context) OceanTagOutput
}

type OceanTagArgs struct {
	// The tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (OceanTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanTag)(nil)).Elem()
}

func (i OceanTagArgs) ToOceanTagOutput() OceanTagOutput {
	return i.ToOceanTagOutputWithContext(context.Background())
}

func (i OceanTagArgs) ToOceanTagOutputWithContext(ctx context.Context) OceanTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanTagOutput)
}

type OceanTagArrayInput interface {
	pulumi.Input

	ToOceanTagArrayOutput() OceanTagArrayOutput
	ToOceanTagArrayOutputWithContext(context.Context) OceanTagArrayOutput
}

type OceanTagArray []OceanTagInput

func (OceanTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanTag)(nil)).Elem()
}

func (i OceanTagArray) ToOceanTagArrayOutput() OceanTagArrayOutput {
	return i.ToOceanTagArrayOutputWithContext(context.Background())
}

func (i OceanTagArray) ToOceanTagArrayOutputWithContext(ctx context.Context) OceanTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanTagArrayOutput)
}

type OceanTagOutput struct { *pulumi.OutputState }

func (OceanTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanTag)(nil)).Elem()
}

func (o OceanTagOutput) ToOceanTagOutput() OceanTagOutput {
	return o
}

func (o OceanTagOutput) ToOceanTagOutputWithContext(ctx context.Context) OceanTagOutput {
	return o
}

// The tag key.
func (o OceanTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v OceanTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag value.
func (o OceanTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v OceanTag) string { return v.Value }).(pulumi.StringOutput)
}

type OceanTagArrayOutput struct { *pulumi.OutputState}

func (OceanTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanTag)(nil)).Elem()
}

func (o OceanTagArrayOutput) ToOceanTagArrayOutput() OceanTagArrayOutput {
	return o
}

func (o OceanTagArrayOutput) ToOceanTagArrayOutputWithContext(ctx context.Context) OceanTagArrayOutput {
	return o
}

func (o OceanTagArrayOutput) Index(i pulumi.IntInput) OceanTagOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) OceanTag {
		return vs[0].([]OceanTag)[vs[1].(int)]
	}).(OceanTagOutput)
}

type OceanUpdatePolicy struct {
	RollConfig *OceanUpdatePolicyRollConfig `pulumi:"rollConfig"`
	ShouldRoll bool `pulumi:"shouldRoll"`
}

type OceanUpdatePolicyInput interface {
	pulumi.Input

	ToOceanUpdatePolicyOutput() OceanUpdatePolicyOutput
	ToOceanUpdatePolicyOutputWithContext(context.Context) OceanUpdatePolicyOutput
}

type OceanUpdatePolicyArgs struct {
	RollConfig OceanUpdatePolicyRollConfigPtrInput `pulumi:"rollConfig"`
	ShouldRoll pulumi.BoolInput `pulumi:"shouldRoll"`
}

func (OceanUpdatePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanUpdatePolicy)(nil)).Elem()
}

func (i OceanUpdatePolicyArgs) ToOceanUpdatePolicyOutput() OceanUpdatePolicyOutput {
	return i.ToOceanUpdatePolicyOutputWithContext(context.Background())
}

func (i OceanUpdatePolicyArgs) ToOceanUpdatePolicyOutputWithContext(ctx context.Context) OceanUpdatePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanUpdatePolicyOutput)
}

func (i OceanUpdatePolicyArgs) ToOceanUpdatePolicyPtrOutput() OceanUpdatePolicyPtrOutput {
	return i.ToOceanUpdatePolicyPtrOutputWithContext(context.Background())
}

func (i OceanUpdatePolicyArgs) ToOceanUpdatePolicyPtrOutputWithContext(ctx context.Context) OceanUpdatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanUpdatePolicyOutput).ToOceanUpdatePolicyPtrOutputWithContext(ctx)
}

type OceanUpdatePolicyPtrInput interface {
	pulumi.Input

	ToOceanUpdatePolicyPtrOutput() OceanUpdatePolicyPtrOutput
	ToOceanUpdatePolicyPtrOutputWithContext(context.Context) OceanUpdatePolicyPtrOutput
}

type oceanUpdatePolicyPtrType OceanUpdatePolicyArgs

func OceanUpdatePolicyPtr(v *OceanUpdatePolicyArgs) OceanUpdatePolicyPtrInput {	return (*oceanUpdatePolicyPtrType)(v)
}

func (*oceanUpdatePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanUpdatePolicy)(nil)).Elem()
}

func (i *oceanUpdatePolicyPtrType) ToOceanUpdatePolicyPtrOutput() OceanUpdatePolicyPtrOutput {
	return i.ToOceanUpdatePolicyPtrOutputWithContext(context.Background())
}

func (i *oceanUpdatePolicyPtrType) ToOceanUpdatePolicyPtrOutputWithContext(ctx context.Context) OceanUpdatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanUpdatePolicyPtrOutput)
}

type OceanUpdatePolicyOutput struct { *pulumi.OutputState }

func (OceanUpdatePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanUpdatePolicy)(nil)).Elem()
}

func (o OceanUpdatePolicyOutput) ToOceanUpdatePolicyOutput() OceanUpdatePolicyOutput {
	return o
}

func (o OceanUpdatePolicyOutput) ToOceanUpdatePolicyOutputWithContext(ctx context.Context) OceanUpdatePolicyOutput {
	return o
}

func (o OceanUpdatePolicyOutput) ToOceanUpdatePolicyPtrOutput() OceanUpdatePolicyPtrOutput {
	return o.ToOceanUpdatePolicyPtrOutputWithContext(context.Background())
}

func (o OceanUpdatePolicyOutput) ToOceanUpdatePolicyPtrOutputWithContext(ctx context.Context) OceanUpdatePolicyPtrOutput {
	return o.ApplyT(func(v OceanUpdatePolicy) *OceanUpdatePolicy {
		return &v
	}).(OceanUpdatePolicyPtrOutput)
}
func (o OceanUpdatePolicyOutput) RollConfig() OceanUpdatePolicyRollConfigPtrOutput {
	return o.ApplyT(func (v OceanUpdatePolicy) *OceanUpdatePolicyRollConfig { return v.RollConfig }).(OceanUpdatePolicyRollConfigPtrOutput)
}

func (o OceanUpdatePolicyOutput) ShouldRoll() pulumi.BoolOutput {
	return o.ApplyT(func (v OceanUpdatePolicy) bool { return v.ShouldRoll }).(pulumi.BoolOutput)
}

type OceanUpdatePolicyPtrOutput struct { *pulumi.OutputState}

func (OceanUpdatePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanUpdatePolicy)(nil)).Elem()
}

func (o OceanUpdatePolicyPtrOutput) ToOceanUpdatePolicyPtrOutput() OceanUpdatePolicyPtrOutput {
	return o
}

func (o OceanUpdatePolicyPtrOutput) ToOceanUpdatePolicyPtrOutputWithContext(ctx context.Context) OceanUpdatePolicyPtrOutput {
	return o
}

func (o OceanUpdatePolicyPtrOutput) Elem() OceanUpdatePolicyOutput {
	return o.ApplyT(func (v *OceanUpdatePolicy) OceanUpdatePolicy { return *v }).(OceanUpdatePolicyOutput)
}

func (o OceanUpdatePolicyPtrOutput) RollConfig() OceanUpdatePolicyRollConfigPtrOutput {
	return o.ApplyT(func (v OceanUpdatePolicy) *OceanUpdatePolicyRollConfig { return v.RollConfig }).(OceanUpdatePolicyRollConfigPtrOutput)
}

func (o OceanUpdatePolicyPtrOutput) ShouldRoll() pulumi.BoolOutput {
	return o.ApplyT(func (v OceanUpdatePolicy) bool { return v.ShouldRoll }).(pulumi.BoolOutput)
}

type OceanUpdatePolicyRollConfig struct {
	BatchSizePercentage int `pulumi:"batchSizePercentage"`
}

type OceanUpdatePolicyRollConfigInput interface {
	pulumi.Input

	ToOceanUpdatePolicyRollConfigOutput() OceanUpdatePolicyRollConfigOutput
	ToOceanUpdatePolicyRollConfigOutputWithContext(context.Context) OceanUpdatePolicyRollConfigOutput
}

type OceanUpdatePolicyRollConfigArgs struct {
	BatchSizePercentage pulumi.IntInput `pulumi:"batchSizePercentage"`
}

func (OceanUpdatePolicyRollConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanUpdatePolicyRollConfig)(nil)).Elem()
}

func (i OceanUpdatePolicyRollConfigArgs) ToOceanUpdatePolicyRollConfigOutput() OceanUpdatePolicyRollConfigOutput {
	return i.ToOceanUpdatePolicyRollConfigOutputWithContext(context.Background())
}

func (i OceanUpdatePolicyRollConfigArgs) ToOceanUpdatePolicyRollConfigOutputWithContext(ctx context.Context) OceanUpdatePolicyRollConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanUpdatePolicyRollConfigOutput)
}

func (i OceanUpdatePolicyRollConfigArgs) ToOceanUpdatePolicyRollConfigPtrOutput() OceanUpdatePolicyRollConfigPtrOutput {
	return i.ToOceanUpdatePolicyRollConfigPtrOutputWithContext(context.Background())
}

func (i OceanUpdatePolicyRollConfigArgs) ToOceanUpdatePolicyRollConfigPtrOutputWithContext(ctx context.Context) OceanUpdatePolicyRollConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanUpdatePolicyRollConfigOutput).ToOceanUpdatePolicyRollConfigPtrOutputWithContext(ctx)
}

type OceanUpdatePolicyRollConfigPtrInput interface {
	pulumi.Input

	ToOceanUpdatePolicyRollConfigPtrOutput() OceanUpdatePolicyRollConfigPtrOutput
	ToOceanUpdatePolicyRollConfigPtrOutputWithContext(context.Context) OceanUpdatePolicyRollConfigPtrOutput
}

type oceanUpdatePolicyRollConfigPtrType OceanUpdatePolicyRollConfigArgs

func OceanUpdatePolicyRollConfigPtr(v *OceanUpdatePolicyRollConfigArgs) OceanUpdatePolicyRollConfigPtrInput {	return (*oceanUpdatePolicyRollConfigPtrType)(v)
}

func (*oceanUpdatePolicyRollConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanUpdatePolicyRollConfig)(nil)).Elem()
}

func (i *oceanUpdatePolicyRollConfigPtrType) ToOceanUpdatePolicyRollConfigPtrOutput() OceanUpdatePolicyRollConfigPtrOutput {
	return i.ToOceanUpdatePolicyRollConfigPtrOutputWithContext(context.Background())
}

func (i *oceanUpdatePolicyRollConfigPtrType) ToOceanUpdatePolicyRollConfigPtrOutputWithContext(ctx context.Context) OceanUpdatePolicyRollConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanUpdatePolicyRollConfigPtrOutput)
}

type OceanUpdatePolicyRollConfigOutput struct { *pulumi.OutputState }

func (OceanUpdatePolicyRollConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanUpdatePolicyRollConfig)(nil)).Elem()
}

func (o OceanUpdatePolicyRollConfigOutput) ToOceanUpdatePolicyRollConfigOutput() OceanUpdatePolicyRollConfigOutput {
	return o
}

func (o OceanUpdatePolicyRollConfigOutput) ToOceanUpdatePolicyRollConfigOutputWithContext(ctx context.Context) OceanUpdatePolicyRollConfigOutput {
	return o
}

func (o OceanUpdatePolicyRollConfigOutput) ToOceanUpdatePolicyRollConfigPtrOutput() OceanUpdatePolicyRollConfigPtrOutput {
	return o.ToOceanUpdatePolicyRollConfigPtrOutputWithContext(context.Background())
}

func (o OceanUpdatePolicyRollConfigOutput) ToOceanUpdatePolicyRollConfigPtrOutputWithContext(ctx context.Context) OceanUpdatePolicyRollConfigPtrOutput {
	return o.ApplyT(func(v OceanUpdatePolicyRollConfig) *OceanUpdatePolicyRollConfig {
		return &v
	}).(OceanUpdatePolicyRollConfigPtrOutput)
}
func (o OceanUpdatePolicyRollConfigOutput) BatchSizePercentage() pulumi.IntOutput {
	return o.ApplyT(func (v OceanUpdatePolicyRollConfig) int { return v.BatchSizePercentage }).(pulumi.IntOutput)
}

type OceanUpdatePolicyRollConfigPtrOutput struct { *pulumi.OutputState}

func (OceanUpdatePolicyRollConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanUpdatePolicyRollConfig)(nil)).Elem()
}

func (o OceanUpdatePolicyRollConfigPtrOutput) ToOceanUpdatePolicyRollConfigPtrOutput() OceanUpdatePolicyRollConfigPtrOutput {
	return o
}

func (o OceanUpdatePolicyRollConfigPtrOutput) ToOceanUpdatePolicyRollConfigPtrOutputWithContext(ctx context.Context) OceanUpdatePolicyRollConfigPtrOutput {
	return o
}

func (o OceanUpdatePolicyRollConfigPtrOutput) Elem() OceanUpdatePolicyRollConfigOutput {
	return o.ApplyT(func (v *OceanUpdatePolicyRollConfig) OceanUpdatePolicyRollConfig { return *v }).(OceanUpdatePolicyRollConfigOutput)
}

func (o OceanUpdatePolicyRollConfigPtrOutput) BatchSizePercentage() pulumi.IntOutput {
	return o.ApplyT(func (v OceanUpdatePolicyRollConfig) int { return v.BatchSizePercentage }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(OceanAutoscalerOutput{})
	pulumi.RegisterOutputType(OceanAutoscalerPtrOutput{})
	pulumi.RegisterOutputType(OceanAutoscalerDownOutput{})
	pulumi.RegisterOutputType(OceanAutoscalerDownPtrOutput{})
	pulumi.RegisterOutputType(OceanAutoscalerHeadroomOutput{})
	pulumi.RegisterOutputType(OceanAutoscalerHeadroomPtrOutput{})
	pulumi.RegisterOutputType(OceanAutoscalerResourceLimitsOutput{})
	pulumi.RegisterOutputType(OceanAutoscalerResourceLimitsPtrOutput{})
	pulumi.RegisterOutputType(OceanLaunchSpecAttributeOutput{})
	pulumi.RegisterOutputType(OceanLaunchSpecAttributeArrayOutput{})
	pulumi.RegisterOutputType(OceanLaunchSpecAutoscaleHeadroomOutput{})
	pulumi.RegisterOutputType(OceanLaunchSpecAutoscaleHeadroomArrayOutput{})
	pulumi.RegisterOutputType(OceanTagOutput{})
	pulumi.RegisterOutputType(OceanTagArrayOutput{})
	pulumi.RegisterOutputType(OceanUpdatePolicyOutput{})
	pulumi.RegisterOutputType(OceanUpdatePolicyPtrOutput{})
	pulumi.RegisterOutputType(OceanUpdatePolicyRollConfigOutput{})
	pulumi.RegisterOutputType(OceanUpdatePolicyRollConfigPtrOutput{})
}

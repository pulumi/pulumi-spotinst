// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package gcp

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Spotinst elastigroup GCP resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-spotinst/blob/master/website/docs/r/elastigroup_gcp.html.markdown.
type Elastigroup struct {
	pulumi.CustomResourceState

	AutoHealing pulumi.BoolPtrOutput `pulumi:"autoHealing"`
	// List of availability zones for the group.
	AvailabilityZones pulumi.StringArrayOutput `pulumi:"availabilityZones"`
	BackendServices ElastigroupBackendServiceArrayOutput `pulumi:"backendServices"`
	// The region your GCP group will be created in.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The desired number of instances the group should have at any time.
	DesiredCapacity pulumi.IntOutput `pulumi:"desiredCapacity"`
	Disks ElastigroupDiskArrayOutput `pulumi:"disks"`
	// Time (seconds) the instance is allowed to run after it is detached from the group. This is to allow the instance time to drain all the current TCP connections before terminating it.
	DrainingTimeout pulumi.IntPtrOutput `pulumi:"drainingTimeout"`
	// Activate fallback-to-on-demand. When provisioning an instance, if no Preemptible market is available, fallback-to-on-demand will provision an On-Demand instance to maintain the group capacity.
	FallbackToOndemand pulumi.BoolPtrOutput `pulumi:"fallbackToOndemand"`
	Gpu ElastigroupGpuArrayOutput `pulumi:"gpu"`
	HealthCheckGracePeriod pulumi.IntPtrOutput `pulumi:"healthCheckGracePeriod"`
	HealthCheckType pulumi.StringPtrOutput `pulumi:"healthCheckType"`
	// Defines a set of custom instance types. Required if instanceTypesPreemptible and instanceTypesOndemand are not set.
	InstanceTypesCustoms ElastigroupInstanceTypesCustomArrayOutput `pulumi:"instanceTypesCustoms"`
	// The regular VM instance type to use for mixed-type groups and when falling back to on-demand. Required if instanceTypesPreemptible is not set.
	InstanceTypesOndemand pulumi.StringPtrOutput `pulumi:"instanceTypesOndemand"`
	// The preemptible VMs instance type. To maximize cost savings and market availability, select as many types as possible. Required if instanceTypesOndemand is not set.
	InstanceTypesPreemptibles pulumi.StringArrayOutput `pulumi:"instanceTypesPreemptibles"`
	IntegrationDockerSwarm ElastigroupIntegrationDockerSwarmPtrOutput `pulumi:"integrationDockerSwarm"`
	IntegrationGke ElastigroupIntegrationGkePtrOutput `pulumi:"integrationGke"`
	IpForwarding pulumi.BoolPtrOutput `pulumi:"ipForwarding"`
	// Array of objects with key-value pairs.
	Labels ElastigroupLabelArrayOutput `pulumi:"labels"`
	// The maximum number of instances the group should have at any time.
	MaxSize pulumi.IntOutput `pulumi:"maxSize"`
	// Array of objects with key-value pairs.
	Metadatas ElastigroupMetadataArrayOutput `pulumi:"metadatas"`
	// The minimum number of instances the group should have at any time.
	MinSize pulumi.IntOutput `pulumi:"minSize"`
	// The group name. 
	Name pulumi.StringOutput `pulumi:"name"`
	NetworkInterfaces ElastigroupNetworkInterfaceArrayOutput `pulumi:"networkInterfaces"`
	OndemandCount pulumi.IntPtrOutput `pulumi:"ondemandCount"`
	// Percentage of Preemptible VMs to spin up from the "desiredCapacity".
	PreemptiblePercentage pulumi.IntPtrOutput `pulumi:"preemptiblePercentage"`
	ScalingDownPolicies ElastigroupScalingDownPolicyArrayOutput `pulumi:"scalingDownPolicies"`
	ScalingUpPolicies ElastigroupScalingUpPolicyArrayOutput `pulumi:"scalingUpPolicies"`
	ScheduledTasks ElastigroupScheduledTaskArrayOutput `pulumi:"scheduledTasks"`
	// The email of the service account in which the group instances will be launched.
	ServiceAccount pulumi.StringPtrOutput `pulumi:"serviceAccount"`
	// The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
	ShutdownScript pulumi.StringPtrOutput `pulumi:"shutdownScript"`
	// Create and run your own startup scripts on your virtual machines to perform automated tasks every time your instance boots up.
	StartupScript pulumi.StringPtrOutput `pulumi:"startupScript"`
	// A list of regions and subnets.
	Subnets ElastigroupSubnetArrayOutput `pulumi:"subnets"`
	// Tags to mark created instances.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	UnhealthyDuration pulumi.IntPtrOutput `pulumi:"unhealthyDuration"`
}

// NewElastigroup registers a new resource with the given unique name, arguments, and options.
func NewElastigroup(ctx *pulumi.Context,
	name string, args *ElastigroupArgs, opts ...pulumi.ResourceOption) (*Elastigroup, error) {
	if args == nil || args.DesiredCapacity == nil {
		return nil, errors.New("missing required argument 'DesiredCapacity'")
	}
	if args == nil {
		args = &ElastigroupArgs{}
	}
	var resource Elastigroup
	err := ctx.RegisterResource("spotinst:gcp/elastigroup:Elastigroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetElastigroup gets an existing Elastigroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetElastigroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ElastigroupState, opts ...pulumi.ResourceOption) (*Elastigroup, error) {
	var resource Elastigroup
	err := ctx.ReadResource("spotinst:gcp/elastigroup:Elastigroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Elastigroup resources.
type elastigroupState struct {
	AutoHealing *bool `pulumi:"autoHealing"`
	// List of availability zones for the group.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	BackendServices []ElastigroupBackendService `pulumi:"backendServices"`
	// The region your GCP group will be created in.
	Description *string `pulumi:"description"`
	// The desired number of instances the group should have at any time.
	DesiredCapacity *int `pulumi:"desiredCapacity"`
	Disks []ElastigroupDisk `pulumi:"disks"`
	// Time (seconds) the instance is allowed to run after it is detached from the group. This is to allow the instance time to drain all the current TCP connections before terminating it.
	DrainingTimeout *int `pulumi:"drainingTimeout"`
	// Activate fallback-to-on-demand. When provisioning an instance, if no Preemptible market is available, fallback-to-on-demand will provision an On-Demand instance to maintain the group capacity.
	FallbackToOndemand *bool `pulumi:"fallbackToOndemand"`
	Gpu []ElastigroupGpu `pulumi:"gpu"`
	HealthCheckGracePeriod *int `pulumi:"healthCheckGracePeriod"`
	HealthCheckType *string `pulumi:"healthCheckType"`
	// Defines a set of custom instance types. Required if instanceTypesPreemptible and instanceTypesOndemand are not set.
	InstanceTypesCustoms []ElastigroupInstanceTypesCustom `pulumi:"instanceTypesCustoms"`
	// The regular VM instance type to use for mixed-type groups and when falling back to on-demand. Required if instanceTypesPreemptible is not set.
	InstanceTypesOndemand *string `pulumi:"instanceTypesOndemand"`
	// The preemptible VMs instance type. To maximize cost savings and market availability, select as many types as possible. Required if instanceTypesOndemand is not set.
	InstanceTypesPreemptibles []string `pulumi:"instanceTypesPreemptibles"`
	IntegrationDockerSwarm *ElastigroupIntegrationDockerSwarm `pulumi:"integrationDockerSwarm"`
	IntegrationGke *ElastigroupIntegrationGke `pulumi:"integrationGke"`
	IpForwarding *bool `pulumi:"ipForwarding"`
	// Array of objects with key-value pairs.
	Labels []ElastigroupLabel `pulumi:"labels"`
	// The maximum number of instances the group should have at any time.
	MaxSize *int `pulumi:"maxSize"`
	// Array of objects with key-value pairs.
	Metadatas []ElastigroupMetadata `pulumi:"metadatas"`
	// The minimum number of instances the group should have at any time.
	MinSize *int `pulumi:"minSize"`
	// The group name. 
	Name *string `pulumi:"name"`
	NetworkInterfaces []ElastigroupNetworkInterface `pulumi:"networkInterfaces"`
	OndemandCount *int `pulumi:"ondemandCount"`
	// Percentage of Preemptible VMs to spin up from the "desiredCapacity".
	PreemptiblePercentage *int `pulumi:"preemptiblePercentage"`
	ScalingDownPolicies []ElastigroupScalingDownPolicy `pulumi:"scalingDownPolicies"`
	ScalingUpPolicies []ElastigroupScalingUpPolicy `pulumi:"scalingUpPolicies"`
	ScheduledTasks []ElastigroupScheduledTask `pulumi:"scheduledTasks"`
	// The email of the service account in which the group instances will be launched.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
	ShutdownScript *string `pulumi:"shutdownScript"`
	// Create and run your own startup scripts on your virtual machines to perform automated tasks every time your instance boots up.
	StartupScript *string `pulumi:"startupScript"`
	// A list of regions and subnets.
	Subnets []ElastigroupSubnet `pulumi:"subnets"`
	// Tags to mark created instances.
	Tags []string `pulumi:"tags"`
	UnhealthyDuration *int `pulumi:"unhealthyDuration"`
}

type ElastigroupState struct {
	AutoHealing pulumi.BoolPtrInput
	// List of availability zones for the group.
	AvailabilityZones pulumi.StringArrayInput
	BackendServices ElastigroupBackendServiceArrayInput
	// The region your GCP group will be created in.
	Description pulumi.StringPtrInput
	// The desired number of instances the group should have at any time.
	DesiredCapacity pulumi.IntPtrInput
	Disks ElastigroupDiskArrayInput
	// Time (seconds) the instance is allowed to run after it is detached from the group. This is to allow the instance time to drain all the current TCP connections before terminating it.
	DrainingTimeout pulumi.IntPtrInput
	// Activate fallback-to-on-demand. When provisioning an instance, if no Preemptible market is available, fallback-to-on-demand will provision an On-Demand instance to maintain the group capacity.
	FallbackToOndemand pulumi.BoolPtrInput
	Gpu ElastigroupGpuArrayInput
	HealthCheckGracePeriod pulumi.IntPtrInput
	HealthCheckType pulumi.StringPtrInput
	// Defines a set of custom instance types. Required if instanceTypesPreemptible and instanceTypesOndemand are not set.
	InstanceTypesCustoms ElastigroupInstanceTypesCustomArrayInput
	// The regular VM instance type to use for mixed-type groups and when falling back to on-demand. Required if instanceTypesPreemptible is not set.
	InstanceTypesOndemand pulumi.StringPtrInput
	// The preemptible VMs instance type. To maximize cost savings and market availability, select as many types as possible. Required if instanceTypesOndemand is not set.
	InstanceTypesPreemptibles pulumi.StringArrayInput
	IntegrationDockerSwarm ElastigroupIntegrationDockerSwarmPtrInput
	IntegrationGke ElastigroupIntegrationGkePtrInput
	IpForwarding pulumi.BoolPtrInput
	// Array of objects with key-value pairs.
	Labels ElastigroupLabelArrayInput
	// The maximum number of instances the group should have at any time.
	MaxSize pulumi.IntPtrInput
	// Array of objects with key-value pairs.
	Metadatas ElastigroupMetadataArrayInput
	// The minimum number of instances the group should have at any time.
	MinSize pulumi.IntPtrInput
	// The group name. 
	Name pulumi.StringPtrInput
	NetworkInterfaces ElastigroupNetworkInterfaceArrayInput
	OndemandCount pulumi.IntPtrInput
	// Percentage of Preemptible VMs to spin up from the "desiredCapacity".
	PreemptiblePercentage pulumi.IntPtrInput
	ScalingDownPolicies ElastigroupScalingDownPolicyArrayInput
	ScalingUpPolicies ElastigroupScalingUpPolicyArrayInput
	ScheduledTasks ElastigroupScheduledTaskArrayInput
	// The email of the service account in which the group instances will be launched.
	ServiceAccount pulumi.StringPtrInput
	// The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
	ShutdownScript pulumi.StringPtrInput
	// Create and run your own startup scripts on your virtual machines to perform automated tasks every time your instance boots up.
	StartupScript pulumi.StringPtrInput
	// A list of regions and subnets.
	Subnets ElastigroupSubnetArrayInput
	// Tags to mark created instances.
	Tags pulumi.StringArrayInput
	UnhealthyDuration pulumi.IntPtrInput
}

func (ElastigroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*elastigroupState)(nil)).Elem()
}

type elastigroupArgs struct {
	AutoHealing *bool `pulumi:"autoHealing"`
	// List of availability zones for the group.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	BackendServices []ElastigroupBackendService `pulumi:"backendServices"`
	// The region your GCP group will be created in.
	Description *string `pulumi:"description"`
	// The desired number of instances the group should have at any time.
	DesiredCapacity int `pulumi:"desiredCapacity"`
	Disks []ElastigroupDisk `pulumi:"disks"`
	// Time (seconds) the instance is allowed to run after it is detached from the group. This is to allow the instance time to drain all the current TCP connections before terminating it.
	DrainingTimeout *int `pulumi:"drainingTimeout"`
	// Activate fallback-to-on-demand. When provisioning an instance, if no Preemptible market is available, fallback-to-on-demand will provision an On-Demand instance to maintain the group capacity.
	FallbackToOndemand *bool `pulumi:"fallbackToOndemand"`
	Gpu []ElastigroupGpu `pulumi:"gpu"`
	HealthCheckGracePeriod *int `pulumi:"healthCheckGracePeriod"`
	HealthCheckType *string `pulumi:"healthCheckType"`
	// Defines a set of custom instance types. Required if instanceTypesPreemptible and instanceTypesOndemand are not set.
	InstanceTypesCustoms []ElastigroupInstanceTypesCustom `pulumi:"instanceTypesCustoms"`
	// The regular VM instance type to use for mixed-type groups and when falling back to on-demand. Required if instanceTypesPreemptible is not set.
	InstanceTypesOndemand *string `pulumi:"instanceTypesOndemand"`
	// The preemptible VMs instance type. To maximize cost savings and market availability, select as many types as possible. Required if instanceTypesOndemand is not set.
	InstanceTypesPreemptibles []string `pulumi:"instanceTypesPreemptibles"`
	IntegrationDockerSwarm *ElastigroupIntegrationDockerSwarm `pulumi:"integrationDockerSwarm"`
	IntegrationGke *ElastigroupIntegrationGke `pulumi:"integrationGke"`
	IpForwarding *bool `pulumi:"ipForwarding"`
	// Array of objects with key-value pairs.
	Labels []ElastigroupLabel `pulumi:"labels"`
	// The maximum number of instances the group should have at any time.
	MaxSize *int `pulumi:"maxSize"`
	// Array of objects with key-value pairs.
	Metadatas []ElastigroupMetadata `pulumi:"metadatas"`
	// The minimum number of instances the group should have at any time.
	MinSize *int `pulumi:"minSize"`
	// The group name. 
	Name *string `pulumi:"name"`
	NetworkInterfaces []ElastigroupNetworkInterface `pulumi:"networkInterfaces"`
	OndemandCount *int `pulumi:"ondemandCount"`
	// Percentage of Preemptible VMs to spin up from the "desiredCapacity".
	PreemptiblePercentage *int `pulumi:"preemptiblePercentage"`
	ScalingDownPolicies []ElastigroupScalingDownPolicy `pulumi:"scalingDownPolicies"`
	ScalingUpPolicies []ElastigroupScalingUpPolicy `pulumi:"scalingUpPolicies"`
	ScheduledTasks []ElastigroupScheduledTask `pulumi:"scheduledTasks"`
	// The email of the service account in which the group instances will be launched.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
	ShutdownScript *string `pulumi:"shutdownScript"`
	// Create and run your own startup scripts on your virtual machines to perform automated tasks every time your instance boots up.
	StartupScript *string `pulumi:"startupScript"`
	// A list of regions and subnets.
	Subnets []ElastigroupSubnet `pulumi:"subnets"`
	// Tags to mark created instances.
	Tags []string `pulumi:"tags"`
	UnhealthyDuration *int `pulumi:"unhealthyDuration"`
}

// The set of arguments for constructing a Elastigroup resource.
type ElastigroupArgs struct {
	AutoHealing pulumi.BoolPtrInput
	// List of availability zones for the group.
	AvailabilityZones pulumi.StringArrayInput
	BackendServices ElastigroupBackendServiceArrayInput
	// The region your GCP group will be created in.
	Description pulumi.StringPtrInput
	// The desired number of instances the group should have at any time.
	DesiredCapacity pulumi.IntInput
	Disks ElastigroupDiskArrayInput
	// Time (seconds) the instance is allowed to run after it is detached from the group. This is to allow the instance time to drain all the current TCP connections before terminating it.
	DrainingTimeout pulumi.IntPtrInput
	// Activate fallback-to-on-demand. When provisioning an instance, if no Preemptible market is available, fallback-to-on-demand will provision an On-Demand instance to maintain the group capacity.
	FallbackToOndemand pulumi.BoolPtrInput
	Gpu ElastigroupGpuArrayInput
	HealthCheckGracePeriod pulumi.IntPtrInput
	HealthCheckType pulumi.StringPtrInput
	// Defines a set of custom instance types. Required if instanceTypesPreemptible and instanceTypesOndemand are not set.
	InstanceTypesCustoms ElastigroupInstanceTypesCustomArrayInput
	// The regular VM instance type to use for mixed-type groups and when falling back to on-demand. Required if instanceTypesPreemptible is not set.
	InstanceTypesOndemand pulumi.StringPtrInput
	// The preemptible VMs instance type. To maximize cost savings and market availability, select as many types as possible. Required if instanceTypesOndemand is not set.
	InstanceTypesPreemptibles pulumi.StringArrayInput
	IntegrationDockerSwarm ElastigroupIntegrationDockerSwarmPtrInput
	IntegrationGke ElastigroupIntegrationGkePtrInput
	IpForwarding pulumi.BoolPtrInput
	// Array of objects with key-value pairs.
	Labels ElastigroupLabelArrayInput
	// The maximum number of instances the group should have at any time.
	MaxSize pulumi.IntPtrInput
	// Array of objects with key-value pairs.
	Metadatas ElastigroupMetadataArrayInput
	// The minimum number of instances the group should have at any time.
	MinSize pulumi.IntPtrInput
	// The group name. 
	Name pulumi.StringPtrInput
	NetworkInterfaces ElastigroupNetworkInterfaceArrayInput
	OndemandCount pulumi.IntPtrInput
	// Percentage of Preemptible VMs to spin up from the "desiredCapacity".
	PreemptiblePercentage pulumi.IntPtrInput
	ScalingDownPolicies ElastigroupScalingDownPolicyArrayInput
	ScalingUpPolicies ElastigroupScalingUpPolicyArrayInput
	ScheduledTasks ElastigroupScheduledTaskArrayInput
	// The email of the service account in which the group instances will be launched.
	ServiceAccount pulumi.StringPtrInput
	// The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
	ShutdownScript pulumi.StringPtrInput
	// Create and run your own startup scripts on your virtual machines to perform automated tasks every time your instance boots up.
	StartupScript pulumi.StringPtrInput
	// A list of regions and subnets.
	Subnets ElastigroupSubnetArrayInput
	// Tags to mark created instances.
	Tags pulumi.StringArrayInput
	UnhealthyDuration pulumi.IntPtrInput
}

func (ElastigroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*elastigroupArgs)(nil)).Elem()
}


// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package spotinst

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Spotinst credential Azure resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// set credential Azure
//			_, err := spotinst.NewCredentialsAzure(ctx, "credential", &spotinst.CredentialsAzureArgs{
//				AccountId:      pulumi.String("act-123456"),
//				ClientId:       pulumi.String("redacted"),
//				ClientSecret:   pulumi.String("redacted"),
//				TenantId:       pulumi.String("redacted"),
//				SubscriptionId: pulumi.String("redacted"),
//				ExpirationDate: pulumi.String("2025-12-31T23:59:00.000Z"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type CredentialsAzure struct {
	pulumi.CustomResourceState

	// The ID of the account associated with your token.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Set the application ID.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// Set the key secret.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// Set the key secret expiration date.
	ExpirationDate pulumi.StringPtrOutput `pulumi:"expirationDate"`
	// Set the subscription ID.
	SubscriptionId pulumi.StringOutput `pulumi:"subscriptionId"`
	// Set the directory ID.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewCredentialsAzure registers a new resource with the given unique name, arguments, and options.
func NewCredentialsAzure(ctx *pulumi.Context,
	name string, args *CredentialsAzureArgs, opts ...pulumi.ResourceOption) (*CredentialsAzure, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.ClientId == nil {
		return nil, errors.New("invalid value for required argument 'ClientId'")
	}
	if args.ClientSecret == nil {
		return nil, errors.New("invalid value for required argument 'ClientSecret'")
	}
	if args.SubscriptionId == nil {
		return nil, errors.New("invalid value for required argument 'SubscriptionId'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CredentialsAzure
	err := ctx.RegisterResource("spotinst:index/credentialsAzure:CredentialsAzure", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCredentialsAzure gets an existing CredentialsAzure resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCredentialsAzure(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CredentialsAzureState, opts ...pulumi.ResourceOption) (*CredentialsAzure, error) {
	var resource CredentialsAzure
	err := ctx.ReadResource("spotinst:index/credentialsAzure:CredentialsAzure", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CredentialsAzure resources.
type credentialsAzureState struct {
	// The ID of the account associated with your token.
	AccountId *string `pulumi:"accountId"`
	// Set the application ID.
	ClientId *string `pulumi:"clientId"`
	// Set the key secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// Set the key secret expiration date.
	ExpirationDate *string `pulumi:"expirationDate"`
	// Set the subscription ID.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Set the directory ID.
	TenantId *string `pulumi:"tenantId"`
}

type CredentialsAzureState struct {
	// The ID of the account associated with your token.
	AccountId pulumi.StringPtrInput
	// Set the application ID.
	ClientId pulumi.StringPtrInput
	// Set the key secret.
	ClientSecret pulumi.StringPtrInput
	// Set the key secret expiration date.
	ExpirationDate pulumi.StringPtrInput
	// Set the subscription ID.
	SubscriptionId pulumi.StringPtrInput
	// Set the directory ID.
	TenantId pulumi.StringPtrInput
}

func (CredentialsAzureState) ElementType() reflect.Type {
	return reflect.TypeOf((*credentialsAzureState)(nil)).Elem()
}

type credentialsAzureArgs struct {
	// The ID of the account associated with your token.
	AccountId string `pulumi:"accountId"`
	// Set the application ID.
	ClientId string `pulumi:"clientId"`
	// Set the key secret.
	ClientSecret string `pulumi:"clientSecret"`
	// Set the key secret expiration date.
	ExpirationDate *string `pulumi:"expirationDate"`
	// Set the subscription ID.
	SubscriptionId string `pulumi:"subscriptionId"`
	// Set the directory ID.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a CredentialsAzure resource.
type CredentialsAzureArgs struct {
	// The ID of the account associated with your token.
	AccountId pulumi.StringInput
	// Set the application ID.
	ClientId pulumi.StringInput
	// Set the key secret.
	ClientSecret pulumi.StringInput
	// Set the key secret expiration date.
	ExpirationDate pulumi.StringPtrInput
	// Set the subscription ID.
	SubscriptionId pulumi.StringInput
	// Set the directory ID.
	TenantId pulumi.StringInput
}

func (CredentialsAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*credentialsAzureArgs)(nil)).Elem()
}

type CredentialsAzureInput interface {
	pulumi.Input

	ToCredentialsAzureOutput() CredentialsAzureOutput
	ToCredentialsAzureOutputWithContext(ctx context.Context) CredentialsAzureOutput
}

func (*CredentialsAzure) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialsAzure)(nil)).Elem()
}

func (i *CredentialsAzure) ToCredentialsAzureOutput() CredentialsAzureOutput {
	return i.ToCredentialsAzureOutputWithContext(context.Background())
}

func (i *CredentialsAzure) ToCredentialsAzureOutputWithContext(ctx context.Context) CredentialsAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsAzureOutput)
}

// CredentialsAzureArrayInput is an input type that accepts CredentialsAzureArray and CredentialsAzureArrayOutput values.
// You can construct a concrete instance of `CredentialsAzureArrayInput` via:
//
//	CredentialsAzureArray{ CredentialsAzureArgs{...} }
type CredentialsAzureArrayInput interface {
	pulumi.Input

	ToCredentialsAzureArrayOutput() CredentialsAzureArrayOutput
	ToCredentialsAzureArrayOutputWithContext(context.Context) CredentialsAzureArrayOutput
}

type CredentialsAzureArray []CredentialsAzureInput

func (CredentialsAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CredentialsAzure)(nil)).Elem()
}

func (i CredentialsAzureArray) ToCredentialsAzureArrayOutput() CredentialsAzureArrayOutput {
	return i.ToCredentialsAzureArrayOutputWithContext(context.Background())
}

func (i CredentialsAzureArray) ToCredentialsAzureArrayOutputWithContext(ctx context.Context) CredentialsAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsAzureArrayOutput)
}

// CredentialsAzureMapInput is an input type that accepts CredentialsAzureMap and CredentialsAzureMapOutput values.
// You can construct a concrete instance of `CredentialsAzureMapInput` via:
//
//	CredentialsAzureMap{ "key": CredentialsAzureArgs{...} }
type CredentialsAzureMapInput interface {
	pulumi.Input

	ToCredentialsAzureMapOutput() CredentialsAzureMapOutput
	ToCredentialsAzureMapOutputWithContext(context.Context) CredentialsAzureMapOutput
}

type CredentialsAzureMap map[string]CredentialsAzureInput

func (CredentialsAzureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CredentialsAzure)(nil)).Elem()
}

func (i CredentialsAzureMap) ToCredentialsAzureMapOutput() CredentialsAzureMapOutput {
	return i.ToCredentialsAzureMapOutputWithContext(context.Background())
}

func (i CredentialsAzureMap) ToCredentialsAzureMapOutputWithContext(ctx context.Context) CredentialsAzureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsAzureMapOutput)
}

type CredentialsAzureOutput struct{ *pulumi.OutputState }

func (CredentialsAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialsAzure)(nil)).Elem()
}

func (o CredentialsAzureOutput) ToCredentialsAzureOutput() CredentialsAzureOutput {
	return o
}

func (o CredentialsAzureOutput) ToCredentialsAzureOutputWithContext(ctx context.Context) CredentialsAzureOutput {
	return o
}

// The ID of the account associated with your token.
func (o CredentialsAzureOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialsAzure) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Set the application ID.
func (o CredentialsAzureOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialsAzure) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// Set the key secret.
func (o CredentialsAzureOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialsAzure) pulumi.StringOutput { return v.ClientSecret }).(pulumi.StringOutput)
}

// Set the key secret expiration date.
func (o CredentialsAzureOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CredentialsAzure) pulumi.StringPtrOutput { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// Set the subscription ID.
func (o CredentialsAzureOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialsAzure) pulumi.StringOutput { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Set the directory ID.
func (o CredentialsAzureOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialsAzure) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type CredentialsAzureArrayOutput struct{ *pulumi.OutputState }

func (CredentialsAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CredentialsAzure)(nil)).Elem()
}

func (o CredentialsAzureArrayOutput) ToCredentialsAzureArrayOutput() CredentialsAzureArrayOutput {
	return o
}

func (o CredentialsAzureArrayOutput) ToCredentialsAzureArrayOutputWithContext(ctx context.Context) CredentialsAzureArrayOutput {
	return o
}

func (o CredentialsAzureArrayOutput) Index(i pulumi.IntInput) CredentialsAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CredentialsAzure {
		return vs[0].([]*CredentialsAzure)[vs[1].(int)]
	}).(CredentialsAzureOutput)
}

type CredentialsAzureMapOutput struct{ *pulumi.OutputState }

func (CredentialsAzureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CredentialsAzure)(nil)).Elem()
}

func (o CredentialsAzureMapOutput) ToCredentialsAzureMapOutput() CredentialsAzureMapOutput {
	return o
}

func (o CredentialsAzureMapOutput) ToCredentialsAzureMapOutputWithContext(ctx context.Context) CredentialsAzureMapOutput {
	return o
}

func (o CredentialsAzureMapOutput) MapIndex(k pulumi.StringInput) CredentialsAzureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CredentialsAzure {
		return vs[0].(map[string]*CredentialsAzure)[vs[1].(string)]
	}).(CredentialsAzureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CredentialsAzureInput)(nil)).Elem(), &CredentialsAzure{})
	pulumi.RegisterInputType(reflect.TypeOf((*CredentialsAzureArrayInput)(nil)).Elem(), CredentialsAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CredentialsAzureMapInput)(nil)).Elem(), CredentialsAzureMap{})
	pulumi.RegisterOutputType(CredentialsAzureOutput{})
	pulumi.RegisterOutputType(CredentialsAzureArrayOutput{})
	pulumi.RegisterOutputType(CredentialsAzureMapOutput{})
}

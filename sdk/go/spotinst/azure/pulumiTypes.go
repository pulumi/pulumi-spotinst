// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azure

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-spotinst/sdk/v3/go/spotinst/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type OceanNpAutoscaler struct {
	// Auto Scaling scale down operations.
	AutoscaleDown *OceanNpAutoscalerAutoscaleDown `pulumi:"autoscaleDown"`
	// Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.
	AutoscaleHeadroom *OceanNpAutoscalerAutoscaleHeadroom `pulumi:"autoscaleHeadroom"`
	// Enable the Ocean Kubernetes Autoscaler.
	AutoscaleIsEnabled *bool `pulumi:"autoscaleIsEnabled"`
	// Optionally set upper and lower bounds on the resource usage of the cluster.
	ResourceLimits *OceanNpAutoscalerResourceLimits `pulumi:"resourceLimits"`
}

// OceanNpAutoscalerInput is an input type that accepts OceanNpAutoscalerArgs and OceanNpAutoscalerOutput values.
// You can construct a concrete instance of `OceanNpAutoscalerInput` via:
//
//	OceanNpAutoscalerArgs{...}
type OceanNpAutoscalerInput interface {
	pulumi.Input

	ToOceanNpAutoscalerOutput() OceanNpAutoscalerOutput
	ToOceanNpAutoscalerOutputWithContext(context.Context) OceanNpAutoscalerOutput
}

type OceanNpAutoscalerArgs struct {
	// Auto Scaling scale down operations.
	AutoscaleDown OceanNpAutoscalerAutoscaleDownPtrInput `pulumi:"autoscaleDown"`
	// Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.
	AutoscaleHeadroom OceanNpAutoscalerAutoscaleHeadroomPtrInput `pulumi:"autoscaleHeadroom"`
	// Enable the Ocean Kubernetes Autoscaler.
	AutoscaleIsEnabled pulumi.BoolPtrInput `pulumi:"autoscaleIsEnabled"`
	// Optionally set upper and lower bounds on the resource usage of the cluster.
	ResourceLimits OceanNpAutoscalerResourceLimitsPtrInput `pulumi:"resourceLimits"`
}

func (OceanNpAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpAutoscaler)(nil)).Elem()
}

func (i OceanNpAutoscalerArgs) ToOceanNpAutoscalerOutput() OceanNpAutoscalerOutput {
	return i.ToOceanNpAutoscalerOutputWithContext(context.Background())
}

func (i OceanNpAutoscalerArgs) ToOceanNpAutoscalerOutputWithContext(ctx context.Context) OceanNpAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerOutput)
}

func (i OceanNpAutoscalerArgs) ToOceanNpAutoscalerPtrOutput() OceanNpAutoscalerPtrOutput {
	return i.ToOceanNpAutoscalerPtrOutputWithContext(context.Background())
}

func (i OceanNpAutoscalerArgs) ToOceanNpAutoscalerPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerOutput).ToOceanNpAutoscalerPtrOutputWithContext(ctx)
}

// OceanNpAutoscalerPtrInput is an input type that accepts OceanNpAutoscalerArgs, OceanNpAutoscalerPtr and OceanNpAutoscalerPtrOutput values.
// You can construct a concrete instance of `OceanNpAutoscalerPtrInput` via:
//
//	        OceanNpAutoscalerArgs{...}
//
//	or:
//
//	        nil
type OceanNpAutoscalerPtrInput interface {
	pulumi.Input

	ToOceanNpAutoscalerPtrOutput() OceanNpAutoscalerPtrOutput
	ToOceanNpAutoscalerPtrOutputWithContext(context.Context) OceanNpAutoscalerPtrOutput
}

type oceanNpAutoscalerPtrType OceanNpAutoscalerArgs

func OceanNpAutoscalerPtr(v *OceanNpAutoscalerArgs) OceanNpAutoscalerPtrInput {
	return (*oceanNpAutoscalerPtrType)(v)
}

func (*oceanNpAutoscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpAutoscaler)(nil)).Elem()
}

func (i *oceanNpAutoscalerPtrType) ToOceanNpAutoscalerPtrOutput() OceanNpAutoscalerPtrOutput {
	return i.ToOceanNpAutoscalerPtrOutputWithContext(context.Background())
}

func (i *oceanNpAutoscalerPtrType) ToOceanNpAutoscalerPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerPtrOutput)
}

type OceanNpAutoscalerOutput struct{ *pulumi.OutputState }

func (OceanNpAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpAutoscaler)(nil)).Elem()
}

func (o OceanNpAutoscalerOutput) ToOceanNpAutoscalerOutput() OceanNpAutoscalerOutput {
	return o
}

func (o OceanNpAutoscalerOutput) ToOceanNpAutoscalerOutputWithContext(ctx context.Context) OceanNpAutoscalerOutput {
	return o
}

func (o OceanNpAutoscalerOutput) ToOceanNpAutoscalerPtrOutput() OceanNpAutoscalerPtrOutput {
	return o.ToOceanNpAutoscalerPtrOutputWithContext(context.Background())
}

func (o OceanNpAutoscalerOutput) ToOceanNpAutoscalerPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpAutoscaler) *OceanNpAutoscaler {
		return &v
	}).(OceanNpAutoscalerPtrOutput)
}

// Auto Scaling scale down operations.
func (o OceanNpAutoscalerOutput) AutoscaleDown() OceanNpAutoscalerAutoscaleDownPtrOutput {
	return o.ApplyT(func(v OceanNpAutoscaler) *OceanNpAutoscalerAutoscaleDown { return v.AutoscaleDown }).(OceanNpAutoscalerAutoscaleDownPtrOutput)
}

// Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.
func (o OceanNpAutoscalerOutput) AutoscaleHeadroom() OceanNpAutoscalerAutoscaleHeadroomPtrOutput {
	return o.ApplyT(func(v OceanNpAutoscaler) *OceanNpAutoscalerAutoscaleHeadroom { return v.AutoscaleHeadroom }).(OceanNpAutoscalerAutoscaleHeadroomPtrOutput)
}

// Enable the Ocean Kubernetes Autoscaler.
func (o OceanNpAutoscalerOutput) AutoscaleIsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpAutoscaler) *bool { return v.AutoscaleIsEnabled }).(pulumi.BoolPtrOutput)
}

// Optionally set upper and lower bounds on the resource usage of the cluster.
func (o OceanNpAutoscalerOutput) ResourceLimits() OceanNpAutoscalerResourceLimitsPtrOutput {
	return o.ApplyT(func(v OceanNpAutoscaler) *OceanNpAutoscalerResourceLimits { return v.ResourceLimits }).(OceanNpAutoscalerResourceLimitsPtrOutput)
}

type OceanNpAutoscalerPtrOutput struct{ *pulumi.OutputState }

func (OceanNpAutoscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpAutoscaler)(nil)).Elem()
}

func (o OceanNpAutoscalerPtrOutput) ToOceanNpAutoscalerPtrOutput() OceanNpAutoscalerPtrOutput {
	return o
}

func (o OceanNpAutoscalerPtrOutput) ToOceanNpAutoscalerPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerPtrOutput {
	return o
}

func (o OceanNpAutoscalerPtrOutput) Elem() OceanNpAutoscalerOutput {
	return o.ApplyT(func(v *OceanNpAutoscaler) OceanNpAutoscaler {
		if v != nil {
			return *v
		}
		var ret OceanNpAutoscaler
		return ret
	}).(OceanNpAutoscalerOutput)
}

// Auto Scaling scale down operations.
func (o OceanNpAutoscalerPtrOutput) AutoscaleDown() OceanNpAutoscalerAutoscaleDownPtrOutput {
	return o.ApplyT(func(v *OceanNpAutoscaler) *OceanNpAutoscalerAutoscaleDown {
		if v == nil {
			return nil
		}
		return v.AutoscaleDown
	}).(OceanNpAutoscalerAutoscaleDownPtrOutput)
}

// Spare resource capacity management enabling fast assignment of pods without waiting for new resources to launch.
func (o OceanNpAutoscalerPtrOutput) AutoscaleHeadroom() OceanNpAutoscalerAutoscaleHeadroomPtrOutput {
	return o.ApplyT(func(v *OceanNpAutoscaler) *OceanNpAutoscalerAutoscaleHeadroom {
		if v == nil {
			return nil
		}
		return v.AutoscaleHeadroom
	}).(OceanNpAutoscalerAutoscaleHeadroomPtrOutput)
}

// Enable the Ocean Kubernetes Autoscaler.
func (o OceanNpAutoscalerPtrOutput) AutoscaleIsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpAutoscaler) *bool {
		if v == nil {
			return nil
		}
		return v.AutoscaleIsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Optionally set upper and lower bounds on the resource usage of the cluster.
func (o OceanNpAutoscalerPtrOutput) ResourceLimits() OceanNpAutoscalerResourceLimitsPtrOutput {
	return o.ApplyT(func(v *OceanNpAutoscaler) *OceanNpAutoscalerResourceLimits {
		if v == nil {
			return nil
		}
		return v.ResourceLimits
	}).(OceanNpAutoscalerResourceLimitsPtrOutput)
}

type OceanNpAutoscalerAutoscaleDown struct {
	// The maximum percentage allowed to scale down in a single scaling action.
	MaxScaleDownPercentage *int `pulumi:"maxScaleDownPercentage"`
}

// OceanNpAutoscalerAutoscaleDownInput is an input type that accepts OceanNpAutoscalerAutoscaleDownArgs and OceanNpAutoscalerAutoscaleDownOutput values.
// You can construct a concrete instance of `OceanNpAutoscalerAutoscaleDownInput` via:
//
//	OceanNpAutoscalerAutoscaleDownArgs{...}
type OceanNpAutoscalerAutoscaleDownInput interface {
	pulumi.Input

	ToOceanNpAutoscalerAutoscaleDownOutput() OceanNpAutoscalerAutoscaleDownOutput
	ToOceanNpAutoscalerAutoscaleDownOutputWithContext(context.Context) OceanNpAutoscalerAutoscaleDownOutput
}

type OceanNpAutoscalerAutoscaleDownArgs struct {
	// The maximum percentage allowed to scale down in a single scaling action.
	MaxScaleDownPercentage pulumi.IntPtrInput `pulumi:"maxScaleDownPercentage"`
}

func (OceanNpAutoscalerAutoscaleDownArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpAutoscalerAutoscaleDown)(nil)).Elem()
}

func (i OceanNpAutoscalerAutoscaleDownArgs) ToOceanNpAutoscalerAutoscaleDownOutput() OceanNpAutoscalerAutoscaleDownOutput {
	return i.ToOceanNpAutoscalerAutoscaleDownOutputWithContext(context.Background())
}

func (i OceanNpAutoscalerAutoscaleDownArgs) ToOceanNpAutoscalerAutoscaleDownOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleDownOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerAutoscaleDownOutput)
}

func (i OceanNpAutoscalerAutoscaleDownArgs) ToOceanNpAutoscalerAutoscaleDownPtrOutput() OceanNpAutoscalerAutoscaleDownPtrOutput {
	return i.ToOceanNpAutoscalerAutoscaleDownPtrOutputWithContext(context.Background())
}

func (i OceanNpAutoscalerAutoscaleDownArgs) ToOceanNpAutoscalerAutoscaleDownPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleDownPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerAutoscaleDownOutput).ToOceanNpAutoscalerAutoscaleDownPtrOutputWithContext(ctx)
}

// OceanNpAutoscalerAutoscaleDownPtrInput is an input type that accepts OceanNpAutoscalerAutoscaleDownArgs, OceanNpAutoscalerAutoscaleDownPtr and OceanNpAutoscalerAutoscaleDownPtrOutput values.
// You can construct a concrete instance of `OceanNpAutoscalerAutoscaleDownPtrInput` via:
//
//	        OceanNpAutoscalerAutoscaleDownArgs{...}
//
//	or:
//
//	        nil
type OceanNpAutoscalerAutoscaleDownPtrInput interface {
	pulumi.Input

	ToOceanNpAutoscalerAutoscaleDownPtrOutput() OceanNpAutoscalerAutoscaleDownPtrOutput
	ToOceanNpAutoscalerAutoscaleDownPtrOutputWithContext(context.Context) OceanNpAutoscalerAutoscaleDownPtrOutput
}

type oceanNpAutoscalerAutoscaleDownPtrType OceanNpAutoscalerAutoscaleDownArgs

func OceanNpAutoscalerAutoscaleDownPtr(v *OceanNpAutoscalerAutoscaleDownArgs) OceanNpAutoscalerAutoscaleDownPtrInput {
	return (*oceanNpAutoscalerAutoscaleDownPtrType)(v)
}

func (*oceanNpAutoscalerAutoscaleDownPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpAutoscalerAutoscaleDown)(nil)).Elem()
}

func (i *oceanNpAutoscalerAutoscaleDownPtrType) ToOceanNpAutoscalerAutoscaleDownPtrOutput() OceanNpAutoscalerAutoscaleDownPtrOutput {
	return i.ToOceanNpAutoscalerAutoscaleDownPtrOutputWithContext(context.Background())
}

func (i *oceanNpAutoscalerAutoscaleDownPtrType) ToOceanNpAutoscalerAutoscaleDownPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleDownPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerAutoscaleDownPtrOutput)
}

type OceanNpAutoscalerAutoscaleDownOutput struct{ *pulumi.OutputState }

func (OceanNpAutoscalerAutoscaleDownOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpAutoscalerAutoscaleDown)(nil)).Elem()
}

func (o OceanNpAutoscalerAutoscaleDownOutput) ToOceanNpAutoscalerAutoscaleDownOutput() OceanNpAutoscalerAutoscaleDownOutput {
	return o
}

func (o OceanNpAutoscalerAutoscaleDownOutput) ToOceanNpAutoscalerAutoscaleDownOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleDownOutput {
	return o
}

func (o OceanNpAutoscalerAutoscaleDownOutput) ToOceanNpAutoscalerAutoscaleDownPtrOutput() OceanNpAutoscalerAutoscaleDownPtrOutput {
	return o.ToOceanNpAutoscalerAutoscaleDownPtrOutputWithContext(context.Background())
}

func (o OceanNpAutoscalerAutoscaleDownOutput) ToOceanNpAutoscalerAutoscaleDownPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleDownPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpAutoscalerAutoscaleDown) *OceanNpAutoscalerAutoscaleDown {
		return &v
	}).(OceanNpAutoscalerAutoscaleDownPtrOutput)
}

// The maximum percentage allowed to scale down in a single scaling action.
func (o OceanNpAutoscalerAutoscaleDownOutput) MaxScaleDownPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpAutoscalerAutoscaleDown) *int { return v.MaxScaleDownPercentage }).(pulumi.IntPtrOutput)
}

type OceanNpAutoscalerAutoscaleDownPtrOutput struct{ *pulumi.OutputState }

func (OceanNpAutoscalerAutoscaleDownPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpAutoscalerAutoscaleDown)(nil)).Elem()
}

func (o OceanNpAutoscalerAutoscaleDownPtrOutput) ToOceanNpAutoscalerAutoscaleDownPtrOutput() OceanNpAutoscalerAutoscaleDownPtrOutput {
	return o
}

func (o OceanNpAutoscalerAutoscaleDownPtrOutput) ToOceanNpAutoscalerAutoscaleDownPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleDownPtrOutput {
	return o
}

func (o OceanNpAutoscalerAutoscaleDownPtrOutput) Elem() OceanNpAutoscalerAutoscaleDownOutput {
	return o.ApplyT(func(v *OceanNpAutoscalerAutoscaleDown) OceanNpAutoscalerAutoscaleDown {
		if v != nil {
			return *v
		}
		var ret OceanNpAutoscalerAutoscaleDown
		return ret
	}).(OceanNpAutoscalerAutoscaleDownOutput)
}

// The maximum percentage allowed to scale down in a single scaling action.
func (o OceanNpAutoscalerAutoscaleDownPtrOutput) MaxScaleDownPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpAutoscalerAutoscaleDown) *int {
		if v == nil {
			return nil
		}
		return v.MaxScaleDownPercentage
	}).(pulumi.IntPtrOutput)
}

type OceanNpAutoscalerAutoscaleHeadroom struct {
	// [Automatic headroom](https://docs.spot.io/ocean/features/headroom?id=automatic-headroom) configuration.
	Automatic *OceanNpAutoscalerAutoscaleHeadroomAutomatic `pulumi:"automatic"`
}

// OceanNpAutoscalerAutoscaleHeadroomInput is an input type that accepts OceanNpAutoscalerAutoscaleHeadroomArgs and OceanNpAutoscalerAutoscaleHeadroomOutput values.
// You can construct a concrete instance of `OceanNpAutoscalerAutoscaleHeadroomInput` via:
//
//	OceanNpAutoscalerAutoscaleHeadroomArgs{...}
type OceanNpAutoscalerAutoscaleHeadroomInput interface {
	pulumi.Input

	ToOceanNpAutoscalerAutoscaleHeadroomOutput() OceanNpAutoscalerAutoscaleHeadroomOutput
	ToOceanNpAutoscalerAutoscaleHeadroomOutputWithContext(context.Context) OceanNpAutoscalerAutoscaleHeadroomOutput
}

type OceanNpAutoscalerAutoscaleHeadroomArgs struct {
	// [Automatic headroom](https://docs.spot.io/ocean/features/headroom?id=automatic-headroom) configuration.
	Automatic OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrInput `pulumi:"automatic"`
}

func (OceanNpAutoscalerAutoscaleHeadroomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpAutoscalerAutoscaleHeadroom)(nil)).Elem()
}

func (i OceanNpAutoscalerAutoscaleHeadroomArgs) ToOceanNpAutoscalerAutoscaleHeadroomOutput() OceanNpAutoscalerAutoscaleHeadroomOutput {
	return i.ToOceanNpAutoscalerAutoscaleHeadroomOutputWithContext(context.Background())
}

func (i OceanNpAutoscalerAutoscaleHeadroomArgs) ToOceanNpAutoscalerAutoscaleHeadroomOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleHeadroomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerAutoscaleHeadroomOutput)
}

func (i OceanNpAutoscalerAutoscaleHeadroomArgs) ToOceanNpAutoscalerAutoscaleHeadroomPtrOutput() OceanNpAutoscalerAutoscaleHeadroomPtrOutput {
	return i.ToOceanNpAutoscalerAutoscaleHeadroomPtrOutputWithContext(context.Background())
}

func (i OceanNpAutoscalerAutoscaleHeadroomArgs) ToOceanNpAutoscalerAutoscaleHeadroomPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleHeadroomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerAutoscaleHeadroomOutput).ToOceanNpAutoscalerAutoscaleHeadroomPtrOutputWithContext(ctx)
}

// OceanNpAutoscalerAutoscaleHeadroomPtrInput is an input type that accepts OceanNpAutoscalerAutoscaleHeadroomArgs, OceanNpAutoscalerAutoscaleHeadroomPtr and OceanNpAutoscalerAutoscaleHeadroomPtrOutput values.
// You can construct a concrete instance of `OceanNpAutoscalerAutoscaleHeadroomPtrInput` via:
//
//	        OceanNpAutoscalerAutoscaleHeadroomArgs{...}
//
//	or:
//
//	        nil
type OceanNpAutoscalerAutoscaleHeadroomPtrInput interface {
	pulumi.Input

	ToOceanNpAutoscalerAutoscaleHeadroomPtrOutput() OceanNpAutoscalerAutoscaleHeadroomPtrOutput
	ToOceanNpAutoscalerAutoscaleHeadroomPtrOutputWithContext(context.Context) OceanNpAutoscalerAutoscaleHeadroomPtrOutput
}

type oceanNpAutoscalerAutoscaleHeadroomPtrType OceanNpAutoscalerAutoscaleHeadroomArgs

func OceanNpAutoscalerAutoscaleHeadroomPtr(v *OceanNpAutoscalerAutoscaleHeadroomArgs) OceanNpAutoscalerAutoscaleHeadroomPtrInput {
	return (*oceanNpAutoscalerAutoscaleHeadroomPtrType)(v)
}

func (*oceanNpAutoscalerAutoscaleHeadroomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpAutoscalerAutoscaleHeadroom)(nil)).Elem()
}

func (i *oceanNpAutoscalerAutoscaleHeadroomPtrType) ToOceanNpAutoscalerAutoscaleHeadroomPtrOutput() OceanNpAutoscalerAutoscaleHeadroomPtrOutput {
	return i.ToOceanNpAutoscalerAutoscaleHeadroomPtrOutputWithContext(context.Background())
}

func (i *oceanNpAutoscalerAutoscaleHeadroomPtrType) ToOceanNpAutoscalerAutoscaleHeadroomPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleHeadroomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerAutoscaleHeadroomPtrOutput)
}

type OceanNpAutoscalerAutoscaleHeadroomOutput struct{ *pulumi.OutputState }

func (OceanNpAutoscalerAutoscaleHeadroomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpAutoscalerAutoscaleHeadroom)(nil)).Elem()
}

func (o OceanNpAutoscalerAutoscaleHeadroomOutput) ToOceanNpAutoscalerAutoscaleHeadroomOutput() OceanNpAutoscalerAutoscaleHeadroomOutput {
	return o
}

func (o OceanNpAutoscalerAutoscaleHeadroomOutput) ToOceanNpAutoscalerAutoscaleHeadroomOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleHeadroomOutput {
	return o
}

func (o OceanNpAutoscalerAutoscaleHeadroomOutput) ToOceanNpAutoscalerAutoscaleHeadroomPtrOutput() OceanNpAutoscalerAutoscaleHeadroomPtrOutput {
	return o.ToOceanNpAutoscalerAutoscaleHeadroomPtrOutputWithContext(context.Background())
}

func (o OceanNpAutoscalerAutoscaleHeadroomOutput) ToOceanNpAutoscalerAutoscaleHeadroomPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleHeadroomPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpAutoscalerAutoscaleHeadroom) *OceanNpAutoscalerAutoscaleHeadroom {
		return &v
	}).(OceanNpAutoscalerAutoscaleHeadroomPtrOutput)
}

// [Automatic headroom](https://docs.spot.io/ocean/features/headroom?id=automatic-headroom) configuration.
func (o OceanNpAutoscalerAutoscaleHeadroomOutput) Automatic() OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput {
	return o.ApplyT(func(v OceanNpAutoscalerAutoscaleHeadroom) *OceanNpAutoscalerAutoscaleHeadroomAutomatic {
		return v.Automatic
	}).(OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput)
}

type OceanNpAutoscalerAutoscaleHeadroomPtrOutput struct{ *pulumi.OutputState }

func (OceanNpAutoscalerAutoscaleHeadroomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpAutoscalerAutoscaleHeadroom)(nil)).Elem()
}

func (o OceanNpAutoscalerAutoscaleHeadroomPtrOutput) ToOceanNpAutoscalerAutoscaleHeadroomPtrOutput() OceanNpAutoscalerAutoscaleHeadroomPtrOutput {
	return o
}

func (o OceanNpAutoscalerAutoscaleHeadroomPtrOutput) ToOceanNpAutoscalerAutoscaleHeadroomPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleHeadroomPtrOutput {
	return o
}

func (o OceanNpAutoscalerAutoscaleHeadroomPtrOutput) Elem() OceanNpAutoscalerAutoscaleHeadroomOutput {
	return o.ApplyT(func(v *OceanNpAutoscalerAutoscaleHeadroom) OceanNpAutoscalerAutoscaleHeadroom {
		if v != nil {
			return *v
		}
		var ret OceanNpAutoscalerAutoscaleHeadroom
		return ret
	}).(OceanNpAutoscalerAutoscaleHeadroomOutput)
}

// [Automatic headroom](https://docs.spot.io/ocean/features/headroom?id=automatic-headroom) configuration.
func (o OceanNpAutoscalerAutoscaleHeadroomPtrOutput) Automatic() OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput {
	return o.ApplyT(func(v *OceanNpAutoscalerAutoscaleHeadroom) *OceanNpAutoscalerAutoscaleHeadroomAutomatic {
		if v == nil {
			return nil
		}
		return v.Automatic
	}).(OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput)
}

type OceanNpAutoscalerAutoscaleHeadroomAutomatic struct {
	// Enable automatic headroom. When set to `true`, Ocean configures and optimizes headroom automatically.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Optionally set a number between 0-100 to control the percentage of total cluster resources dedicated to headroom.
	Percentage *int `pulumi:"percentage"`
}

// OceanNpAutoscalerAutoscaleHeadroomAutomaticInput is an input type that accepts OceanNpAutoscalerAutoscaleHeadroomAutomaticArgs and OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput values.
// You can construct a concrete instance of `OceanNpAutoscalerAutoscaleHeadroomAutomaticInput` via:
//
//	OceanNpAutoscalerAutoscaleHeadroomAutomaticArgs{...}
type OceanNpAutoscalerAutoscaleHeadroomAutomaticInput interface {
	pulumi.Input

	ToOceanNpAutoscalerAutoscaleHeadroomAutomaticOutput() OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput
	ToOceanNpAutoscalerAutoscaleHeadroomAutomaticOutputWithContext(context.Context) OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput
}

type OceanNpAutoscalerAutoscaleHeadroomAutomaticArgs struct {
	// Enable automatic headroom. When set to `true`, Ocean configures and optimizes headroom automatically.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// Optionally set a number between 0-100 to control the percentage of total cluster resources dedicated to headroom.
	Percentage pulumi.IntPtrInput `pulumi:"percentage"`
}

func (OceanNpAutoscalerAutoscaleHeadroomAutomaticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpAutoscalerAutoscaleHeadroomAutomatic)(nil)).Elem()
}

func (i OceanNpAutoscalerAutoscaleHeadroomAutomaticArgs) ToOceanNpAutoscalerAutoscaleHeadroomAutomaticOutput() OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput {
	return i.ToOceanNpAutoscalerAutoscaleHeadroomAutomaticOutputWithContext(context.Background())
}

func (i OceanNpAutoscalerAutoscaleHeadroomAutomaticArgs) ToOceanNpAutoscalerAutoscaleHeadroomAutomaticOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput)
}

func (i OceanNpAutoscalerAutoscaleHeadroomAutomaticArgs) ToOceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput() OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput {
	return i.ToOceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutputWithContext(context.Background())
}

func (i OceanNpAutoscalerAutoscaleHeadroomAutomaticArgs) ToOceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput).ToOceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutputWithContext(ctx)
}

// OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrInput is an input type that accepts OceanNpAutoscalerAutoscaleHeadroomAutomaticArgs, OceanNpAutoscalerAutoscaleHeadroomAutomaticPtr and OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput values.
// You can construct a concrete instance of `OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrInput` via:
//
//	        OceanNpAutoscalerAutoscaleHeadroomAutomaticArgs{...}
//
//	or:
//
//	        nil
type OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrInput interface {
	pulumi.Input

	ToOceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput() OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput
	ToOceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutputWithContext(context.Context) OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput
}

type oceanNpAutoscalerAutoscaleHeadroomAutomaticPtrType OceanNpAutoscalerAutoscaleHeadroomAutomaticArgs

func OceanNpAutoscalerAutoscaleHeadroomAutomaticPtr(v *OceanNpAutoscalerAutoscaleHeadroomAutomaticArgs) OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrInput {
	return (*oceanNpAutoscalerAutoscaleHeadroomAutomaticPtrType)(v)
}

func (*oceanNpAutoscalerAutoscaleHeadroomAutomaticPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpAutoscalerAutoscaleHeadroomAutomatic)(nil)).Elem()
}

func (i *oceanNpAutoscalerAutoscaleHeadroomAutomaticPtrType) ToOceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput() OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput {
	return i.ToOceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutputWithContext(context.Background())
}

func (i *oceanNpAutoscalerAutoscaleHeadroomAutomaticPtrType) ToOceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput)
}

type OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput struct{ *pulumi.OutputState }

func (OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpAutoscalerAutoscaleHeadroomAutomatic)(nil)).Elem()
}

func (o OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput) ToOceanNpAutoscalerAutoscaleHeadroomAutomaticOutput() OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput {
	return o
}

func (o OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput) ToOceanNpAutoscalerAutoscaleHeadroomAutomaticOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput {
	return o
}

func (o OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput) ToOceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput() OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput {
	return o.ToOceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutputWithContext(context.Background())
}

func (o OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput) ToOceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpAutoscalerAutoscaleHeadroomAutomatic) *OceanNpAutoscalerAutoscaleHeadroomAutomatic {
		return &v
	}).(OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput)
}

// Enable automatic headroom. When set to `true`, Ocean configures and optimizes headroom automatically.
func (o OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpAutoscalerAutoscaleHeadroomAutomatic) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Optionally set a number between 0-100 to control the percentage of total cluster resources dedicated to headroom.
func (o OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpAutoscalerAutoscaleHeadroomAutomatic) *int { return v.Percentage }).(pulumi.IntPtrOutput)
}

type OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput struct{ *pulumi.OutputState }

func (OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpAutoscalerAutoscaleHeadroomAutomatic)(nil)).Elem()
}

func (o OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput) ToOceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput() OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput {
	return o
}

func (o OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput) ToOceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput {
	return o
}

func (o OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput) Elem() OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput {
	return o.ApplyT(func(v *OceanNpAutoscalerAutoscaleHeadroomAutomatic) OceanNpAutoscalerAutoscaleHeadroomAutomatic {
		if v != nil {
			return *v
		}
		var ret OceanNpAutoscalerAutoscaleHeadroomAutomatic
		return ret
	}).(OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput)
}

// Enable automatic headroom. When set to `true`, Ocean configures and optimizes headroom automatically.
func (o OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpAutoscalerAutoscaleHeadroomAutomatic) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Optionally set a number between 0-100 to control the percentage of total cluster resources dedicated to headroom.
func (o OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpAutoscalerAutoscaleHeadroomAutomatic) *int {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(pulumi.IntPtrOutput)
}

type OceanNpAutoscalerResourceLimits struct {
	// The maximum memory in GiB units that can be allocated to the cluster.
	MaxMemoryGib *int `pulumi:"maxMemoryGib"`
	// The maximum cpu in vCpu units that can be allocated to the cluster.
	MaxVcpu *int `pulumi:"maxVcpu"`
}

// OceanNpAutoscalerResourceLimitsInput is an input type that accepts OceanNpAutoscalerResourceLimitsArgs and OceanNpAutoscalerResourceLimitsOutput values.
// You can construct a concrete instance of `OceanNpAutoscalerResourceLimitsInput` via:
//
//	OceanNpAutoscalerResourceLimitsArgs{...}
type OceanNpAutoscalerResourceLimitsInput interface {
	pulumi.Input

	ToOceanNpAutoscalerResourceLimitsOutput() OceanNpAutoscalerResourceLimitsOutput
	ToOceanNpAutoscalerResourceLimitsOutputWithContext(context.Context) OceanNpAutoscalerResourceLimitsOutput
}

type OceanNpAutoscalerResourceLimitsArgs struct {
	// The maximum memory in GiB units that can be allocated to the cluster.
	MaxMemoryGib pulumi.IntPtrInput `pulumi:"maxMemoryGib"`
	// The maximum cpu in vCpu units that can be allocated to the cluster.
	MaxVcpu pulumi.IntPtrInput `pulumi:"maxVcpu"`
}

func (OceanNpAutoscalerResourceLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpAutoscalerResourceLimits)(nil)).Elem()
}

func (i OceanNpAutoscalerResourceLimitsArgs) ToOceanNpAutoscalerResourceLimitsOutput() OceanNpAutoscalerResourceLimitsOutput {
	return i.ToOceanNpAutoscalerResourceLimitsOutputWithContext(context.Background())
}

func (i OceanNpAutoscalerResourceLimitsArgs) ToOceanNpAutoscalerResourceLimitsOutputWithContext(ctx context.Context) OceanNpAutoscalerResourceLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerResourceLimitsOutput)
}

func (i OceanNpAutoscalerResourceLimitsArgs) ToOceanNpAutoscalerResourceLimitsPtrOutput() OceanNpAutoscalerResourceLimitsPtrOutput {
	return i.ToOceanNpAutoscalerResourceLimitsPtrOutputWithContext(context.Background())
}

func (i OceanNpAutoscalerResourceLimitsArgs) ToOceanNpAutoscalerResourceLimitsPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerResourceLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerResourceLimitsOutput).ToOceanNpAutoscalerResourceLimitsPtrOutputWithContext(ctx)
}

// OceanNpAutoscalerResourceLimitsPtrInput is an input type that accepts OceanNpAutoscalerResourceLimitsArgs, OceanNpAutoscalerResourceLimitsPtr and OceanNpAutoscalerResourceLimitsPtrOutput values.
// You can construct a concrete instance of `OceanNpAutoscalerResourceLimitsPtrInput` via:
//
//	        OceanNpAutoscalerResourceLimitsArgs{...}
//
//	or:
//
//	        nil
type OceanNpAutoscalerResourceLimitsPtrInput interface {
	pulumi.Input

	ToOceanNpAutoscalerResourceLimitsPtrOutput() OceanNpAutoscalerResourceLimitsPtrOutput
	ToOceanNpAutoscalerResourceLimitsPtrOutputWithContext(context.Context) OceanNpAutoscalerResourceLimitsPtrOutput
}

type oceanNpAutoscalerResourceLimitsPtrType OceanNpAutoscalerResourceLimitsArgs

func OceanNpAutoscalerResourceLimitsPtr(v *OceanNpAutoscalerResourceLimitsArgs) OceanNpAutoscalerResourceLimitsPtrInput {
	return (*oceanNpAutoscalerResourceLimitsPtrType)(v)
}

func (*oceanNpAutoscalerResourceLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpAutoscalerResourceLimits)(nil)).Elem()
}

func (i *oceanNpAutoscalerResourceLimitsPtrType) ToOceanNpAutoscalerResourceLimitsPtrOutput() OceanNpAutoscalerResourceLimitsPtrOutput {
	return i.ToOceanNpAutoscalerResourceLimitsPtrOutputWithContext(context.Background())
}

func (i *oceanNpAutoscalerResourceLimitsPtrType) ToOceanNpAutoscalerResourceLimitsPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerResourceLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpAutoscalerResourceLimitsPtrOutput)
}

type OceanNpAutoscalerResourceLimitsOutput struct{ *pulumi.OutputState }

func (OceanNpAutoscalerResourceLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpAutoscalerResourceLimits)(nil)).Elem()
}

func (o OceanNpAutoscalerResourceLimitsOutput) ToOceanNpAutoscalerResourceLimitsOutput() OceanNpAutoscalerResourceLimitsOutput {
	return o
}

func (o OceanNpAutoscalerResourceLimitsOutput) ToOceanNpAutoscalerResourceLimitsOutputWithContext(ctx context.Context) OceanNpAutoscalerResourceLimitsOutput {
	return o
}

func (o OceanNpAutoscalerResourceLimitsOutput) ToOceanNpAutoscalerResourceLimitsPtrOutput() OceanNpAutoscalerResourceLimitsPtrOutput {
	return o.ToOceanNpAutoscalerResourceLimitsPtrOutputWithContext(context.Background())
}

func (o OceanNpAutoscalerResourceLimitsOutput) ToOceanNpAutoscalerResourceLimitsPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerResourceLimitsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpAutoscalerResourceLimits) *OceanNpAutoscalerResourceLimits {
		return &v
	}).(OceanNpAutoscalerResourceLimitsPtrOutput)
}

// The maximum memory in GiB units that can be allocated to the cluster.
func (o OceanNpAutoscalerResourceLimitsOutput) MaxMemoryGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpAutoscalerResourceLimits) *int { return v.MaxMemoryGib }).(pulumi.IntPtrOutput)
}

// The maximum cpu in vCpu units that can be allocated to the cluster.
func (o OceanNpAutoscalerResourceLimitsOutput) MaxVcpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpAutoscalerResourceLimits) *int { return v.MaxVcpu }).(pulumi.IntPtrOutput)
}

type OceanNpAutoscalerResourceLimitsPtrOutput struct{ *pulumi.OutputState }

func (OceanNpAutoscalerResourceLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpAutoscalerResourceLimits)(nil)).Elem()
}

func (o OceanNpAutoscalerResourceLimitsPtrOutput) ToOceanNpAutoscalerResourceLimitsPtrOutput() OceanNpAutoscalerResourceLimitsPtrOutput {
	return o
}

func (o OceanNpAutoscalerResourceLimitsPtrOutput) ToOceanNpAutoscalerResourceLimitsPtrOutputWithContext(ctx context.Context) OceanNpAutoscalerResourceLimitsPtrOutput {
	return o
}

func (o OceanNpAutoscalerResourceLimitsPtrOutput) Elem() OceanNpAutoscalerResourceLimitsOutput {
	return o.ApplyT(func(v *OceanNpAutoscalerResourceLimits) OceanNpAutoscalerResourceLimits {
		if v != nil {
			return *v
		}
		var ret OceanNpAutoscalerResourceLimits
		return ret
	}).(OceanNpAutoscalerResourceLimitsOutput)
}

// The maximum memory in GiB units that can be allocated to the cluster.
func (o OceanNpAutoscalerResourceLimitsPtrOutput) MaxMemoryGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpAutoscalerResourceLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxMemoryGib
	}).(pulumi.IntPtrOutput)
}

// The maximum cpu in vCpu units that can be allocated to the cluster.
func (o OceanNpAutoscalerResourceLimitsPtrOutput) MaxVcpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpAutoscalerResourceLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxVcpu
	}).(pulumi.IntPtrOutput)
}

type OceanNpFilters struct {
	// In case acceleratedNetworking is set to Enabled, accelerated networking applies only to the VM that enables it.
	AcceleratedNetworking *string `pulumi:"acceleratedNetworking"`
	// The filtered vm sizes will support at least one of the architectures from this list. x8664 includes both intel64 and amd64.
	Architectures []string `pulumi:"architectures"`
	// The filtered vm sizes will support at least one of the classes from this list.
	DiskPerformance *string `pulumi:"diskPerformance"`
	// Vm sizes belonging to a series from the list will not be available for scaling
	ExcludeSeries []string `pulumi:"excludeSeries"`
	// The filtered gpu types will belong to one of the gpu types from this list.
	GpuTypes []string `pulumi:"gpuTypes"`
	// Maximum number of GPUs available.
	MaxGpu *float64 `pulumi:"maxGpu"`
	// Maximum amount of Memory (GiB).
	MaxMemoryGib *float64 `pulumi:"maxMemoryGib"`
	// Maximum number of vcpus available.
	MaxVcpu *int `pulumi:"maxVcpu"`
	// Minimum number of data disks available.
	MinDisk *int `pulumi:"minDisk"`
	// Minimum number of GPUs available.
	MinGpu *float64 `pulumi:"minGpu"`
	// Minimum amount of Memory (GiB).
	MinMemoryGib *float64 `pulumi:"minMemoryGib"`
	// Minimum number of network interfaces.
	MinNics *int `pulumi:"minNics"`
	// Minimum number of vcpus available.
	MinVcpu *int `pulumi:"minVcpu"`
	// Vm sizes belonging to a series from the list will be available for scaling. We can specify include list and series can be specified with capital or small letters, with space, without space or with underscore '_' .  For example all of these "DSv2", "Ds v2", "dsV2" refer to same DS_v2 series.
	Series []string `pulumi:"series"`
	// The filtered vm types will belong to one of the vm types from this list.
	VmTypes []string `pulumi:"vmTypes"`
}

// OceanNpFiltersInput is an input type that accepts OceanNpFiltersArgs and OceanNpFiltersOutput values.
// You can construct a concrete instance of `OceanNpFiltersInput` via:
//
//	OceanNpFiltersArgs{...}
type OceanNpFiltersInput interface {
	pulumi.Input

	ToOceanNpFiltersOutput() OceanNpFiltersOutput
	ToOceanNpFiltersOutputWithContext(context.Context) OceanNpFiltersOutput
}

type OceanNpFiltersArgs struct {
	// In case acceleratedNetworking is set to Enabled, accelerated networking applies only to the VM that enables it.
	AcceleratedNetworking pulumi.StringPtrInput `pulumi:"acceleratedNetworking"`
	// The filtered vm sizes will support at least one of the architectures from this list. x8664 includes both intel64 and amd64.
	Architectures pulumi.StringArrayInput `pulumi:"architectures"`
	// The filtered vm sizes will support at least one of the classes from this list.
	DiskPerformance pulumi.StringPtrInput `pulumi:"diskPerformance"`
	// Vm sizes belonging to a series from the list will not be available for scaling
	ExcludeSeries pulumi.StringArrayInput `pulumi:"excludeSeries"`
	// The filtered gpu types will belong to one of the gpu types from this list.
	GpuTypes pulumi.StringArrayInput `pulumi:"gpuTypes"`
	// Maximum number of GPUs available.
	MaxGpu pulumi.Float64PtrInput `pulumi:"maxGpu"`
	// Maximum amount of Memory (GiB).
	MaxMemoryGib pulumi.Float64PtrInput `pulumi:"maxMemoryGib"`
	// Maximum number of vcpus available.
	MaxVcpu pulumi.IntPtrInput `pulumi:"maxVcpu"`
	// Minimum number of data disks available.
	MinDisk pulumi.IntPtrInput `pulumi:"minDisk"`
	// Minimum number of GPUs available.
	MinGpu pulumi.Float64PtrInput `pulumi:"minGpu"`
	// Minimum amount of Memory (GiB).
	MinMemoryGib pulumi.Float64PtrInput `pulumi:"minMemoryGib"`
	// Minimum number of network interfaces.
	MinNics pulumi.IntPtrInput `pulumi:"minNics"`
	// Minimum number of vcpus available.
	MinVcpu pulumi.IntPtrInput `pulumi:"minVcpu"`
	// Vm sizes belonging to a series from the list will be available for scaling. We can specify include list and series can be specified with capital or small letters, with space, without space or with underscore '_' .  For example all of these "DSv2", "Ds v2", "dsV2" refer to same DS_v2 series.
	Series pulumi.StringArrayInput `pulumi:"series"`
	// The filtered vm types will belong to one of the vm types from this list.
	VmTypes pulumi.StringArrayInput `pulumi:"vmTypes"`
}

func (OceanNpFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpFilters)(nil)).Elem()
}

func (i OceanNpFiltersArgs) ToOceanNpFiltersOutput() OceanNpFiltersOutput {
	return i.ToOceanNpFiltersOutputWithContext(context.Background())
}

func (i OceanNpFiltersArgs) ToOceanNpFiltersOutputWithContext(ctx context.Context) OceanNpFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpFiltersOutput)
}

func (i OceanNpFiltersArgs) ToOceanNpFiltersPtrOutput() OceanNpFiltersPtrOutput {
	return i.ToOceanNpFiltersPtrOutputWithContext(context.Background())
}

func (i OceanNpFiltersArgs) ToOceanNpFiltersPtrOutputWithContext(ctx context.Context) OceanNpFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpFiltersOutput).ToOceanNpFiltersPtrOutputWithContext(ctx)
}

// OceanNpFiltersPtrInput is an input type that accepts OceanNpFiltersArgs, OceanNpFiltersPtr and OceanNpFiltersPtrOutput values.
// You can construct a concrete instance of `OceanNpFiltersPtrInput` via:
//
//	        OceanNpFiltersArgs{...}
//
//	or:
//
//	        nil
type OceanNpFiltersPtrInput interface {
	pulumi.Input

	ToOceanNpFiltersPtrOutput() OceanNpFiltersPtrOutput
	ToOceanNpFiltersPtrOutputWithContext(context.Context) OceanNpFiltersPtrOutput
}

type oceanNpFiltersPtrType OceanNpFiltersArgs

func OceanNpFiltersPtr(v *OceanNpFiltersArgs) OceanNpFiltersPtrInput {
	return (*oceanNpFiltersPtrType)(v)
}

func (*oceanNpFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpFilters)(nil)).Elem()
}

func (i *oceanNpFiltersPtrType) ToOceanNpFiltersPtrOutput() OceanNpFiltersPtrOutput {
	return i.ToOceanNpFiltersPtrOutputWithContext(context.Background())
}

func (i *oceanNpFiltersPtrType) ToOceanNpFiltersPtrOutputWithContext(ctx context.Context) OceanNpFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpFiltersPtrOutput)
}

type OceanNpFiltersOutput struct{ *pulumi.OutputState }

func (OceanNpFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpFilters)(nil)).Elem()
}

func (o OceanNpFiltersOutput) ToOceanNpFiltersOutput() OceanNpFiltersOutput {
	return o
}

func (o OceanNpFiltersOutput) ToOceanNpFiltersOutputWithContext(ctx context.Context) OceanNpFiltersOutput {
	return o
}

func (o OceanNpFiltersOutput) ToOceanNpFiltersPtrOutput() OceanNpFiltersPtrOutput {
	return o.ToOceanNpFiltersPtrOutputWithContext(context.Background())
}

func (o OceanNpFiltersOutput) ToOceanNpFiltersPtrOutputWithContext(ctx context.Context) OceanNpFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpFilters) *OceanNpFilters {
		return &v
	}).(OceanNpFiltersPtrOutput)
}

// In case acceleratedNetworking is set to Enabled, accelerated networking applies only to the VM that enables it.
func (o OceanNpFiltersOutput) AcceleratedNetworking() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OceanNpFilters) *string { return v.AcceleratedNetworking }).(pulumi.StringPtrOutput)
}

// The filtered vm sizes will support at least one of the architectures from this list. x8664 includes both intel64 and amd64.
func (o OceanNpFiltersOutput) Architectures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpFilters) []string { return v.Architectures }).(pulumi.StringArrayOutput)
}

// The filtered vm sizes will support at least one of the classes from this list.
func (o OceanNpFiltersOutput) DiskPerformance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OceanNpFilters) *string { return v.DiskPerformance }).(pulumi.StringPtrOutput)
}

// Vm sizes belonging to a series from the list will not be available for scaling
func (o OceanNpFiltersOutput) ExcludeSeries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpFilters) []string { return v.ExcludeSeries }).(pulumi.StringArrayOutput)
}

// The filtered gpu types will belong to one of the gpu types from this list.
func (o OceanNpFiltersOutput) GpuTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpFilters) []string { return v.GpuTypes }).(pulumi.StringArrayOutput)
}

// Maximum number of GPUs available.
func (o OceanNpFiltersOutput) MaxGpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OceanNpFilters) *float64 { return v.MaxGpu }).(pulumi.Float64PtrOutput)
}

// Maximum amount of Memory (GiB).
func (o OceanNpFiltersOutput) MaxMemoryGib() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OceanNpFilters) *float64 { return v.MaxMemoryGib }).(pulumi.Float64PtrOutput)
}

// Maximum number of vcpus available.
func (o OceanNpFiltersOutput) MaxVcpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpFilters) *int { return v.MaxVcpu }).(pulumi.IntPtrOutput)
}

// Minimum number of data disks available.
func (o OceanNpFiltersOutput) MinDisk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpFilters) *int { return v.MinDisk }).(pulumi.IntPtrOutput)
}

// Minimum number of GPUs available.
func (o OceanNpFiltersOutput) MinGpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OceanNpFilters) *float64 { return v.MinGpu }).(pulumi.Float64PtrOutput)
}

// Minimum amount of Memory (GiB).
func (o OceanNpFiltersOutput) MinMemoryGib() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OceanNpFilters) *float64 { return v.MinMemoryGib }).(pulumi.Float64PtrOutput)
}

// Minimum number of network interfaces.
func (o OceanNpFiltersOutput) MinNics() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpFilters) *int { return v.MinNics }).(pulumi.IntPtrOutput)
}

// Minimum number of vcpus available.
func (o OceanNpFiltersOutput) MinVcpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpFilters) *int { return v.MinVcpu }).(pulumi.IntPtrOutput)
}

// Vm sizes belonging to a series from the list will be available for scaling. We can specify include list and series can be specified with capital or small letters, with space, without space or with underscore '_' .  For example all of these "DSv2", "Ds v2", "dsV2" refer to same DS_v2 series.
func (o OceanNpFiltersOutput) Series() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpFilters) []string { return v.Series }).(pulumi.StringArrayOutput)
}

// The filtered vm types will belong to one of the vm types from this list.
func (o OceanNpFiltersOutput) VmTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpFilters) []string { return v.VmTypes }).(pulumi.StringArrayOutput)
}

type OceanNpFiltersPtrOutput struct{ *pulumi.OutputState }

func (OceanNpFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpFilters)(nil)).Elem()
}

func (o OceanNpFiltersPtrOutput) ToOceanNpFiltersPtrOutput() OceanNpFiltersPtrOutput {
	return o
}

func (o OceanNpFiltersPtrOutput) ToOceanNpFiltersPtrOutputWithContext(ctx context.Context) OceanNpFiltersPtrOutput {
	return o
}

func (o OceanNpFiltersPtrOutput) Elem() OceanNpFiltersOutput {
	return o.ApplyT(func(v *OceanNpFilters) OceanNpFilters {
		if v != nil {
			return *v
		}
		var ret OceanNpFilters
		return ret
	}).(OceanNpFiltersOutput)
}

// In case acceleratedNetworking is set to Enabled, accelerated networking applies only to the VM that enables it.
func (o OceanNpFiltersPtrOutput) AcceleratedNetworking() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OceanNpFilters) *string {
		if v == nil {
			return nil
		}
		return v.AcceleratedNetworking
	}).(pulumi.StringPtrOutput)
}

// The filtered vm sizes will support at least one of the architectures from this list. x8664 includes both intel64 and amd64.
func (o OceanNpFiltersPtrOutput) Architectures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpFilters) []string {
		if v == nil {
			return nil
		}
		return v.Architectures
	}).(pulumi.StringArrayOutput)
}

// The filtered vm sizes will support at least one of the classes from this list.
func (o OceanNpFiltersPtrOutput) DiskPerformance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OceanNpFilters) *string {
		if v == nil {
			return nil
		}
		return v.DiskPerformance
	}).(pulumi.StringPtrOutput)
}

// Vm sizes belonging to a series from the list will not be available for scaling
func (o OceanNpFiltersPtrOutput) ExcludeSeries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpFilters) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeSeries
	}).(pulumi.StringArrayOutput)
}

// The filtered gpu types will belong to one of the gpu types from this list.
func (o OceanNpFiltersPtrOutput) GpuTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpFilters) []string {
		if v == nil {
			return nil
		}
		return v.GpuTypes
	}).(pulumi.StringArrayOutput)
}

// Maximum number of GPUs available.
func (o OceanNpFiltersPtrOutput) MaxGpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OceanNpFilters) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxGpu
	}).(pulumi.Float64PtrOutput)
}

// Maximum amount of Memory (GiB).
func (o OceanNpFiltersPtrOutput) MaxMemoryGib() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OceanNpFilters) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxMemoryGib
	}).(pulumi.Float64PtrOutput)
}

// Maximum number of vcpus available.
func (o OceanNpFiltersPtrOutput) MaxVcpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpFilters) *int {
		if v == nil {
			return nil
		}
		return v.MaxVcpu
	}).(pulumi.IntPtrOutput)
}

// Minimum number of data disks available.
func (o OceanNpFiltersPtrOutput) MinDisk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpFilters) *int {
		if v == nil {
			return nil
		}
		return v.MinDisk
	}).(pulumi.IntPtrOutput)
}

// Minimum number of GPUs available.
func (o OceanNpFiltersPtrOutput) MinGpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OceanNpFilters) *float64 {
		if v == nil {
			return nil
		}
		return v.MinGpu
	}).(pulumi.Float64PtrOutput)
}

// Minimum amount of Memory (GiB).
func (o OceanNpFiltersPtrOutput) MinMemoryGib() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OceanNpFilters) *float64 {
		if v == nil {
			return nil
		}
		return v.MinMemoryGib
	}).(pulumi.Float64PtrOutput)
}

// Minimum number of network interfaces.
func (o OceanNpFiltersPtrOutput) MinNics() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpFilters) *int {
		if v == nil {
			return nil
		}
		return v.MinNics
	}).(pulumi.IntPtrOutput)
}

// Minimum number of vcpus available.
func (o OceanNpFiltersPtrOutput) MinVcpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpFilters) *int {
		if v == nil {
			return nil
		}
		return v.MinVcpu
	}).(pulumi.IntPtrOutput)
}

// Vm sizes belonging to a series from the list will be available for scaling. We can specify include list and series can be specified with capital or small letters, with space, without space or with underscore '_' .  For example all of these "DSv2", "Ds v2", "dsV2" refer to same DS_v2 series.
func (o OceanNpFiltersPtrOutput) Series() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpFilters) []string {
		if v == nil {
			return nil
		}
		return v.Series
	}).(pulumi.StringArrayOutput)
}

// The filtered vm types will belong to one of the vm types from this list.
func (o OceanNpFiltersPtrOutput) VmTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpFilters) []string {
		if v == nil {
			return nil
		}
		return v.VmTypes
	}).(pulumi.StringArrayOutput)
}

type OceanNpHeadroom struct {
	// Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.
	CpuPerUnit *int `pulumi:"cpuPerUnit"`
	// Amount of GPU to allocate for headroom unit.
	GpuPerUnit *int `pulumi:"gpuPerUnit"`
	// Configure the amount of memory (MiB) to allocate the headroom.
	MemoryPerUnit *int `pulumi:"memoryPerUnit"`
	// The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.
	NumOfUnits *int `pulumi:"numOfUnits"`
}

// OceanNpHeadroomInput is an input type that accepts OceanNpHeadroomArgs and OceanNpHeadroomOutput values.
// You can construct a concrete instance of `OceanNpHeadroomInput` via:
//
//	OceanNpHeadroomArgs{...}
type OceanNpHeadroomInput interface {
	pulumi.Input

	ToOceanNpHeadroomOutput() OceanNpHeadroomOutput
	ToOceanNpHeadroomOutputWithContext(context.Context) OceanNpHeadroomOutput
}

type OceanNpHeadroomArgs struct {
	// Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.
	CpuPerUnit pulumi.IntPtrInput `pulumi:"cpuPerUnit"`
	// Amount of GPU to allocate for headroom unit.
	GpuPerUnit pulumi.IntPtrInput `pulumi:"gpuPerUnit"`
	// Configure the amount of memory (MiB) to allocate the headroom.
	MemoryPerUnit pulumi.IntPtrInput `pulumi:"memoryPerUnit"`
	// The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.
	NumOfUnits pulumi.IntPtrInput `pulumi:"numOfUnits"`
}

func (OceanNpHeadroomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpHeadroom)(nil)).Elem()
}

func (i OceanNpHeadroomArgs) ToOceanNpHeadroomOutput() OceanNpHeadroomOutput {
	return i.ToOceanNpHeadroomOutputWithContext(context.Background())
}

func (i OceanNpHeadroomArgs) ToOceanNpHeadroomOutputWithContext(ctx context.Context) OceanNpHeadroomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpHeadroomOutput)
}

// OceanNpHeadroomArrayInput is an input type that accepts OceanNpHeadroomArray and OceanNpHeadroomArrayOutput values.
// You can construct a concrete instance of `OceanNpHeadroomArrayInput` via:
//
//	OceanNpHeadroomArray{ OceanNpHeadroomArgs{...} }
type OceanNpHeadroomArrayInput interface {
	pulumi.Input

	ToOceanNpHeadroomArrayOutput() OceanNpHeadroomArrayOutput
	ToOceanNpHeadroomArrayOutputWithContext(context.Context) OceanNpHeadroomArrayOutput
}

type OceanNpHeadroomArray []OceanNpHeadroomInput

func (OceanNpHeadroomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpHeadroom)(nil)).Elem()
}

func (i OceanNpHeadroomArray) ToOceanNpHeadroomArrayOutput() OceanNpHeadroomArrayOutput {
	return i.ToOceanNpHeadroomArrayOutputWithContext(context.Background())
}

func (i OceanNpHeadroomArray) ToOceanNpHeadroomArrayOutputWithContext(ctx context.Context) OceanNpHeadroomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpHeadroomArrayOutput)
}

type OceanNpHeadroomOutput struct{ *pulumi.OutputState }

func (OceanNpHeadroomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpHeadroom)(nil)).Elem()
}

func (o OceanNpHeadroomOutput) ToOceanNpHeadroomOutput() OceanNpHeadroomOutput {
	return o
}

func (o OceanNpHeadroomOutput) ToOceanNpHeadroomOutputWithContext(ctx context.Context) OceanNpHeadroomOutput {
	return o
}

// Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.
func (o OceanNpHeadroomOutput) CpuPerUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpHeadroom) *int { return v.CpuPerUnit }).(pulumi.IntPtrOutput)
}

// Amount of GPU to allocate for headroom unit.
func (o OceanNpHeadroomOutput) GpuPerUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpHeadroom) *int { return v.GpuPerUnit }).(pulumi.IntPtrOutput)
}

// Configure the amount of memory (MiB) to allocate the headroom.
func (o OceanNpHeadroomOutput) MemoryPerUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpHeadroom) *int { return v.MemoryPerUnit }).(pulumi.IntPtrOutput)
}

// The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.
func (o OceanNpHeadroomOutput) NumOfUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpHeadroom) *int { return v.NumOfUnits }).(pulumi.IntPtrOutput)
}

type OceanNpHeadroomArrayOutput struct{ *pulumi.OutputState }

func (OceanNpHeadroomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpHeadroom)(nil)).Elem()
}

func (o OceanNpHeadroomArrayOutput) ToOceanNpHeadroomArrayOutput() OceanNpHeadroomArrayOutput {
	return o
}

func (o OceanNpHeadroomArrayOutput) ToOceanNpHeadroomArrayOutputWithContext(ctx context.Context) OceanNpHeadroomArrayOutput {
	return o
}

func (o OceanNpHeadroomArrayOutput) Index(i pulumi.IntInput) OceanNpHeadroomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OceanNpHeadroom {
		return vs[0].([]OceanNpHeadroom)[vs[1].(int)]
	}).(OceanNpHeadroomOutput)
}

type OceanNpHealth struct {
	// The amount of time to wait, in seconds, from the moment the instance has launched until monitoring of its health checks begins.
	GracePeriod *int `pulumi:"gracePeriod"`
}

// OceanNpHealthInput is an input type that accepts OceanNpHealthArgs and OceanNpHealthOutput values.
// You can construct a concrete instance of `OceanNpHealthInput` via:
//
//	OceanNpHealthArgs{...}
type OceanNpHealthInput interface {
	pulumi.Input

	ToOceanNpHealthOutput() OceanNpHealthOutput
	ToOceanNpHealthOutputWithContext(context.Context) OceanNpHealthOutput
}

type OceanNpHealthArgs struct {
	// The amount of time to wait, in seconds, from the moment the instance has launched until monitoring of its health checks begins.
	GracePeriod pulumi.IntPtrInput `pulumi:"gracePeriod"`
}

func (OceanNpHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpHealth)(nil)).Elem()
}

func (i OceanNpHealthArgs) ToOceanNpHealthOutput() OceanNpHealthOutput {
	return i.ToOceanNpHealthOutputWithContext(context.Background())
}

func (i OceanNpHealthArgs) ToOceanNpHealthOutputWithContext(ctx context.Context) OceanNpHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpHealthOutput)
}

func (i OceanNpHealthArgs) ToOceanNpHealthPtrOutput() OceanNpHealthPtrOutput {
	return i.ToOceanNpHealthPtrOutputWithContext(context.Background())
}

func (i OceanNpHealthArgs) ToOceanNpHealthPtrOutputWithContext(ctx context.Context) OceanNpHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpHealthOutput).ToOceanNpHealthPtrOutputWithContext(ctx)
}

// OceanNpHealthPtrInput is an input type that accepts OceanNpHealthArgs, OceanNpHealthPtr and OceanNpHealthPtrOutput values.
// You can construct a concrete instance of `OceanNpHealthPtrInput` via:
//
//	        OceanNpHealthArgs{...}
//
//	or:
//
//	        nil
type OceanNpHealthPtrInput interface {
	pulumi.Input

	ToOceanNpHealthPtrOutput() OceanNpHealthPtrOutput
	ToOceanNpHealthPtrOutputWithContext(context.Context) OceanNpHealthPtrOutput
}

type oceanNpHealthPtrType OceanNpHealthArgs

func OceanNpHealthPtr(v *OceanNpHealthArgs) OceanNpHealthPtrInput {
	return (*oceanNpHealthPtrType)(v)
}

func (*oceanNpHealthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpHealth)(nil)).Elem()
}

func (i *oceanNpHealthPtrType) ToOceanNpHealthPtrOutput() OceanNpHealthPtrOutput {
	return i.ToOceanNpHealthPtrOutputWithContext(context.Background())
}

func (i *oceanNpHealthPtrType) ToOceanNpHealthPtrOutputWithContext(ctx context.Context) OceanNpHealthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpHealthPtrOutput)
}

type OceanNpHealthOutput struct{ *pulumi.OutputState }

func (OceanNpHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpHealth)(nil)).Elem()
}

func (o OceanNpHealthOutput) ToOceanNpHealthOutput() OceanNpHealthOutput {
	return o
}

func (o OceanNpHealthOutput) ToOceanNpHealthOutputWithContext(ctx context.Context) OceanNpHealthOutput {
	return o
}

func (o OceanNpHealthOutput) ToOceanNpHealthPtrOutput() OceanNpHealthPtrOutput {
	return o.ToOceanNpHealthPtrOutputWithContext(context.Background())
}

func (o OceanNpHealthOutput) ToOceanNpHealthPtrOutputWithContext(ctx context.Context) OceanNpHealthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpHealth) *OceanNpHealth {
		return &v
	}).(OceanNpHealthPtrOutput)
}

// The amount of time to wait, in seconds, from the moment the instance has launched until monitoring of its health checks begins.
func (o OceanNpHealthOutput) GracePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpHealth) *int { return v.GracePeriod }).(pulumi.IntPtrOutput)
}

type OceanNpHealthPtrOutput struct{ *pulumi.OutputState }

func (OceanNpHealthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpHealth)(nil)).Elem()
}

func (o OceanNpHealthPtrOutput) ToOceanNpHealthPtrOutput() OceanNpHealthPtrOutput {
	return o
}

func (o OceanNpHealthPtrOutput) ToOceanNpHealthPtrOutputWithContext(ctx context.Context) OceanNpHealthPtrOutput {
	return o
}

func (o OceanNpHealthPtrOutput) Elem() OceanNpHealthOutput {
	return o.ApplyT(func(v *OceanNpHealth) OceanNpHealth {
		if v != nil {
			return *v
		}
		var ret OceanNpHealth
		return ret
	}).(OceanNpHealthOutput)
}

// The amount of time to wait, in seconds, from the moment the instance has launched until monitoring of its health checks begins.
func (o OceanNpHealthPtrOutput) GracePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpHealth) *int {
		if v == nil {
			return nil
		}
		return v.GracePeriod
	}).(pulumi.IntPtrOutput)
}

type OceanNpLinuxOsConfig struct {
	// System Controls
	Sysctls []OceanNpLinuxOsConfigSysctl `pulumi:"sysctls"`
}

// OceanNpLinuxOsConfigInput is an input type that accepts OceanNpLinuxOsConfigArgs and OceanNpLinuxOsConfigOutput values.
// You can construct a concrete instance of `OceanNpLinuxOsConfigInput` via:
//
//	OceanNpLinuxOsConfigArgs{...}
type OceanNpLinuxOsConfigInput interface {
	pulumi.Input

	ToOceanNpLinuxOsConfigOutput() OceanNpLinuxOsConfigOutput
	ToOceanNpLinuxOsConfigOutputWithContext(context.Context) OceanNpLinuxOsConfigOutput
}

type OceanNpLinuxOsConfigArgs struct {
	// System Controls
	Sysctls OceanNpLinuxOsConfigSysctlArrayInput `pulumi:"sysctls"`
}

func (OceanNpLinuxOsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpLinuxOsConfig)(nil)).Elem()
}

func (i OceanNpLinuxOsConfigArgs) ToOceanNpLinuxOsConfigOutput() OceanNpLinuxOsConfigOutput {
	return i.ToOceanNpLinuxOsConfigOutputWithContext(context.Background())
}

func (i OceanNpLinuxOsConfigArgs) ToOceanNpLinuxOsConfigOutputWithContext(ctx context.Context) OceanNpLinuxOsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpLinuxOsConfigOutput)
}

// OceanNpLinuxOsConfigArrayInput is an input type that accepts OceanNpLinuxOsConfigArray and OceanNpLinuxOsConfigArrayOutput values.
// You can construct a concrete instance of `OceanNpLinuxOsConfigArrayInput` via:
//
//	OceanNpLinuxOsConfigArray{ OceanNpLinuxOsConfigArgs{...} }
type OceanNpLinuxOsConfigArrayInput interface {
	pulumi.Input

	ToOceanNpLinuxOsConfigArrayOutput() OceanNpLinuxOsConfigArrayOutput
	ToOceanNpLinuxOsConfigArrayOutputWithContext(context.Context) OceanNpLinuxOsConfigArrayOutput
}

type OceanNpLinuxOsConfigArray []OceanNpLinuxOsConfigInput

func (OceanNpLinuxOsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpLinuxOsConfig)(nil)).Elem()
}

func (i OceanNpLinuxOsConfigArray) ToOceanNpLinuxOsConfigArrayOutput() OceanNpLinuxOsConfigArrayOutput {
	return i.ToOceanNpLinuxOsConfigArrayOutputWithContext(context.Background())
}

func (i OceanNpLinuxOsConfigArray) ToOceanNpLinuxOsConfigArrayOutputWithContext(ctx context.Context) OceanNpLinuxOsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpLinuxOsConfigArrayOutput)
}

type OceanNpLinuxOsConfigOutput struct{ *pulumi.OutputState }

func (OceanNpLinuxOsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpLinuxOsConfig)(nil)).Elem()
}

func (o OceanNpLinuxOsConfigOutput) ToOceanNpLinuxOsConfigOutput() OceanNpLinuxOsConfigOutput {
	return o
}

func (o OceanNpLinuxOsConfigOutput) ToOceanNpLinuxOsConfigOutputWithContext(ctx context.Context) OceanNpLinuxOsConfigOutput {
	return o
}

// System Controls
func (o OceanNpLinuxOsConfigOutput) Sysctls() OceanNpLinuxOsConfigSysctlArrayOutput {
	return o.ApplyT(func(v OceanNpLinuxOsConfig) []OceanNpLinuxOsConfigSysctl { return v.Sysctls }).(OceanNpLinuxOsConfigSysctlArrayOutput)
}

type OceanNpLinuxOsConfigArrayOutput struct{ *pulumi.OutputState }

func (OceanNpLinuxOsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpLinuxOsConfig)(nil)).Elem()
}

func (o OceanNpLinuxOsConfigArrayOutput) ToOceanNpLinuxOsConfigArrayOutput() OceanNpLinuxOsConfigArrayOutput {
	return o
}

func (o OceanNpLinuxOsConfigArrayOutput) ToOceanNpLinuxOsConfigArrayOutputWithContext(ctx context.Context) OceanNpLinuxOsConfigArrayOutput {
	return o
}

func (o OceanNpLinuxOsConfigArrayOutput) Index(i pulumi.IntInput) OceanNpLinuxOsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OceanNpLinuxOsConfig {
		return vs[0].([]OceanNpLinuxOsConfig)[vs[1].(int)]
	}).(OceanNpLinuxOsConfigOutput)
}

type OceanNpLinuxOsConfigSysctl struct {
	// Maximum number of memory map areas a process may have. Can be configured only if OS type is Linux.
	VmMaxMapCount *int `pulumi:"vmMaxMapCount"`
}

// OceanNpLinuxOsConfigSysctlInput is an input type that accepts OceanNpLinuxOsConfigSysctlArgs and OceanNpLinuxOsConfigSysctlOutput values.
// You can construct a concrete instance of `OceanNpLinuxOsConfigSysctlInput` via:
//
//	OceanNpLinuxOsConfigSysctlArgs{...}
type OceanNpLinuxOsConfigSysctlInput interface {
	pulumi.Input

	ToOceanNpLinuxOsConfigSysctlOutput() OceanNpLinuxOsConfigSysctlOutput
	ToOceanNpLinuxOsConfigSysctlOutputWithContext(context.Context) OceanNpLinuxOsConfigSysctlOutput
}

type OceanNpLinuxOsConfigSysctlArgs struct {
	// Maximum number of memory map areas a process may have. Can be configured only if OS type is Linux.
	VmMaxMapCount pulumi.IntPtrInput `pulumi:"vmMaxMapCount"`
}

func (OceanNpLinuxOsConfigSysctlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpLinuxOsConfigSysctl)(nil)).Elem()
}

func (i OceanNpLinuxOsConfigSysctlArgs) ToOceanNpLinuxOsConfigSysctlOutput() OceanNpLinuxOsConfigSysctlOutput {
	return i.ToOceanNpLinuxOsConfigSysctlOutputWithContext(context.Background())
}

func (i OceanNpLinuxOsConfigSysctlArgs) ToOceanNpLinuxOsConfigSysctlOutputWithContext(ctx context.Context) OceanNpLinuxOsConfigSysctlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpLinuxOsConfigSysctlOutput)
}

// OceanNpLinuxOsConfigSysctlArrayInput is an input type that accepts OceanNpLinuxOsConfigSysctlArray and OceanNpLinuxOsConfigSysctlArrayOutput values.
// You can construct a concrete instance of `OceanNpLinuxOsConfigSysctlArrayInput` via:
//
//	OceanNpLinuxOsConfigSysctlArray{ OceanNpLinuxOsConfigSysctlArgs{...} }
type OceanNpLinuxOsConfigSysctlArrayInput interface {
	pulumi.Input

	ToOceanNpLinuxOsConfigSysctlArrayOutput() OceanNpLinuxOsConfigSysctlArrayOutput
	ToOceanNpLinuxOsConfigSysctlArrayOutputWithContext(context.Context) OceanNpLinuxOsConfigSysctlArrayOutput
}

type OceanNpLinuxOsConfigSysctlArray []OceanNpLinuxOsConfigSysctlInput

func (OceanNpLinuxOsConfigSysctlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpLinuxOsConfigSysctl)(nil)).Elem()
}

func (i OceanNpLinuxOsConfigSysctlArray) ToOceanNpLinuxOsConfigSysctlArrayOutput() OceanNpLinuxOsConfigSysctlArrayOutput {
	return i.ToOceanNpLinuxOsConfigSysctlArrayOutputWithContext(context.Background())
}

func (i OceanNpLinuxOsConfigSysctlArray) ToOceanNpLinuxOsConfigSysctlArrayOutputWithContext(ctx context.Context) OceanNpLinuxOsConfigSysctlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpLinuxOsConfigSysctlArrayOutput)
}

type OceanNpLinuxOsConfigSysctlOutput struct{ *pulumi.OutputState }

func (OceanNpLinuxOsConfigSysctlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpLinuxOsConfigSysctl)(nil)).Elem()
}

func (o OceanNpLinuxOsConfigSysctlOutput) ToOceanNpLinuxOsConfigSysctlOutput() OceanNpLinuxOsConfigSysctlOutput {
	return o
}

func (o OceanNpLinuxOsConfigSysctlOutput) ToOceanNpLinuxOsConfigSysctlOutputWithContext(ctx context.Context) OceanNpLinuxOsConfigSysctlOutput {
	return o
}

// Maximum number of memory map areas a process may have. Can be configured only if OS type is Linux.
func (o OceanNpLinuxOsConfigSysctlOutput) VmMaxMapCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpLinuxOsConfigSysctl) *int { return v.VmMaxMapCount }).(pulumi.IntPtrOutput)
}

type OceanNpLinuxOsConfigSysctlArrayOutput struct{ *pulumi.OutputState }

func (OceanNpLinuxOsConfigSysctlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpLinuxOsConfigSysctl)(nil)).Elem()
}

func (o OceanNpLinuxOsConfigSysctlArrayOutput) ToOceanNpLinuxOsConfigSysctlArrayOutput() OceanNpLinuxOsConfigSysctlArrayOutput {
	return o
}

func (o OceanNpLinuxOsConfigSysctlArrayOutput) ToOceanNpLinuxOsConfigSysctlArrayOutputWithContext(ctx context.Context) OceanNpLinuxOsConfigSysctlArrayOutput {
	return o
}

func (o OceanNpLinuxOsConfigSysctlArrayOutput) Index(i pulumi.IntInput) OceanNpLinuxOsConfigSysctlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OceanNpLinuxOsConfigSysctl {
		return vs[0].([]OceanNpLinuxOsConfigSysctl)[vs[1].(int)]
	}).(OceanNpLinuxOsConfigSysctlOutput)
}

type OceanNpLogging struct {
	// The Ocean AKS Logging Export object.
	Export *OceanNpLoggingExport `pulumi:"export"`
}

// OceanNpLoggingInput is an input type that accepts OceanNpLoggingArgs and OceanNpLoggingOutput values.
// You can construct a concrete instance of `OceanNpLoggingInput` via:
//
//	OceanNpLoggingArgs{...}
type OceanNpLoggingInput interface {
	pulumi.Input

	ToOceanNpLoggingOutput() OceanNpLoggingOutput
	ToOceanNpLoggingOutputWithContext(context.Context) OceanNpLoggingOutput
}

type OceanNpLoggingArgs struct {
	// The Ocean AKS Logging Export object.
	Export OceanNpLoggingExportPtrInput `pulumi:"export"`
}

func (OceanNpLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpLogging)(nil)).Elem()
}

func (i OceanNpLoggingArgs) ToOceanNpLoggingOutput() OceanNpLoggingOutput {
	return i.ToOceanNpLoggingOutputWithContext(context.Background())
}

func (i OceanNpLoggingArgs) ToOceanNpLoggingOutputWithContext(ctx context.Context) OceanNpLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpLoggingOutput)
}

func (i OceanNpLoggingArgs) ToOceanNpLoggingPtrOutput() OceanNpLoggingPtrOutput {
	return i.ToOceanNpLoggingPtrOutputWithContext(context.Background())
}

func (i OceanNpLoggingArgs) ToOceanNpLoggingPtrOutputWithContext(ctx context.Context) OceanNpLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpLoggingOutput).ToOceanNpLoggingPtrOutputWithContext(ctx)
}

// OceanNpLoggingPtrInput is an input type that accepts OceanNpLoggingArgs, OceanNpLoggingPtr and OceanNpLoggingPtrOutput values.
// You can construct a concrete instance of `OceanNpLoggingPtrInput` via:
//
//	        OceanNpLoggingArgs{...}
//
//	or:
//
//	        nil
type OceanNpLoggingPtrInput interface {
	pulumi.Input

	ToOceanNpLoggingPtrOutput() OceanNpLoggingPtrOutput
	ToOceanNpLoggingPtrOutputWithContext(context.Context) OceanNpLoggingPtrOutput
}

type oceanNpLoggingPtrType OceanNpLoggingArgs

func OceanNpLoggingPtr(v *OceanNpLoggingArgs) OceanNpLoggingPtrInput {
	return (*oceanNpLoggingPtrType)(v)
}

func (*oceanNpLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpLogging)(nil)).Elem()
}

func (i *oceanNpLoggingPtrType) ToOceanNpLoggingPtrOutput() OceanNpLoggingPtrOutput {
	return i.ToOceanNpLoggingPtrOutputWithContext(context.Background())
}

func (i *oceanNpLoggingPtrType) ToOceanNpLoggingPtrOutputWithContext(ctx context.Context) OceanNpLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpLoggingPtrOutput)
}

type OceanNpLoggingOutput struct{ *pulumi.OutputState }

func (OceanNpLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpLogging)(nil)).Elem()
}

func (o OceanNpLoggingOutput) ToOceanNpLoggingOutput() OceanNpLoggingOutput {
	return o
}

func (o OceanNpLoggingOutput) ToOceanNpLoggingOutputWithContext(ctx context.Context) OceanNpLoggingOutput {
	return o
}

func (o OceanNpLoggingOutput) ToOceanNpLoggingPtrOutput() OceanNpLoggingPtrOutput {
	return o.ToOceanNpLoggingPtrOutputWithContext(context.Background())
}

func (o OceanNpLoggingOutput) ToOceanNpLoggingPtrOutputWithContext(ctx context.Context) OceanNpLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpLogging) *OceanNpLogging {
		return &v
	}).(OceanNpLoggingPtrOutput)
}

// The Ocean AKS Logging Export object.
func (o OceanNpLoggingOutput) Export() OceanNpLoggingExportPtrOutput {
	return o.ApplyT(func(v OceanNpLogging) *OceanNpLoggingExport { return v.Export }).(OceanNpLoggingExportPtrOutput)
}

type OceanNpLoggingPtrOutput struct{ *pulumi.OutputState }

func (OceanNpLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpLogging)(nil)).Elem()
}

func (o OceanNpLoggingPtrOutput) ToOceanNpLoggingPtrOutput() OceanNpLoggingPtrOutput {
	return o
}

func (o OceanNpLoggingPtrOutput) ToOceanNpLoggingPtrOutputWithContext(ctx context.Context) OceanNpLoggingPtrOutput {
	return o
}

func (o OceanNpLoggingPtrOutput) Elem() OceanNpLoggingOutput {
	return o.ApplyT(func(v *OceanNpLogging) OceanNpLogging {
		if v != nil {
			return *v
		}
		var ret OceanNpLogging
		return ret
	}).(OceanNpLoggingOutput)
}

// The Ocean AKS Logging Export object.
func (o OceanNpLoggingPtrOutput) Export() OceanNpLoggingExportPtrOutput {
	return o.ApplyT(func(v *OceanNpLogging) *OceanNpLoggingExport {
		if v == nil {
			return nil
		}
		return v.Export
	}).(OceanNpLoggingExportPtrOutput)
}

type OceanNpLoggingExport struct {
	// Exports your cluster's logs to the storage account and container configured on the storage account [data integration](https://docs.spot.io/ocean/features/log-integration-with-azure-blob?id=log-integration-with-azure-blob) given. Each file contains logs of 3 minutes where each log is separated by a new line and saved as a JSON. The file formats are `container`/`accountId``oceanId``oceanName`_`startTime`.log
	AzureBlobs []OceanNpLoggingExportAzureBlob `pulumi:"azureBlobs"`
}

// OceanNpLoggingExportInput is an input type that accepts OceanNpLoggingExportArgs and OceanNpLoggingExportOutput values.
// You can construct a concrete instance of `OceanNpLoggingExportInput` via:
//
//	OceanNpLoggingExportArgs{...}
type OceanNpLoggingExportInput interface {
	pulumi.Input

	ToOceanNpLoggingExportOutput() OceanNpLoggingExportOutput
	ToOceanNpLoggingExportOutputWithContext(context.Context) OceanNpLoggingExportOutput
}

type OceanNpLoggingExportArgs struct {
	// Exports your cluster's logs to the storage account and container configured on the storage account [data integration](https://docs.spot.io/ocean/features/log-integration-with-azure-blob?id=log-integration-with-azure-blob) given. Each file contains logs of 3 minutes where each log is separated by a new line and saved as a JSON. The file formats are `container`/`accountId``oceanId``oceanName`_`startTime`.log
	AzureBlobs OceanNpLoggingExportAzureBlobArrayInput `pulumi:"azureBlobs"`
}

func (OceanNpLoggingExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpLoggingExport)(nil)).Elem()
}

func (i OceanNpLoggingExportArgs) ToOceanNpLoggingExportOutput() OceanNpLoggingExportOutput {
	return i.ToOceanNpLoggingExportOutputWithContext(context.Background())
}

func (i OceanNpLoggingExportArgs) ToOceanNpLoggingExportOutputWithContext(ctx context.Context) OceanNpLoggingExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpLoggingExportOutput)
}

func (i OceanNpLoggingExportArgs) ToOceanNpLoggingExportPtrOutput() OceanNpLoggingExportPtrOutput {
	return i.ToOceanNpLoggingExportPtrOutputWithContext(context.Background())
}

func (i OceanNpLoggingExportArgs) ToOceanNpLoggingExportPtrOutputWithContext(ctx context.Context) OceanNpLoggingExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpLoggingExportOutput).ToOceanNpLoggingExportPtrOutputWithContext(ctx)
}

// OceanNpLoggingExportPtrInput is an input type that accepts OceanNpLoggingExportArgs, OceanNpLoggingExportPtr and OceanNpLoggingExportPtrOutput values.
// You can construct a concrete instance of `OceanNpLoggingExportPtrInput` via:
//
//	        OceanNpLoggingExportArgs{...}
//
//	or:
//
//	        nil
type OceanNpLoggingExportPtrInput interface {
	pulumi.Input

	ToOceanNpLoggingExportPtrOutput() OceanNpLoggingExportPtrOutput
	ToOceanNpLoggingExportPtrOutputWithContext(context.Context) OceanNpLoggingExportPtrOutput
}

type oceanNpLoggingExportPtrType OceanNpLoggingExportArgs

func OceanNpLoggingExportPtr(v *OceanNpLoggingExportArgs) OceanNpLoggingExportPtrInput {
	return (*oceanNpLoggingExportPtrType)(v)
}

func (*oceanNpLoggingExportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpLoggingExport)(nil)).Elem()
}

func (i *oceanNpLoggingExportPtrType) ToOceanNpLoggingExportPtrOutput() OceanNpLoggingExportPtrOutput {
	return i.ToOceanNpLoggingExportPtrOutputWithContext(context.Background())
}

func (i *oceanNpLoggingExportPtrType) ToOceanNpLoggingExportPtrOutputWithContext(ctx context.Context) OceanNpLoggingExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpLoggingExportPtrOutput)
}

type OceanNpLoggingExportOutput struct{ *pulumi.OutputState }

func (OceanNpLoggingExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpLoggingExport)(nil)).Elem()
}

func (o OceanNpLoggingExportOutput) ToOceanNpLoggingExportOutput() OceanNpLoggingExportOutput {
	return o
}

func (o OceanNpLoggingExportOutput) ToOceanNpLoggingExportOutputWithContext(ctx context.Context) OceanNpLoggingExportOutput {
	return o
}

func (o OceanNpLoggingExportOutput) ToOceanNpLoggingExportPtrOutput() OceanNpLoggingExportPtrOutput {
	return o.ToOceanNpLoggingExportPtrOutputWithContext(context.Background())
}

func (o OceanNpLoggingExportOutput) ToOceanNpLoggingExportPtrOutputWithContext(ctx context.Context) OceanNpLoggingExportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpLoggingExport) *OceanNpLoggingExport {
		return &v
	}).(OceanNpLoggingExportPtrOutput)
}

// Exports your cluster's logs to the storage account and container configured on the storage account [data integration](https://docs.spot.io/ocean/features/log-integration-with-azure-blob?id=log-integration-with-azure-blob) given. Each file contains logs of 3 minutes where each log is separated by a new line and saved as a JSON. The file formats are `container`/`accountId“oceanId“oceanName`_`startTime`.log
func (o OceanNpLoggingExportOutput) AzureBlobs() OceanNpLoggingExportAzureBlobArrayOutput {
	return o.ApplyT(func(v OceanNpLoggingExport) []OceanNpLoggingExportAzureBlob { return v.AzureBlobs }).(OceanNpLoggingExportAzureBlobArrayOutput)
}

type OceanNpLoggingExportPtrOutput struct{ *pulumi.OutputState }

func (OceanNpLoggingExportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpLoggingExport)(nil)).Elem()
}

func (o OceanNpLoggingExportPtrOutput) ToOceanNpLoggingExportPtrOutput() OceanNpLoggingExportPtrOutput {
	return o
}

func (o OceanNpLoggingExportPtrOutput) ToOceanNpLoggingExportPtrOutputWithContext(ctx context.Context) OceanNpLoggingExportPtrOutput {
	return o
}

func (o OceanNpLoggingExportPtrOutput) Elem() OceanNpLoggingExportOutput {
	return o.ApplyT(func(v *OceanNpLoggingExport) OceanNpLoggingExport {
		if v != nil {
			return *v
		}
		var ret OceanNpLoggingExport
		return ret
	}).(OceanNpLoggingExportOutput)
}

// Exports your cluster's logs to the storage account and container configured on the storage account [data integration](https://docs.spot.io/ocean/features/log-integration-with-azure-blob?id=log-integration-with-azure-blob) given. Each file contains logs of 3 minutes where each log is separated by a new line and saved as a JSON. The file formats are `container`/`accountId“oceanId“oceanName`_`startTime`.log
func (o OceanNpLoggingExportPtrOutput) AzureBlobs() OceanNpLoggingExportAzureBlobArrayOutput {
	return o.ApplyT(func(v *OceanNpLoggingExport) []OceanNpLoggingExportAzureBlob {
		if v == nil {
			return nil
		}
		return v.AzureBlobs
	}).(OceanNpLoggingExportAzureBlobArrayOutput)
}

type OceanNpLoggingExportAzureBlob struct {
	// The identifier of The Azure Blob data integration to export the logs to.
	Id *string `pulumi:"id"`
}

// OceanNpLoggingExportAzureBlobInput is an input type that accepts OceanNpLoggingExportAzureBlobArgs and OceanNpLoggingExportAzureBlobOutput values.
// You can construct a concrete instance of `OceanNpLoggingExportAzureBlobInput` via:
//
//	OceanNpLoggingExportAzureBlobArgs{...}
type OceanNpLoggingExportAzureBlobInput interface {
	pulumi.Input

	ToOceanNpLoggingExportAzureBlobOutput() OceanNpLoggingExportAzureBlobOutput
	ToOceanNpLoggingExportAzureBlobOutputWithContext(context.Context) OceanNpLoggingExportAzureBlobOutput
}

type OceanNpLoggingExportAzureBlobArgs struct {
	// The identifier of The Azure Blob data integration to export the logs to.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (OceanNpLoggingExportAzureBlobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpLoggingExportAzureBlob)(nil)).Elem()
}

func (i OceanNpLoggingExportAzureBlobArgs) ToOceanNpLoggingExportAzureBlobOutput() OceanNpLoggingExportAzureBlobOutput {
	return i.ToOceanNpLoggingExportAzureBlobOutputWithContext(context.Background())
}

func (i OceanNpLoggingExportAzureBlobArgs) ToOceanNpLoggingExportAzureBlobOutputWithContext(ctx context.Context) OceanNpLoggingExportAzureBlobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpLoggingExportAzureBlobOutput)
}

// OceanNpLoggingExportAzureBlobArrayInput is an input type that accepts OceanNpLoggingExportAzureBlobArray and OceanNpLoggingExportAzureBlobArrayOutput values.
// You can construct a concrete instance of `OceanNpLoggingExportAzureBlobArrayInput` via:
//
//	OceanNpLoggingExportAzureBlobArray{ OceanNpLoggingExportAzureBlobArgs{...} }
type OceanNpLoggingExportAzureBlobArrayInput interface {
	pulumi.Input

	ToOceanNpLoggingExportAzureBlobArrayOutput() OceanNpLoggingExportAzureBlobArrayOutput
	ToOceanNpLoggingExportAzureBlobArrayOutputWithContext(context.Context) OceanNpLoggingExportAzureBlobArrayOutput
}

type OceanNpLoggingExportAzureBlobArray []OceanNpLoggingExportAzureBlobInput

func (OceanNpLoggingExportAzureBlobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpLoggingExportAzureBlob)(nil)).Elem()
}

func (i OceanNpLoggingExportAzureBlobArray) ToOceanNpLoggingExportAzureBlobArrayOutput() OceanNpLoggingExportAzureBlobArrayOutput {
	return i.ToOceanNpLoggingExportAzureBlobArrayOutputWithContext(context.Background())
}

func (i OceanNpLoggingExportAzureBlobArray) ToOceanNpLoggingExportAzureBlobArrayOutputWithContext(ctx context.Context) OceanNpLoggingExportAzureBlobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpLoggingExportAzureBlobArrayOutput)
}

type OceanNpLoggingExportAzureBlobOutput struct{ *pulumi.OutputState }

func (OceanNpLoggingExportAzureBlobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpLoggingExportAzureBlob)(nil)).Elem()
}

func (o OceanNpLoggingExportAzureBlobOutput) ToOceanNpLoggingExportAzureBlobOutput() OceanNpLoggingExportAzureBlobOutput {
	return o
}

func (o OceanNpLoggingExportAzureBlobOutput) ToOceanNpLoggingExportAzureBlobOutputWithContext(ctx context.Context) OceanNpLoggingExportAzureBlobOutput {
	return o
}

// The identifier of The Azure Blob data integration to export the logs to.
func (o OceanNpLoggingExportAzureBlobOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OceanNpLoggingExportAzureBlob) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type OceanNpLoggingExportAzureBlobArrayOutput struct{ *pulumi.OutputState }

func (OceanNpLoggingExportAzureBlobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpLoggingExportAzureBlob)(nil)).Elem()
}

func (o OceanNpLoggingExportAzureBlobArrayOutput) ToOceanNpLoggingExportAzureBlobArrayOutput() OceanNpLoggingExportAzureBlobArrayOutput {
	return o
}

func (o OceanNpLoggingExportAzureBlobArrayOutput) ToOceanNpLoggingExportAzureBlobArrayOutputWithContext(ctx context.Context) OceanNpLoggingExportAzureBlobArrayOutput {
	return o
}

func (o OceanNpLoggingExportAzureBlobArrayOutput) Index(i pulumi.IntInput) OceanNpLoggingExportAzureBlobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OceanNpLoggingExportAzureBlob {
		return vs[0].([]OceanNpLoggingExportAzureBlob)[vs[1].(int)]
	}).(OceanNpLoggingExportAzureBlobOutput)
}

type OceanNpScheduling struct {
	// An object used to specify times that the nodes in the virtual node group will be stopped.
	ShutdownHours   *OceanNpSchedulingShutdownHours   `pulumi:"shutdownHours"`
	SuspensionHours *OceanNpSchedulingSuspensionHours `pulumi:"suspensionHours"`
	Tasks           []OceanNpSchedulingTask           `pulumi:"tasks"`
}

// OceanNpSchedulingInput is an input type that accepts OceanNpSchedulingArgs and OceanNpSchedulingOutput values.
// You can construct a concrete instance of `OceanNpSchedulingInput` via:
//
//	OceanNpSchedulingArgs{...}
type OceanNpSchedulingInput interface {
	pulumi.Input

	ToOceanNpSchedulingOutput() OceanNpSchedulingOutput
	ToOceanNpSchedulingOutputWithContext(context.Context) OceanNpSchedulingOutput
}

type OceanNpSchedulingArgs struct {
	// An object used to specify times that the nodes in the virtual node group will be stopped.
	ShutdownHours   OceanNpSchedulingShutdownHoursPtrInput   `pulumi:"shutdownHours"`
	SuspensionHours OceanNpSchedulingSuspensionHoursPtrInput `pulumi:"suspensionHours"`
	Tasks           OceanNpSchedulingTaskArrayInput          `pulumi:"tasks"`
}

func (OceanNpSchedulingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpScheduling)(nil)).Elem()
}

func (i OceanNpSchedulingArgs) ToOceanNpSchedulingOutput() OceanNpSchedulingOutput {
	return i.ToOceanNpSchedulingOutputWithContext(context.Background())
}

func (i OceanNpSchedulingArgs) ToOceanNpSchedulingOutputWithContext(ctx context.Context) OceanNpSchedulingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingOutput)
}

func (i OceanNpSchedulingArgs) ToOceanNpSchedulingPtrOutput() OceanNpSchedulingPtrOutput {
	return i.ToOceanNpSchedulingPtrOutputWithContext(context.Background())
}

func (i OceanNpSchedulingArgs) ToOceanNpSchedulingPtrOutputWithContext(ctx context.Context) OceanNpSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingOutput).ToOceanNpSchedulingPtrOutputWithContext(ctx)
}

// OceanNpSchedulingPtrInput is an input type that accepts OceanNpSchedulingArgs, OceanNpSchedulingPtr and OceanNpSchedulingPtrOutput values.
// You can construct a concrete instance of `OceanNpSchedulingPtrInput` via:
//
//	        OceanNpSchedulingArgs{...}
//
//	or:
//
//	        nil
type OceanNpSchedulingPtrInput interface {
	pulumi.Input

	ToOceanNpSchedulingPtrOutput() OceanNpSchedulingPtrOutput
	ToOceanNpSchedulingPtrOutputWithContext(context.Context) OceanNpSchedulingPtrOutput
}

type oceanNpSchedulingPtrType OceanNpSchedulingArgs

func OceanNpSchedulingPtr(v *OceanNpSchedulingArgs) OceanNpSchedulingPtrInput {
	return (*oceanNpSchedulingPtrType)(v)
}

func (*oceanNpSchedulingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpScheduling)(nil)).Elem()
}

func (i *oceanNpSchedulingPtrType) ToOceanNpSchedulingPtrOutput() OceanNpSchedulingPtrOutput {
	return i.ToOceanNpSchedulingPtrOutputWithContext(context.Background())
}

func (i *oceanNpSchedulingPtrType) ToOceanNpSchedulingPtrOutputWithContext(ctx context.Context) OceanNpSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingPtrOutput)
}

type OceanNpSchedulingOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpScheduling)(nil)).Elem()
}

func (o OceanNpSchedulingOutput) ToOceanNpSchedulingOutput() OceanNpSchedulingOutput {
	return o
}

func (o OceanNpSchedulingOutput) ToOceanNpSchedulingOutputWithContext(ctx context.Context) OceanNpSchedulingOutput {
	return o
}

func (o OceanNpSchedulingOutput) ToOceanNpSchedulingPtrOutput() OceanNpSchedulingPtrOutput {
	return o.ToOceanNpSchedulingPtrOutputWithContext(context.Background())
}

func (o OceanNpSchedulingOutput) ToOceanNpSchedulingPtrOutputWithContext(ctx context.Context) OceanNpSchedulingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpScheduling) *OceanNpScheduling {
		return &v
	}).(OceanNpSchedulingPtrOutput)
}

// An object used to specify times that the nodes in the virtual node group will be stopped.
func (o OceanNpSchedulingOutput) ShutdownHours() OceanNpSchedulingShutdownHoursPtrOutput {
	return o.ApplyT(func(v OceanNpScheduling) *OceanNpSchedulingShutdownHours { return v.ShutdownHours }).(OceanNpSchedulingShutdownHoursPtrOutput)
}

func (o OceanNpSchedulingOutput) SuspensionHours() OceanNpSchedulingSuspensionHoursPtrOutput {
	return o.ApplyT(func(v OceanNpScheduling) *OceanNpSchedulingSuspensionHours { return v.SuspensionHours }).(OceanNpSchedulingSuspensionHoursPtrOutput)
}

func (o OceanNpSchedulingOutput) Tasks() OceanNpSchedulingTaskArrayOutput {
	return o.ApplyT(func(v OceanNpScheduling) []OceanNpSchedulingTask { return v.Tasks }).(OceanNpSchedulingTaskArrayOutput)
}

type OceanNpSchedulingPtrOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpScheduling)(nil)).Elem()
}

func (o OceanNpSchedulingPtrOutput) ToOceanNpSchedulingPtrOutput() OceanNpSchedulingPtrOutput {
	return o
}

func (o OceanNpSchedulingPtrOutput) ToOceanNpSchedulingPtrOutputWithContext(ctx context.Context) OceanNpSchedulingPtrOutput {
	return o
}

func (o OceanNpSchedulingPtrOutput) Elem() OceanNpSchedulingOutput {
	return o.ApplyT(func(v *OceanNpScheduling) OceanNpScheduling {
		if v != nil {
			return *v
		}
		var ret OceanNpScheduling
		return ret
	}).(OceanNpSchedulingOutput)
}

// An object used to specify times that the nodes in the virtual node group will be stopped.
func (o OceanNpSchedulingPtrOutput) ShutdownHours() OceanNpSchedulingShutdownHoursPtrOutput {
	return o.ApplyT(func(v *OceanNpScheduling) *OceanNpSchedulingShutdownHours {
		if v == nil {
			return nil
		}
		return v.ShutdownHours
	}).(OceanNpSchedulingShutdownHoursPtrOutput)
}

func (o OceanNpSchedulingPtrOutput) SuspensionHours() OceanNpSchedulingSuspensionHoursPtrOutput {
	return o.ApplyT(func(v *OceanNpScheduling) *OceanNpSchedulingSuspensionHours {
		if v == nil {
			return nil
		}
		return v.SuspensionHours
	}).(OceanNpSchedulingSuspensionHoursPtrOutput)
}

func (o OceanNpSchedulingPtrOutput) Tasks() OceanNpSchedulingTaskArrayOutput {
	return o.ApplyT(func(v *OceanNpScheduling) []OceanNpSchedulingTask {
		if v == nil {
			return nil
		}
		return v.Tasks
	}).(OceanNpSchedulingTaskArrayOutput)
}

type OceanNpSchedulingShutdownHours struct {
	IsEnabled *bool `pulumi:"isEnabled"`
	// The times that the shutdown hours will apply. Required if `isEnabled` is true.
	TimeWindows []string `pulumi:"timeWindows"`
}

// OceanNpSchedulingShutdownHoursInput is an input type that accepts OceanNpSchedulingShutdownHoursArgs and OceanNpSchedulingShutdownHoursOutput values.
// You can construct a concrete instance of `OceanNpSchedulingShutdownHoursInput` via:
//
//	OceanNpSchedulingShutdownHoursArgs{...}
type OceanNpSchedulingShutdownHoursInput interface {
	pulumi.Input

	ToOceanNpSchedulingShutdownHoursOutput() OceanNpSchedulingShutdownHoursOutput
	ToOceanNpSchedulingShutdownHoursOutputWithContext(context.Context) OceanNpSchedulingShutdownHoursOutput
}

type OceanNpSchedulingShutdownHoursArgs struct {
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// The times that the shutdown hours will apply. Required if `isEnabled` is true.
	TimeWindows pulumi.StringArrayInput `pulumi:"timeWindows"`
}

func (OceanNpSchedulingShutdownHoursArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpSchedulingShutdownHours)(nil)).Elem()
}

func (i OceanNpSchedulingShutdownHoursArgs) ToOceanNpSchedulingShutdownHoursOutput() OceanNpSchedulingShutdownHoursOutput {
	return i.ToOceanNpSchedulingShutdownHoursOutputWithContext(context.Background())
}

func (i OceanNpSchedulingShutdownHoursArgs) ToOceanNpSchedulingShutdownHoursOutputWithContext(ctx context.Context) OceanNpSchedulingShutdownHoursOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingShutdownHoursOutput)
}

func (i OceanNpSchedulingShutdownHoursArgs) ToOceanNpSchedulingShutdownHoursPtrOutput() OceanNpSchedulingShutdownHoursPtrOutput {
	return i.ToOceanNpSchedulingShutdownHoursPtrOutputWithContext(context.Background())
}

func (i OceanNpSchedulingShutdownHoursArgs) ToOceanNpSchedulingShutdownHoursPtrOutputWithContext(ctx context.Context) OceanNpSchedulingShutdownHoursPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingShutdownHoursOutput).ToOceanNpSchedulingShutdownHoursPtrOutputWithContext(ctx)
}

// OceanNpSchedulingShutdownHoursPtrInput is an input type that accepts OceanNpSchedulingShutdownHoursArgs, OceanNpSchedulingShutdownHoursPtr and OceanNpSchedulingShutdownHoursPtrOutput values.
// You can construct a concrete instance of `OceanNpSchedulingShutdownHoursPtrInput` via:
//
//	        OceanNpSchedulingShutdownHoursArgs{...}
//
//	or:
//
//	        nil
type OceanNpSchedulingShutdownHoursPtrInput interface {
	pulumi.Input

	ToOceanNpSchedulingShutdownHoursPtrOutput() OceanNpSchedulingShutdownHoursPtrOutput
	ToOceanNpSchedulingShutdownHoursPtrOutputWithContext(context.Context) OceanNpSchedulingShutdownHoursPtrOutput
}

type oceanNpSchedulingShutdownHoursPtrType OceanNpSchedulingShutdownHoursArgs

func OceanNpSchedulingShutdownHoursPtr(v *OceanNpSchedulingShutdownHoursArgs) OceanNpSchedulingShutdownHoursPtrInput {
	return (*oceanNpSchedulingShutdownHoursPtrType)(v)
}

func (*oceanNpSchedulingShutdownHoursPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpSchedulingShutdownHours)(nil)).Elem()
}

func (i *oceanNpSchedulingShutdownHoursPtrType) ToOceanNpSchedulingShutdownHoursPtrOutput() OceanNpSchedulingShutdownHoursPtrOutput {
	return i.ToOceanNpSchedulingShutdownHoursPtrOutputWithContext(context.Background())
}

func (i *oceanNpSchedulingShutdownHoursPtrType) ToOceanNpSchedulingShutdownHoursPtrOutputWithContext(ctx context.Context) OceanNpSchedulingShutdownHoursPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingShutdownHoursPtrOutput)
}

type OceanNpSchedulingShutdownHoursOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingShutdownHoursOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpSchedulingShutdownHours)(nil)).Elem()
}

func (o OceanNpSchedulingShutdownHoursOutput) ToOceanNpSchedulingShutdownHoursOutput() OceanNpSchedulingShutdownHoursOutput {
	return o
}

func (o OceanNpSchedulingShutdownHoursOutput) ToOceanNpSchedulingShutdownHoursOutputWithContext(ctx context.Context) OceanNpSchedulingShutdownHoursOutput {
	return o
}

func (o OceanNpSchedulingShutdownHoursOutput) ToOceanNpSchedulingShutdownHoursPtrOutput() OceanNpSchedulingShutdownHoursPtrOutput {
	return o.ToOceanNpSchedulingShutdownHoursPtrOutputWithContext(context.Background())
}

func (o OceanNpSchedulingShutdownHoursOutput) ToOceanNpSchedulingShutdownHoursPtrOutputWithContext(ctx context.Context) OceanNpSchedulingShutdownHoursPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpSchedulingShutdownHours) *OceanNpSchedulingShutdownHours {
		return &v
	}).(OceanNpSchedulingShutdownHoursPtrOutput)
}

func (o OceanNpSchedulingShutdownHoursOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingShutdownHours) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The times that the shutdown hours will apply. Required if `isEnabled` is true.
func (o OceanNpSchedulingShutdownHoursOutput) TimeWindows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpSchedulingShutdownHours) []string { return v.TimeWindows }).(pulumi.StringArrayOutput)
}

type OceanNpSchedulingShutdownHoursPtrOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingShutdownHoursPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpSchedulingShutdownHours)(nil)).Elem()
}

func (o OceanNpSchedulingShutdownHoursPtrOutput) ToOceanNpSchedulingShutdownHoursPtrOutput() OceanNpSchedulingShutdownHoursPtrOutput {
	return o
}

func (o OceanNpSchedulingShutdownHoursPtrOutput) ToOceanNpSchedulingShutdownHoursPtrOutputWithContext(ctx context.Context) OceanNpSchedulingShutdownHoursPtrOutput {
	return o
}

func (o OceanNpSchedulingShutdownHoursPtrOutput) Elem() OceanNpSchedulingShutdownHoursOutput {
	return o.ApplyT(func(v *OceanNpSchedulingShutdownHours) OceanNpSchedulingShutdownHours {
		if v != nil {
			return *v
		}
		var ret OceanNpSchedulingShutdownHours
		return ret
	}).(OceanNpSchedulingShutdownHoursOutput)
}

func (o OceanNpSchedulingShutdownHoursPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingShutdownHours) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The times that the shutdown hours will apply. Required if `isEnabled` is true.
func (o OceanNpSchedulingShutdownHoursPtrOutput) TimeWindows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpSchedulingShutdownHours) []string {
		if v == nil {
			return nil
		}
		return v.TimeWindows
	}).(pulumi.StringArrayOutput)
}

type OceanNpSchedulingSuspensionHours struct {
	IsEnabled *bool `pulumi:"isEnabled"`
	// The times that the shutdown hours will apply. Required if `isEnabled` is true.
	TimeWindows []string `pulumi:"timeWindows"`
}

// OceanNpSchedulingSuspensionHoursInput is an input type that accepts OceanNpSchedulingSuspensionHoursArgs and OceanNpSchedulingSuspensionHoursOutput values.
// You can construct a concrete instance of `OceanNpSchedulingSuspensionHoursInput` via:
//
//	OceanNpSchedulingSuspensionHoursArgs{...}
type OceanNpSchedulingSuspensionHoursInput interface {
	pulumi.Input

	ToOceanNpSchedulingSuspensionHoursOutput() OceanNpSchedulingSuspensionHoursOutput
	ToOceanNpSchedulingSuspensionHoursOutputWithContext(context.Context) OceanNpSchedulingSuspensionHoursOutput
}

type OceanNpSchedulingSuspensionHoursArgs struct {
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// The times that the shutdown hours will apply. Required if `isEnabled` is true.
	TimeWindows pulumi.StringArrayInput `pulumi:"timeWindows"`
}

func (OceanNpSchedulingSuspensionHoursArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpSchedulingSuspensionHours)(nil)).Elem()
}

func (i OceanNpSchedulingSuspensionHoursArgs) ToOceanNpSchedulingSuspensionHoursOutput() OceanNpSchedulingSuspensionHoursOutput {
	return i.ToOceanNpSchedulingSuspensionHoursOutputWithContext(context.Background())
}

func (i OceanNpSchedulingSuspensionHoursArgs) ToOceanNpSchedulingSuspensionHoursOutputWithContext(ctx context.Context) OceanNpSchedulingSuspensionHoursOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingSuspensionHoursOutput)
}

func (i OceanNpSchedulingSuspensionHoursArgs) ToOceanNpSchedulingSuspensionHoursPtrOutput() OceanNpSchedulingSuspensionHoursPtrOutput {
	return i.ToOceanNpSchedulingSuspensionHoursPtrOutputWithContext(context.Background())
}

func (i OceanNpSchedulingSuspensionHoursArgs) ToOceanNpSchedulingSuspensionHoursPtrOutputWithContext(ctx context.Context) OceanNpSchedulingSuspensionHoursPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingSuspensionHoursOutput).ToOceanNpSchedulingSuspensionHoursPtrOutputWithContext(ctx)
}

// OceanNpSchedulingSuspensionHoursPtrInput is an input type that accepts OceanNpSchedulingSuspensionHoursArgs, OceanNpSchedulingSuspensionHoursPtr and OceanNpSchedulingSuspensionHoursPtrOutput values.
// You can construct a concrete instance of `OceanNpSchedulingSuspensionHoursPtrInput` via:
//
//	        OceanNpSchedulingSuspensionHoursArgs{...}
//
//	or:
//
//	        nil
type OceanNpSchedulingSuspensionHoursPtrInput interface {
	pulumi.Input

	ToOceanNpSchedulingSuspensionHoursPtrOutput() OceanNpSchedulingSuspensionHoursPtrOutput
	ToOceanNpSchedulingSuspensionHoursPtrOutputWithContext(context.Context) OceanNpSchedulingSuspensionHoursPtrOutput
}

type oceanNpSchedulingSuspensionHoursPtrType OceanNpSchedulingSuspensionHoursArgs

func OceanNpSchedulingSuspensionHoursPtr(v *OceanNpSchedulingSuspensionHoursArgs) OceanNpSchedulingSuspensionHoursPtrInput {
	return (*oceanNpSchedulingSuspensionHoursPtrType)(v)
}

func (*oceanNpSchedulingSuspensionHoursPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpSchedulingSuspensionHours)(nil)).Elem()
}

func (i *oceanNpSchedulingSuspensionHoursPtrType) ToOceanNpSchedulingSuspensionHoursPtrOutput() OceanNpSchedulingSuspensionHoursPtrOutput {
	return i.ToOceanNpSchedulingSuspensionHoursPtrOutputWithContext(context.Background())
}

func (i *oceanNpSchedulingSuspensionHoursPtrType) ToOceanNpSchedulingSuspensionHoursPtrOutputWithContext(ctx context.Context) OceanNpSchedulingSuspensionHoursPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingSuspensionHoursPtrOutput)
}

type OceanNpSchedulingSuspensionHoursOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingSuspensionHoursOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpSchedulingSuspensionHours)(nil)).Elem()
}

func (o OceanNpSchedulingSuspensionHoursOutput) ToOceanNpSchedulingSuspensionHoursOutput() OceanNpSchedulingSuspensionHoursOutput {
	return o
}

func (o OceanNpSchedulingSuspensionHoursOutput) ToOceanNpSchedulingSuspensionHoursOutputWithContext(ctx context.Context) OceanNpSchedulingSuspensionHoursOutput {
	return o
}

func (o OceanNpSchedulingSuspensionHoursOutput) ToOceanNpSchedulingSuspensionHoursPtrOutput() OceanNpSchedulingSuspensionHoursPtrOutput {
	return o.ToOceanNpSchedulingSuspensionHoursPtrOutputWithContext(context.Background())
}

func (o OceanNpSchedulingSuspensionHoursOutput) ToOceanNpSchedulingSuspensionHoursPtrOutputWithContext(ctx context.Context) OceanNpSchedulingSuspensionHoursPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpSchedulingSuspensionHours) *OceanNpSchedulingSuspensionHours {
		return &v
	}).(OceanNpSchedulingSuspensionHoursPtrOutput)
}

func (o OceanNpSchedulingSuspensionHoursOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingSuspensionHours) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The times that the shutdown hours will apply. Required if `isEnabled` is true.
func (o OceanNpSchedulingSuspensionHoursOutput) TimeWindows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpSchedulingSuspensionHours) []string { return v.TimeWindows }).(pulumi.StringArrayOutput)
}

type OceanNpSchedulingSuspensionHoursPtrOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingSuspensionHoursPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpSchedulingSuspensionHours)(nil)).Elem()
}

func (o OceanNpSchedulingSuspensionHoursPtrOutput) ToOceanNpSchedulingSuspensionHoursPtrOutput() OceanNpSchedulingSuspensionHoursPtrOutput {
	return o
}

func (o OceanNpSchedulingSuspensionHoursPtrOutput) ToOceanNpSchedulingSuspensionHoursPtrOutputWithContext(ctx context.Context) OceanNpSchedulingSuspensionHoursPtrOutput {
	return o
}

func (o OceanNpSchedulingSuspensionHoursPtrOutput) Elem() OceanNpSchedulingSuspensionHoursOutput {
	return o.ApplyT(func(v *OceanNpSchedulingSuspensionHours) OceanNpSchedulingSuspensionHours {
		if v != nil {
			return *v
		}
		var ret OceanNpSchedulingSuspensionHours
		return ret
	}).(OceanNpSchedulingSuspensionHoursOutput)
}

func (o OceanNpSchedulingSuspensionHoursPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingSuspensionHours) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The times that the shutdown hours will apply. Required if `isEnabled` is true.
func (o OceanNpSchedulingSuspensionHoursPtrOutput) TimeWindows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpSchedulingSuspensionHours) []string {
		if v == nil {
			return nil
		}
		return v.TimeWindows
	}).(pulumi.StringArrayOutput)
}

type OceanNpSchedulingTask struct {
	CronExpression string                           `pulumi:"cronExpression"`
	IsEnabled      bool                             `pulumi:"isEnabled"`
	Parameters     *OceanNpSchedulingTaskParameters `pulumi:"parameters"`
	TaskType       string                           `pulumi:"taskType"`
}

// OceanNpSchedulingTaskInput is an input type that accepts OceanNpSchedulingTaskArgs and OceanNpSchedulingTaskOutput values.
// You can construct a concrete instance of `OceanNpSchedulingTaskInput` via:
//
//	OceanNpSchedulingTaskArgs{...}
type OceanNpSchedulingTaskInput interface {
	pulumi.Input

	ToOceanNpSchedulingTaskOutput() OceanNpSchedulingTaskOutput
	ToOceanNpSchedulingTaskOutputWithContext(context.Context) OceanNpSchedulingTaskOutput
}

type OceanNpSchedulingTaskArgs struct {
	CronExpression pulumi.StringInput                      `pulumi:"cronExpression"`
	IsEnabled      pulumi.BoolInput                        `pulumi:"isEnabled"`
	Parameters     OceanNpSchedulingTaskParametersPtrInput `pulumi:"parameters"`
	TaskType       pulumi.StringInput                      `pulumi:"taskType"`
}

func (OceanNpSchedulingTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpSchedulingTask)(nil)).Elem()
}

func (i OceanNpSchedulingTaskArgs) ToOceanNpSchedulingTaskOutput() OceanNpSchedulingTaskOutput {
	return i.ToOceanNpSchedulingTaskOutputWithContext(context.Background())
}

func (i OceanNpSchedulingTaskArgs) ToOceanNpSchedulingTaskOutputWithContext(ctx context.Context) OceanNpSchedulingTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingTaskOutput)
}

// OceanNpSchedulingTaskArrayInput is an input type that accepts OceanNpSchedulingTaskArray and OceanNpSchedulingTaskArrayOutput values.
// You can construct a concrete instance of `OceanNpSchedulingTaskArrayInput` via:
//
//	OceanNpSchedulingTaskArray{ OceanNpSchedulingTaskArgs{...} }
type OceanNpSchedulingTaskArrayInput interface {
	pulumi.Input

	ToOceanNpSchedulingTaskArrayOutput() OceanNpSchedulingTaskArrayOutput
	ToOceanNpSchedulingTaskArrayOutputWithContext(context.Context) OceanNpSchedulingTaskArrayOutput
}

type OceanNpSchedulingTaskArray []OceanNpSchedulingTaskInput

func (OceanNpSchedulingTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpSchedulingTask)(nil)).Elem()
}

func (i OceanNpSchedulingTaskArray) ToOceanNpSchedulingTaskArrayOutput() OceanNpSchedulingTaskArrayOutput {
	return i.ToOceanNpSchedulingTaskArrayOutputWithContext(context.Background())
}

func (i OceanNpSchedulingTaskArray) ToOceanNpSchedulingTaskArrayOutputWithContext(ctx context.Context) OceanNpSchedulingTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingTaskArrayOutput)
}

type OceanNpSchedulingTaskOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpSchedulingTask)(nil)).Elem()
}

func (o OceanNpSchedulingTaskOutput) ToOceanNpSchedulingTaskOutput() OceanNpSchedulingTaskOutput {
	return o
}

func (o OceanNpSchedulingTaskOutput) ToOceanNpSchedulingTaskOutputWithContext(ctx context.Context) OceanNpSchedulingTaskOutput {
	return o
}

func (o OceanNpSchedulingTaskOutput) CronExpression() pulumi.StringOutput {
	return o.ApplyT(func(v OceanNpSchedulingTask) string { return v.CronExpression }).(pulumi.StringOutput)
}

func (o OceanNpSchedulingTaskOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v OceanNpSchedulingTask) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

func (o OceanNpSchedulingTaskOutput) Parameters() OceanNpSchedulingTaskParametersPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTask) *OceanNpSchedulingTaskParameters { return v.Parameters }).(OceanNpSchedulingTaskParametersPtrOutput)
}

func (o OceanNpSchedulingTaskOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v OceanNpSchedulingTask) string { return v.TaskType }).(pulumi.StringOutput)
}

type OceanNpSchedulingTaskArrayOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpSchedulingTask)(nil)).Elem()
}

func (o OceanNpSchedulingTaskArrayOutput) ToOceanNpSchedulingTaskArrayOutput() OceanNpSchedulingTaskArrayOutput {
	return o
}

func (o OceanNpSchedulingTaskArrayOutput) ToOceanNpSchedulingTaskArrayOutputWithContext(ctx context.Context) OceanNpSchedulingTaskArrayOutput {
	return o
}

func (o OceanNpSchedulingTaskArrayOutput) Index(i pulumi.IntInput) OceanNpSchedulingTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OceanNpSchedulingTask {
		return vs[0].([]OceanNpSchedulingTask)[vs[1].(int)]
	}).(OceanNpSchedulingTaskOutput)
}

type OceanNpSchedulingTaskParameters struct {
	ParametersClusterRoll   *OceanNpSchedulingTaskParametersParametersClusterRoll   `pulumi:"parametersClusterRoll"`
	ParametersUpgradeConfig *OceanNpSchedulingTaskParametersParametersUpgradeConfig `pulumi:"parametersUpgradeConfig"`
}

// OceanNpSchedulingTaskParametersInput is an input type that accepts OceanNpSchedulingTaskParametersArgs and OceanNpSchedulingTaskParametersOutput values.
// You can construct a concrete instance of `OceanNpSchedulingTaskParametersInput` via:
//
//	OceanNpSchedulingTaskParametersArgs{...}
type OceanNpSchedulingTaskParametersInput interface {
	pulumi.Input

	ToOceanNpSchedulingTaskParametersOutput() OceanNpSchedulingTaskParametersOutput
	ToOceanNpSchedulingTaskParametersOutputWithContext(context.Context) OceanNpSchedulingTaskParametersOutput
}

type OceanNpSchedulingTaskParametersArgs struct {
	ParametersClusterRoll   OceanNpSchedulingTaskParametersParametersClusterRollPtrInput   `pulumi:"parametersClusterRoll"`
	ParametersUpgradeConfig OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrInput `pulumi:"parametersUpgradeConfig"`
}

func (OceanNpSchedulingTaskParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpSchedulingTaskParameters)(nil)).Elem()
}

func (i OceanNpSchedulingTaskParametersArgs) ToOceanNpSchedulingTaskParametersOutput() OceanNpSchedulingTaskParametersOutput {
	return i.ToOceanNpSchedulingTaskParametersOutputWithContext(context.Background())
}

func (i OceanNpSchedulingTaskParametersArgs) ToOceanNpSchedulingTaskParametersOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingTaskParametersOutput)
}

func (i OceanNpSchedulingTaskParametersArgs) ToOceanNpSchedulingTaskParametersPtrOutput() OceanNpSchedulingTaskParametersPtrOutput {
	return i.ToOceanNpSchedulingTaskParametersPtrOutputWithContext(context.Background())
}

func (i OceanNpSchedulingTaskParametersArgs) ToOceanNpSchedulingTaskParametersPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingTaskParametersOutput).ToOceanNpSchedulingTaskParametersPtrOutputWithContext(ctx)
}

// OceanNpSchedulingTaskParametersPtrInput is an input type that accepts OceanNpSchedulingTaskParametersArgs, OceanNpSchedulingTaskParametersPtr and OceanNpSchedulingTaskParametersPtrOutput values.
// You can construct a concrete instance of `OceanNpSchedulingTaskParametersPtrInput` via:
//
//	        OceanNpSchedulingTaskParametersArgs{...}
//
//	or:
//
//	        nil
type OceanNpSchedulingTaskParametersPtrInput interface {
	pulumi.Input

	ToOceanNpSchedulingTaskParametersPtrOutput() OceanNpSchedulingTaskParametersPtrOutput
	ToOceanNpSchedulingTaskParametersPtrOutputWithContext(context.Context) OceanNpSchedulingTaskParametersPtrOutput
}

type oceanNpSchedulingTaskParametersPtrType OceanNpSchedulingTaskParametersArgs

func OceanNpSchedulingTaskParametersPtr(v *OceanNpSchedulingTaskParametersArgs) OceanNpSchedulingTaskParametersPtrInput {
	return (*oceanNpSchedulingTaskParametersPtrType)(v)
}

func (*oceanNpSchedulingTaskParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpSchedulingTaskParameters)(nil)).Elem()
}

func (i *oceanNpSchedulingTaskParametersPtrType) ToOceanNpSchedulingTaskParametersPtrOutput() OceanNpSchedulingTaskParametersPtrOutput {
	return i.ToOceanNpSchedulingTaskParametersPtrOutputWithContext(context.Background())
}

func (i *oceanNpSchedulingTaskParametersPtrType) ToOceanNpSchedulingTaskParametersPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingTaskParametersPtrOutput)
}

type OceanNpSchedulingTaskParametersOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingTaskParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpSchedulingTaskParameters)(nil)).Elem()
}

func (o OceanNpSchedulingTaskParametersOutput) ToOceanNpSchedulingTaskParametersOutput() OceanNpSchedulingTaskParametersOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersOutput) ToOceanNpSchedulingTaskParametersOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersOutput) ToOceanNpSchedulingTaskParametersPtrOutput() OceanNpSchedulingTaskParametersPtrOutput {
	return o.ToOceanNpSchedulingTaskParametersPtrOutputWithContext(context.Background())
}

func (o OceanNpSchedulingTaskParametersOutput) ToOceanNpSchedulingTaskParametersPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpSchedulingTaskParameters) *OceanNpSchedulingTaskParameters {
		return &v
	}).(OceanNpSchedulingTaskParametersPtrOutput)
}

func (o OceanNpSchedulingTaskParametersOutput) ParametersClusterRoll() OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParameters) *OceanNpSchedulingTaskParametersParametersClusterRoll {
		return v.ParametersClusterRoll
	}).(OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput)
}

func (o OceanNpSchedulingTaskParametersOutput) ParametersUpgradeConfig() OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParameters) *OceanNpSchedulingTaskParametersParametersUpgradeConfig {
		return v.ParametersUpgradeConfig
	}).(OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput)
}

type OceanNpSchedulingTaskParametersPtrOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingTaskParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpSchedulingTaskParameters)(nil)).Elem()
}

func (o OceanNpSchedulingTaskParametersPtrOutput) ToOceanNpSchedulingTaskParametersPtrOutput() OceanNpSchedulingTaskParametersPtrOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersPtrOutput) ToOceanNpSchedulingTaskParametersPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersPtrOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersPtrOutput) Elem() OceanNpSchedulingTaskParametersOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParameters) OceanNpSchedulingTaskParameters {
		if v != nil {
			return *v
		}
		var ret OceanNpSchedulingTaskParameters
		return ret
	}).(OceanNpSchedulingTaskParametersOutput)
}

func (o OceanNpSchedulingTaskParametersPtrOutput) ParametersClusterRoll() OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParameters) *OceanNpSchedulingTaskParametersParametersClusterRoll {
		if v == nil {
			return nil
		}
		return v.ParametersClusterRoll
	}).(OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput)
}

func (o OceanNpSchedulingTaskParametersPtrOutput) ParametersUpgradeConfig() OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParameters) *OceanNpSchedulingTaskParametersParametersUpgradeConfig {
		if v == nil {
			return nil
		}
		return v.ParametersUpgradeConfig
	}).(OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput)
}

type OceanNpSchedulingTaskParametersParametersClusterRoll struct {
	// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
	BatchMinHealthyPercentage *int `pulumi:"batchMinHealthyPercentage"`
	// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
	BatchSizePercentage *int `pulumi:"batchSizePercentage"`
	// Add a comment description for the roll. The comment is limited to 256 chars and optional.
	Comment *string `pulumi:"comment"`
	// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
	RespectPdb *bool `pulumi:"respectPdb"`
	// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
	RespectRestrictScaleDown *bool `pulumi:"respectRestrictScaleDown"`
	// List of virtual node group identifiers to be rolled. Each identifier is a string. vngIds can be null, and cannot be used together with nodeNames and nodePoolNames.
	VngIds []string `pulumi:"vngIds"`
}

// OceanNpSchedulingTaskParametersParametersClusterRollInput is an input type that accepts OceanNpSchedulingTaskParametersParametersClusterRollArgs and OceanNpSchedulingTaskParametersParametersClusterRollOutput values.
// You can construct a concrete instance of `OceanNpSchedulingTaskParametersParametersClusterRollInput` via:
//
//	OceanNpSchedulingTaskParametersParametersClusterRollArgs{...}
type OceanNpSchedulingTaskParametersParametersClusterRollInput interface {
	pulumi.Input

	ToOceanNpSchedulingTaskParametersParametersClusterRollOutput() OceanNpSchedulingTaskParametersParametersClusterRollOutput
	ToOceanNpSchedulingTaskParametersParametersClusterRollOutputWithContext(context.Context) OceanNpSchedulingTaskParametersParametersClusterRollOutput
}

type OceanNpSchedulingTaskParametersParametersClusterRollArgs struct {
	// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
	BatchMinHealthyPercentage pulumi.IntPtrInput `pulumi:"batchMinHealthyPercentage"`
	// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
	BatchSizePercentage pulumi.IntPtrInput `pulumi:"batchSizePercentage"`
	// Add a comment description for the roll. The comment is limited to 256 chars and optional.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
	RespectPdb pulumi.BoolPtrInput `pulumi:"respectPdb"`
	// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
	RespectRestrictScaleDown pulumi.BoolPtrInput `pulumi:"respectRestrictScaleDown"`
	// List of virtual node group identifiers to be rolled. Each identifier is a string. vngIds can be null, and cannot be used together with nodeNames and nodePoolNames.
	VngIds pulumi.StringArrayInput `pulumi:"vngIds"`
}

func (OceanNpSchedulingTaskParametersParametersClusterRollArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpSchedulingTaskParametersParametersClusterRoll)(nil)).Elem()
}

func (i OceanNpSchedulingTaskParametersParametersClusterRollArgs) ToOceanNpSchedulingTaskParametersParametersClusterRollOutput() OceanNpSchedulingTaskParametersParametersClusterRollOutput {
	return i.ToOceanNpSchedulingTaskParametersParametersClusterRollOutputWithContext(context.Background())
}

func (i OceanNpSchedulingTaskParametersParametersClusterRollArgs) ToOceanNpSchedulingTaskParametersParametersClusterRollOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersClusterRollOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingTaskParametersParametersClusterRollOutput)
}

func (i OceanNpSchedulingTaskParametersParametersClusterRollArgs) ToOceanNpSchedulingTaskParametersParametersClusterRollPtrOutput() OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput {
	return i.ToOceanNpSchedulingTaskParametersParametersClusterRollPtrOutputWithContext(context.Background())
}

func (i OceanNpSchedulingTaskParametersParametersClusterRollArgs) ToOceanNpSchedulingTaskParametersParametersClusterRollPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingTaskParametersParametersClusterRollOutput).ToOceanNpSchedulingTaskParametersParametersClusterRollPtrOutputWithContext(ctx)
}

// OceanNpSchedulingTaskParametersParametersClusterRollPtrInput is an input type that accepts OceanNpSchedulingTaskParametersParametersClusterRollArgs, OceanNpSchedulingTaskParametersParametersClusterRollPtr and OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput values.
// You can construct a concrete instance of `OceanNpSchedulingTaskParametersParametersClusterRollPtrInput` via:
//
//	        OceanNpSchedulingTaskParametersParametersClusterRollArgs{...}
//
//	or:
//
//	        nil
type OceanNpSchedulingTaskParametersParametersClusterRollPtrInput interface {
	pulumi.Input

	ToOceanNpSchedulingTaskParametersParametersClusterRollPtrOutput() OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput
	ToOceanNpSchedulingTaskParametersParametersClusterRollPtrOutputWithContext(context.Context) OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput
}

type oceanNpSchedulingTaskParametersParametersClusterRollPtrType OceanNpSchedulingTaskParametersParametersClusterRollArgs

func OceanNpSchedulingTaskParametersParametersClusterRollPtr(v *OceanNpSchedulingTaskParametersParametersClusterRollArgs) OceanNpSchedulingTaskParametersParametersClusterRollPtrInput {
	return (*oceanNpSchedulingTaskParametersParametersClusterRollPtrType)(v)
}

func (*oceanNpSchedulingTaskParametersParametersClusterRollPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpSchedulingTaskParametersParametersClusterRoll)(nil)).Elem()
}

func (i *oceanNpSchedulingTaskParametersParametersClusterRollPtrType) ToOceanNpSchedulingTaskParametersParametersClusterRollPtrOutput() OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput {
	return i.ToOceanNpSchedulingTaskParametersParametersClusterRollPtrOutputWithContext(context.Background())
}

func (i *oceanNpSchedulingTaskParametersParametersClusterRollPtrType) ToOceanNpSchedulingTaskParametersParametersClusterRollPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput)
}

type OceanNpSchedulingTaskParametersParametersClusterRollOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingTaskParametersParametersClusterRollOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpSchedulingTaskParametersParametersClusterRoll)(nil)).Elem()
}

func (o OceanNpSchedulingTaskParametersParametersClusterRollOutput) ToOceanNpSchedulingTaskParametersParametersClusterRollOutput() OceanNpSchedulingTaskParametersParametersClusterRollOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersParametersClusterRollOutput) ToOceanNpSchedulingTaskParametersParametersClusterRollOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersClusterRollOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersParametersClusterRollOutput) ToOceanNpSchedulingTaskParametersParametersClusterRollPtrOutput() OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput {
	return o.ToOceanNpSchedulingTaskParametersParametersClusterRollPtrOutputWithContext(context.Background())
}

func (o OceanNpSchedulingTaskParametersParametersClusterRollOutput) ToOceanNpSchedulingTaskParametersParametersClusterRollPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpSchedulingTaskParametersParametersClusterRoll) *OceanNpSchedulingTaskParametersParametersClusterRoll {
		return &v
	}).(OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput)
}

// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
func (o OceanNpSchedulingTaskParametersParametersClusterRollOutput) BatchMinHealthyPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParametersParametersClusterRoll) *int { return v.BatchMinHealthyPercentage }).(pulumi.IntPtrOutput)
}

// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
func (o OceanNpSchedulingTaskParametersParametersClusterRollOutput) BatchSizePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParametersParametersClusterRoll) *int { return v.BatchSizePercentage }).(pulumi.IntPtrOutput)
}

// Add a comment description for the roll. The comment is limited to 256 chars and optional.
func (o OceanNpSchedulingTaskParametersParametersClusterRollOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParametersParametersClusterRoll) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
func (o OceanNpSchedulingTaskParametersParametersClusterRollOutput) RespectPdb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParametersParametersClusterRoll) *bool { return v.RespectPdb }).(pulumi.BoolPtrOutput)
}

// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
func (o OceanNpSchedulingTaskParametersParametersClusterRollOutput) RespectRestrictScaleDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParametersParametersClusterRoll) *bool { return v.RespectRestrictScaleDown }).(pulumi.BoolPtrOutput)
}

// List of virtual node group identifiers to be rolled. Each identifier is a string. vngIds can be null, and cannot be used together with nodeNames and nodePoolNames.
func (o OceanNpSchedulingTaskParametersParametersClusterRollOutput) VngIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParametersParametersClusterRoll) []string { return v.VngIds }).(pulumi.StringArrayOutput)
}

type OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpSchedulingTaskParametersParametersClusterRoll)(nil)).Elem()
}

func (o OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput) ToOceanNpSchedulingTaskParametersParametersClusterRollPtrOutput() OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput) ToOceanNpSchedulingTaskParametersParametersClusterRollPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput) Elem() OceanNpSchedulingTaskParametersParametersClusterRollOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersClusterRoll) OceanNpSchedulingTaskParametersParametersClusterRoll {
		if v != nil {
			return *v
		}
		var ret OceanNpSchedulingTaskParametersParametersClusterRoll
		return ret
	}).(OceanNpSchedulingTaskParametersParametersClusterRollOutput)
}

// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
func (o OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput) BatchMinHealthyPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersClusterRoll) *int {
		if v == nil {
			return nil
		}
		return v.BatchMinHealthyPercentage
	}).(pulumi.IntPtrOutput)
}

// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
func (o OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput) BatchSizePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersClusterRoll) *int {
		if v == nil {
			return nil
		}
		return v.BatchSizePercentage
	}).(pulumi.IntPtrOutput)
}

// Add a comment description for the roll. The comment is limited to 256 chars and optional.
func (o OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersClusterRoll) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
func (o OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput) RespectPdb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersClusterRoll) *bool {
		if v == nil {
			return nil
		}
		return v.RespectPdb
	}).(pulumi.BoolPtrOutput)
}

// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
func (o OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput) RespectRestrictScaleDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersClusterRoll) *bool {
		if v == nil {
			return nil
		}
		return v.RespectRestrictScaleDown
	}).(pulumi.BoolPtrOutput)
}

// List of virtual node group identifiers to be rolled. Each identifier is a string. vngIds can be null, and cannot be used together with nodeNames and nodePoolNames.
func (o OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput) VngIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersClusterRoll) []string {
		if v == nil {
			return nil
		}
		return v.VngIds
	}).(pulumi.StringArrayOutput)
}

type OceanNpSchedulingTaskParametersParametersUpgradeConfig struct {
	ApplyRoll      *bool                                                                 `pulumi:"applyRoll"`
	RollParameters *OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters `pulumi:"rollParameters"`
	ScopeVersion   *string                                                               `pulumi:"scopeVersion"`
}

// OceanNpSchedulingTaskParametersParametersUpgradeConfigInput is an input type that accepts OceanNpSchedulingTaskParametersParametersUpgradeConfigArgs and OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput values.
// You can construct a concrete instance of `OceanNpSchedulingTaskParametersParametersUpgradeConfigInput` via:
//
//	OceanNpSchedulingTaskParametersParametersUpgradeConfigArgs{...}
type OceanNpSchedulingTaskParametersParametersUpgradeConfigInput interface {
	pulumi.Input

	ToOceanNpSchedulingTaskParametersParametersUpgradeConfigOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput
	ToOceanNpSchedulingTaskParametersParametersUpgradeConfigOutputWithContext(context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput
}

type OceanNpSchedulingTaskParametersParametersUpgradeConfigArgs struct {
	ApplyRoll      pulumi.BoolPtrInput                                                          `pulumi:"applyRoll"`
	RollParameters OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrInput `pulumi:"rollParameters"`
	ScopeVersion   pulumi.StringPtrInput                                                        `pulumi:"scopeVersion"`
}

func (OceanNpSchedulingTaskParametersParametersUpgradeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpSchedulingTaskParametersParametersUpgradeConfig)(nil)).Elem()
}

func (i OceanNpSchedulingTaskParametersParametersUpgradeConfigArgs) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput {
	return i.ToOceanNpSchedulingTaskParametersParametersUpgradeConfigOutputWithContext(context.Background())
}

func (i OceanNpSchedulingTaskParametersParametersUpgradeConfigArgs) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput)
}

func (i OceanNpSchedulingTaskParametersParametersUpgradeConfigArgs) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput {
	return i.ToOceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutputWithContext(context.Background())
}

func (i OceanNpSchedulingTaskParametersParametersUpgradeConfigArgs) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput).ToOceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutputWithContext(ctx)
}

// OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrInput is an input type that accepts OceanNpSchedulingTaskParametersParametersUpgradeConfigArgs, OceanNpSchedulingTaskParametersParametersUpgradeConfigPtr and OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput values.
// You can construct a concrete instance of `OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrInput` via:
//
//	        OceanNpSchedulingTaskParametersParametersUpgradeConfigArgs{...}
//
//	or:
//
//	        nil
type OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrInput interface {
	pulumi.Input

	ToOceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput
	ToOceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutputWithContext(context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput
}

type oceanNpSchedulingTaskParametersParametersUpgradeConfigPtrType OceanNpSchedulingTaskParametersParametersUpgradeConfigArgs

func OceanNpSchedulingTaskParametersParametersUpgradeConfigPtr(v *OceanNpSchedulingTaskParametersParametersUpgradeConfigArgs) OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrInput {
	return (*oceanNpSchedulingTaskParametersParametersUpgradeConfigPtrType)(v)
}

func (*oceanNpSchedulingTaskParametersParametersUpgradeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpSchedulingTaskParametersParametersUpgradeConfig)(nil)).Elem()
}

func (i *oceanNpSchedulingTaskParametersParametersUpgradeConfigPtrType) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput {
	return i.ToOceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutputWithContext(context.Background())
}

func (i *oceanNpSchedulingTaskParametersParametersUpgradeConfigPtrType) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput)
}

type OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpSchedulingTaskParametersParametersUpgradeConfig)(nil)).Elem()
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput {
	return o.ToOceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutputWithContext(context.Background())
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpSchedulingTaskParametersParametersUpgradeConfig) *OceanNpSchedulingTaskParametersParametersUpgradeConfig {
		return &v
	}).(OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput)
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput) ApplyRoll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParametersParametersUpgradeConfig) *bool { return v.ApplyRoll }).(pulumi.BoolPtrOutput)
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput) RollParameters() OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParametersParametersUpgradeConfig) *OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters {
		return v.RollParameters
	}).(OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput)
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput) ScopeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParametersParametersUpgradeConfig) *string { return v.ScopeVersion }).(pulumi.StringPtrOutput)
}

type OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpSchedulingTaskParametersParametersUpgradeConfig)(nil)).Elem()
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput) Elem() OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersUpgradeConfig) OceanNpSchedulingTaskParametersParametersUpgradeConfig {
		if v != nil {
			return *v
		}
		var ret OceanNpSchedulingTaskParametersParametersUpgradeConfig
		return ret
	}).(OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput)
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput) ApplyRoll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersUpgradeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ApplyRoll
	}).(pulumi.BoolPtrOutput)
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput) RollParameters() OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersUpgradeConfig) *OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters {
		if v == nil {
			return nil
		}
		return v.RollParameters
	}).(OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput)
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput) ScopeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersUpgradeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScopeVersion
	}).(pulumi.StringPtrOutput)
}

type OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters struct {
	// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
	BatchMinHealthyPercentage *int `pulumi:"batchMinHealthyPercentage"`
	// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
	BatchSizePercentage *int `pulumi:"batchSizePercentage"`
	// Add a comment description for the roll. The comment is limited to 256 chars and optional.
	Comment *string `pulumi:"comment"`
	// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
	RespectPdb *bool `pulumi:"respectPdb"`
	// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
	RespectRestrictScaleDown *bool `pulumi:"respectRestrictScaleDown"`
}

// OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersInput is an input type that accepts OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersArgs and OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput values.
// You can construct a concrete instance of `OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersInput` via:
//
//	OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersArgs{...}
type OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersInput interface {
	pulumi.Input

	ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput
	ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutputWithContext(context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput
}

type OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersArgs struct {
	// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
	BatchMinHealthyPercentage pulumi.IntPtrInput `pulumi:"batchMinHealthyPercentage"`
	// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
	BatchSizePercentage pulumi.IntPtrInput `pulumi:"batchSizePercentage"`
	// Add a comment description for the roll. The comment is limited to 256 chars and optional.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
	RespectPdb pulumi.BoolPtrInput `pulumi:"respectPdb"`
	// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
	RespectRestrictScaleDown pulumi.BoolPtrInput `pulumi:"respectRestrictScaleDown"`
}

func (OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters)(nil)).Elem()
}

func (i OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersArgs) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput {
	return i.ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutputWithContext(context.Background())
}

func (i OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersArgs) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput)
}

func (i OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersArgs) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput {
	return i.ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutputWithContext(context.Background())
}

func (i OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersArgs) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput).ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutputWithContext(ctx)
}

// OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrInput is an input type that accepts OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersArgs, OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtr and OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput values.
// You can construct a concrete instance of `OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrInput` via:
//
//	        OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersArgs{...}
//
//	or:
//
//	        nil
type OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrInput interface {
	pulumi.Input

	ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput
	ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutputWithContext(context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput
}

type oceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrType OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersArgs

func OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtr(v *OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersArgs) OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrInput {
	return (*oceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrType)(v)
}

func (*oceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters)(nil)).Elem()
}

func (i *oceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrType) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput {
	return i.ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutputWithContext(context.Background())
}

func (i *oceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrType) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput)
}

type OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters)(nil)).Elem()
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput {
	return o.ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutputWithContext(context.Background())
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters) *OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters {
		return &v
	}).(OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput)
}

// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput) BatchMinHealthyPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters) *int {
		return v.BatchMinHealthyPercentage
	}).(pulumi.IntPtrOutput)
}

// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput) BatchSizePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters) *int {
		return v.BatchSizePercentage
	}).(pulumi.IntPtrOutput)
}

// Add a comment description for the roll. The comment is limited to 256 chars and optional.
func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput) RespectPdb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters) *bool {
		return v.RespectPdb
	}).(pulumi.BoolPtrOutput)
}

// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput) RespectRestrictScaleDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters) *bool {
		return v.RespectRestrictScaleDown
	}).(pulumi.BoolPtrOutput)
}

type OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput struct{ *pulumi.OutputState }

func (OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters)(nil)).Elem()
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput() OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput) ToOceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutputWithContext(ctx context.Context) OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput {
	return o
}

func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput) Elem() OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters) OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters {
		if v != nil {
			return *v
		}
		var ret OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters
		return ret
	}).(OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput)
}

// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput) BatchMinHealthyPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters) *int {
		if v == nil {
			return nil
		}
		return v.BatchMinHealthyPercentage
	}).(pulumi.IntPtrOutput)
}

// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput) BatchSizePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters) *int {
		if v == nil {
			return nil
		}
		return v.BatchSizePercentage
	}).(pulumi.IntPtrOutput)
}

// Add a comment description for the roll. The comment is limited to 256 chars and optional.
func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput) RespectPdb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters) *bool {
		if v == nil {
			return nil
		}
		return v.RespectPdb
	}).(pulumi.BoolPtrOutput)
}

// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
func (o OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput) RespectRestrictScaleDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParameters) *bool {
		if v == nil {
			return nil
		}
		return v.RespectRestrictScaleDown
	}).(pulumi.BoolPtrOutput)
}

type OceanNpTaint struct {
	// Set taint effect.
	Effect string `pulumi:"effect"`
	// Set taint key. The following taint keys are not allowed: ["node.kubernetes.io/not-ready",  "node.kubernetes.io/unreachable", "node.kubernetes.io/unschedulable",  "node.kubernetes.io/memory-pressure",  "node.kubernetes.io/disk-pressure",  "node.kubernetes.io/network-unavailable",  "node.kubernetes.io/pid-pressure",  "node.kubernetes.io/out-of-service",  "node.cloudprovider.kubernetes.io/uninitialized",  "node.cloudprovider.kubernetes.io/shutdown", "kubernetes.azure.com/scalesetpriority"]
	Key string `pulumi:"key"`
	// Set taint value.
	Value string `pulumi:"value"`
}

// OceanNpTaintInput is an input type that accepts OceanNpTaintArgs and OceanNpTaintOutput values.
// You can construct a concrete instance of `OceanNpTaintInput` via:
//
//	OceanNpTaintArgs{...}
type OceanNpTaintInput interface {
	pulumi.Input

	ToOceanNpTaintOutput() OceanNpTaintOutput
	ToOceanNpTaintOutputWithContext(context.Context) OceanNpTaintOutput
}

type OceanNpTaintArgs struct {
	// Set taint effect.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Set taint key. The following taint keys are not allowed: ["node.kubernetes.io/not-ready",  "node.kubernetes.io/unreachable", "node.kubernetes.io/unschedulable",  "node.kubernetes.io/memory-pressure",  "node.kubernetes.io/disk-pressure",  "node.kubernetes.io/network-unavailable",  "node.kubernetes.io/pid-pressure",  "node.kubernetes.io/out-of-service",  "node.cloudprovider.kubernetes.io/uninitialized",  "node.cloudprovider.kubernetes.io/shutdown", "kubernetes.azure.com/scalesetpriority"]
	Key pulumi.StringInput `pulumi:"key"`
	// Set taint value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (OceanNpTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpTaint)(nil)).Elem()
}

func (i OceanNpTaintArgs) ToOceanNpTaintOutput() OceanNpTaintOutput {
	return i.ToOceanNpTaintOutputWithContext(context.Background())
}

func (i OceanNpTaintArgs) ToOceanNpTaintOutputWithContext(ctx context.Context) OceanNpTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpTaintOutput)
}

// OceanNpTaintArrayInput is an input type that accepts OceanNpTaintArray and OceanNpTaintArrayOutput values.
// You can construct a concrete instance of `OceanNpTaintArrayInput` via:
//
//	OceanNpTaintArray{ OceanNpTaintArgs{...} }
type OceanNpTaintArrayInput interface {
	pulumi.Input

	ToOceanNpTaintArrayOutput() OceanNpTaintArrayOutput
	ToOceanNpTaintArrayOutputWithContext(context.Context) OceanNpTaintArrayOutput
}

type OceanNpTaintArray []OceanNpTaintInput

func (OceanNpTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpTaint)(nil)).Elem()
}

func (i OceanNpTaintArray) ToOceanNpTaintArrayOutput() OceanNpTaintArrayOutput {
	return i.ToOceanNpTaintArrayOutputWithContext(context.Background())
}

func (i OceanNpTaintArray) ToOceanNpTaintArrayOutputWithContext(ctx context.Context) OceanNpTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpTaintArrayOutput)
}

type OceanNpTaintOutput struct{ *pulumi.OutputState }

func (OceanNpTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpTaint)(nil)).Elem()
}

func (o OceanNpTaintOutput) ToOceanNpTaintOutput() OceanNpTaintOutput {
	return o
}

func (o OceanNpTaintOutput) ToOceanNpTaintOutputWithContext(ctx context.Context) OceanNpTaintOutput {
	return o
}

// Set taint effect.
func (o OceanNpTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v OceanNpTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Set taint key. The following taint keys are not allowed: ["node.kubernetes.io/not-ready",  "node.kubernetes.io/unreachable", "node.kubernetes.io/unschedulable",  "node.kubernetes.io/memory-pressure",  "node.kubernetes.io/disk-pressure",  "node.kubernetes.io/network-unavailable",  "node.kubernetes.io/pid-pressure",  "node.kubernetes.io/out-of-service",  "node.cloudprovider.kubernetes.io/uninitialized",  "node.cloudprovider.kubernetes.io/shutdown", "kubernetes.azure.com/scalesetpriority"]
func (o OceanNpTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v OceanNpTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Set taint value.
func (o OceanNpTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v OceanNpTaint) string { return v.Value }).(pulumi.StringOutput)
}

type OceanNpTaintArrayOutput struct{ *pulumi.OutputState }

func (OceanNpTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpTaint)(nil)).Elem()
}

func (o OceanNpTaintArrayOutput) ToOceanNpTaintArrayOutput() OceanNpTaintArrayOutput {
	return o
}

func (o OceanNpTaintArrayOutput) ToOceanNpTaintArrayOutputWithContext(ctx context.Context) OceanNpTaintArrayOutput {
	return o
}

func (o OceanNpTaintArrayOutput) Index(i pulumi.IntInput) OceanNpTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OceanNpTaint {
		return vs[0].([]OceanNpTaint)[vs[1].(int)]
	}).(OceanNpTaintOutput)
}

type OceanNpUpdatePolicy struct {
	// Spot will perform a cluster Roll in accordance with a relevant modification of the cluster’s settings. When set to true , only specific changes in the cluster’s configuration will trigger a cluster roll (such as availability_zones, max_pods_per_node, enable_node_public_ip, os_disk_size_gb, os_disk_type, os_sku, kubernetes_version, vnet_subnet_ids, pod_subnet_ids, labels, taints and tags).
	ConditionedRoll *bool `pulumi:"conditionedRoll"`
	// While used, you can control whether the group should perform a deployment after an update to the configuration.
	RollConfig *OceanNpUpdatePolicyRollConfig `pulumi:"rollConfig"`
	// If set to true along with the cluster update, roll will be triggered.
	ShouldRoll bool `pulumi:"shouldRoll"`
}

// OceanNpUpdatePolicyInput is an input type that accepts OceanNpUpdatePolicyArgs and OceanNpUpdatePolicyOutput values.
// You can construct a concrete instance of `OceanNpUpdatePolicyInput` via:
//
//	OceanNpUpdatePolicyArgs{...}
type OceanNpUpdatePolicyInput interface {
	pulumi.Input

	ToOceanNpUpdatePolicyOutput() OceanNpUpdatePolicyOutput
	ToOceanNpUpdatePolicyOutputWithContext(context.Context) OceanNpUpdatePolicyOutput
}

type OceanNpUpdatePolicyArgs struct {
	// Spot will perform a cluster Roll in accordance with a relevant modification of the cluster’s settings. When set to true , only specific changes in the cluster’s configuration will trigger a cluster roll (such as availability_zones, max_pods_per_node, enable_node_public_ip, os_disk_size_gb, os_disk_type, os_sku, kubernetes_version, vnet_subnet_ids, pod_subnet_ids, labels, taints and tags).
	ConditionedRoll pulumi.BoolPtrInput `pulumi:"conditionedRoll"`
	// While used, you can control whether the group should perform a deployment after an update to the configuration.
	RollConfig OceanNpUpdatePolicyRollConfigPtrInput `pulumi:"rollConfig"`
	// If set to true along with the cluster update, roll will be triggered.
	ShouldRoll pulumi.BoolInput `pulumi:"shouldRoll"`
}

func (OceanNpUpdatePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpUpdatePolicy)(nil)).Elem()
}

func (i OceanNpUpdatePolicyArgs) ToOceanNpUpdatePolicyOutput() OceanNpUpdatePolicyOutput {
	return i.ToOceanNpUpdatePolicyOutputWithContext(context.Background())
}

func (i OceanNpUpdatePolicyArgs) ToOceanNpUpdatePolicyOutputWithContext(ctx context.Context) OceanNpUpdatePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpUpdatePolicyOutput)
}

func (i OceanNpUpdatePolicyArgs) ToOceanNpUpdatePolicyPtrOutput() OceanNpUpdatePolicyPtrOutput {
	return i.ToOceanNpUpdatePolicyPtrOutputWithContext(context.Background())
}

func (i OceanNpUpdatePolicyArgs) ToOceanNpUpdatePolicyPtrOutputWithContext(ctx context.Context) OceanNpUpdatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpUpdatePolicyOutput).ToOceanNpUpdatePolicyPtrOutputWithContext(ctx)
}

// OceanNpUpdatePolicyPtrInput is an input type that accepts OceanNpUpdatePolicyArgs, OceanNpUpdatePolicyPtr and OceanNpUpdatePolicyPtrOutput values.
// You can construct a concrete instance of `OceanNpUpdatePolicyPtrInput` via:
//
//	        OceanNpUpdatePolicyArgs{...}
//
//	or:
//
//	        nil
type OceanNpUpdatePolicyPtrInput interface {
	pulumi.Input

	ToOceanNpUpdatePolicyPtrOutput() OceanNpUpdatePolicyPtrOutput
	ToOceanNpUpdatePolicyPtrOutputWithContext(context.Context) OceanNpUpdatePolicyPtrOutput
}

type oceanNpUpdatePolicyPtrType OceanNpUpdatePolicyArgs

func OceanNpUpdatePolicyPtr(v *OceanNpUpdatePolicyArgs) OceanNpUpdatePolicyPtrInput {
	return (*oceanNpUpdatePolicyPtrType)(v)
}

func (*oceanNpUpdatePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpUpdatePolicy)(nil)).Elem()
}

func (i *oceanNpUpdatePolicyPtrType) ToOceanNpUpdatePolicyPtrOutput() OceanNpUpdatePolicyPtrOutput {
	return i.ToOceanNpUpdatePolicyPtrOutputWithContext(context.Background())
}

func (i *oceanNpUpdatePolicyPtrType) ToOceanNpUpdatePolicyPtrOutputWithContext(ctx context.Context) OceanNpUpdatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpUpdatePolicyPtrOutput)
}

type OceanNpUpdatePolicyOutput struct{ *pulumi.OutputState }

func (OceanNpUpdatePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpUpdatePolicy)(nil)).Elem()
}

func (o OceanNpUpdatePolicyOutput) ToOceanNpUpdatePolicyOutput() OceanNpUpdatePolicyOutput {
	return o
}

func (o OceanNpUpdatePolicyOutput) ToOceanNpUpdatePolicyOutputWithContext(ctx context.Context) OceanNpUpdatePolicyOutput {
	return o
}

func (o OceanNpUpdatePolicyOutput) ToOceanNpUpdatePolicyPtrOutput() OceanNpUpdatePolicyPtrOutput {
	return o.ToOceanNpUpdatePolicyPtrOutputWithContext(context.Background())
}

func (o OceanNpUpdatePolicyOutput) ToOceanNpUpdatePolicyPtrOutputWithContext(ctx context.Context) OceanNpUpdatePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpUpdatePolicy) *OceanNpUpdatePolicy {
		return &v
	}).(OceanNpUpdatePolicyPtrOutput)
}

// Spot will perform a cluster Roll in accordance with a relevant modification of the cluster’s settings. When set to true , only specific changes in the cluster’s configuration will trigger a cluster roll (such as availability_zones, max_pods_per_node, enable_node_public_ip, os_disk_size_gb, os_disk_type, os_sku, kubernetes_version, vnet_subnet_ids, pod_subnet_ids, labels, taints and tags).
func (o OceanNpUpdatePolicyOutput) ConditionedRoll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpUpdatePolicy) *bool { return v.ConditionedRoll }).(pulumi.BoolPtrOutput)
}

// While used, you can control whether the group should perform a deployment after an update to the configuration.
func (o OceanNpUpdatePolicyOutput) RollConfig() OceanNpUpdatePolicyRollConfigPtrOutput {
	return o.ApplyT(func(v OceanNpUpdatePolicy) *OceanNpUpdatePolicyRollConfig { return v.RollConfig }).(OceanNpUpdatePolicyRollConfigPtrOutput)
}

// If set to true along with the cluster update, roll will be triggered.
func (o OceanNpUpdatePolicyOutput) ShouldRoll() pulumi.BoolOutput {
	return o.ApplyT(func(v OceanNpUpdatePolicy) bool { return v.ShouldRoll }).(pulumi.BoolOutput)
}

type OceanNpUpdatePolicyPtrOutput struct{ *pulumi.OutputState }

func (OceanNpUpdatePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpUpdatePolicy)(nil)).Elem()
}

func (o OceanNpUpdatePolicyPtrOutput) ToOceanNpUpdatePolicyPtrOutput() OceanNpUpdatePolicyPtrOutput {
	return o
}

func (o OceanNpUpdatePolicyPtrOutput) ToOceanNpUpdatePolicyPtrOutputWithContext(ctx context.Context) OceanNpUpdatePolicyPtrOutput {
	return o
}

func (o OceanNpUpdatePolicyPtrOutput) Elem() OceanNpUpdatePolicyOutput {
	return o.ApplyT(func(v *OceanNpUpdatePolicy) OceanNpUpdatePolicy {
		if v != nil {
			return *v
		}
		var ret OceanNpUpdatePolicy
		return ret
	}).(OceanNpUpdatePolicyOutput)
}

// Spot will perform a cluster Roll in accordance with a relevant modification of the cluster’s settings. When set to true , only specific changes in the cluster’s configuration will trigger a cluster roll (such as availability_zones, max_pods_per_node, enable_node_public_ip, os_disk_size_gb, os_disk_type, os_sku, kubernetes_version, vnet_subnet_ids, pod_subnet_ids, labels, taints and tags).
func (o OceanNpUpdatePolicyPtrOutput) ConditionedRoll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpUpdatePolicy) *bool {
		if v == nil {
			return nil
		}
		return v.ConditionedRoll
	}).(pulumi.BoolPtrOutput)
}

// While used, you can control whether the group should perform a deployment after an update to the configuration.
func (o OceanNpUpdatePolicyPtrOutput) RollConfig() OceanNpUpdatePolicyRollConfigPtrOutput {
	return o.ApplyT(func(v *OceanNpUpdatePolicy) *OceanNpUpdatePolicyRollConfig {
		if v == nil {
			return nil
		}
		return v.RollConfig
	}).(OceanNpUpdatePolicyRollConfigPtrOutput)
}

// If set to true along with the cluster update, roll will be triggered.
func (o OceanNpUpdatePolicyPtrOutput) ShouldRoll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpUpdatePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.ShouldRoll
	}).(pulumi.BoolPtrOutput)
}

type OceanNpUpdatePolicyRollConfig struct {
	// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
	BatchMinHealthyPercentage *int `pulumi:"batchMinHealthyPercentage"`
	// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
	BatchSizePercentage *int `pulumi:"batchSizePercentage"`
	// Add a comment description for the roll. The comment is limited to 256 chars and optional.
	Comment *string `pulumi:"comment"`
	// List of node names to be rolled. Each identifier is a string. nodeNames can be null, and cannot be used together with nodePoolNames and vngIds.
	NodeNames []string `pulumi:"nodeNames"`
	// List of node pools to be rolled. Each node pool name is a string. nodePoolNames can be null, and cannot be used together with nodeNames and vngIds.
	NodePoolNames []string `pulumi:"nodePoolNames"`
	// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
	RespectPdb *bool `pulumi:"respectPdb"`
	// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
	RespectRestrictScaleDown *bool `pulumi:"respectRestrictScaleDown"`
	// List of virtual node group identifiers to be rolled. Each identifier is a string. vngIds can be null, and cannot be used together with nodeNames and nodePoolNames.
	VngIds []string `pulumi:"vngIds"`
}

// OceanNpUpdatePolicyRollConfigInput is an input type that accepts OceanNpUpdatePolicyRollConfigArgs and OceanNpUpdatePolicyRollConfigOutput values.
// You can construct a concrete instance of `OceanNpUpdatePolicyRollConfigInput` via:
//
//	OceanNpUpdatePolicyRollConfigArgs{...}
type OceanNpUpdatePolicyRollConfigInput interface {
	pulumi.Input

	ToOceanNpUpdatePolicyRollConfigOutput() OceanNpUpdatePolicyRollConfigOutput
	ToOceanNpUpdatePolicyRollConfigOutputWithContext(context.Context) OceanNpUpdatePolicyRollConfigOutput
}

type OceanNpUpdatePolicyRollConfigArgs struct {
	// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
	BatchMinHealthyPercentage pulumi.IntPtrInput `pulumi:"batchMinHealthyPercentage"`
	// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
	BatchSizePercentage pulumi.IntPtrInput `pulumi:"batchSizePercentage"`
	// Add a comment description for the roll. The comment is limited to 256 chars and optional.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// List of node names to be rolled. Each identifier is a string. nodeNames can be null, and cannot be used together with nodePoolNames and vngIds.
	NodeNames pulumi.StringArrayInput `pulumi:"nodeNames"`
	// List of node pools to be rolled. Each node pool name is a string. nodePoolNames can be null, and cannot be used together with nodeNames and vngIds.
	NodePoolNames pulumi.StringArrayInput `pulumi:"nodePoolNames"`
	// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
	RespectPdb pulumi.BoolPtrInput `pulumi:"respectPdb"`
	// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
	RespectRestrictScaleDown pulumi.BoolPtrInput `pulumi:"respectRestrictScaleDown"`
	// List of virtual node group identifiers to be rolled. Each identifier is a string. vngIds can be null, and cannot be used together with nodeNames and nodePoolNames.
	VngIds pulumi.StringArrayInput `pulumi:"vngIds"`
}

func (OceanNpUpdatePolicyRollConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpUpdatePolicyRollConfig)(nil)).Elem()
}

func (i OceanNpUpdatePolicyRollConfigArgs) ToOceanNpUpdatePolicyRollConfigOutput() OceanNpUpdatePolicyRollConfigOutput {
	return i.ToOceanNpUpdatePolicyRollConfigOutputWithContext(context.Background())
}

func (i OceanNpUpdatePolicyRollConfigArgs) ToOceanNpUpdatePolicyRollConfigOutputWithContext(ctx context.Context) OceanNpUpdatePolicyRollConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpUpdatePolicyRollConfigOutput)
}

func (i OceanNpUpdatePolicyRollConfigArgs) ToOceanNpUpdatePolicyRollConfigPtrOutput() OceanNpUpdatePolicyRollConfigPtrOutput {
	return i.ToOceanNpUpdatePolicyRollConfigPtrOutputWithContext(context.Background())
}

func (i OceanNpUpdatePolicyRollConfigArgs) ToOceanNpUpdatePolicyRollConfigPtrOutputWithContext(ctx context.Context) OceanNpUpdatePolicyRollConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpUpdatePolicyRollConfigOutput).ToOceanNpUpdatePolicyRollConfigPtrOutputWithContext(ctx)
}

// OceanNpUpdatePolicyRollConfigPtrInput is an input type that accepts OceanNpUpdatePolicyRollConfigArgs, OceanNpUpdatePolicyRollConfigPtr and OceanNpUpdatePolicyRollConfigPtrOutput values.
// You can construct a concrete instance of `OceanNpUpdatePolicyRollConfigPtrInput` via:
//
//	        OceanNpUpdatePolicyRollConfigArgs{...}
//
//	or:
//
//	        nil
type OceanNpUpdatePolicyRollConfigPtrInput interface {
	pulumi.Input

	ToOceanNpUpdatePolicyRollConfigPtrOutput() OceanNpUpdatePolicyRollConfigPtrOutput
	ToOceanNpUpdatePolicyRollConfigPtrOutputWithContext(context.Context) OceanNpUpdatePolicyRollConfigPtrOutput
}

type oceanNpUpdatePolicyRollConfigPtrType OceanNpUpdatePolicyRollConfigArgs

func OceanNpUpdatePolicyRollConfigPtr(v *OceanNpUpdatePolicyRollConfigArgs) OceanNpUpdatePolicyRollConfigPtrInput {
	return (*oceanNpUpdatePolicyRollConfigPtrType)(v)
}

func (*oceanNpUpdatePolicyRollConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpUpdatePolicyRollConfig)(nil)).Elem()
}

func (i *oceanNpUpdatePolicyRollConfigPtrType) ToOceanNpUpdatePolicyRollConfigPtrOutput() OceanNpUpdatePolicyRollConfigPtrOutput {
	return i.ToOceanNpUpdatePolicyRollConfigPtrOutputWithContext(context.Background())
}

func (i *oceanNpUpdatePolicyRollConfigPtrType) ToOceanNpUpdatePolicyRollConfigPtrOutputWithContext(ctx context.Context) OceanNpUpdatePolicyRollConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpUpdatePolicyRollConfigPtrOutput)
}

type OceanNpUpdatePolicyRollConfigOutput struct{ *pulumi.OutputState }

func (OceanNpUpdatePolicyRollConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpUpdatePolicyRollConfig)(nil)).Elem()
}

func (o OceanNpUpdatePolicyRollConfigOutput) ToOceanNpUpdatePolicyRollConfigOutput() OceanNpUpdatePolicyRollConfigOutput {
	return o
}

func (o OceanNpUpdatePolicyRollConfigOutput) ToOceanNpUpdatePolicyRollConfigOutputWithContext(ctx context.Context) OceanNpUpdatePolicyRollConfigOutput {
	return o
}

func (o OceanNpUpdatePolicyRollConfigOutput) ToOceanNpUpdatePolicyRollConfigPtrOutput() OceanNpUpdatePolicyRollConfigPtrOutput {
	return o.ToOceanNpUpdatePolicyRollConfigPtrOutputWithContext(context.Background())
}

func (o OceanNpUpdatePolicyRollConfigOutput) ToOceanNpUpdatePolicyRollConfigPtrOutputWithContext(ctx context.Context) OceanNpUpdatePolicyRollConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpUpdatePolicyRollConfig) *OceanNpUpdatePolicyRollConfig {
		return &v
	}).(OceanNpUpdatePolicyRollConfigPtrOutput)
}

// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
func (o OceanNpUpdatePolicyRollConfigOutput) BatchMinHealthyPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpUpdatePolicyRollConfig) *int { return v.BatchMinHealthyPercentage }).(pulumi.IntPtrOutput)
}

// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
func (o OceanNpUpdatePolicyRollConfigOutput) BatchSizePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpUpdatePolicyRollConfig) *int { return v.BatchSizePercentage }).(pulumi.IntPtrOutput)
}

// Add a comment description for the roll. The comment is limited to 256 chars and optional.
func (o OceanNpUpdatePolicyRollConfigOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OceanNpUpdatePolicyRollConfig) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// List of node names to be rolled. Each identifier is a string. nodeNames can be null, and cannot be used together with nodePoolNames and vngIds.
func (o OceanNpUpdatePolicyRollConfigOutput) NodeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpUpdatePolicyRollConfig) []string { return v.NodeNames }).(pulumi.StringArrayOutput)
}

// List of node pools to be rolled. Each node pool name is a string. nodePoolNames can be null, and cannot be used together with nodeNames and vngIds.
func (o OceanNpUpdatePolicyRollConfigOutput) NodePoolNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpUpdatePolicyRollConfig) []string { return v.NodePoolNames }).(pulumi.StringArrayOutput)
}

// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
func (o OceanNpUpdatePolicyRollConfigOutput) RespectPdb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpUpdatePolicyRollConfig) *bool { return v.RespectPdb }).(pulumi.BoolPtrOutput)
}

// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
func (o OceanNpUpdatePolicyRollConfigOutput) RespectRestrictScaleDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpUpdatePolicyRollConfig) *bool { return v.RespectRestrictScaleDown }).(pulumi.BoolPtrOutput)
}

// List of virtual node group identifiers to be rolled. Each identifier is a string. vngIds can be null, and cannot be used together with nodeNames and nodePoolNames.
func (o OceanNpUpdatePolicyRollConfigOutput) VngIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpUpdatePolicyRollConfig) []string { return v.VngIds }).(pulumi.StringArrayOutput)
}

type OceanNpUpdatePolicyRollConfigPtrOutput struct{ *pulumi.OutputState }

func (OceanNpUpdatePolicyRollConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpUpdatePolicyRollConfig)(nil)).Elem()
}

func (o OceanNpUpdatePolicyRollConfigPtrOutput) ToOceanNpUpdatePolicyRollConfigPtrOutput() OceanNpUpdatePolicyRollConfigPtrOutput {
	return o
}

func (o OceanNpUpdatePolicyRollConfigPtrOutput) ToOceanNpUpdatePolicyRollConfigPtrOutputWithContext(ctx context.Context) OceanNpUpdatePolicyRollConfigPtrOutput {
	return o
}

func (o OceanNpUpdatePolicyRollConfigPtrOutput) Elem() OceanNpUpdatePolicyRollConfigOutput {
	return o.ApplyT(func(v *OceanNpUpdatePolicyRollConfig) OceanNpUpdatePolicyRollConfig {
		if v != nil {
			return *v
		}
		var ret OceanNpUpdatePolicyRollConfig
		return ret
	}).(OceanNpUpdatePolicyRollConfigOutput)
}

// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
func (o OceanNpUpdatePolicyRollConfigPtrOutput) BatchMinHealthyPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpUpdatePolicyRollConfig) *int {
		if v == nil {
			return nil
		}
		return v.BatchMinHealthyPercentage
	}).(pulumi.IntPtrOutput)
}

// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
func (o OceanNpUpdatePolicyRollConfigPtrOutput) BatchSizePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpUpdatePolicyRollConfig) *int {
		if v == nil {
			return nil
		}
		return v.BatchSizePercentage
	}).(pulumi.IntPtrOutput)
}

// Add a comment description for the roll. The comment is limited to 256 chars and optional.
func (o OceanNpUpdatePolicyRollConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OceanNpUpdatePolicyRollConfig) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

// List of node names to be rolled. Each identifier is a string. nodeNames can be null, and cannot be used together with nodePoolNames and vngIds.
func (o OceanNpUpdatePolicyRollConfigPtrOutput) NodeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpUpdatePolicyRollConfig) []string {
		if v == nil {
			return nil
		}
		return v.NodeNames
	}).(pulumi.StringArrayOutput)
}

// List of node pools to be rolled. Each node pool name is a string. nodePoolNames can be null, and cannot be used together with nodeNames and vngIds.
func (o OceanNpUpdatePolicyRollConfigPtrOutput) NodePoolNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpUpdatePolicyRollConfig) []string {
		if v == nil {
			return nil
		}
		return v.NodePoolNames
	}).(pulumi.StringArrayOutput)
}

// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
func (o OceanNpUpdatePolicyRollConfigPtrOutput) RespectPdb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpUpdatePolicyRollConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RespectPdb
	}).(pulumi.BoolPtrOutput)
}

// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
func (o OceanNpUpdatePolicyRollConfigPtrOutput) RespectRestrictScaleDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpUpdatePolicyRollConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RespectRestrictScaleDown
	}).(pulumi.BoolPtrOutput)
}

// List of virtual node group identifiers to be rolled. Each identifier is a string. vngIds can be null, and cannot be used together with nodeNames and nodePoolNames.
func (o OceanNpUpdatePolicyRollConfigPtrOutput) VngIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpUpdatePolicyRollConfig) []string {
		if v == nil {
			return nil
		}
		return v.VngIds
	}).(pulumi.StringArrayOutput)
}

type OceanNpVirtualNodeGroupFilters struct {
	// In case acceleratedNetworking is set to Enabled, accelerated networking applies only to the VM that enables it.
	AcceleratedNetworking *string `pulumi:"acceleratedNetworking"`
	// The filtered vm sizes will support at least one of the architectures from this list. x8664 includes both intel64 and amd64.
	Architectures []string `pulumi:"architectures"`
	// The filtered vm sizes will support at least one of the classes from this list.
	DiskPerformance *string `pulumi:"diskPerformance"`
	// Vm sizes belonging to a series from the list will not be available for scaling.
	ExcludeSeries []string `pulumi:"excludeSeries"`
	// The filtered gpu types will belong to one of the gpu types from this list.
	GpuTypes []string `pulumi:"gpuTypes"`
	// Maximum number of GPUs available.
	MaxGpu *float64 `pulumi:"maxGpu"`
	// Maximum amount of Memory (GiB).
	MaxMemoryGib *float64 `pulumi:"maxMemoryGib"`
	// Maximum number of vcpus available.
	MaxVcpu *int `pulumi:"maxVcpu"`
	// Minimum number of data disks available.
	MinDisk *int `pulumi:"minDisk"`
	// Minimum number of GPUs available.
	MinGpu *float64 `pulumi:"minGpu"`
	// Minimum amount of Memory (GiB).
	MinMemoryGib *float64 `pulumi:"minMemoryGib"`
	// Minimum number of network interfaces.
	MinNics *int `pulumi:"minNics"`
	// Minimum number of vcpus available.
	MinVcpu *int `pulumi:"minVcpu"`
	// Vm sizes belonging to a series from the list will be available for scaling.
	Series []string `pulumi:"series"`
	// The filtered vm types will belong to one of the vm types from this list.
	VmTypes []string `pulumi:"vmTypes"`
}

// OceanNpVirtualNodeGroupFiltersInput is an input type that accepts OceanNpVirtualNodeGroupFiltersArgs and OceanNpVirtualNodeGroupFiltersOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupFiltersInput` via:
//
//	OceanNpVirtualNodeGroupFiltersArgs{...}
type OceanNpVirtualNodeGroupFiltersInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupFiltersOutput() OceanNpVirtualNodeGroupFiltersOutput
	ToOceanNpVirtualNodeGroupFiltersOutputWithContext(context.Context) OceanNpVirtualNodeGroupFiltersOutput
}

type OceanNpVirtualNodeGroupFiltersArgs struct {
	// In case acceleratedNetworking is set to Enabled, accelerated networking applies only to the VM that enables it.
	AcceleratedNetworking pulumi.StringPtrInput `pulumi:"acceleratedNetworking"`
	// The filtered vm sizes will support at least one of the architectures from this list. x8664 includes both intel64 and amd64.
	Architectures pulumi.StringArrayInput `pulumi:"architectures"`
	// The filtered vm sizes will support at least one of the classes from this list.
	DiskPerformance pulumi.StringPtrInput `pulumi:"diskPerformance"`
	// Vm sizes belonging to a series from the list will not be available for scaling.
	ExcludeSeries pulumi.StringArrayInput `pulumi:"excludeSeries"`
	// The filtered gpu types will belong to one of the gpu types from this list.
	GpuTypes pulumi.StringArrayInput `pulumi:"gpuTypes"`
	// Maximum number of GPUs available.
	MaxGpu pulumi.Float64PtrInput `pulumi:"maxGpu"`
	// Maximum amount of Memory (GiB).
	MaxMemoryGib pulumi.Float64PtrInput `pulumi:"maxMemoryGib"`
	// Maximum number of vcpus available.
	MaxVcpu pulumi.IntPtrInput `pulumi:"maxVcpu"`
	// Minimum number of data disks available.
	MinDisk pulumi.IntPtrInput `pulumi:"minDisk"`
	// Minimum number of GPUs available.
	MinGpu pulumi.Float64PtrInput `pulumi:"minGpu"`
	// Minimum amount of Memory (GiB).
	MinMemoryGib pulumi.Float64PtrInput `pulumi:"minMemoryGib"`
	// Minimum number of network interfaces.
	MinNics pulumi.IntPtrInput `pulumi:"minNics"`
	// Minimum number of vcpus available.
	MinVcpu pulumi.IntPtrInput `pulumi:"minVcpu"`
	// Vm sizes belonging to a series from the list will be available for scaling.
	Series pulumi.StringArrayInput `pulumi:"series"`
	// The filtered vm types will belong to one of the vm types from this list.
	VmTypes pulumi.StringArrayInput `pulumi:"vmTypes"`
}

func (OceanNpVirtualNodeGroupFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupFilters)(nil)).Elem()
}

func (i OceanNpVirtualNodeGroupFiltersArgs) ToOceanNpVirtualNodeGroupFiltersOutput() OceanNpVirtualNodeGroupFiltersOutput {
	return i.ToOceanNpVirtualNodeGroupFiltersOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupFiltersArgs) ToOceanNpVirtualNodeGroupFiltersOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupFiltersOutput)
}

func (i OceanNpVirtualNodeGroupFiltersArgs) ToOceanNpVirtualNodeGroupFiltersPtrOutput() OceanNpVirtualNodeGroupFiltersPtrOutput {
	return i.ToOceanNpVirtualNodeGroupFiltersPtrOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupFiltersArgs) ToOceanNpVirtualNodeGroupFiltersPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupFiltersOutput).ToOceanNpVirtualNodeGroupFiltersPtrOutputWithContext(ctx)
}

// OceanNpVirtualNodeGroupFiltersPtrInput is an input type that accepts OceanNpVirtualNodeGroupFiltersArgs, OceanNpVirtualNodeGroupFiltersPtr and OceanNpVirtualNodeGroupFiltersPtrOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupFiltersPtrInput` via:
//
//	        OceanNpVirtualNodeGroupFiltersArgs{...}
//
//	or:
//
//	        nil
type OceanNpVirtualNodeGroupFiltersPtrInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupFiltersPtrOutput() OceanNpVirtualNodeGroupFiltersPtrOutput
	ToOceanNpVirtualNodeGroupFiltersPtrOutputWithContext(context.Context) OceanNpVirtualNodeGroupFiltersPtrOutput
}

type oceanNpVirtualNodeGroupFiltersPtrType OceanNpVirtualNodeGroupFiltersArgs

func OceanNpVirtualNodeGroupFiltersPtr(v *OceanNpVirtualNodeGroupFiltersArgs) OceanNpVirtualNodeGroupFiltersPtrInput {
	return (*oceanNpVirtualNodeGroupFiltersPtrType)(v)
}

func (*oceanNpVirtualNodeGroupFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpVirtualNodeGroupFilters)(nil)).Elem()
}

func (i *oceanNpVirtualNodeGroupFiltersPtrType) ToOceanNpVirtualNodeGroupFiltersPtrOutput() OceanNpVirtualNodeGroupFiltersPtrOutput {
	return i.ToOceanNpVirtualNodeGroupFiltersPtrOutputWithContext(context.Background())
}

func (i *oceanNpVirtualNodeGroupFiltersPtrType) ToOceanNpVirtualNodeGroupFiltersPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupFiltersPtrOutput)
}

type OceanNpVirtualNodeGroupFiltersOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupFilters)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupFiltersOutput) ToOceanNpVirtualNodeGroupFiltersOutput() OceanNpVirtualNodeGroupFiltersOutput {
	return o
}

func (o OceanNpVirtualNodeGroupFiltersOutput) ToOceanNpVirtualNodeGroupFiltersOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupFiltersOutput {
	return o
}

func (o OceanNpVirtualNodeGroupFiltersOutput) ToOceanNpVirtualNodeGroupFiltersPtrOutput() OceanNpVirtualNodeGroupFiltersPtrOutput {
	return o.ToOceanNpVirtualNodeGroupFiltersPtrOutputWithContext(context.Background())
}

func (o OceanNpVirtualNodeGroupFiltersOutput) ToOceanNpVirtualNodeGroupFiltersPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpVirtualNodeGroupFilters) *OceanNpVirtualNodeGroupFilters {
		return &v
	}).(OceanNpVirtualNodeGroupFiltersPtrOutput)
}

// In case acceleratedNetworking is set to Enabled, accelerated networking applies only to the VM that enables it.
func (o OceanNpVirtualNodeGroupFiltersOutput) AcceleratedNetworking() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) *string { return v.AcceleratedNetworking }).(pulumi.StringPtrOutput)
}

// The filtered vm sizes will support at least one of the architectures from this list. x8664 includes both intel64 and amd64.
func (o OceanNpVirtualNodeGroupFiltersOutput) Architectures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) []string { return v.Architectures }).(pulumi.StringArrayOutput)
}

// The filtered vm sizes will support at least one of the classes from this list.
func (o OceanNpVirtualNodeGroupFiltersOutput) DiskPerformance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) *string { return v.DiskPerformance }).(pulumi.StringPtrOutput)
}

// Vm sizes belonging to a series from the list will not be available for scaling.
func (o OceanNpVirtualNodeGroupFiltersOutput) ExcludeSeries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) []string { return v.ExcludeSeries }).(pulumi.StringArrayOutput)
}

// The filtered gpu types will belong to one of the gpu types from this list.
func (o OceanNpVirtualNodeGroupFiltersOutput) GpuTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) []string { return v.GpuTypes }).(pulumi.StringArrayOutput)
}

// Maximum number of GPUs available.
func (o OceanNpVirtualNodeGroupFiltersOutput) MaxGpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) *float64 { return v.MaxGpu }).(pulumi.Float64PtrOutput)
}

// Maximum amount of Memory (GiB).
func (o OceanNpVirtualNodeGroupFiltersOutput) MaxMemoryGib() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) *float64 { return v.MaxMemoryGib }).(pulumi.Float64PtrOutput)
}

// Maximum number of vcpus available.
func (o OceanNpVirtualNodeGroupFiltersOutput) MaxVcpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) *int { return v.MaxVcpu }).(pulumi.IntPtrOutput)
}

// Minimum number of data disks available.
func (o OceanNpVirtualNodeGroupFiltersOutput) MinDisk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) *int { return v.MinDisk }).(pulumi.IntPtrOutput)
}

// Minimum number of GPUs available.
func (o OceanNpVirtualNodeGroupFiltersOutput) MinGpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) *float64 { return v.MinGpu }).(pulumi.Float64PtrOutput)
}

// Minimum amount of Memory (GiB).
func (o OceanNpVirtualNodeGroupFiltersOutput) MinMemoryGib() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) *float64 { return v.MinMemoryGib }).(pulumi.Float64PtrOutput)
}

// Minimum number of network interfaces.
func (o OceanNpVirtualNodeGroupFiltersOutput) MinNics() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) *int { return v.MinNics }).(pulumi.IntPtrOutput)
}

// Minimum number of vcpus available.
func (o OceanNpVirtualNodeGroupFiltersOutput) MinVcpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) *int { return v.MinVcpu }).(pulumi.IntPtrOutput)
}

// Vm sizes belonging to a series from the list will be available for scaling.
func (o OceanNpVirtualNodeGroupFiltersOutput) Series() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) []string { return v.Series }).(pulumi.StringArrayOutput)
}

// The filtered vm types will belong to one of the vm types from this list.
func (o OceanNpVirtualNodeGroupFiltersOutput) VmTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupFilters) []string { return v.VmTypes }).(pulumi.StringArrayOutput)
}

type OceanNpVirtualNodeGroupFiltersPtrOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpVirtualNodeGroupFilters)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupFiltersPtrOutput) ToOceanNpVirtualNodeGroupFiltersPtrOutput() OceanNpVirtualNodeGroupFiltersPtrOutput {
	return o
}

func (o OceanNpVirtualNodeGroupFiltersPtrOutput) ToOceanNpVirtualNodeGroupFiltersPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupFiltersPtrOutput {
	return o
}

func (o OceanNpVirtualNodeGroupFiltersPtrOutput) Elem() OceanNpVirtualNodeGroupFiltersOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) OceanNpVirtualNodeGroupFilters {
		if v != nil {
			return *v
		}
		var ret OceanNpVirtualNodeGroupFilters
		return ret
	}).(OceanNpVirtualNodeGroupFiltersOutput)
}

// In case acceleratedNetworking is set to Enabled, accelerated networking applies only to the VM that enables it.
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) AcceleratedNetworking() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) *string {
		if v == nil {
			return nil
		}
		return v.AcceleratedNetworking
	}).(pulumi.StringPtrOutput)
}

// The filtered vm sizes will support at least one of the architectures from this list. x8664 includes both intel64 and amd64.
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) Architectures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) []string {
		if v == nil {
			return nil
		}
		return v.Architectures
	}).(pulumi.StringArrayOutput)
}

// The filtered vm sizes will support at least one of the classes from this list.
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) DiskPerformance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) *string {
		if v == nil {
			return nil
		}
		return v.DiskPerformance
	}).(pulumi.StringPtrOutput)
}

// Vm sizes belonging to a series from the list will not be available for scaling.
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) ExcludeSeries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeSeries
	}).(pulumi.StringArrayOutput)
}

// The filtered gpu types will belong to one of the gpu types from this list.
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) GpuTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) []string {
		if v == nil {
			return nil
		}
		return v.GpuTypes
	}).(pulumi.StringArrayOutput)
}

// Maximum number of GPUs available.
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) MaxGpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxGpu
	}).(pulumi.Float64PtrOutput)
}

// Maximum amount of Memory (GiB).
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) MaxMemoryGib() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxMemoryGib
	}).(pulumi.Float64PtrOutput)
}

// Maximum number of vcpus available.
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) MaxVcpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) *int {
		if v == nil {
			return nil
		}
		return v.MaxVcpu
	}).(pulumi.IntPtrOutput)
}

// Minimum number of data disks available.
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) MinDisk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) *int {
		if v == nil {
			return nil
		}
		return v.MinDisk
	}).(pulumi.IntPtrOutput)
}

// Minimum number of GPUs available.
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) MinGpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) *float64 {
		if v == nil {
			return nil
		}
		return v.MinGpu
	}).(pulumi.Float64PtrOutput)
}

// Minimum amount of Memory (GiB).
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) MinMemoryGib() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) *float64 {
		if v == nil {
			return nil
		}
		return v.MinMemoryGib
	}).(pulumi.Float64PtrOutput)
}

// Minimum number of network interfaces.
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) MinNics() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) *int {
		if v == nil {
			return nil
		}
		return v.MinNics
	}).(pulumi.IntPtrOutput)
}

// Minimum number of vcpus available.
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) MinVcpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) *int {
		if v == nil {
			return nil
		}
		return v.MinVcpu
	}).(pulumi.IntPtrOutput)
}

// Vm sizes belonging to a series from the list will be available for scaling.
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) Series() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) []string {
		if v == nil {
			return nil
		}
		return v.Series
	}).(pulumi.StringArrayOutput)
}

// The filtered vm types will belong to one of the vm types from this list.
func (o OceanNpVirtualNodeGroupFiltersPtrOutput) VmTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupFilters) []string {
		if v == nil {
			return nil
		}
		return v.VmTypes
	}).(pulumi.StringArrayOutput)
}

type OceanNpVirtualNodeGroupHeadroom struct {
	// Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.
	CpuPerUnit *int `pulumi:"cpuPerUnit"`
	// Amount of GPU to allocate for headroom unit.
	GpuPerUnit *int `pulumi:"gpuPerUnit"`
	// Configure the amount of memory (MiB) to allocate the headroom.
	MemoryPerUnit *int `pulumi:"memoryPerUnit"`
	// The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.
	NumOfUnits *int `pulumi:"numOfUnits"`
}

// OceanNpVirtualNodeGroupHeadroomInput is an input type that accepts OceanNpVirtualNodeGroupHeadroomArgs and OceanNpVirtualNodeGroupHeadroomOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupHeadroomInput` via:
//
//	OceanNpVirtualNodeGroupHeadroomArgs{...}
type OceanNpVirtualNodeGroupHeadroomInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupHeadroomOutput() OceanNpVirtualNodeGroupHeadroomOutput
	ToOceanNpVirtualNodeGroupHeadroomOutputWithContext(context.Context) OceanNpVirtualNodeGroupHeadroomOutput
}

type OceanNpVirtualNodeGroupHeadroomArgs struct {
	// Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.
	CpuPerUnit pulumi.IntPtrInput `pulumi:"cpuPerUnit"`
	// Amount of GPU to allocate for headroom unit.
	GpuPerUnit pulumi.IntPtrInput `pulumi:"gpuPerUnit"`
	// Configure the amount of memory (MiB) to allocate the headroom.
	MemoryPerUnit pulumi.IntPtrInput `pulumi:"memoryPerUnit"`
	// The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.
	NumOfUnits pulumi.IntPtrInput `pulumi:"numOfUnits"`
}

func (OceanNpVirtualNodeGroupHeadroomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupHeadroom)(nil)).Elem()
}

func (i OceanNpVirtualNodeGroupHeadroomArgs) ToOceanNpVirtualNodeGroupHeadroomOutput() OceanNpVirtualNodeGroupHeadroomOutput {
	return i.ToOceanNpVirtualNodeGroupHeadroomOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupHeadroomArgs) ToOceanNpVirtualNodeGroupHeadroomOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupHeadroomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupHeadroomOutput)
}

// OceanNpVirtualNodeGroupHeadroomArrayInput is an input type that accepts OceanNpVirtualNodeGroupHeadroomArray and OceanNpVirtualNodeGroupHeadroomArrayOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupHeadroomArrayInput` via:
//
//	OceanNpVirtualNodeGroupHeadroomArray{ OceanNpVirtualNodeGroupHeadroomArgs{...} }
type OceanNpVirtualNodeGroupHeadroomArrayInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupHeadroomArrayOutput() OceanNpVirtualNodeGroupHeadroomArrayOutput
	ToOceanNpVirtualNodeGroupHeadroomArrayOutputWithContext(context.Context) OceanNpVirtualNodeGroupHeadroomArrayOutput
}

type OceanNpVirtualNodeGroupHeadroomArray []OceanNpVirtualNodeGroupHeadroomInput

func (OceanNpVirtualNodeGroupHeadroomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpVirtualNodeGroupHeadroom)(nil)).Elem()
}

func (i OceanNpVirtualNodeGroupHeadroomArray) ToOceanNpVirtualNodeGroupHeadroomArrayOutput() OceanNpVirtualNodeGroupHeadroomArrayOutput {
	return i.ToOceanNpVirtualNodeGroupHeadroomArrayOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupHeadroomArray) ToOceanNpVirtualNodeGroupHeadroomArrayOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupHeadroomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupHeadroomArrayOutput)
}

type OceanNpVirtualNodeGroupHeadroomOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupHeadroomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupHeadroom)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupHeadroomOutput) ToOceanNpVirtualNodeGroupHeadroomOutput() OceanNpVirtualNodeGroupHeadroomOutput {
	return o
}

func (o OceanNpVirtualNodeGroupHeadroomOutput) ToOceanNpVirtualNodeGroupHeadroomOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupHeadroomOutput {
	return o
}

// Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.
func (o OceanNpVirtualNodeGroupHeadroomOutput) CpuPerUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupHeadroom) *int { return v.CpuPerUnit }).(pulumi.IntPtrOutput)
}

// Amount of GPU to allocate for headroom unit.
func (o OceanNpVirtualNodeGroupHeadroomOutput) GpuPerUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupHeadroom) *int { return v.GpuPerUnit }).(pulumi.IntPtrOutput)
}

// Configure the amount of memory (MiB) to allocate the headroom.
func (o OceanNpVirtualNodeGroupHeadroomOutput) MemoryPerUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupHeadroom) *int { return v.MemoryPerUnit }).(pulumi.IntPtrOutput)
}

// The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.
func (o OceanNpVirtualNodeGroupHeadroomOutput) NumOfUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupHeadroom) *int { return v.NumOfUnits }).(pulumi.IntPtrOutput)
}

type OceanNpVirtualNodeGroupHeadroomArrayOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupHeadroomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpVirtualNodeGroupHeadroom)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupHeadroomArrayOutput) ToOceanNpVirtualNodeGroupHeadroomArrayOutput() OceanNpVirtualNodeGroupHeadroomArrayOutput {
	return o
}

func (o OceanNpVirtualNodeGroupHeadroomArrayOutput) ToOceanNpVirtualNodeGroupHeadroomArrayOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupHeadroomArrayOutput {
	return o
}

func (o OceanNpVirtualNodeGroupHeadroomArrayOutput) Index(i pulumi.IntInput) OceanNpVirtualNodeGroupHeadroomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OceanNpVirtualNodeGroupHeadroom {
		return vs[0].([]OceanNpVirtualNodeGroupHeadroom)[vs[1].(int)]
	}).(OceanNpVirtualNodeGroupHeadroomOutput)
}

type OceanNpVirtualNodeGroupLinuxOsConfig struct {
	// System Controls
	Sysctls []OceanNpVirtualNodeGroupLinuxOsConfigSysctl `pulumi:"sysctls"`
}

// OceanNpVirtualNodeGroupLinuxOsConfigInput is an input type that accepts OceanNpVirtualNodeGroupLinuxOsConfigArgs and OceanNpVirtualNodeGroupLinuxOsConfigOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupLinuxOsConfigInput` via:
//
//	OceanNpVirtualNodeGroupLinuxOsConfigArgs{...}
type OceanNpVirtualNodeGroupLinuxOsConfigInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupLinuxOsConfigOutput() OceanNpVirtualNodeGroupLinuxOsConfigOutput
	ToOceanNpVirtualNodeGroupLinuxOsConfigOutputWithContext(context.Context) OceanNpVirtualNodeGroupLinuxOsConfigOutput
}

type OceanNpVirtualNodeGroupLinuxOsConfigArgs struct {
	// System Controls
	Sysctls OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayInput `pulumi:"sysctls"`
}

func (OceanNpVirtualNodeGroupLinuxOsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupLinuxOsConfig)(nil)).Elem()
}

func (i OceanNpVirtualNodeGroupLinuxOsConfigArgs) ToOceanNpVirtualNodeGroupLinuxOsConfigOutput() OceanNpVirtualNodeGroupLinuxOsConfigOutput {
	return i.ToOceanNpVirtualNodeGroupLinuxOsConfigOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupLinuxOsConfigArgs) ToOceanNpVirtualNodeGroupLinuxOsConfigOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupLinuxOsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupLinuxOsConfigOutput)
}

// OceanNpVirtualNodeGroupLinuxOsConfigArrayInput is an input type that accepts OceanNpVirtualNodeGroupLinuxOsConfigArray and OceanNpVirtualNodeGroupLinuxOsConfigArrayOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupLinuxOsConfigArrayInput` via:
//
//	OceanNpVirtualNodeGroupLinuxOsConfigArray{ OceanNpVirtualNodeGroupLinuxOsConfigArgs{...} }
type OceanNpVirtualNodeGroupLinuxOsConfigArrayInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupLinuxOsConfigArrayOutput() OceanNpVirtualNodeGroupLinuxOsConfigArrayOutput
	ToOceanNpVirtualNodeGroupLinuxOsConfigArrayOutputWithContext(context.Context) OceanNpVirtualNodeGroupLinuxOsConfigArrayOutput
}

type OceanNpVirtualNodeGroupLinuxOsConfigArray []OceanNpVirtualNodeGroupLinuxOsConfigInput

func (OceanNpVirtualNodeGroupLinuxOsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpVirtualNodeGroupLinuxOsConfig)(nil)).Elem()
}

func (i OceanNpVirtualNodeGroupLinuxOsConfigArray) ToOceanNpVirtualNodeGroupLinuxOsConfigArrayOutput() OceanNpVirtualNodeGroupLinuxOsConfigArrayOutput {
	return i.ToOceanNpVirtualNodeGroupLinuxOsConfigArrayOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupLinuxOsConfigArray) ToOceanNpVirtualNodeGroupLinuxOsConfigArrayOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupLinuxOsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupLinuxOsConfigArrayOutput)
}

type OceanNpVirtualNodeGroupLinuxOsConfigOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupLinuxOsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupLinuxOsConfig)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupLinuxOsConfigOutput) ToOceanNpVirtualNodeGroupLinuxOsConfigOutput() OceanNpVirtualNodeGroupLinuxOsConfigOutput {
	return o
}

func (o OceanNpVirtualNodeGroupLinuxOsConfigOutput) ToOceanNpVirtualNodeGroupLinuxOsConfigOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupLinuxOsConfigOutput {
	return o
}

// System Controls
func (o OceanNpVirtualNodeGroupLinuxOsConfigOutput) Sysctls() OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupLinuxOsConfig) []OceanNpVirtualNodeGroupLinuxOsConfigSysctl {
		return v.Sysctls
	}).(OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput)
}

type OceanNpVirtualNodeGroupLinuxOsConfigArrayOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupLinuxOsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpVirtualNodeGroupLinuxOsConfig)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupLinuxOsConfigArrayOutput) ToOceanNpVirtualNodeGroupLinuxOsConfigArrayOutput() OceanNpVirtualNodeGroupLinuxOsConfigArrayOutput {
	return o
}

func (o OceanNpVirtualNodeGroupLinuxOsConfigArrayOutput) ToOceanNpVirtualNodeGroupLinuxOsConfigArrayOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupLinuxOsConfigArrayOutput {
	return o
}

func (o OceanNpVirtualNodeGroupLinuxOsConfigArrayOutput) Index(i pulumi.IntInput) OceanNpVirtualNodeGroupLinuxOsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OceanNpVirtualNodeGroupLinuxOsConfig {
		return vs[0].([]OceanNpVirtualNodeGroupLinuxOsConfig)[vs[1].(int)]
	}).(OceanNpVirtualNodeGroupLinuxOsConfigOutput)
}

type OceanNpVirtualNodeGroupLinuxOsConfigSysctl struct {
	// Maximum number of memory map areas a process may have. Can be configured only if OS type is Linux.
	VmMaxMapCount *int `pulumi:"vmMaxMapCount"`
}

// OceanNpVirtualNodeGroupLinuxOsConfigSysctlInput is an input type that accepts OceanNpVirtualNodeGroupLinuxOsConfigSysctlArgs and OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupLinuxOsConfigSysctlInput` via:
//
//	OceanNpVirtualNodeGroupLinuxOsConfigSysctlArgs{...}
type OceanNpVirtualNodeGroupLinuxOsConfigSysctlInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput() OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput
	ToOceanNpVirtualNodeGroupLinuxOsConfigSysctlOutputWithContext(context.Context) OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput
}

type OceanNpVirtualNodeGroupLinuxOsConfigSysctlArgs struct {
	// Maximum number of memory map areas a process may have. Can be configured only if OS type is Linux.
	VmMaxMapCount pulumi.IntPtrInput `pulumi:"vmMaxMapCount"`
}

func (OceanNpVirtualNodeGroupLinuxOsConfigSysctlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupLinuxOsConfigSysctl)(nil)).Elem()
}

func (i OceanNpVirtualNodeGroupLinuxOsConfigSysctlArgs) ToOceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput() OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput {
	return i.ToOceanNpVirtualNodeGroupLinuxOsConfigSysctlOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupLinuxOsConfigSysctlArgs) ToOceanNpVirtualNodeGroupLinuxOsConfigSysctlOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput)
}

// OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayInput is an input type that accepts OceanNpVirtualNodeGroupLinuxOsConfigSysctlArray and OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayInput` via:
//
//	OceanNpVirtualNodeGroupLinuxOsConfigSysctlArray{ OceanNpVirtualNodeGroupLinuxOsConfigSysctlArgs{...} }
type OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput() OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput
	ToOceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutputWithContext(context.Context) OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput
}

type OceanNpVirtualNodeGroupLinuxOsConfigSysctlArray []OceanNpVirtualNodeGroupLinuxOsConfigSysctlInput

func (OceanNpVirtualNodeGroupLinuxOsConfigSysctlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpVirtualNodeGroupLinuxOsConfigSysctl)(nil)).Elem()
}

func (i OceanNpVirtualNodeGroupLinuxOsConfigSysctlArray) ToOceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput() OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput {
	return i.ToOceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupLinuxOsConfigSysctlArray) ToOceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput)
}

type OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupLinuxOsConfigSysctl)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput) ToOceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput() OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput {
	return o
}

func (o OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput) ToOceanNpVirtualNodeGroupLinuxOsConfigSysctlOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput {
	return o
}

// Maximum number of memory map areas a process may have. Can be configured only if OS type is Linux.
func (o OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput) VmMaxMapCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupLinuxOsConfigSysctl) *int { return v.VmMaxMapCount }).(pulumi.IntPtrOutput)
}

type OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpVirtualNodeGroupLinuxOsConfigSysctl)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput) ToOceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput() OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput {
	return o
}

func (o OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput) ToOceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput {
	return o
}

func (o OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput) Index(i pulumi.IntInput) OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OceanNpVirtualNodeGroupLinuxOsConfigSysctl {
		return vs[0].([]OceanNpVirtualNodeGroupLinuxOsConfigSysctl)[vs[1].(int)]
	}).(OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput)
}

type OceanNpVirtualNodeGroupScheduling struct {
	// An object used to specify times that the nodes in the virtual node group will be stopped.
	ShutdownHours *OceanNpVirtualNodeGroupSchedulingShutdownHours `pulumi:"shutdownHours"`
}

// OceanNpVirtualNodeGroupSchedulingInput is an input type that accepts OceanNpVirtualNodeGroupSchedulingArgs and OceanNpVirtualNodeGroupSchedulingOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupSchedulingInput` via:
//
//	OceanNpVirtualNodeGroupSchedulingArgs{...}
type OceanNpVirtualNodeGroupSchedulingInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupSchedulingOutput() OceanNpVirtualNodeGroupSchedulingOutput
	ToOceanNpVirtualNodeGroupSchedulingOutputWithContext(context.Context) OceanNpVirtualNodeGroupSchedulingOutput
}

type OceanNpVirtualNodeGroupSchedulingArgs struct {
	// An object used to specify times that the nodes in the virtual node group will be stopped.
	ShutdownHours OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrInput `pulumi:"shutdownHours"`
}

func (OceanNpVirtualNodeGroupSchedulingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupScheduling)(nil)).Elem()
}

func (i OceanNpVirtualNodeGroupSchedulingArgs) ToOceanNpVirtualNodeGroupSchedulingOutput() OceanNpVirtualNodeGroupSchedulingOutput {
	return i.ToOceanNpVirtualNodeGroupSchedulingOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupSchedulingArgs) ToOceanNpVirtualNodeGroupSchedulingOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupSchedulingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupSchedulingOutput)
}

func (i OceanNpVirtualNodeGroupSchedulingArgs) ToOceanNpVirtualNodeGroupSchedulingPtrOutput() OceanNpVirtualNodeGroupSchedulingPtrOutput {
	return i.ToOceanNpVirtualNodeGroupSchedulingPtrOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupSchedulingArgs) ToOceanNpVirtualNodeGroupSchedulingPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupSchedulingOutput).ToOceanNpVirtualNodeGroupSchedulingPtrOutputWithContext(ctx)
}

// OceanNpVirtualNodeGroupSchedulingPtrInput is an input type that accepts OceanNpVirtualNodeGroupSchedulingArgs, OceanNpVirtualNodeGroupSchedulingPtr and OceanNpVirtualNodeGroupSchedulingPtrOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupSchedulingPtrInput` via:
//
//	        OceanNpVirtualNodeGroupSchedulingArgs{...}
//
//	or:
//
//	        nil
type OceanNpVirtualNodeGroupSchedulingPtrInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupSchedulingPtrOutput() OceanNpVirtualNodeGroupSchedulingPtrOutput
	ToOceanNpVirtualNodeGroupSchedulingPtrOutputWithContext(context.Context) OceanNpVirtualNodeGroupSchedulingPtrOutput
}

type oceanNpVirtualNodeGroupSchedulingPtrType OceanNpVirtualNodeGroupSchedulingArgs

func OceanNpVirtualNodeGroupSchedulingPtr(v *OceanNpVirtualNodeGroupSchedulingArgs) OceanNpVirtualNodeGroupSchedulingPtrInput {
	return (*oceanNpVirtualNodeGroupSchedulingPtrType)(v)
}

func (*oceanNpVirtualNodeGroupSchedulingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpVirtualNodeGroupScheduling)(nil)).Elem()
}

func (i *oceanNpVirtualNodeGroupSchedulingPtrType) ToOceanNpVirtualNodeGroupSchedulingPtrOutput() OceanNpVirtualNodeGroupSchedulingPtrOutput {
	return i.ToOceanNpVirtualNodeGroupSchedulingPtrOutputWithContext(context.Background())
}

func (i *oceanNpVirtualNodeGroupSchedulingPtrType) ToOceanNpVirtualNodeGroupSchedulingPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupSchedulingPtrOutput)
}

type OceanNpVirtualNodeGroupSchedulingOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupSchedulingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupScheduling)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupSchedulingOutput) ToOceanNpVirtualNodeGroupSchedulingOutput() OceanNpVirtualNodeGroupSchedulingOutput {
	return o
}

func (o OceanNpVirtualNodeGroupSchedulingOutput) ToOceanNpVirtualNodeGroupSchedulingOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupSchedulingOutput {
	return o
}

func (o OceanNpVirtualNodeGroupSchedulingOutput) ToOceanNpVirtualNodeGroupSchedulingPtrOutput() OceanNpVirtualNodeGroupSchedulingPtrOutput {
	return o.ToOceanNpVirtualNodeGroupSchedulingPtrOutputWithContext(context.Background())
}

func (o OceanNpVirtualNodeGroupSchedulingOutput) ToOceanNpVirtualNodeGroupSchedulingPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupSchedulingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpVirtualNodeGroupScheduling) *OceanNpVirtualNodeGroupScheduling {
		return &v
	}).(OceanNpVirtualNodeGroupSchedulingPtrOutput)
}

// An object used to specify times that the nodes in the virtual node group will be stopped.
func (o OceanNpVirtualNodeGroupSchedulingOutput) ShutdownHours() OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupScheduling) *OceanNpVirtualNodeGroupSchedulingShutdownHours {
		return v.ShutdownHours
	}).(OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput)
}

type OceanNpVirtualNodeGroupSchedulingPtrOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupSchedulingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpVirtualNodeGroupScheduling)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupSchedulingPtrOutput) ToOceanNpVirtualNodeGroupSchedulingPtrOutput() OceanNpVirtualNodeGroupSchedulingPtrOutput {
	return o
}

func (o OceanNpVirtualNodeGroupSchedulingPtrOutput) ToOceanNpVirtualNodeGroupSchedulingPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupSchedulingPtrOutput {
	return o
}

func (o OceanNpVirtualNodeGroupSchedulingPtrOutput) Elem() OceanNpVirtualNodeGroupSchedulingOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupScheduling) OceanNpVirtualNodeGroupScheduling {
		if v != nil {
			return *v
		}
		var ret OceanNpVirtualNodeGroupScheduling
		return ret
	}).(OceanNpVirtualNodeGroupSchedulingOutput)
}

// An object used to specify times that the nodes in the virtual node group will be stopped.
func (o OceanNpVirtualNodeGroupSchedulingPtrOutput) ShutdownHours() OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupScheduling) *OceanNpVirtualNodeGroupSchedulingShutdownHours {
		if v == nil {
			return nil
		}
		return v.ShutdownHours
	}).(OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput)
}

type OceanNpVirtualNodeGroupSchedulingShutdownHours struct {
	// Flag to enable or disable the shutdown hours mechanism. When `false`, the mechanism is deactivated, and the virtual node gorup remains in its current state.
	IsEnabled *bool `pulumi:"isEnabled"`
	// The times that the shutdown hours will apply. Required if isEnabled is true.
	TimeWindows []string `pulumi:"timeWindows"`
}

// OceanNpVirtualNodeGroupSchedulingShutdownHoursInput is an input type that accepts OceanNpVirtualNodeGroupSchedulingShutdownHoursArgs and OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupSchedulingShutdownHoursInput` via:
//
//	OceanNpVirtualNodeGroupSchedulingShutdownHoursArgs{...}
type OceanNpVirtualNodeGroupSchedulingShutdownHoursInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupSchedulingShutdownHoursOutput() OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput
	ToOceanNpVirtualNodeGroupSchedulingShutdownHoursOutputWithContext(context.Context) OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput
}

type OceanNpVirtualNodeGroupSchedulingShutdownHoursArgs struct {
	// Flag to enable or disable the shutdown hours mechanism. When `false`, the mechanism is deactivated, and the virtual node gorup remains in its current state.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// The times that the shutdown hours will apply. Required if isEnabled is true.
	TimeWindows pulumi.StringArrayInput `pulumi:"timeWindows"`
}

func (OceanNpVirtualNodeGroupSchedulingShutdownHoursArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupSchedulingShutdownHours)(nil)).Elem()
}

func (i OceanNpVirtualNodeGroupSchedulingShutdownHoursArgs) ToOceanNpVirtualNodeGroupSchedulingShutdownHoursOutput() OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput {
	return i.ToOceanNpVirtualNodeGroupSchedulingShutdownHoursOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupSchedulingShutdownHoursArgs) ToOceanNpVirtualNodeGroupSchedulingShutdownHoursOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput)
}

func (i OceanNpVirtualNodeGroupSchedulingShutdownHoursArgs) ToOceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput() OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput {
	return i.ToOceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupSchedulingShutdownHoursArgs) ToOceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput).ToOceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutputWithContext(ctx)
}

// OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrInput is an input type that accepts OceanNpVirtualNodeGroupSchedulingShutdownHoursArgs, OceanNpVirtualNodeGroupSchedulingShutdownHoursPtr and OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrInput` via:
//
//	        OceanNpVirtualNodeGroupSchedulingShutdownHoursArgs{...}
//
//	or:
//
//	        nil
type OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput() OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput
	ToOceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutputWithContext(context.Context) OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput
}

type oceanNpVirtualNodeGroupSchedulingShutdownHoursPtrType OceanNpVirtualNodeGroupSchedulingShutdownHoursArgs

func OceanNpVirtualNodeGroupSchedulingShutdownHoursPtr(v *OceanNpVirtualNodeGroupSchedulingShutdownHoursArgs) OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrInput {
	return (*oceanNpVirtualNodeGroupSchedulingShutdownHoursPtrType)(v)
}

func (*oceanNpVirtualNodeGroupSchedulingShutdownHoursPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpVirtualNodeGroupSchedulingShutdownHours)(nil)).Elem()
}

func (i *oceanNpVirtualNodeGroupSchedulingShutdownHoursPtrType) ToOceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput() OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput {
	return i.ToOceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutputWithContext(context.Background())
}

func (i *oceanNpVirtualNodeGroupSchedulingShutdownHoursPtrType) ToOceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput)
}

type OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupSchedulingShutdownHours)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput) ToOceanNpVirtualNodeGroupSchedulingShutdownHoursOutput() OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput {
	return o
}

func (o OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput) ToOceanNpVirtualNodeGroupSchedulingShutdownHoursOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput {
	return o
}

func (o OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput) ToOceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput() OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput {
	return o.ToOceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutputWithContext(context.Background())
}

func (o OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput) ToOceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpVirtualNodeGroupSchedulingShutdownHours) *OceanNpVirtualNodeGroupSchedulingShutdownHours {
		return &v
	}).(OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput)
}

// Flag to enable or disable the shutdown hours mechanism. When `false`, the mechanism is deactivated, and the virtual node gorup remains in its current state.
func (o OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupSchedulingShutdownHours) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The times that the shutdown hours will apply. Required if isEnabled is true.
func (o OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput) TimeWindows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupSchedulingShutdownHours) []string { return v.TimeWindows }).(pulumi.StringArrayOutput)
}

type OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpVirtualNodeGroupSchedulingShutdownHours)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput) ToOceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput() OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput {
	return o
}

func (o OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput) ToOceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput {
	return o
}

func (o OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput) Elem() OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupSchedulingShutdownHours) OceanNpVirtualNodeGroupSchedulingShutdownHours {
		if v != nil {
			return *v
		}
		var ret OceanNpVirtualNodeGroupSchedulingShutdownHours
		return ret
	}).(OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput)
}

// Flag to enable or disable the shutdown hours mechanism. When `false`, the mechanism is deactivated, and the virtual node gorup remains in its current state.
func (o OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupSchedulingShutdownHours) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The times that the shutdown hours will apply. Required if isEnabled is true.
func (o OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput) TimeWindows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupSchedulingShutdownHours) []string {
		if v == nil {
			return nil
		}
		return v.TimeWindows
	}).(pulumi.StringArrayOutput)
}

type OceanNpVirtualNodeGroupTaint struct {
	// Set taint effect.
	Effect string `pulumi:"effect"`
	// Set taint key. The following are not allowed: "kubernetes.azure.com/scalesetpriority".
	Key string `pulumi:"key"`
	// Set taint value.
	Value string `pulumi:"value"`
}

// OceanNpVirtualNodeGroupTaintInput is an input type that accepts OceanNpVirtualNodeGroupTaintArgs and OceanNpVirtualNodeGroupTaintOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupTaintInput` via:
//
//	OceanNpVirtualNodeGroupTaintArgs{...}
type OceanNpVirtualNodeGroupTaintInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupTaintOutput() OceanNpVirtualNodeGroupTaintOutput
	ToOceanNpVirtualNodeGroupTaintOutputWithContext(context.Context) OceanNpVirtualNodeGroupTaintOutput
}

type OceanNpVirtualNodeGroupTaintArgs struct {
	// Set taint effect.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Set taint key. The following are not allowed: "kubernetes.azure.com/scalesetpriority".
	Key pulumi.StringInput `pulumi:"key"`
	// Set taint value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (OceanNpVirtualNodeGroupTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupTaint)(nil)).Elem()
}

func (i OceanNpVirtualNodeGroupTaintArgs) ToOceanNpVirtualNodeGroupTaintOutput() OceanNpVirtualNodeGroupTaintOutput {
	return i.ToOceanNpVirtualNodeGroupTaintOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupTaintArgs) ToOceanNpVirtualNodeGroupTaintOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupTaintOutput)
}

// OceanNpVirtualNodeGroupTaintArrayInput is an input type that accepts OceanNpVirtualNodeGroupTaintArray and OceanNpVirtualNodeGroupTaintArrayOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupTaintArrayInput` via:
//
//	OceanNpVirtualNodeGroupTaintArray{ OceanNpVirtualNodeGroupTaintArgs{...} }
type OceanNpVirtualNodeGroupTaintArrayInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupTaintArrayOutput() OceanNpVirtualNodeGroupTaintArrayOutput
	ToOceanNpVirtualNodeGroupTaintArrayOutputWithContext(context.Context) OceanNpVirtualNodeGroupTaintArrayOutput
}

type OceanNpVirtualNodeGroupTaintArray []OceanNpVirtualNodeGroupTaintInput

func (OceanNpVirtualNodeGroupTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpVirtualNodeGroupTaint)(nil)).Elem()
}

func (i OceanNpVirtualNodeGroupTaintArray) ToOceanNpVirtualNodeGroupTaintArrayOutput() OceanNpVirtualNodeGroupTaintArrayOutput {
	return i.ToOceanNpVirtualNodeGroupTaintArrayOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupTaintArray) ToOceanNpVirtualNodeGroupTaintArrayOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupTaintArrayOutput)
}

type OceanNpVirtualNodeGroupTaintOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupTaint)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupTaintOutput) ToOceanNpVirtualNodeGroupTaintOutput() OceanNpVirtualNodeGroupTaintOutput {
	return o
}

func (o OceanNpVirtualNodeGroupTaintOutput) ToOceanNpVirtualNodeGroupTaintOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupTaintOutput {
	return o
}

// Set taint effect.
func (o OceanNpVirtualNodeGroupTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Set taint key. The following are not allowed: "kubernetes.azure.com/scalesetpriority".
func (o OceanNpVirtualNodeGroupTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Set taint value.
func (o OceanNpVirtualNodeGroupTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupTaint) string { return v.Value }).(pulumi.StringOutput)
}

type OceanNpVirtualNodeGroupTaintArrayOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OceanNpVirtualNodeGroupTaint)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupTaintArrayOutput) ToOceanNpVirtualNodeGroupTaintArrayOutput() OceanNpVirtualNodeGroupTaintArrayOutput {
	return o
}

func (o OceanNpVirtualNodeGroupTaintArrayOutput) ToOceanNpVirtualNodeGroupTaintArrayOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupTaintArrayOutput {
	return o
}

func (o OceanNpVirtualNodeGroupTaintArrayOutput) Index(i pulumi.IntInput) OceanNpVirtualNodeGroupTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OceanNpVirtualNodeGroupTaint {
		return vs[0].([]OceanNpVirtualNodeGroupTaint)[vs[1].(int)]
	}).(OceanNpVirtualNodeGroupTaintOutput)
}

type OceanNpVirtualNodeGroupUpdatePolicy struct {
	// Spot will perform a cluster Roll in accordance with a relevant modification of the cluster’s settings. When set to true , only specific changes in the cluster’s configuration will trigger a cluster roll (such as availability_zones, max_pods_per_node, enable_node_public_ip, os_disk_size_gb, os_disk_type, os_sku, kubernetes_version, vnet_subnet_ids, pod_subnet_ids, labels, taints and tags).
	ConditionedRoll *bool `pulumi:"conditionedRoll"`
	// While used, you can control whether the group should perform a deployment after an update to the configuration.
	RollConfig *OceanNpVirtualNodeGroupUpdatePolicyRollConfig `pulumi:"rollConfig"`
	// If set to true along with the vng update, roll will be triggered.
	ShouldRoll bool `pulumi:"shouldRoll"`
}

// OceanNpVirtualNodeGroupUpdatePolicyInput is an input type that accepts OceanNpVirtualNodeGroupUpdatePolicyArgs and OceanNpVirtualNodeGroupUpdatePolicyOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupUpdatePolicyInput` via:
//
//	OceanNpVirtualNodeGroupUpdatePolicyArgs{...}
type OceanNpVirtualNodeGroupUpdatePolicyInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupUpdatePolicyOutput() OceanNpVirtualNodeGroupUpdatePolicyOutput
	ToOceanNpVirtualNodeGroupUpdatePolicyOutputWithContext(context.Context) OceanNpVirtualNodeGroupUpdatePolicyOutput
}

type OceanNpVirtualNodeGroupUpdatePolicyArgs struct {
	// Spot will perform a cluster Roll in accordance with a relevant modification of the cluster’s settings. When set to true , only specific changes in the cluster’s configuration will trigger a cluster roll (such as availability_zones, max_pods_per_node, enable_node_public_ip, os_disk_size_gb, os_disk_type, os_sku, kubernetes_version, vnet_subnet_ids, pod_subnet_ids, labels, taints and tags).
	ConditionedRoll pulumi.BoolPtrInput `pulumi:"conditionedRoll"`
	// While used, you can control whether the group should perform a deployment after an update to the configuration.
	RollConfig OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrInput `pulumi:"rollConfig"`
	// If set to true along with the vng update, roll will be triggered.
	ShouldRoll pulumi.BoolInput `pulumi:"shouldRoll"`
}

func (OceanNpVirtualNodeGroupUpdatePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupUpdatePolicy)(nil)).Elem()
}

func (i OceanNpVirtualNodeGroupUpdatePolicyArgs) ToOceanNpVirtualNodeGroupUpdatePolicyOutput() OceanNpVirtualNodeGroupUpdatePolicyOutput {
	return i.ToOceanNpVirtualNodeGroupUpdatePolicyOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupUpdatePolicyArgs) ToOceanNpVirtualNodeGroupUpdatePolicyOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupUpdatePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupUpdatePolicyOutput)
}

func (i OceanNpVirtualNodeGroupUpdatePolicyArgs) ToOceanNpVirtualNodeGroupUpdatePolicyPtrOutput() OceanNpVirtualNodeGroupUpdatePolicyPtrOutput {
	return i.ToOceanNpVirtualNodeGroupUpdatePolicyPtrOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupUpdatePolicyArgs) ToOceanNpVirtualNodeGroupUpdatePolicyPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupUpdatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupUpdatePolicyOutput).ToOceanNpVirtualNodeGroupUpdatePolicyPtrOutputWithContext(ctx)
}

// OceanNpVirtualNodeGroupUpdatePolicyPtrInput is an input type that accepts OceanNpVirtualNodeGroupUpdatePolicyArgs, OceanNpVirtualNodeGroupUpdatePolicyPtr and OceanNpVirtualNodeGroupUpdatePolicyPtrOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupUpdatePolicyPtrInput` via:
//
//	        OceanNpVirtualNodeGroupUpdatePolicyArgs{...}
//
//	or:
//
//	        nil
type OceanNpVirtualNodeGroupUpdatePolicyPtrInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupUpdatePolicyPtrOutput() OceanNpVirtualNodeGroupUpdatePolicyPtrOutput
	ToOceanNpVirtualNodeGroupUpdatePolicyPtrOutputWithContext(context.Context) OceanNpVirtualNodeGroupUpdatePolicyPtrOutput
}

type oceanNpVirtualNodeGroupUpdatePolicyPtrType OceanNpVirtualNodeGroupUpdatePolicyArgs

func OceanNpVirtualNodeGroupUpdatePolicyPtr(v *OceanNpVirtualNodeGroupUpdatePolicyArgs) OceanNpVirtualNodeGroupUpdatePolicyPtrInput {
	return (*oceanNpVirtualNodeGroupUpdatePolicyPtrType)(v)
}

func (*oceanNpVirtualNodeGroupUpdatePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpVirtualNodeGroupUpdatePolicy)(nil)).Elem()
}

func (i *oceanNpVirtualNodeGroupUpdatePolicyPtrType) ToOceanNpVirtualNodeGroupUpdatePolicyPtrOutput() OceanNpVirtualNodeGroupUpdatePolicyPtrOutput {
	return i.ToOceanNpVirtualNodeGroupUpdatePolicyPtrOutputWithContext(context.Background())
}

func (i *oceanNpVirtualNodeGroupUpdatePolicyPtrType) ToOceanNpVirtualNodeGroupUpdatePolicyPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupUpdatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupUpdatePolicyPtrOutput)
}

type OceanNpVirtualNodeGroupUpdatePolicyOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupUpdatePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupUpdatePolicy)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupUpdatePolicyOutput) ToOceanNpVirtualNodeGroupUpdatePolicyOutput() OceanNpVirtualNodeGroupUpdatePolicyOutput {
	return o
}

func (o OceanNpVirtualNodeGroupUpdatePolicyOutput) ToOceanNpVirtualNodeGroupUpdatePolicyOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupUpdatePolicyOutput {
	return o
}

func (o OceanNpVirtualNodeGroupUpdatePolicyOutput) ToOceanNpVirtualNodeGroupUpdatePolicyPtrOutput() OceanNpVirtualNodeGroupUpdatePolicyPtrOutput {
	return o.ToOceanNpVirtualNodeGroupUpdatePolicyPtrOutputWithContext(context.Background())
}

func (o OceanNpVirtualNodeGroupUpdatePolicyOutput) ToOceanNpVirtualNodeGroupUpdatePolicyPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupUpdatePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpVirtualNodeGroupUpdatePolicy) *OceanNpVirtualNodeGroupUpdatePolicy {
		return &v
	}).(OceanNpVirtualNodeGroupUpdatePolicyPtrOutput)
}

// Spot will perform a cluster Roll in accordance with a relevant modification of the cluster’s settings. When set to true , only specific changes in the cluster’s configuration will trigger a cluster roll (such as availability_zones, max_pods_per_node, enable_node_public_ip, os_disk_size_gb, os_disk_type, os_sku, kubernetes_version, vnet_subnet_ids, pod_subnet_ids, labels, taints and tags).
func (o OceanNpVirtualNodeGroupUpdatePolicyOutput) ConditionedRoll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupUpdatePolicy) *bool { return v.ConditionedRoll }).(pulumi.BoolPtrOutput)
}

// While used, you can control whether the group should perform a deployment after an update to the configuration.
func (o OceanNpVirtualNodeGroupUpdatePolicyOutput) RollConfig() OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupUpdatePolicy) *OceanNpVirtualNodeGroupUpdatePolicyRollConfig {
		return v.RollConfig
	}).(OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput)
}

// If set to true along with the vng update, roll will be triggered.
func (o OceanNpVirtualNodeGroupUpdatePolicyOutput) ShouldRoll() pulumi.BoolOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupUpdatePolicy) bool { return v.ShouldRoll }).(pulumi.BoolOutput)
}

type OceanNpVirtualNodeGroupUpdatePolicyPtrOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupUpdatePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpVirtualNodeGroupUpdatePolicy)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupUpdatePolicyPtrOutput) ToOceanNpVirtualNodeGroupUpdatePolicyPtrOutput() OceanNpVirtualNodeGroupUpdatePolicyPtrOutput {
	return o
}

func (o OceanNpVirtualNodeGroupUpdatePolicyPtrOutput) ToOceanNpVirtualNodeGroupUpdatePolicyPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupUpdatePolicyPtrOutput {
	return o
}

func (o OceanNpVirtualNodeGroupUpdatePolicyPtrOutput) Elem() OceanNpVirtualNodeGroupUpdatePolicyOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupUpdatePolicy) OceanNpVirtualNodeGroupUpdatePolicy {
		if v != nil {
			return *v
		}
		var ret OceanNpVirtualNodeGroupUpdatePolicy
		return ret
	}).(OceanNpVirtualNodeGroupUpdatePolicyOutput)
}

// Spot will perform a cluster Roll in accordance with a relevant modification of the cluster’s settings. When set to true , only specific changes in the cluster’s configuration will trigger a cluster roll (such as availability_zones, max_pods_per_node, enable_node_public_ip, os_disk_size_gb, os_disk_type, os_sku, kubernetes_version, vnet_subnet_ids, pod_subnet_ids, labels, taints and tags).
func (o OceanNpVirtualNodeGroupUpdatePolicyPtrOutput) ConditionedRoll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupUpdatePolicy) *bool {
		if v == nil {
			return nil
		}
		return v.ConditionedRoll
	}).(pulumi.BoolPtrOutput)
}

// While used, you can control whether the group should perform a deployment after an update to the configuration.
func (o OceanNpVirtualNodeGroupUpdatePolicyPtrOutput) RollConfig() OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupUpdatePolicy) *OceanNpVirtualNodeGroupUpdatePolicyRollConfig {
		if v == nil {
			return nil
		}
		return v.RollConfig
	}).(OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput)
}

// If set to true along with the vng update, roll will be triggered.
func (o OceanNpVirtualNodeGroupUpdatePolicyPtrOutput) ShouldRoll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupUpdatePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.ShouldRoll
	}).(pulumi.BoolPtrOutput)
}

type OceanNpVirtualNodeGroupUpdatePolicyRollConfig struct {
	// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
	BatchMinHealthyPercentage *int `pulumi:"batchMinHealthyPercentage"`
	// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
	BatchSizePercentage *int `pulumi:"batchSizePercentage"`
	// Add a comment description for the roll. The comment is limited to 256 chars and optional.
	Comment *string `pulumi:"comment"`
	// List of node names to be rolled. Each identifier is a string. nodeNames can be null, and cannot be used together with nodePoolNames and vngIds.
	NodeNames []string `pulumi:"nodeNames"`
	// List of node pools to be rolled. Each node pool name is a string. nodePoolNames can be null, and cannot be used together with nodeNames and vngIds.
	NodePoolNames []string `pulumi:"nodePoolNames"`
	// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
	RespectPdb *bool `pulumi:"respectPdb"`
	// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
	RespectRestrictScaleDown *bool `pulumi:"respectRestrictScaleDown"`
	// List of virtual node group identifiers to be rolled. Each identifier is a string. vngIds can be null, and cannot be used together with nodeNames and nodePoolNames.
	VngIds []string `pulumi:"vngIds"`
}

// OceanNpVirtualNodeGroupUpdatePolicyRollConfigInput is an input type that accepts OceanNpVirtualNodeGroupUpdatePolicyRollConfigArgs and OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupUpdatePolicyRollConfigInput` via:
//
//	OceanNpVirtualNodeGroupUpdatePolicyRollConfigArgs{...}
type OceanNpVirtualNodeGroupUpdatePolicyRollConfigInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput() OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput
	ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigOutputWithContext(context.Context) OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput
}

type OceanNpVirtualNodeGroupUpdatePolicyRollConfigArgs struct {
	// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
	BatchMinHealthyPercentage pulumi.IntPtrInput `pulumi:"batchMinHealthyPercentage"`
	// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
	BatchSizePercentage pulumi.IntPtrInput `pulumi:"batchSizePercentage"`
	// Add a comment description for the roll. The comment is limited to 256 chars and optional.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// List of node names to be rolled. Each identifier is a string. nodeNames can be null, and cannot be used together with nodePoolNames and vngIds.
	NodeNames pulumi.StringArrayInput `pulumi:"nodeNames"`
	// List of node pools to be rolled. Each node pool name is a string. nodePoolNames can be null, and cannot be used together with nodeNames and vngIds.
	NodePoolNames pulumi.StringArrayInput `pulumi:"nodePoolNames"`
	// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
	RespectPdb pulumi.BoolPtrInput `pulumi:"respectPdb"`
	// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
	RespectRestrictScaleDown pulumi.BoolPtrInput `pulumi:"respectRestrictScaleDown"`
	// List of virtual node group identifiers to be rolled. Each identifier is a string. vngIds can be null, and cannot be used together with nodeNames and nodePoolNames.
	VngIds pulumi.StringArrayInput `pulumi:"vngIds"`
}

func (OceanNpVirtualNodeGroupUpdatePolicyRollConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupUpdatePolicyRollConfig)(nil)).Elem()
}

func (i OceanNpVirtualNodeGroupUpdatePolicyRollConfigArgs) ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput() OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput {
	return i.ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupUpdatePolicyRollConfigArgs) ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput)
}

func (i OceanNpVirtualNodeGroupUpdatePolicyRollConfigArgs) ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput() OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput {
	return i.ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutputWithContext(context.Background())
}

func (i OceanNpVirtualNodeGroupUpdatePolicyRollConfigArgs) ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput).ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutputWithContext(ctx)
}

// OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrInput is an input type that accepts OceanNpVirtualNodeGroupUpdatePolicyRollConfigArgs, OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtr and OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput values.
// You can construct a concrete instance of `OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrInput` via:
//
//	        OceanNpVirtualNodeGroupUpdatePolicyRollConfigArgs{...}
//
//	or:
//
//	        nil
type OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrInput interface {
	pulumi.Input

	ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput() OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput
	ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutputWithContext(context.Context) OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput
}

type oceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrType OceanNpVirtualNodeGroupUpdatePolicyRollConfigArgs

func OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtr(v *OceanNpVirtualNodeGroupUpdatePolicyRollConfigArgs) OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrInput {
	return (*oceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrType)(v)
}

func (*oceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpVirtualNodeGroupUpdatePolicyRollConfig)(nil)).Elem()
}

func (i *oceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrType) ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput() OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput {
	return i.ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutputWithContext(context.Background())
}

func (i *oceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrType) ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput)
}

type OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVirtualNodeGroupUpdatePolicyRollConfig)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput) ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput() OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput {
	return o
}

func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput) ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput {
	return o
}

func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput) ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput() OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput {
	return o.ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutputWithContext(context.Background())
}

func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput) ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpVirtualNodeGroupUpdatePolicyRollConfig) *OceanNpVirtualNodeGroupUpdatePolicyRollConfig {
		return &v
	}).(OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput)
}

// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput) BatchMinHealthyPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupUpdatePolicyRollConfig) *int { return v.BatchMinHealthyPercentage }).(pulumi.IntPtrOutput)
}

// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput) BatchSizePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupUpdatePolicyRollConfig) *int { return v.BatchSizePercentage }).(pulumi.IntPtrOutput)
}

// Add a comment description for the roll. The comment is limited to 256 chars and optional.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupUpdatePolicyRollConfig) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// List of node names to be rolled. Each identifier is a string. nodeNames can be null, and cannot be used together with nodePoolNames and vngIds.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput) NodeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupUpdatePolicyRollConfig) []string { return v.NodeNames }).(pulumi.StringArrayOutput)
}

// List of node pools to be rolled. Each node pool name is a string. nodePoolNames can be null, and cannot be used together with nodeNames and vngIds.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput) NodePoolNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupUpdatePolicyRollConfig) []string { return v.NodePoolNames }).(pulumi.StringArrayOutput)
}

// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput) RespectPdb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupUpdatePolicyRollConfig) *bool { return v.RespectPdb }).(pulumi.BoolPtrOutput)
}

// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput) RespectRestrictScaleDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupUpdatePolicyRollConfig) *bool { return v.RespectRestrictScaleDown }).(pulumi.BoolPtrOutput)
}

// List of virtual node group identifiers to be rolled. Each identifier is a string. vngIds can be null, and cannot be used together with nodeNames and nodePoolNames.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput) VngIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpVirtualNodeGroupUpdatePolicyRollConfig) []string { return v.VngIds }).(pulumi.StringArrayOutput)
}

type OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput struct{ *pulumi.OutputState }

func (OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpVirtualNodeGroupUpdatePolicyRollConfig)(nil)).Elem()
}

func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput) ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput() OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput {
	return o
}

func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput) ToOceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutputWithContext(ctx context.Context) OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput {
	return o
}

func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput) Elem() OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupUpdatePolicyRollConfig) OceanNpVirtualNodeGroupUpdatePolicyRollConfig {
		if v != nil {
			return *v
		}
		var ret OceanNpVirtualNodeGroupUpdatePolicyRollConfig
		return ret
	}).(OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput)
}

// Indicates the threshold of minimum healthy nodes in single batch. If the amount of healthy nodes in single batch is under the threshold, the roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput) BatchMinHealthyPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupUpdatePolicyRollConfig) *int {
		if v == nil {
			return nil
		}
		return v.BatchMinHealthyPercentage
	}).(pulumi.IntPtrOutput)
}

// Value as a percent to set the size of a batch in a roll. Valid values are 0-100. In case of null as value, the default value in the backend will be 20%.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput) BatchSizePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupUpdatePolicyRollConfig) *int {
		if v == nil {
			return nil
		}
		return v.BatchSizePercentage
	}).(pulumi.IntPtrOutput)
}

// Add a comment description for the roll. The comment is limited to 256 chars and optional.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupUpdatePolicyRollConfig) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

// List of node names to be rolled. Each identifier is a string. nodeNames can be null, and cannot be used together with nodePoolNames and vngIds.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput) NodeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupUpdatePolicyRollConfig) []string {
		if v == nil {
			return nil
		}
		return v.NodeNames
	}).(pulumi.StringArrayOutput)
}

// List of node pools to be rolled. Each node pool name is a string. nodePoolNames can be null, and cannot be used together with nodeNames and vngIds.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput) NodePoolNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupUpdatePolicyRollConfig) []string {
		if v == nil {
			return nil
		}
		return v.NodePoolNames
	}).(pulumi.StringArrayOutput)
}

// During the roll, if the parameter is set to true we honor PDB during the nodes replacement.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput) RespectPdb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupUpdatePolicyRollConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RespectPdb
	}).(pulumi.BoolPtrOutput)
}

// During the roll, if the parameter is set to true we honor Restrict Scale Down label during the nodes replacement.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput) RespectRestrictScaleDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupUpdatePolicyRollConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RespectRestrictScaleDown
	}).(pulumi.BoolPtrOutput)
}

// List of virtual node group identifiers to be rolled. Each identifier is a string. vngIds can be null, and cannot be used together with nodeNames and nodePoolNames.
func (o OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput) VngIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpVirtualNodeGroupUpdatePolicyRollConfig) []string {
		if v == nil {
			return nil
		}
		return v.VngIds
	}).(pulumi.StringArrayOutput)
}

type OceanNpVngTemplateScheduling struct {
	VngTemplateShutdownHours *OceanNpVngTemplateSchedulingVngTemplateShutdownHours `pulumi:"vngTemplateShutdownHours"`
}

// OceanNpVngTemplateSchedulingInput is an input type that accepts OceanNpVngTemplateSchedulingArgs and OceanNpVngTemplateSchedulingOutput values.
// You can construct a concrete instance of `OceanNpVngTemplateSchedulingInput` via:
//
//	OceanNpVngTemplateSchedulingArgs{...}
type OceanNpVngTemplateSchedulingInput interface {
	pulumi.Input

	ToOceanNpVngTemplateSchedulingOutput() OceanNpVngTemplateSchedulingOutput
	ToOceanNpVngTemplateSchedulingOutputWithContext(context.Context) OceanNpVngTemplateSchedulingOutput
}

type OceanNpVngTemplateSchedulingArgs struct {
	VngTemplateShutdownHours OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrInput `pulumi:"vngTemplateShutdownHours"`
}

func (OceanNpVngTemplateSchedulingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVngTemplateScheduling)(nil)).Elem()
}

func (i OceanNpVngTemplateSchedulingArgs) ToOceanNpVngTemplateSchedulingOutput() OceanNpVngTemplateSchedulingOutput {
	return i.ToOceanNpVngTemplateSchedulingOutputWithContext(context.Background())
}

func (i OceanNpVngTemplateSchedulingArgs) ToOceanNpVngTemplateSchedulingOutputWithContext(ctx context.Context) OceanNpVngTemplateSchedulingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVngTemplateSchedulingOutput)
}

func (i OceanNpVngTemplateSchedulingArgs) ToOceanNpVngTemplateSchedulingPtrOutput() OceanNpVngTemplateSchedulingPtrOutput {
	return i.ToOceanNpVngTemplateSchedulingPtrOutputWithContext(context.Background())
}

func (i OceanNpVngTemplateSchedulingArgs) ToOceanNpVngTemplateSchedulingPtrOutputWithContext(ctx context.Context) OceanNpVngTemplateSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVngTemplateSchedulingOutput).ToOceanNpVngTemplateSchedulingPtrOutputWithContext(ctx)
}

// OceanNpVngTemplateSchedulingPtrInput is an input type that accepts OceanNpVngTemplateSchedulingArgs, OceanNpVngTemplateSchedulingPtr and OceanNpVngTemplateSchedulingPtrOutput values.
// You can construct a concrete instance of `OceanNpVngTemplateSchedulingPtrInput` via:
//
//	        OceanNpVngTemplateSchedulingArgs{...}
//
//	or:
//
//	        nil
type OceanNpVngTemplateSchedulingPtrInput interface {
	pulumi.Input

	ToOceanNpVngTemplateSchedulingPtrOutput() OceanNpVngTemplateSchedulingPtrOutput
	ToOceanNpVngTemplateSchedulingPtrOutputWithContext(context.Context) OceanNpVngTemplateSchedulingPtrOutput
}

type oceanNpVngTemplateSchedulingPtrType OceanNpVngTemplateSchedulingArgs

func OceanNpVngTemplateSchedulingPtr(v *OceanNpVngTemplateSchedulingArgs) OceanNpVngTemplateSchedulingPtrInput {
	return (*oceanNpVngTemplateSchedulingPtrType)(v)
}

func (*oceanNpVngTemplateSchedulingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpVngTemplateScheduling)(nil)).Elem()
}

func (i *oceanNpVngTemplateSchedulingPtrType) ToOceanNpVngTemplateSchedulingPtrOutput() OceanNpVngTemplateSchedulingPtrOutput {
	return i.ToOceanNpVngTemplateSchedulingPtrOutputWithContext(context.Background())
}

func (i *oceanNpVngTemplateSchedulingPtrType) ToOceanNpVngTemplateSchedulingPtrOutputWithContext(ctx context.Context) OceanNpVngTemplateSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVngTemplateSchedulingPtrOutput)
}

type OceanNpVngTemplateSchedulingOutput struct{ *pulumi.OutputState }

func (OceanNpVngTemplateSchedulingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVngTemplateScheduling)(nil)).Elem()
}

func (o OceanNpVngTemplateSchedulingOutput) ToOceanNpVngTemplateSchedulingOutput() OceanNpVngTemplateSchedulingOutput {
	return o
}

func (o OceanNpVngTemplateSchedulingOutput) ToOceanNpVngTemplateSchedulingOutputWithContext(ctx context.Context) OceanNpVngTemplateSchedulingOutput {
	return o
}

func (o OceanNpVngTemplateSchedulingOutput) ToOceanNpVngTemplateSchedulingPtrOutput() OceanNpVngTemplateSchedulingPtrOutput {
	return o.ToOceanNpVngTemplateSchedulingPtrOutputWithContext(context.Background())
}

func (o OceanNpVngTemplateSchedulingOutput) ToOceanNpVngTemplateSchedulingPtrOutputWithContext(ctx context.Context) OceanNpVngTemplateSchedulingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpVngTemplateScheduling) *OceanNpVngTemplateScheduling {
		return &v
	}).(OceanNpVngTemplateSchedulingPtrOutput)
}

func (o OceanNpVngTemplateSchedulingOutput) VngTemplateShutdownHours() OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput {
	return o.ApplyT(func(v OceanNpVngTemplateScheduling) *OceanNpVngTemplateSchedulingVngTemplateShutdownHours {
		return v.VngTemplateShutdownHours
	}).(OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput)
}

type OceanNpVngTemplateSchedulingPtrOutput struct{ *pulumi.OutputState }

func (OceanNpVngTemplateSchedulingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpVngTemplateScheduling)(nil)).Elem()
}

func (o OceanNpVngTemplateSchedulingPtrOutput) ToOceanNpVngTemplateSchedulingPtrOutput() OceanNpVngTemplateSchedulingPtrOutput {
	return o
}

func (o OceanNpVngTemplateSchedulingPtrOutput) ToOceanNpVngTemplateSchedulingPtrOutputWithContext(ctx context.Context) OceanNpVngTemplateSchedulingPtrOutput {
	return o
}

func (o OceanNpVngTemplateSchedulingPtrOutput) Elem() OceanNpVngTemplateSchedulingOutput {
	return o.ApplyT(func(v *OceanNpVngTemplateScheduling) OceanNpVngTemplateScheduling {
		if v != nil {
			return *v
		}
		var ret OceanNpVngTemplateScheduling
		return ret
	}).(OceanNpVngTemplateSchedulingOutput)
}

func (o OceanNpVngTemplateSchedulingPtrOutput) VngTemplateShutdownHours() OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput {
	return o.ApplyT(func(v *OceanNpVngTemplateScheduling) *OceanNpVngTemplateSchedulingVngTemplateShutdownHours {
		if v == nil {
			return nil
		}
		return v.VngTemplateShutdownHours
	}).(OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput)
}

type OceanNpVngTemplateSchedulingVngTemplateShutdownHours struct {
	IsEnabled *bool `pulumi:"isEnabled"`
	// The times that the shutdown hours will apply. Required if `isEnabled` is true.
	TimeWindows []string `pulumi:"timeWindows"`
}

// OceanNpVngTemplateSchedulingVngTemplateShutdownHoursInput is an input type that accepts OceanNpVngTemplateSchedulingVngTemplateShutdownHoursArgs and OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput values.
// You can construct a concrete instance of `OceanNpVngTemplateSchedulingVngTemplateShutdownHoursInput` via:
//
//	OceanNpVngTemplateSchedulingVngTemplateShutdownHoursArgs{...}
type OceanNpVngTemplateSchedulingVngTemplateShutdownHoursInput interface {
	pulumi.Input

	ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput() OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput
	ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutputWithContext(context.Context) OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput
}

type OceanNpVngTemplateSchedulingVngTemplateShutdownHoursArgs struct {
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// The times that the shutdown hours will apply. Required if `isEnabled` is true.
	TimeWindows pulumi.StringArrayInput `pulumi:"timeWindows"`
}

func (OceanNpVngTemplateSchedulingVngTemplateShutdownHoursArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVngTemplateSchedulingVngTemplateShutdownHours)(nil)).Elem()
}

func (i OceanNpVngTemplateSchedulingVngTemplateShutdownHoursArgs) ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput() OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput {
	return i.ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutputWithContext(context.Background())
}

func (i OceanNpVngTemplateSchedulingVngTemplateShutdownHoursArgs) ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutputWithContext(ctx context.Context) OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput)
}

func (i OceanNpVngTemplateSchedulingVngTemplateShutdownHoursArgs) ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput() OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput {
	return i.ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutputWithContext(context.Background())
}

func (i OceanNpVngTemplateSchedulingVngTemplateShutdownHoursArgs) ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutputWithContext(ctx context.Context) OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput).ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutputWithContext(ctx)
}

// OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrInput is an input type that accepts OceanNpVngTemplateSchedulingVngTemplateShutdownHoursArgs, OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtr and OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput values.
// You can construct a concrete instance of `OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrInput` via:
//
//	        OceanNpVngTemplateSchedulingVngTemplateShutdownHoursArgs{...}
//
//	or:
//
//	        nil
type OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrInput interface {
	pulumi.Input

	ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput() OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput
	ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutputWithContext(context.Context) OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput
}

type oceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrType OceanNpVngTemplateSchedulingVngTemplateShutdownHoursArgs

func OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtr(v *OceanNpVngTemplateSchedulingVngTemplateShutdownHoursArgs) OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrInput {
	return (*oceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrType)(v)
}

func (*oceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpVngTemplateSchedulingVngTemplateShutdownHours)(nil)).Elem()
}

func (i *oceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrType) ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput() OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput {
	return i.ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutputWithContext(context.Background())
}

func (i *oceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrType) ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutputWithContext(ctx context.Context) OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput)
}

type OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput struct{ *pulumi.OutputState }

func (OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OceanNpVngTemplateSchedulingVngTemplateShutdownHours)(nil)).Elem()
}

func (o OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput) ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput() OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput {
	return o
}

func (o OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput) ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutputWithContext(ctx context.Context) OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput {
	return o
}

func (o OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput) ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput() OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput {
	return o.ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutputWithContext(context.Background())
}

func (o OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput) ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutputWithContext(ctx context.Context) OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OceanNpVngTemplateSchedulingVngTemplateShutdownHours) *OceanNpVngTemplateSchedulingVngTemplateShutdownHours {
		return &v
	}).(OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput)
}

func (o OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OceanNpVngTemplateSchedulingVngTemplateShutdownHours) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The times that the shutdown hours will apply. Required if `isEnabled` is true.
func (o OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput) TimeWindows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OceanNpVngTemplateSchedulingVngTemplateShutdownHours) []string { return v.TimeWindows }).(pulumi.StringArrayOutput)
}

type OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput struct{ *pulumi.OutputState }

func (OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OceanNpVngTemplateSchedulingVngTemplateShutdownHours)(nil)).Elem()
}

func (o OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput) ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput() OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput {
	return o
}

func (o OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput) ToOceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutputWithContext(ctx context.Context) OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput {
	return o
}

func (o OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput) Elem() OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput {
	return o.ApplyT(func(v *OceanNpVngTemplateSchedulingVngTemplateShutdownHours) OceanNpVngTemplateSchedulingVngTemplateShutdownHours {
		if v != nil {
			return *v
		}
		var ret OceanNpVngTemplateSchedulingVngTemplateShutdownHours
		return ret
	}).(OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput)
}

func (o OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OceanNpVngTemplateSchedulingVngTemplateShutdownHours) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The times that the shutdown hours will apply. Required if `isEnabled` is true.
func (o OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput) TimeWindows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OceanNpVngTemplateSchedulingVngTemplateShutdownHours) []string {
		if v == nil {
			return nil
		}
		return v.TimeWindows
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpAutoscalerInput)(nil)).Elem(), OceanNpAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpAutoscalerPtrInput)(nil)).Elem(), OceanNpAutoscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpAutoscalerAutoscaleDownInput)(nil)).Elem(), OceanNpAutoscalerAutoscaleDownArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpAutoscalerAutoscaleDownPtrInput)(nil)).Elem(), OceanNpAutoscalerAutoscaleDownArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpAutoscalerAutoscaleHeadroomInput)(nil)).Elem(), OceanNpAutoscalerAutoscaleHeadroomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpAutoscalerAutoscaleHeadroomPtrInput)(nil)).Elem(), OceanNpAutoscalerAutoscaleHeadroomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpAutoscalerAutoscaleHeadroomAutomaticInput)(nil)).Elem(), OceanNpAutoscalerAutoscaleHeadroomAutomaticArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrInput)(nil)).Elem(), OceanNpAutoscalerAutoscaleHeadroomAutomaticArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpAutoscalerResourceLimitsInput)(nil)).Elem(), OceanNpAutoscalerResourceLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpAutoscalerResourceLimitsPtrInput)(nil)).Elem(), OceanNpAutoscalerResourceLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpFiltersInput)(nil)).Elem(), OceanNpFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpFiltersPtrInput)(nil)).Elem(), OceanNpFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpHeadroomInput)(nil)).Elem(), OceanNpHeadroomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpHeadroomArrayInput)(nil)).Elem(), OceanNpHeadroomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpHealthInput)(nil)).Elem(), OceanNpHealthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpHealthPtrInput)(nil)).Elem(), OceanNpHealthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpLinuxOsConfigInput)(nil)).Elem(), OceanNpLinuxOsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpLinuxOsConfigArrayInput)(nil)).Elem(), OceanNpLinuxOsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpLinuxOsConfigSysctlInput)(nil)).Elem(), OceanNpLinuxOsConfigSysctlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpLinuxOsConfigSysctlArrayInput)(nil)).Elem(), OceanNpLinuxOsConfigSysctlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpLoggingInput)(nil)).Elem(), OceanNpLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpLoggingPtrInput)(nil)).Elem(), OceanNpLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpLoggingExportInput)(nil)).Elem(), OceanNpLoggingExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpLoggingExportPtrInput)(nil)).Elem(), OceanNpLoggingExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpLoggingExportAzureBlobInput)(nil)).Elem(), OceanNpLoggingExportAzureBlobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpLoggingExportAzureBlobArrayInput)(nil)).Elem(), OceanNpLoggingExportAzureBlobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingInput)(nil)).Elem(), OceanNpSchedulingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingPtrInput)(nil)).Elem(), OceanNpSchedulingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingShutdownHoursInput)(nil)).Elem(), OceanNpSchedulingShutdownHoursArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingShutdownHoursPtrInput)(nil)).Elem(), OceanNpSchedulingShutdownHoursArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingSuspensionHoursInput)(nil)).Elem(), OceanNpSchedulingSuspensionHoursArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingSuspensionHoursPtrInput)(nil)).Elem(), OceanNpSchedulingSuspensionHoursArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingTaskInput)(nil)).Elem(), OceanNpSchedulingTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingTaskArrayInput)(nil)).Elem(), OceanNpSchedulingTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingTaskParametersInput)(nil)).Elem(), OceanNpSchedulingTaskParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingTaskParametersPtrInput)(nil)).Elem(), OceanNpSchedulingTaskParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingTaskParametersParametersClusterRollInput)(nil)).Elem(), OceanNpSchedulingTaskParametersParametersClusterRollArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingTaskParametersParametersClusterRollPtrInput)(nil)).Elem(), OceanNpSchedulingTaskParametersParametersClusterRollArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingTaskParametersParametersUpgradeConfigInput)(nil)).Elem(), OceanNpSchedulingTaskParametersParametersUpgradeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrInput)(nil)).Elem(), OceanNpSchedulingTaskParametersParametersUpgradeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersInput)(nil)).Elem(), OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrInput)(nil)).Elem(), OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpTaintInput)(nil)).Elem(), OceanNpTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpTaintArrayInput)(nil)).Elem(), OceanNpTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpUpdatePolicyInput)(nil)).Elem(), OceanNpUpdatePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpUpdatePolicyPtrInput)(nil)).Elem(), OceanNpUpdatePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpUpdatePolicyRollConfigInput)(nil)).Elem(), OceanNpUpdatePolicyRollConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpUpdatePolicyRollConfigPtrInput)(nil)).Elem(), OceanNpUpdatePolicyRollConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupFiltersInput)(nil)).Elem(), OceanNpVirtualNodeGroupFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupFiltersPtrInput)(nil)).Elem(), OceanNpVirtualNodeGroupFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupHeadroomInput)(nil)).Elem(), OceanNpVirtualNodeGroupHeadroomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupHeadroomArrayInput)(nil)).Elem(), OceanNpVirtualNodeGroupHeadroomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupLinuxOsConfigInput)(nil)).Elem(), OceanNpVirtualNodeGroupLinuxOsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupLinuxOsConfigArrayInput)(nil)).Elem(), OceanNpVirtualNodeGroupLinuxOsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupLinuxOsConfigSysctlInput)(nil)).Elem(), OceanNpVirtualNodeGroupLinuxOsConfigSysctlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayInput)(nil)).Elem(), OceanNpVirtualNodeGroupLinuxOsConfigSysctlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupSchedulingInput)(nil)).Elem(), OceanNpVirtualNodeGroupSchedulingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupSchedulingPtrInput)(nil)).Elem(), OceanNpVirtualNodeGroupSchedulingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupSchedulingShutdownHoursInput)(nil)).Elem(), OceanNpVirtualNodeGroupSchedulingShutdownHoursArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrInput)(nil)).Elem(), OceanNpVirtualNodeGroupSchedulingShutdownHoursArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupTaintInput)(nil)).Elem(), OceanNpVirtualNodeGroupTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupTaintArrayInput)(nil)).Elem(), OceanNpVirtualNodeGroupTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupUpdatePolicyInput)(nil)).Elem(), OceanNpVirtualNodeGroupUpdatePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupUpdatePolicyPtrInput)(nil)).Elem(), OceanNpVirtualNodeGroupUpdatePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupUpdatePolicyRollConfigInput)(nil)).Elem(), OceanNpVirtualNodeGroupUpdatePolicyRollConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrInput)(nil)).Elem(), OceanNpVirtualNodeGroupUpdatePolicyRollConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVngTemplateSchedulingInput)(nil)).Elem(), OceanNpVngTemplateSchedulingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVngTemplateSchedulingPtrInput)(nil)).Elem(), OceanNpVngTemplateSchedulingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVngTemplateSchedulingVngTemplateShutdownHoursInput)(nil)).Elem(), OceanNpVngTemplateSchedulingVngTemplateShutdownHoursArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrInput)(nil)).Elem(), OceanNpVngTemplateSchedulingVngTemplateShutdownHoursArgs{})
	pulumi.RegisterOutputType(OceanNpAutoscalerOutput{})
	pulumi.RegisterOutputType(OceanNpAutoscalerPtrOutput{})
	pulumi.RegisterOutputType(OceanNpAutoscalerAutoscaleDownOutput{})
	pulumi.RegisterOutputType(OceanNpAutoscalerAutoscaleDownPtrOutput{})
	pulumi.RegisterOutputType(OceanNpAutoscalerAutoscaleHeadroomOutput{})
	pulumi.RegisterOutputType(OceanNpAutoscalerAutoscaleHeadroomPtrOutput{})
	pulumi.RegisterOutputType(OceanNpAutoscalerAutoscaleHeadroomAutomaticOutput{})
	pulumi.RegisterOutputType(OceanNpAutoscalerAutoscaleHeadroomAutomaticPtrOutput{})
	pulumi.RegisterOutputType(OceanNpAutoscalerResourceLimitsOutput{})
	pulumi.RegisterOutputType(OceanNpAutoscalerResourceLimitsPtrOutput{})
	pulumi.RegisterOutputType(OceanNpFiltersOutput{})
	pulumi.RegisterOutputType(OceanNpFiltersPtrOutput{})
	pulumi.RegisterOutputType(OceanNpHeadroomOutput{})
	pulumi.RegisterOutputType(OceanNpHeadroomArrayOutput{})
	pulumi.RegisterOutputType(OceanNpHealthOutput{})
	pulumi.RegisterOutputType(OceanNpHealthPtrOutput{})
	pulumi.RegisterOutputType(OceanNpLinuxOsConfigOutput{})
	pulumi.RegisterOutputType(OceanNpLinuxOsConfigArrayOutput{})
	pulumi.RegisterOutputType(OceanNpLinuxOsConfigSysctlOutput{})
	pulumi.RegisterOutputType(OceanNpLinuxOsConfigSysctlArrayOutput{})
	pulumi.RegisterOutputType(OceanNpLoggingOutput{})
	pulumi.RegisterOutputType(OceanNpLoggingPtrOutput{})
	pulumi.RegisterOutputType(OceanNpLoggingExportOutput{})
	pulumi.RegisterOutputType(OceanNpLoggingExportPtrOutput{})
	pulumi.RegisterOutputType(OceanNpLoggingExportAzureBlobOutput{})
	pulumi.RegisterOutputType(OceanNpLoggingExportAzureBlobArrayOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingPtrOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingShutdownHoursOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingShutdownHoursPtrOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingSuspensionHoursOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingSuspensionHoursPtrOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingTaskOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingTaskArrayOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingTaskParametersOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingTaskParametersPtrOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingTaskParametersParametersClusterRollOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingTaskParametersParametersClusterRollPtrOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingTaskParametersParametersUpgradeConfigOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingTaskParametersParametersUpgradeConfigPtrOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersOutput{})
	pulumi.RegisterOutputType(OceanNpSchedulingTaskParametersParametersUpgradeConfigRollParametersPtrOutput{})
	pulumi.RegisterOutputType(OceanNpTaintOutput{})
	pulumi.RegisterOutputType(OceanNpTaintArrayOutput{})
	pulumi.RegisterOutputType(OceanNpUpdatePolicyOutput{})
	pulumi.RegisterOutputType(OceanNpUpdatePolicyPtrOutput{})
	pulumi.RegisterOutputType(OceanNpUpdatePolicyRollConfigOutput{})
	pulumi.RegisterOutputType(OceanNpUpdatePolicyRollConfigPtrOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupFiltersOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupFiltersPtrOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupHeadroomOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupHeadroomArrayOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupLinuxOsConfigOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupLinuxOsConfigArrayOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupLinuxOsConfigSysctlOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupLinuxOsConfigSysctlArrayOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupSchedulingOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupSchedulingPtrOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupSchedulingShutdownHoursOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupSchedulingShutdownHoursPtrOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupTaintOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupTaintArrayOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupUpdatePolicyOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupUpdatePolicyPtrOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupUpdatePolicyRollConfigOutput{})
	pulumi.RegisterOutputType(OceanNpVirtualNodeGroupUpdatePolicyRollConfigPtrOutput{})
	pulumi.RegisterOutputType(OceanNpVngTemplateSchedulingOutput{})
	pulumi.RegisterOutputType(OceanNpVngTemplateSchedulingPtrOutput{})
	pulumi.RegisterOutputType(OceanNpVngTemplateSchedulingVngTemplateShutdownHoursOutput{})
	pulumi.RegisterOutputType(OceanNpVngTemplateSchedulingVngTemplateShutdownHoursPtrOutput{})
}

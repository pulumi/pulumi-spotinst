// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package multai

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Listener struct {
	pulumi.CustomResourceState

	BalancerId pulumi.StringOutput        `pulumi:"balancerId"`
	Port       pulumi.IntOutput           `pulumi:"port"`
	Protocol   pulumi.StringOutput        `pulumi:"protocol"`
	Tags       ListenerTagArrayOutput     `pulumi:"tags"`
	TlsConfig  ListenerTlsConfigPtrOutput `pulumi:"tlsConfig"`
}

// NewListener registers a new resource with the given unique name, arguments, and options.
func NewListener(ctx *pulumi.Context,
	name string, args *ListenerArgs, opts ...pulumi.ResourceOption) (*Listener, error) {
	if args == nil || args.BalancerId == nil {
		return nil, errors.New("missing required argument 'BalancerId'")
	}
	if args == nil || args.Port == nil {
		return nil, errors.New("missing required argument 'Port'")
	}
	if args == nil || args.Protocol == nil {
		return nil, errors.New("missing required argument 'Protocol'")
	}
	if args == nil {
		args = &ListenerArgs{}
	}
	var resource Listener
	err := ctx.RegisterResource("spotinst:multai/listener:Listener", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetListener gets an existing Listener resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetListener(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ListenerState, opts ...pulumi.ResourceOption) (*Listener, error) {
	var resource Listener
	err := ctx.ReadResource("spotinst:multai/listener:Listener", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Listener resources.
type listenerState struct {
	BalancerId *string            `pulumi:"balancerId"`
	Port       *int               `pulumi:"port"`
	Protocol   *string            `pulumi:"protocol"`
	Tags       []ListenerTag      `pulumi:"tags"`
	TlsConfig  *ListenerTlsConfig `pulumi:"tlsConfig"`
}

type ListenerState struct {
	BalancerId pulumi.StringPtrInput
	Port       pulumi.IntPtrInput
	Protocol   pulumi.StringPtrInput
	Tags       ListenerTagArrayInput
	TlsConfig  ListenerTlsConfigPtrInput
}

func (ListenerState) ElementType() reflect.Type {
	return reflect.TypeOf((*listenerState)(nil)).Elem()
}

type listenerArgs struct {
	BalancerId string             `pulumi:"balancerId"`
	Port       int                `pulumi:"port"`
	Protocol   string             `pulumi:"protocol"`
	Tags       []ListenerTag      `pulumi:"tags"`
	TlsConfig  *ListenerTlsConfig `pulumi:"tlsConfig"`
}

// The set of arguments for constructing a Listener resource.
type ListenerArgs struct {
	BalancerId pulumi.StringInput
	Port       pulumi.IntInput
	Protocol   pulumi.StringInput
	Tags       ListenerTagArrayInput
	TlsConfig  ListenerTlsConfigPtrInput
}

func (ListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*listenerArgs)(nil)).Elem()
}

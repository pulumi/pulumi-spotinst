// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package multai

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Spotinst Multai Deployment.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-spotinst/blob/master/website/docs/r/multai_deployment.html.markdown.
type Deployment struct {
	s *pulumi.ResourceState
}

// NewDeployment registers a new resource with the given unique name, arguments, and options.
func NewDeployment(ctx *pulumi.Context,
	name string, args *DeploymentArgs, opts ...pulumi.ResourceOpt) (*Deployment, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["name"] = nil
	} else {
		inputs["name"] = args.Name
	}
	s, err := ctx.RegisterResource("spotinst:multai/deployment:Deployment", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Deployment{s: s}, nil
}

// GetDeployment gets an existing Deployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeployment(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DeploymentState, opts ...pulumi.ResourceOpt) (*Deployment, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["name"] = state.Name
	}
	s, err := ctx.ReadResource("spotinst:multai/deployment:Deployment", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Deployment{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Deployment) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Deployment) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The deployment name.
func (r *Deployment) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// Input properties used for looking up and filtering Deployment resources.
type DeploymentState struct {
	// The deployment name.
	Name interface{}
}

// The set of arguments for constructing a Deployment resource.
type DeploymentArgs struct {
	// The deployment name.
	Name interface{}
}

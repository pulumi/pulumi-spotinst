// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package multai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type BalancerConnectionTimeouts struct {
	Draining *int `pulumi:"draining"`
	Idle     *int `pulumi:"idle"`
}

// BalancerConnectionTimeoutsInput is an input type that accepts BalancerConnectionTimeoutsArgs and BalancerConnectionTimeoutsOutput values.
// You can construct a concrete instance of `BalancerConnectionTimeoutsInput` via:
//
//          BalancerConnectionTimeoutsArgs{...}
type BalancerConnectionTimeoutsInput interface {
	pulumi.Input

	ToBalancerConnectionTimeoutsOutput() BalancerConnectionTimeoutsOutput
	ToBalancerConnectionTimeoutsOutputWithContext(context.Context) BalancerConnectionTimeoutsOutput
}

type BalancerConnectionTimeoutsArgs struct {
	Draining pulumi.IntPtrInput `pulumi:"draining"`
	Idle     pulumi.IntPtrInput `pulumi:"idle"`
}

func (BalancerConnectionTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BalancerConnectionTimeouts)(nil)).Elem()
}

func (i BalancerConnectionTimeoutsArgs) ToBalancerConnectionTimeoutsOutput() BalancerConnectionTimeoutsOutput {
	return i.ToBalancerConnectionTimeoutsOutputWithContext(context.Background())
}

func (i BalancerConnectionTimeoutsArgs) ToBalancerConnectionTimeoutsOutputWithContext(ctx context.Context) BalancerConnectionTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BalancerConnectionTimeoutsOutput)
}

func (i BalancerConnectionTimeoutsArgs) ToBalancerConnectionTimeoutsPtrOutput() BalancerConnectionTimeoutsPtrOutput {
	return i.ToBalancerConnectionTimeoutsPtrOutputWithContext(context.Background())
}

func (i BalancerConnectionTimeoutsArgs) ToBalancerConnectionTimeoutsPtrOutputWithContext(ctx context.Context) BalancerConnectionTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BalancerConnectionTimeoutsOutput).ToBalancerConnectionTimeoutsPtrOutputWithContext(ctx)
}

// BalancerConnectionTimeoutsPtrInput is an input type that accepts BalancerConnectionTimeoutsArgs, BalancerConnectionTimeoutsPtr and BalancerConnectionTimeoutsPtrOutput values.
// You can construct a concrete instance of `BalancerConnectionTimeoutsPtrInput` via:
//
//          BalancerConnectionTimeoutsArgs{...}
//
//  or:
//
//          nil
type BalancerConnectionTimeoutsPtrInput interface {
	pulumi.Input

	ToBalancerConnectionTimeoutsPtrOutput() BalancerConnectionTimeoutsPtrOutput
	ToBalancerConnectionTimeoutsPtrOutputWithContext(context.Context) BalancerConnectionTimeoutsPtrOutput
}

type balancerConnectionTimeoutsPtrType BalancerConnectionTimeoutsArgs

func BalancerConnectionTimeoutsPtr(v *BalancerConnectionTimeoutsArgs) BalancerConnectionTimeoutsPtrInput {
	return (*balancerConnectionTimeoutsPtrType)(v)
}

func (*balancerConnectionTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BalancerConnectionTimeouts)(nil)).Elem()
}

func (i *balancerConnectionTimeoutsPtrType) ToBalancerConnectionTimeoutsPtrOutput() BalancerConnectionTimeoutsPtrOutput {
	return i.ToBalancerConnectionTimeoutsPtrOutputWithContext(context.Background())
}

func (i *balancerConnectionTimeoutsPtrType) ToBalancerConnectionTimeoutsPtrOutputWithContext(ctx context.Context) BalancerConnectionTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BalancerConnectionTimeoutsPtrOutput)
}

type BalancerConnectionTimeoutsOutput struct{ *pulumi.OutputState }

func (BalancerConnectionTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BalancerConnectionTimeouts)(nil)).Elem()
}

func (o BalancerConnectionTimeoutsOutput) ToBalancerConnectionTimeoutsOutput() BalancerConnectionTimeoutsOutput {
	return o
}

func (o BalancerConnectionTimeoutsOutput) ToBalancerConnectionTimeoutsOutputWithContext(ctx context.Context) BalancerConnectionTimeoutsOutput {
	return o
}

func (o BalancerConnectionTimeoutsOutput) ToBalancerConnectionTimeoutsPtrOutput() BalancerConnectionTimeoutsPtrOutput {
	return o.ToBalancerConnectionTimeoutsPtrOutputWithContext(context.Background())
}

func (o BalancerConnectionTimeoutsOutput) ToBalancerConnectionTimeoutsPtrOutputWithContext(ctx context.Context) BalancerConnectionTimeoutsPtrOutput {
	return o.ApplyT(func(v BalancerConnectionTimeouts) *BalancerConnectionTimeouts {
		return &v
	}).(BalancerConnectionTimeoutsPtrOutput)
}
func (o BalancerConnectionTimeoutsOutput) Draining() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BalancerConnectionTimeouts) *int { return v.Draining }).(pulumi.IntPtrOutput)
}

func (o BalancerConnectionTimeoutsOutput) Idle() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BalancerConnectionTimeouts) *int { return v.Idle }).(pulumi.IntPtrOutput)
}

type BalancerConnectionTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (BalancerConnectionTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BalancerConnectionTimeouts)(nil)).Elem()
}

func (o BalancerConnectionTimeoutsPtrOutput) ToBalancerConnectionTimeoutsPtrOutput() BalancerConnectionTimeoutsPtrOutput {
	return o
}

func (o BalancerConnectionTimeoutsPtrOutput) ToBalancerConnectionTimeoutsPtrOutputWithContext(ctx context.Context) BalancerConnectionTimeoutsPtrOutput {
	return o
}

func (o BalancerConnectionTimeoutsPtrOutput) Elem() BalancerConnectionTimeoutsOutput {
	return o.ApplyT(func(v *BalancerConnectionTimeouts) BalancerConnectionTimeouts { return *v }).(BalancerConnectionTimeoutsOutput)
}

func (o BalancerConnectionTimeoutsPtrOutput) Draining() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BalancerConnectionTimeouts) *int {
		if v == nil {
			return nil
		}
		return v.Draining
	}).(pulumi.IntPtrOutput)
}

func (o BalancerConnectionTimeoutsPtrOutput) Idle() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BalancerConnectionTimeouts) *int {
		if v == nil {
			return nil
		}
		return v.Idle
	}).(pulumi.IntPtrOutput)
}

type BalancerTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// BalancerTagInput is an input type that accepts BalancerTagArgs and BalancerTagOutput values.
// You can construct a concrete instance of `BalancerTagInput` via:
//
//          BalancerTagArgs{...}
type BalancerTagInput interface {
	pulumi.Input

	ToBalancerTagOutput() BalancerTagOutput
	ToBalancerTagOutputWithContext(context.Context) BalancerTagOutput
}

type BalancerTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (BalancerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BalancerTag)(nil)).Elem()
}

func (i BalancerTagArgs) ToBalancerTagOutput() BalancerTagOutput {
	return i.ToBalancerTagOutputWithContext(context.Background())
}

func (i BalancerTagArgs) ToBalancerTagOutputWithContext(ctx context.Context) BalancerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BalancerTagOutput)
}

// BalancerTagArrayInput is an input type that accepts BalancerTagArray and BalancerTagArrayOutput values.
// You can construct a concrete instance of `BalancerTagArrayInput` via:
//
//          BalancerTagArray{ BalancerTagArgs{...} }
type BalancerTagArrayInput interface {
	pulumi.Input

	ToBalancerTagArrayOutput() BalancerTagArrayOutput
	ToBalancerTagArrayOutputWithContext(context.Context) BalancerTagArrayOutput
}

type BalancerTagArray []BalancerTagInput

func (BalancerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BalancerTag)(nil)).Elem()
}

func (i BalancerTagArray) ToBalancerTagArrayOutput() BalancerTagArrayOutput {
	return i.ToBalancerTagArrayOutputWithContext(context.Background())
}

func (i BalancerTagArray) ToBalancerTagArrayOutputWithContext(ctx context.Context) BalancerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BalancerTagArrayOutput)
}

type BalancerTagOutput struct{ *pulumi.OutputState }

func (BalancerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BalancerTag)(nil)).Elem()
}

func (o BalancerTagOutput) ToBalancerTagOutput() BalancerTagOutput {
	return o
}

func (o BalancerTagOutput) ToBalancerTagOutputWithContext(ctx context.Context) BalancerTagOutput {
	return o
}

func (o BalancerTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BalancerTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o BalancerTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BalancerTag) string { return v.Value }).(pulumi.StringOutput)
}

type BalancerTagArrayOutput struct{ *pulumi.OutputState }

func (BalancerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BalancerTag)(nil)).Elem()
}

func (o BalancerTagArrayOutput) ToBalancerTagArrayOutput() BalancerTagArrayOutput {
	return o
}

func (o BalancerTagArrayOutput) ToBalancerTagArrayOutputWithContext(ctx context.Context) BalancerTagArrayOutput {
	return o
}

func (o BalancerTagArrayOutput) Index(i pulumi.IntInput) BalancerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BalancerTag {
		return vs[0].([]BalancerTag)[vs[1].(int)]
	}).(BalancerTagOutput)
}

type ListenerTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ListenerTagInput is an input type that accepts ListenerTagArgs and ListenerTagOutput values.
// You can construct a concrete instance of `ListenerTagInput` via:
//
//          ListenerTagArgs{...}
type ListenerTagInput interface {
	pulumi.Input

	ToListenerTagOutput() ListenerTagOutput
	ToListenerTagOutputWithContext(context.Context) ListenerTagOutput
}

type ListenerTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ListenerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerTag)(nil)).Elem()
}

func (i ListenerTagArgs) ToListenerTagOutput() ListenerTagOutput {
	return i.ToListenerTagOutputWithContext(context.Background())
}

func (i ListenerTagArgs) ToListenerTagOutputWithContext(ctx context.Context) ListenerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerTagOutput)
}

// ListenerTagArrayInput is an input type that accepts ListenerTagArray and ListenerTagArrayOutput values.
// You can construct a concrete instance of `ListenerTagArrayInput` via:
//
//          ListenerTagArray{ ListenerTagArgs{...} }
type ListenerTagArrayInput interface {
	pulumi.Input

	ToListenerTagArrayOutput() ListenerTagArrayOutput
	ToListenerTagArrayOutputWithContext(context.Context) ListenerTagArrayOutput
}

type ListenerTagArray []ListenerTagInput

func (ListenerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerTag)(nil)).Elem()
}

func (i ListenerTagArray) ToListenerTagArrayOutput() ListenerTagArrayOutput {
	return i.ToListenerTagArrayOutputWithContext(context.Background())
}

func (i ListenerTagArray) ToListenerTagArrayOutputWithContext(ctx context.Context) ListenerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerTagArrayOutput)
}

type ListenerTagOutput struct{ *pulumi.OutputState }

func (ListenerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerTag)(nil)).Elem()
}

func (o ListenerTagOutput) ToListenerTagOutput() ListenerTagOutput {
	return o
}

func (o ListenerTagOutput) ToListenerTagOutputWithContext(ctx context.Context) ListenerTagOutput {
	return o
}

func (o ListenerTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ListenerTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerTag) string { return v.Value }).(pulumi.StringOutput)
}

type ListenerTagArrayOutput struct{ *pulumi.OutputState }

func (ListenerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerTag)(nil)).Elem()
}

func (o ListenerTagArrayOutput) ToListenerTagArrayOutput() ListenerTagArrayOutput {
	return o
}

func (o ListenerTagArrayOutput) ToListenerTagArrayOutputWithContext(ctx context.Context) ListenerTagArrayOutput {
	return o
}

func (o ListenerTagArrayOutput) Index(i pulumi.IntInput) ListenerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerTag {
		return vs[0].([]ListenerTag)[vs[1].(int)]
	}).(ListenerTagOutput)
}

type ListenerTlsConfig struct {
	CertificateIds           []string `pulumi:"certificateIds"`
	CipherSuites             []string `pulumi:"cipherSuites"`
	MaxVersion               string   `pulumi:"maxVersion"`
	MinVersion               string   `pulumi:"minVersion"`
	PreferServerCipherSuites bool     `pulumi:"preferServerCipherSuites"`
	SessionTicketsDisabled   bool     `pulumi:"sessionTicketsDisabled"`
}

// ListenerTlsConfigInput is an input type that accepts ListenerTlsConfigArgs and ListenerTlsConfigOutput values.
// You can construct a concrete instance of `ListenerTlsConfigInput` via:
//
//          ListenerTlsConfigArgs{...}
type ListenerTlsConfigInput interface {
	pulumi.Input

	ToListenerTlsConfigOutput() ListenerTlsConfigOutput
	ToListenerTlsConfigOutputWithContext(context.Context) ListenerTlsConfigOutput
}

type ListenerTlsConfigArgs struct {
	CertificateIds           pulumi.StringArrayInput `pulumi:"certificateIds"`
	CipherSuites             pulumi.StringArrayInput `pulumi:"cipherSuites"`
	MaxVersion               pulumi.StringInput      `pulumi:"maxVersion"`
	MinVersion               pulumi.StringInput      `pulumi:"minVersion"`
	PreferServerCipherSuites pulumi.BoolInput        `pulumi:"preferServerCipherSuites"`
	SessionTicketsDisabled   pulumi.BoolInput        `pulumi:"sessionTicketsDisabled"`
}

func (ListenerTlsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerTlsConfig)(nil)).Elem()
}

func (i ListenerTlsConfigArgs) ToListenerTlsConfigOutput() ListenerTlsConfigOutput {
	return i.ToListenerTlsConfigOutputWithContext(context.Background())
}

func (i ListenerTlsConfigArgs) ToListenerTlsConfigOutputWithContext(ctx context.Context) ListenerTlsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerTlsConfigOutput)
}

func (i ListenerTlsConfigArgs) ToListenerTlsConfigPtrOutput() ListenerTlsConfigPtrOutput {
	return i.ToListenerTlsConfigPtrOutputWithContext(context.Background())
}

func (i ListenerTlsConfigArgs) ToListenerTlsConfigPtrOutputWithContext(ctx context.Context) ListenerTlsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerTlsConfigOutput).ToListenerTlsConfigPtrOutputWithContext(ctx)
}

// ListenerTlsConfigPtrInput is an input type that accepts ListenerTlsConfigArgs, ListenerTlsConfigPtr and ListenerTlsConfigPtrOutput values.
// You can construct a concrete instance of `ListenerTlsConfigPtrInput` via:
//
//          ListenerTlsConfigArgs{...}
//
//  or:
//
//          nil
type ListenerTlsConfigPtrInput interface {
	pulumi.Input

	ToListenerTlsConfigPtrOutput() ListenerTlsConfigPtrOutput
	ToListenerTlsConfigPtrOutputWithContext(context.Context) ListenerTlsConfigPtrOutput
}

type listenerTlsConfigPtrType ListenerTlsConfigArgs

func ListenerTlsConfigPtr(v *ListenerTlsConfigArgs) ListenerTlsConfigPtrInput {
	return (*listenerTlsConfigPtrType)(v)
}

func (*listenerTlsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerTlsConfig)(nil)).Elem()
}

func (i *listenerTlsConfigPtrType) ToListenerTlsConfigPtrOutput() ListenerTlsConfigPtrOutput {
	return i.ToListenerTlsConfigPtrOutputWithContext(context.Background())
}

func (i *listenerTlsConfigPtrType) ToListenerTlsConfigPtrOutputWithContext(ctx context.Context) ListenerTlsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerTlsConfigPtrOutput)
}

type ListenerTlsConfigOutput struct{ *pulumi.OutputState }

func (ListenerTlsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerTlsConfig)(nil)).Elem()
}

func (o ListenerTlsConfigOutput) ToListenerTlsConfigOutput() ListenerTlsConfigOutput {
	return o
}

func (o ListenerTlsConfigOutput) ToListenerTlsConfigOutputWithContext(ctx context.Context) ListenerTlsConfigOutput {
	return o
}

func (o ListenerTlsConfigOutput) ToListenerTlsConfigPtrOutput() ListenerTlsConfigPtrOutput {
	return o.ToListenerTlsConfigPtrOutputWithContext(context.Background())
}

func (o ListenerTlsConfigOutput) ToListenerTlsConfigPtrOutputWithContext(ctx context.Context) ListenerTlsConfigPtrOutput {
	return o.ApplyT(func(v ListenerTlsConfig) *ListenerTlsConfig {
		return &v
	}).(ListenerTlsConfigPtrOutput)
}
func (o ListenerTlsConfigOutput) CertificateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerTlsConfig) []string { return v.CertificateIds }).(pulumi.StringArrayOutput)
}

func (o ListenerTlsConfigOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerTlsConfig) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

func (o ListenerTlsConfigOutput) MaxVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerTlsConfig) string { return v.MaxVersion }).(pulumi.StringOutput)
}

func (o ListenerTlsConfigOutput) MinVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerTlsConfig) string { return v.MinVersion }).(pulumi.StringOutput)
}

func (o ListenerTlsConfigOutput) PreferServerCipherSuites() pulumi.BoolOutput {
	return o.ApplyT(func(v ListenerTlsConfig) bool { return v.PreferServerCipherSuites }).(pulumi.BoolOutput)
}

func (o ListenerTlsConfigOutput) SessionTicketsDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ListenerTlsConfig) bool { return v.SessionTicketsDisabled }).(pulumi.BoolOutput)
}

type ListenerTlsConfigPtrOutput struct{ *pulumi.OutputState }

func (ListenerTlsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerTlsConfig)(nil)).Elem()
}

func (o ListenerTlsConfigPtrOutput) ToListenerTlsConfigPtrOutput() ListenerTlsConfigPtrOutput {
	return o
}

func (o ListenerTlsConfigPtrOutput) ToListenerTlsConfigPtrOutputWithContext(ctx context.Context) ListenerTlsConfigPtrOutput {
	return o
}

func (o ListenerTlsConfigPtrOutput) Elem() ListenerTlsConfigOutput {
	return o.ApplyT(func(v *ListenerTlsConfig) ListenerTlsConfig { return *v }).(ListenerTlsConfigOutput)
}

func (o ListenerTlsConfigPtrOutput) CertificateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ListenerTlsConfig) []string {
		if v == nil {
			return nil
		}
		return v.CertificateIds
	}).(pulumi.StringArrayOutput)
}

func (o ListenerTlsConfigPtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ListenerTlsConfig) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

func (o ListenerTlsConfigPtrOutput) MaxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerTlsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.MaxVersion
	}).(pulumi.StringPtrOutput)
}

func (o ListenerTlsConfigPtrOutput) MinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerTlsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.MinVersion
	}).(pulumi.StringPtrOutput)
}

func (o ListenerTlsConfigPtrOutput) PreferServerCipherSuites() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListenerTlsConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.PreferServerCipherSuites
	}).(pulumi.BoolPtrOutput)
}

func (o ListenerTlsConfigPtrOutput) SessionTicketsDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ListenerTlsConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.SessionTicketsDisabled
	}).(pulumi.BoolPtrOutput)
}

type RoutingRuleTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// RoutingRuleTagInput is an input type that accepts RoutingRuleTagArgs and RoutingRuleTagOutput values.
// You can construct a concrete instance of `RoutingRuleTagInput` via:
//
//          RoutingRuleTagArgs{...}
type RoutingRuleTagInput interface {
	pulumi.Input

	ToRoutingRuleTagOutput() RoutingRuleTagOutput
	ToRoutingRuleTagOutputWithContext(context.Context) RoutingRuleTagOutput
}

type RoutingRuleTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (RoutingRuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleTag)(nil)).Elem()
}

func (i RoutingRuleTagArgs) ToRoutingRuleTagOutput() RoutingRuleTagOutput {
	return i.ToRoutingRuleTagOutputWithContext(context.Background())
}

func (i RoutingRuleTagArgs) ToRoutingRuleTagOutputWithContext(ctx context.Context) RoutingRuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleTagOutput)
}

// RoutingRuleTagArrayInput is an input type that accepts RoutingRuleTagArray and RoutingRuleTagArrayOutput values.
// You can construct a concrete instance of `RoutingRuleTagArrayInput` via:
//
//          RoutingRuleTagArray{ RoutingRuleTagArgs{...} }
type RoutingRuleTagArrayInput interface {
	pulumi.Input

	ToRoutingRuleTagArrayOutput() RoutingRuleTagArrayOutput
	ToRoutingRuleTagArrayOutputWithContext(context.Context) RoutingRuleTagArrayOutput
}

type RoutingRuleTagArray []RoutingRuleTagInput

func (RoutingRuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRuleTag)(nil)).Elem()
}

func (i RoutingRuleTagArray) ToRoutingRuleTagArrayOutput() RoutingRuleTagArrayOutput {
	return i.ToRoutingRuleTagArrayOutputWithContext(context.Background())
}

func (i RoutingRuleTagArray) ToRoutingRuleTagArrayOutputWithContext(ctx context.Context) RoutingRuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleTagArrayOutput)
}

type RoutingRuleTagOutput struct{ *pulumi.OutputState }

func (RoutingRuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleTag)(nil)).Elem()
}

func (o RoutingRuleTagOutput) ToRoutingRuleTagOutput() RoutingRuleTagOutput {
	return o
}

func (o RoutingRuleTagOutput) ToRoutingRuleTagOutputWithContext(ctx context.Context) RoutingRuleTagOutput {
	return o
}

func (o RoutingRuleTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingRuleTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o RoutingRuleTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingRuleTag) string { return v.Value }).(pulumi.StringOutput)
}

type RoutingRuleTagArrayOutput struct{ *pulumi.OutputState }

func (RoutingRuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRuleTag)(nil)).Elem()
}

func (o RoutingRuleTagArrayOutput) ToRoutingRuleTagArrayOutput() RoutingRuleTagArrayOutput {
	return o
}

func (o RoutingRuleTagArrayOutput) ToRoutingRuleTagArrayOutputWithContext(ctx context.Context) RoutingRuleTagArrayOutput {
	return o
}

func (o RoutingRuleTagArrayOutput) Index(i pulumi.IntInput) RoutingRuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingRuleTag {
		return vs[0].([]RoutingRuleTag)[vs[1].(int)]
	}).(RoutingRuleTagOutput)
}

type TargetSetHealthCheck struct {
	HealthyThreshold   int    `pulumi:"healthyThreshold"`
	Interval           int    `pulumi:"interval"`
	Path               string `pulumi:"path"`
	Port               *int   `pulumi:"port"`
	Protocol           string `pulumi:"protocol"`
	Timeout            int    `pulumi:"timeout"`
	UnhealthyThreshold int    `pulumi:"unhealthyThreshold"`
}

// TargetSetHealthCheckInput is an input type that accepts TargetSetHealthCheckArgs and TargetSetHealthCheckOutput values.
// You can construct a concrete instance of `TargetSetHealthCheckInput` via:
//
//          TargetSetHealthCheckArgs{...}
type TargetSetHealthCheckInput interface {
	pulumi.Input

	ToTargetSetHealthCheckOutput() TargetSetHealthCheckOutput
	ToTargetSetHealthCheckOutputWithContext(context.Context) TargetSetHealthCheckOutput
}

type TargetSetHealthCheckArgs struct {
	HealthyThreshold   pulumi.IntInput    `pulumi:"healthyThreshold"`
	Interval           pulumi.IntInput    `pulumi:"interval"`
	Path               pulumi.StringInput `pulumi:"path"`
	Port               pulumi.IntPtrInput `pulumi:"port"`
	Protocol           pulumi.StringInput `pulumi:"protocol"`
	Timeout            pulumi.IntInput    `pulumi:"timeout"`
	UnhealthyThreshold pulumi.IntInput    `pulumi:"unhealthyThreshold"`
}

func (TargetSetHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetSetHealthCheck)(nil)).Elem()
}

func (i TargetSetHealthCheckArgs) ToTargetSetHealthCheckOutput() TargetSetHealthCheckOutput {
	return i.ToTargetSetHealthCheckOutputWithContext(context.Background())
}

func (i TargetSetHealthCheckArgs) ToTargetSetHealthCheckOutputWithContext(ctx context.Context) TargetSetHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetSetHealthCheckOutput)
}

func (i TargetSetHealthCheckArgs) ToTargetSetHealthCheckPtrOutput() TargetSetHealthCheckPtrOutput {
	return i.ToTargetSetHealthCheckPtrOutputWithContext(context.Background())
}

func (i TargetSetHealthCheckArgs) ToTargetSetHealthCheckPtrOutputWithContext(ctx context.Context) TargetSetHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetSetHealthCheckOutput).ToTargetSetHealthCheckPtrOutputWithContext(ctx)
}

// TargetSetHealthCheckPtrInput is an input type that accepts TargetSetHealthCheckArgs, TargetSetHealthCheckPtr and TargetSetHealthCheckPtrOutput values.
// You can construct a concrete instance of `TargetSetHealthCheckPtrInput` via:
//
//          TargetSetHealthCheckArgs{...}
//
//  or:
//
//          nil
type TargetSetHealthCheckPtrInput interface {
	pulumi.Input

	ToTargetSetHealthCheckPtrOutput() TargetSetHealthCheckPtrOutput
	ToTargetSetHealthCheckPtrOutputWithContext(context.Context) TargetSetHealthCheckPtrOutput
}

type targetSetHealthCheckPtrType TargetSetHealthCheckArgs

func TargetSetHealthCheckPtr(v *TargetSetHealthCheckArgs) TargetSetHealthCheckPtrInput {
	return (*targetSetHealthCheckPtrType)(v)
}

func (*targetSetHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetSetHealthCheck)(nil)).Elem()
}

func (i *targetSetHealthCheckPtrType) ToTargetSetHealthCheckPtrOutput() TargetSetHealthCheckPtrOutput {
	return i.ToTargetSetHealthCheckPtrOutputWithContext(context.Background())
}

func (i *targetSetHealthCheckPtrType) ToTargetSetHealthCheckPtrOutputWithContext(ctx context.Context) TargetSetHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetSetHealthCheckPtrOutput)
}

type TargetSetHealthCheckOutput struct{ *pulumi.OutputState }

func (TargetSetHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetSetHealthCheck)(nil)).Elem()
}

func (o TargetSetHealthCheckOutput) ToTargetSetHealthCheckOutput() TargetSetHealthCheckOutput {
	return o
}

func (o TargetSetHealthCheckOutput) ToTargetSetHealthCheckOutputWithContext(ctx context.Context) TargetSetHealthCheckOutput {
	return o
}

func (o TargetSetHealthCheckOutput) ToTargetSetHealthCheckPtrOutput() TargetSetHealthCheckPtrOutput {
	return o.ToTargetSetHealthCheckPtrOutputWithContext(context.Background())
}

func (o TargetSetHealthCheckOutput) ToTargetSetHealthCheckPtrOutputWithContext(ctx context.Context) TargetSetHealthCheckPtrOutput {
	return o.ApplyT(func(v TargetSetHealthCheck) *TargetSetHealthCheck {
		return &v
	}).(TargetSetHealthCheckPtrOutput)
}
func (o TargetSetHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v TargetSetHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

func (o TargetSetHealthCheckOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v TargetSetHealthCheck) int { return v.Interval }).(pulumi.IntOutput)
}

func (o TargetSetHealthCheckOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v TargetSetHealthCheck) string { return v.Path }).(pulumi.StringOutput)
}

func (o TargetSetHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetSetHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o TargetSetHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v TargetSetHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o TargetSetHealthCheckOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v TargetSetHealthCheck) int { return v.Timeout }).(pulumi.IntOutput)
}

func (o TargetSetHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v TargetSetHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type TargetSetHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (TargetSetHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetSetHealthCheck)(nil)).Elem()
}

func (o TargetSetHealthCheckPtrOutput) ToTargetSetHealthCheckPtrOutput() TargetSetHealthCheckPtrOutput {
	return o
}

func (o TargetSetHealthCheckPtrOutput) ToTargetSetHealthCheckPtrOutputWithContext(ctx context.Context) TargetSetHealthCheckPtrOutput {
	return o
}

func (o TargetSetHealthCheckPtrOutput) Elem() TargetSetHealthCheckOutput {
	return o.ApplyT(func(v *TargetSetHealthCheck) TargetSetHealthCheck { return *v }).(TargetSetHealthCheckOutput)
}

func (o TargetSetHealthCheckPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetSetHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

func (o TargetSetHealthCheckPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetSetHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.IntPtrOutput)
}

func (o TargetSetHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetSetHealthCheck) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

func (o TargetSetHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetSetHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o TargetSetHealthCheckPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetSetHealthCheck) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o TargetSetHealthCheckPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetSetHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.Timeout
	}).(pulumi.IntPtrOutput)
}

func (o TargetSetHealthCheckPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetSetHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

type TargetSetTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// TargetSetTagInput is an input type that accepts TargetSetTagArgs and TargetSetTagOutput values.
// You can construct a concrete instance of `TargetSetTagInput` via:
//
//          TargetSetTagArgs{...}
type TargetSetTagInput interface {
	pulumi.Input

	ToTargetSetTagOutput() TargetSetTagOutput
	ToTargetSetTagOutputWithContext(context.Context) TargetSetTagOutput
}

type TargetSetTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (TargetSetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetSetTag)(nil)).Elem()
}

func (i TargetSetTagArgs) ToTargetSetTagOutput() TargetSetTagOutput {
	return i.ToTargetSetTagOutputWithContext(context.Background())
}

func (i TargetSetTagArgs) ToTargetSetTagOutputWithContext(ctx context.Context) TargetSetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetSetTagOutput)
}

// TargetSetTagArrayInput is an input type that accepts TargetSetTagArray and TargetSetTagArrayOutput values.
// You can construct a concrete instance of `TargetSetTagArrayInput` via:
//
//          TargetSetTagArray{ TargetSetTagArgs{...} }
type TargetSetTagArrayInput interface {
	pulumi.Input

	ToTargetSetTagArrayOutput() TargetSetTagArrayOutput
	ToTargetSetTagArrayOutputWithContext(context.Context) TargetSetTagArrayOutput
}

type TargetSetTagArray []TargetSetTagInput

func (TargetSetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetSetTag)(nil)).Elem()
}

func (i TargetSetTagArray) ToTargetSetTagArrayOutput() TargetSetTagArrayOutput {
	return i.ToTargetSetTagArrayOutputWithContext(context.Background())
}

func (i TargetSetTagArray) ToTargetSetTagArrayOutputWithContext(ctx context.Context) TargetSetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetSetTagArrayOutput)
}

type TargetSetTagOutput struct{ *pulumi.OutputState }

func (TargetSetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetSetTag)(nil)).Elem()
}

func (o TargetSetTagOutput) ToTargetSetTagOutput() TargetSetTagOutput {
	return o
}

func (o TargetSetTagOutput) ToTargetSetTagOutputWithContext(ctx context.Context) TargetSetTagOutput {
	return o
}

func (o TargetSetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TargetSetTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o TargetSetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TargetSetTag) string { return v.Value }).(pulumi.StringOutput)
}

type TargetSetTagArrayOutput struct{ *pulumi.OutputState }

func (TargetSetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetSetTag)(nil)).Elem()
}

func (o TargetSetTagArrayOutput) ToTargetSetTagArrayOutput() TargetSetTagArrayOutput {
	return o
}

func (o TargetSetTagArrayOutput) ToTargetSetTagArrayOutputWithContext(ctx context.Context) TargetSetTagArrayOutput {
	return o
}

func (o TargetSetTagArrayOutput) Index(i pulumi.IntInput) TargetSetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetSetTag {
		return vs[0].([]TargetSetTag)[vs[1].(int)]
	}).(TargetSetTagOutput)
}

type TargetTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// TargetTagInput is an input type that accepts TargetTagArgs and TargetTagOutput values.
// You can construct a concrete instance of `TargetTagInput` via:
//
//          TargetTagArgs{...}
type TargetTagInput interface {
	pulumi.Input

	ToTargetTagOutput() TargetTagOutput
	ToTargetTagOutputWithContext(context.Context) TargetTagOutput
}

type TargetTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (TargetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTag)(nil)).Elem()
}

func (i TargetTagArgs) ToTargetTagOutput() TargetTagOutput {
	return i.ToTargetTagOutputWithContext(context.Background())
}

func (i TargetTagArgs) ToTargetTagOutputWithContext(ctx context.Context) TargetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTagOutput)
}

// TargetTagArrayInput is an input type that accepts TargetTagArray and TargetTagArrayOutput values.
// You can construct a concrete instance of `TargetTagArrayInput` via:
//
//          TargetTagArray{ TargetTagArgs{...} }
type TargetTagArrayInput interface {
	pulumi.Input

	ToTargetTagArrayOutput() TargetTagArrayOutput
	ToTargetTagArrayOutputWithContext(context.Context) TargetTagArrayOutput
}

type TargetTagArray []TargetTagInput

func (TargetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTag)(nil)).Elem()
}

func (i TargetTagArray) ToTargetTagArrayOutput() TargetTagArrayOutput {
	return i.ToTargetTagArrayOutputWithContext(context.Background())
}

func (i TargetTagArray) ToTargetTagArrayOutputWithContext(ctx context.Context) TargetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTagArrayOutput)
}

type TargetTagOutput struct{ *pulumi.OutputState }

func (TargetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTag)(nil)).Elem()
}

func (o TargetTagOutput) ToTargetTagOutput() TargetTagOutput {
	return o
}

func (o TargetTagOutput) ToTargetTagOutputWithContext(ctx context.Context) TargetTagOutput {
	return o
}

func (o TargetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o TargetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTag) string { return v.Value }).(pulumi.StringOutput)
}

type TargetTagArrayOutput struct{ *pulumi.OutputState }

func (TargetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTag)(nil)).Elem()
}

func (o TargetTagArrayOutput) ToTargetTagArrayOutput() TargetTagArrayOutput {
	return o
}

func (o TargetTagArrayOutput) ToTargetTagArrayOutputWithContext(ctx context.Context) TargetTagArrayOutput {
	return o
}

func (o TargetTagArrayOutput) Index(i pulumi.IntInput) TargetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTag {
		return vs[0].([]TargetTag)[vs[1].(int)]
	}).(TargetTagOutput)
}

func init() {
	pulumi.RegisterOutputType(BalancerConnectionTimeoutsOutput{})
	pulumi.RegisterOutputType(BalancerConnectionTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(BalancerTagOutput{})
	pulumi.RegisterOutputType(BalancerTagArrayOutput{})
	pulumi.RegisterOutputType(ListenerTagOutput{})
	pulumi.RegisterOutputType(ListenerTagArrayOutput{})
	pulumi.RegisterOutputType(ListenerTlsConfigOutput{})
	pulumi.RegisterOutputType(ListenerTlsConfigPtrOutput{})
	pulumi.RegisterOutputType(RoutingRuleTagOutput{})
	pulumi.RegisterOutputType(RoutingRuleTagArrayOutput{})
	pulumi.RegisterOutputType(TargetSetHealthCheckOutput{})
	pulumi.RegisterOutputType(TargetSetHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(TargetSetTagOutput{})
	pulumi.RegisterOutputType(TargetSetTagArrayOutput{})
	pulumi.RegisterOutputType(TargetTagOutput{})
	pulumi.RegisterOutputType(TargetTagArrayOutput{})
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OceanRightSizingRule extends pulumi.CustomResource {
    /**
     * Get an existing OceanRightSizingRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OceanRightSizingRuleState, opts?: pulumi.CustomResourceOptions): OceanRightSizingRule {
        return new OceanRightSizingRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spotinst:index/oceanRightSizingRule:OceanRightSizingRule';

    /**
     * Returns true if the given object is an instance of OceanRightSizingRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OceanRightSizingRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OceanRightSizingRule.__pulumiType;
    }

    public readonly attachWorkloads!: pulumi.Output<outputs.OceanRightSizingRuleAttachWorkload[] | undefined>;
    public readonly detachWorkloads!: pulumi.Output<outputs.OceanRightSizingRuleDetachWorkload[] | undefined>;
    public readonly oceanId!: pulumi.Output<string | undefined>;
    public readonly recommendationApplicationBoundaries!: pulumi.Output<outputs.OceanRightSizingRuleRecommendationApplicationBoundary[] | undefined>;
    public readonly recommendationApplicationIntervals!: pulumi.Output<outputs.OceanRightSizingRuleRecommendationApplicationInterval[]>;
    public readonly recommendationApplicationMinThresholds!: pulumi.Output<outputs.OceanRightSizingRuleRecommendationApplicationMinThreshold[] | undefined>;
    public readonly recommendationApplicationOverheadValues!: pulumi.Output<outputs.OceanRightSizingRuleRecommendationApplicationOverheadValue[] | undefined>;
    public readonly restartPods!: pulumi.Output<boolean | undefined>;
    public readonly ruleName!: pulumi.Output<string>;

    /**
     * Create a OceanRightSizingRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OceanRightSizingRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OceanRightSizingRuleArgs | OceanRightSizingRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OceanRightSizingRuleState | undefined;
            resourceInputs["attachWorkloads"] = state ? state.attachWorkloads : undefined;
            resourceInputs["detachWorkloads"] = state ? state.detachWorkloads : undefined;
            resourceInputs["oceanId"] = state ? state.oceanId : undefined;
            resourceInputs["recommendationApplicationBoundaries"] = state ? state.recommendationApplicationBoundaries : undefined;
            resourceInputs["recommendationApplicationIntervals"] = state ? state.recommendationApplicationIntervals : undefined;
            resourceInputs["recommendationApplicationMinThresholds"] = state ? state.recommendationApplicationMinThresholds : undefined;
            resourceInputs["recommendationApplicationOverheadValues"] = state ? state.recommendationApplicationOverheadValues : undefined;
            resourceInputs["restartPods"] = state ? state.restartPods : undefined;
            resourceInputs["ruleName"] = state ? state.ruleName : undefined;
        } else {
            const args = argsOrState as OceanRightSizingRuleArgs | undefined;
            if ((!args || args.recommendationApplicationIntervals === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recommendationApplicationIntervals'");
            }
            if ((!args || args.ruleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            resourceInputs["attachWorkloads"] = args ? args.attachWorkloads : undefined;
            resourceInputs["detachWorkloads"] = args ? args.detachWorkloads : undefined;
            resourceInputs["oceanId"] = args ? args.oceanId : undefined;
            resourceInputs["recommendationApplicationBoundaries"] = args ? args.recommendationApplicationBoundaries : undefined;
            resourceInputs["recommendationApplicationIntervals"] = args ? args.recommendationApplicationIntervals : undefined;
            resourceInputs["recommendationApplicationMinThresholds"] = args ? args.recommendationApplicationMinThresholds : undefined;
            resourceInputs["recommendationApplicationOverheadValues"] = args ? args.recommendationApplicationOverheadValues : undefined;
            resourceInputs["restartPods"] = args ? args.restartPods : undefined;
            resourceInputs["ruleName"] = args ? args.ruleName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OceanRightSizingRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OceanRightSizingRule resources.
 */
export interface OceanRightSizingRuleState {
    attachWorkloads?: pulumi.Input<pulumi.Input<inputs.OceanRightSizingRuleAttachWorkload>[]>;
    detachWorkloads?: pulumi.Input<pulumi.Input<inputs.OceanRightSizingRuleDetachWorkload>[]>;
    oceanId?: pulumi.Input<string>;
    recommendationApplicationBoundaries?: pulumi.Input<pulumi.Input<inputs.OceanRightSizingRuleRecommendationApplicationBoundary>[]>;
    recommendationApplicationIntervals?: pulumi.Input<pulumi.Input<inputs.OceanRightSizingRuleRecommendationApplicationInterval>[]>;
    recommendationApplicationMinThresholds?: pulumi.Input<pulumi.Input<inputs.OceanRightSizingRuleRecommendationApplicationMinThreshold>[]>;
    recommendationApplicationOverheadValues?: pulumi.Input<pulumi.Input<inputs.OceanRightSizingRuleRecommendationApplicationOverheadValue>[]>;
    restartPods?: pulumi.Input<boolean>;
    ruleName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OceanRightSizingRule resource.
 */
export interface OceanRightSizingRuleArgs {
    attachWorkloads?: pulumi.Input<pulumi.Input<inputs.OceanRightSizingRuleAttachWorkload>[]>;
    detachWorkloads?: pulumi.Input<pulumi.Input<inputs.OceanRightSizingRuleDetachWorkload>[]>;
    oceanId?: pulumi.Input<string>;
    recommendationApplicationBoundaries?: pulumi.Input<pulumi.Input<inputs.OceanRightSizingRuleRecommendationApplicationBoundary>[]>;
    recommendationApplicationIntervals: pulumi.Input<pulumi.Input<inputs.OceanRightSizingRuleRecommendationApplicationInterval>[]>;
    recommendationApplicationMinThresholds?: pulumi.Input<pulumi.Input<inputs.OceanRightSizingRuleRecommendationApplicationMinThreshold>[]>;
    recommendationApplicationOverheadValues?: pulumi.Input<pulumi.Input<inputs.OceanRightSizingRuleRecommendationApplicationOverheadValue>[]>;
    restartPods?: pulumi.Input<boolean>;
    ruleName: pulumi.Input<string>;
}

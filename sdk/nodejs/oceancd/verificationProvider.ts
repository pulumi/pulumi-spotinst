// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Spotinst OceanCD Verfification Provider resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spotinst from "@pulumi/spotinst";
 *
 * const example = new spotinst.oceancd.VerificationProvider("example", {
 *     name: "test-verification-provider",
 *     clusterIds: [
 *         "Example-Cluster-Id-1",
 *         "Example-Cluster-Id-2",
 *         "Example-Cluster-Id-3",
 *     ],
 *     datadog: {
 *         address: "1024",
 *         apiKey: "512",
 *         appKey: "0",
 *     },
 *     cloudWatch: {
 *         iamArn: "arn:aws:iam::123456789012:role/GetMetricData",
 *     },
 *     prometheus: {
 *         address: "http://localhost:9090",
 *     },
 *     newRelic: {
 *         personalApiKey: "AUO32RN20oUMD-40283",
 *         accountId: "account-0189718",
 *         region: "eu",
 *         baseUrlRest: "https://rest.api.newrelic.eu",
 *         baseUrlNerdGraph: "https://nerdgraph.api.newrelic.eu",
 *     },
 *     jenkins: {
 *         baseUrl: "http://localhost:9090",
 *         username: "test-user",
 *         apiToken: "AbCDeeFFGG",
 *     },
 * });
 * ```
 */
export class VerificationProvider extends pulumi.CustomResource {
    /**
     * Get an existing VerificationProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VerificationProviderState, opts?: pulumi.CustomResourceOptions): VerificationProvider {
        return new VerificationProvider(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spotinst:oceancd/verificationProvider:VerificationProvider';

    /**
     * Returns true if the given object is an instance of VerificationProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VerificationProvider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VerificationProvider.__pulumiType;
    }

    /**
     * Specify the credentials for CloudWatch verification provider.
     */
    public readonly cloudWatch!: pulumi.Output<outputs.oceancd.VerificationProviderCloudWatch | undefined>;
    /**
     * List of cluster IDs that this Verification Provider will be applied to.
     */
    public readonly clusterIds!: pulumi.Output<string[]>;
    /**
     * Specify the credentials for datadog verification provider.
     */
    public readonly datadog!: pulumi.Output<outputs.oceancd.VerificationProviderDatadog | undefined>;
    /**
     * Specify the credentials for Jenkins verification provider.
     */
    public readonly jenkins!: pulumi.Output<outputs.oceancd.VerificationProviderJenkins | undefined>;
    /**
     * Identifier name for Ocean CD Verification Provider. Must be unique.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specify the credentials for New Relic verification provider.
     */
    public readonly newRelic!: pulumi.Output<outputs.oceancd.VerificationProviderNewRelic | undefined>;
    /**
     * Specify the credentials for prometheus verification provider.
     */
    public readonly prometheus!: pulumi.Output<outputs.oceancd.VerificationProviderPrometheus | undefined>;

    /**
     * Create a VerificationProvider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VerificationProviderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VerificationProviderArgs | VerificationProviderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VerificationProviderState | undefined;
            resourceInputs["cloudWatch"] = state ? state.cloudWatch : undefined;
            resourceInputs["clusterIds"] = state ? state.clusterIds : undefined;
            resourceInputs["datadog"] = state ? state.datadog : undefined;
            resourceInputs["jenkins"] = state ? state.jenkins : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["newRelic"] = state ? state.newRelic : undefined;
            resourceInputs["prometheus"] = state ? state.prometheus : undefined;
        } else {
            const args = argsOrState as VerificationProviderArgs | undefined;
            if ((!args || args.clusterIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterIds'");
            }
            resourceInputs["cloudWatch"] = args ? args.cloudWatch : undefined;
            resourceInputs["clusterIds"] = args ? args.clusterIds : undefined;
            resourceInputs["datadog"] = args ? args.datadog : undefined;
            resourceInputs["jenkins"] = args ? args.jenkins : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["newRelic"] = args ? args.newRelic : undefined;
            resourceInputs["prometheus"] = args ? args.prometheus : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VerificationProvider.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VerificationProvider resources.
 */
export interface VerificationProviderState {
    /**
     * Specify the credentials for CloudWatch verification provider.
     */
    cloudWatch?: pulumi.Input<inputs.oceancd.VerificationProviderCloudWatch>;
    /**
     * List of cluster IDs that this Verification Provider will be applied to.
     */
    clusterIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify the credentials for datadog verification provider.
     */
    datadog?: pulumi.Input<inputs.oceancd.VerificationProviderDatadog>;
    /**
     * Specify the credentials for Jenkins verification provider.
     */
    jenkins?: pulumi.Input<inputs.oceancd.VerificationProviderJenkins>;
    /**
     * Identifier name for Ocean CD Verification Provider. Must be unique.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify the credentials for New Relic verification provider.
     */
    newRelic?: pulumi.Input<inputs.oceancd.VerificationProviderNewRelic>;
    /**
     * Specify the credentials for prometheus verification provider.
     */
    prometheus?: pulumi.Input<inputs.oceancd.VerificationProviderPrometheus>;
}

/**
 * The set of arguments for constructing a VerificationProvider resource.
 */
export interface VerificationProviderArgs {
    /**
     * Specify the credentials for CloudWatch verification provider.
     */
    cloudWatch?: pulumi.Input<inputs.oceancd.VerificationProviderCloudWatch>;
    /**
     * List of cluster IDs that this Verification Provider will be applied to.
     */
    clusterIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify the credentials for datadog verification provider.
     */
    datadog?: pulumi.Input<inputs.oceancd.VerificationProviderDatadog>;
    /**
     * Specify the credentials for Jenkins verification provider.
     */
    jenkins?: pulumi.Input<inputs.oceancd.VerificationProviderJenkins>;
    /**
     * Identifier name for Ocean CD Verification Provider. Must be unique.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify the credentials for New Relic verification provider.
     */
    newRelic?: pulumi.Input<inputs.oceancd.VerificationProviderNewRelic>;
    /**
     * Specify the credentials for prometheus verification provider.
     */
    prometheus?: pulumi.Input<inputs.oceancd.VerificationProviderPrometheus>;
}

// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Spotinst OceanCD Strategy resource.
 */
export class Strategy extends pulumi.CustomResource {
    /**
     * Get an existing Strategy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StrategyState, opts?: pulumi.CustomResourceOptions): Strategy {
        return new Strategy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spotinst:oceancd/strategy:Strategy';

    /**
     * Returns true if the given object is an instance of Strategy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Strategy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Strategy.__pulumiType;
    }

    /**
     * Represents Canary strategy. Cannot be defined when Rolling object is defined.
     */
    declare public readonly canary: pulumi.Output<outputs.oceancd.StrategyCanary | undefined>;
    /**
     * Represents Rolling Update strategy. Cannot be defined when Canary object is defined.
     */
    declare public readonly rolling: pulumi.Output<outputs.oceancd.StrategyRolling | undefined>;
    declare public readonly strategyName: pulumi.Output<string>;

    /**
     * Create a Strategy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StrategyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StrategyArgs | StrategyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StrategyState | undefined;
            resourceInputs["canary"] = state?.canary;
            resourceInputs["rolling"] = state?.rolling;
            resourceInputs["strategyName"] = state?.strategyName;
        } else {
            const args = argsOrState as StrategyArgs | undefined;
            if (args?.strategyName === undefined && !opts.urn) {
                throw new Error("Missing required property 'strategyName'");
            }
            resourceInputs["canary"] = args?.canary;
            resourceInputs["rolling"] = args?.rolling;
            resourceInputs["strategyName"] = args?.strategyName;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Strategy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Strategy resources.
 */
export interface StrategyState {
    /**
     * Represents Canary strategy. Cannot be defined when Rolling object is defined.
     */
    canary?: pulumi.Input<inputs.oceancd.StrategyCanary>;
    /**
     * Represents Rolling Update strategy. Cannot be defined when Canary object is defined.
     */
    rolling?: pulumi.Input<inputs.oceancd.StrategyRolling>;
    strategyName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Strategy resource.
 */
export interface StrategyArgs {
    /**
     * Represents Canary strategy. Cannot be defined when Rolling object is defined.
     */
    canary?: pulumi.Input<inputs.oceancd.StrategyCanary>;
    /**
     * Represents Rolling Update strategy. Cannot be defined when Canary object is defined.
     */
    rolling?: pulumi.Input<inputs.oceancd.StrategyRolling>;
    strategyName: pulumi.Input<string>;
}

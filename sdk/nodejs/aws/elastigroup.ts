// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a Spotinst AWS group resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spotinst from "@pulumi/spotinst";
 *
 * // Create an Elastigroup
 * const default_elastigroup = new spotinst.aws.Elastigroup("default-elastigroup", {
 *     capacityUnit: "weight",
 *     cpuCredits: "unlimited",
 *     cpuOptions: {
 *         threadsPerCore: 1,
 *     },
 *     description: "created by Pulumi",
 *     desiredCapacity: 0,
 *     ebsOptimized: false,
 *     enableMonitoring: false,
 *     fallbackToOndemand: false,
 *     iamInstanceProfile: "iam-profile",
 *     imageId: "ami-a27d8fda",
 *     instanceTypesOndemand: "m3.2xlarge",
 *     instanceTypesPreferredSpots: ["m3.xlarge"],
 *     instanceTypesSpots: [
 *         "m3.xlarge",
 *         "m3.2xlarge",
 *     ],
 *     instanceTypesWeights: [
 *         {
 *             instanceType: "m3.xlarge",
 *             weight: 10,
 *         },
 *         {
 *             instanceType: "m3.2xlarge",
 *             weight: 16,
 *         },
 *     ],
 *     keyName: "my-key.ssh",
 *     maxSize: 0,
 *     metadataOptions: {
 *         httpPutResponseHopLimit: 10,
 *         httpTokens: "optional",
 *     },
 *     minSize: 0,
 *     minimumInstanceLifetime: 12,
 *     orientation: "balanced",
 *     placementTenancy: "default",
 *     product: "Linux/UNIX",
 *     region: "us-west-2",
 *     scalingDownPolicies: [{
 *         adjustment: "1",
 *         cooldown: 300,
 *         evaluationPeriods: 10,
 *         metricName: "DefaultQueuesDepth",
 *         namespace: "custom",
 *         period: 60,
 *         policyName: "Default Scaling Down Policy",
 *         statistic: "average",
 *         threshold: 10,
 *         unit: "none",
 *     }],
 *     scalingStrategies: [{
 *         terminateAtEndOfBillingHour: true,
 *         terminationPolicy: "default",
 *     }],
 *     scalingUpPolicies: [{
 *         adjustment: "1",
 *         cooldown: 300,
 *         evaluationPeriods: 5,
 *         metricName: "DefaultQueuesDepth",
 *         namespace: "custom",
 *         period: 60,
 *         policyName: "Default Scaling Up Policy",
 *         statistic: "average",
 *         threshold: 100,
 *         unit: "none",
 *     }],
 *     securityGroups: ["sg-123456"],
 *     subnetIds: [
 *         "sb-123456",
 *         "sb-456789",
 *     ],
 *     tags: [
 *         {
 *             key: "Env",
 *             value: "production",
 *         },
 *         {
 *             key: "Name",
 *             value: "default-production",
 *         },
 *         {
 *             key: "Project",
 *             value: "app_v2",
 *         },
 *     ],
 *     userData: "echo hello world",
 *     waitForCapacity: 5,
 *     waitForCapacityTimeout: 300,
 * }, { ignoreChanges: ["desiredCapacity"] });
 * ```
 */
export class Elastigroup extends pulumi.CustomResource {
    /**
     * Get an existing Elastigroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElastigroupState, opts?: pulumi.CustomResourceOptions): Elastigroup {
        return new Elastigroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spotinst:aws/elastigroup:Elastigroup';

    /**
     * Returns true if the given object is an instance of Elastigroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Elastigroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Elastigroup.__pulumiType;
    }

    /**
     * List of Strings of availability zones. When this parameter is set, `subnetIds` should be left unused.
     * Note: `availabilityZones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:
     * `availabilityZones = ["us-east-1a:subnet-123456:ClusterI03"]`
     */
    public readonly availabilityZones!: pulumi.Output<string[] | undefined>;
    /**
     * String, determine the way we attach the data volumes to the data devices, possible values: `"reattach"` and `"onLaunch"` (default is onLaunch).
     */
    public readonly blockDevicesMode!: pulumi.Output<string | undefined>;
    /**
     * The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs. Valid values: `instance`, `weight`.
     */
    public readonly capacityUnit!: pulumi.Output<string>;
    /**
     * Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.
     */
    public readonly cpuCredits!: pulumi.Output<string | undefined>;
    /**
     * The CPU options for the instances that are launched within the group:
     */
    public readonly cpuOptions!: pulumi.Output<outputs.aws.ElastigroupCpuOptions | undefined>;
    /**
     * The description of the network interface.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The desired number of instances the group should have at any time.
     */
    public readonly desiredCapacity!: pulumi.Output<number | undefined>;
    /**
     * Indicates (in seconds) the timeout to wait until instance are detached.
     */
    public readonly drainingTimeout!: pulumi.Output<number>;
    public readonly ebsBlockDevices!: pulumi.Output<outputs.aws.ElastigroupEbsBlockDevice[] | undefined>;
    /**
     * Enable high bandwidth connectivity between instances and AWSâ€™s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.
     */
    public readonly ebsOptimized!: pulumi.Output<boolean>;
    /**
     * A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.
     */
    public readonly elasticIps!: pulumi.Output<string[] | undefined>;
    /**
     * List of Elastic Load Balancers names (ELB).
     */
    public readonly elasticLoadBalancers!: pulumi.Output<string[] | undefined>;
    /**
     * Indicates whether monitoring is enabled for the instance.
     */
    public readonly enableMonitoring!: pulumi.Output<boolean | undefined>;
    public readonly ephemeralBlockDevices!: pulumi.Output<outputs.aws.ElastigroupEphemeralBlockDevice[] | undefined>;
    /**
     * In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.
     */
    public readonly fallbackToOndemand!: pulumi.Output<boolean>;
    /**
     * The amount of time, in seconds, after the instance has launched to starts and check its health
     */
    public readonly healthCheckGracePeriod!: pulumi.Output<number | undefined>;
    /**
     * Sets the health check type to use. Valid values: `"EC2"`, `"ECS_CLUSTER_INSTANCE"`, `"ELB"`, `"HCS"`, `"MLB"`, `"TARGET_GROUP"`, `"MULTAI_TARGET_SET"`, `"NONE"`.
     */
    public readonly healthCheckType!: pulumi.Output<string | undefined>;
    /**
     * The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy)
     */
    public readonly healthCheckUnhealthyDurationBeforeReplacement!: pulumi.Output<number | undefined>;
    /**
     * The ARN or name of an IAM instance profile to associate with launched instances.
     */
    public readonly iamInstanceProfile!: pulumi.Output<string | undefined>;
    /**
     * The ID of the AMI used to launch the instance.
     */
    public readonly imageId!: pulumi.Output<string | undefined>;
    /**
     * The type of instance determines your instance's CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).
     */
    public readonly instanceTypesOndemand!: pulumi.Output<string>;
    /**
     * Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.
     */
    public readonly instanceTypesPreferredSpots!: pulumi.Output<string[] | undefined>;
    /**
     * One or more instance types.
     */
    public readonly instanceTypesSpots!: pulumi.Output<string[]>;
    /**
     * List of weights per instance type for weighted groups. Each object in the list should have the following attributes:
     */
    public readonly instanceTypesWeights!: pulumi.Output<outputs.aws.ElastigroupInstanceTypesWeight[] | undefined>;
    public readonly integrationBeanstalk!: pulumi.Output<outputs.aws.ElastigroupIntegrationBeanstalk | undefined>;
    /**
     * Describes the [Code Deploy](https://aws.amazon.com/documentation/codedeploy/?id=docs_gateway) integration.
     */
    public readonly integrationCodedeploy!: pulumi.Output<outputs.aws.ElastigroupIntegrationCodedeploy | undefined>;
    /**
     * Describes the [Docker Swarm](https://api.spotinst.com/integration-docs/elastigroup/container-management/docker-swarm/docker-swarm-integration/) integration.
     */
    public readonly integrationDockerSwarm!: pulumi.Output<outputs.aws.ElastigroupIntegrationDockerSwarm | undefined>;
    /**
     * Describes the [EC2 Container Service](https://aws.amazon.com/documentation/ecs/?id=docs_gateway) integration.
     */
    public readonly integrationEcs!: pulumi.Output<outputs.aws.ElastigroupIntegrationEcs | undefined>;
    /**
     * Describes the [Gitlab](https://api.spotinst.com/integration-docs/gitlab/) integration.
     */
    public readonly integrationGitlab!: pulumi.Output<outputs.aws.ElastigroupIntegrationGitlab | undefined>;
    /**
     * Describes the [Kubernetes](https://kubernetes.io/) integration.
     */
    public readonly integrationKubernetes!: pulumi.Output<outputs.aws.ElastigroupIntegrationKubernetes | undefined>;
    /**
     * Describes the [Mesosphere](https://mesosphere.com/) integration.
     */
    public readonly integrationMesosphere!: pulumi.Output<outputs.aws.ElastigroupIntegrationMesosphere | undefined>;
    /**
     * Describes the [Multai Runtime](https://spotinst.com/) integration.
     */
    public readonly integrationMultaiRuntime!: pulumi.Output<outputs.aws.ElastigroupIntegrationMultaiRuntime | undefined>;
    /**
     * Describes the [Nomad](https://www.nomadproject.io/) integration.
     */
    public readonly integrationNomad!: pulumi.Output<outputs.aws.ElastigroupIntegrationNomad | undefined>;
    /**
     * Describes the [Rancher](http://rancherlabs.com/) integration.
     */
    public readonly integrationRancher!: pulumi.Output<outputs.aws.ElastigroupIntegrationRancher | undefined>;
    /**
     * Describes the [Route53](https://aws.amazon.com/documentation/route53/?id=docs_gateway) integration.
     */
    public readonly integrationRoute53!: pulumi.Output<outputs.aws.ElastigroupIntegrationRoute53 | undefined>;
    /**
     * The key name that should be used for the instance.
     */
    public readonly keyName!: pulumi.Output<string | undefined>;
    public readonly lifetimePeriod!: pulumi.Output<string | undefined>;
    /**
     * The maximum number of instances the group should have at any time.
     */
    public readonly maxSize!: pulumi.Output<number>;
    /**
     * Data that used to configure or manage the running instances:
     */
    public readonly metadataOptions!: pulumi.Output<outputs.aws.ElastigroupMetadataOptions | undefined>;
    /**
     * The minimum number of instances the group should have at any time.
     */
    public readonly minSize!: pulumi.Output<number>;
    /**
     * Defines the preferred minimum instance lifetime in hours. Markets which comply with this preference will be prioritized. Optional values: 1, 3, 6, 12, 24.
     */
    public readonly minimumInstanceLifetime!: pulumi.Output<number | undefined>;
    /**
     * Set of targets to register.
     */
    public readonly multaiTargetSets!: pulumi.Output<outputs.aws.ElastigroupMultaiTargetSet[] | undefined>;
    /**
     * The record set name.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly networkInterfaces!: pulumi.Output<outputs.aws.ElastigroupNetworkInterface[] | undefined>;
    /**
     * Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spotPercentage` parameter is being ignored.
     */
    public readonly ondemandCount!: pulumi.Output<number | undefined>;
    /**
     * Select a prediction strategy. Valid values: `balanced`, `costOriented`, `equalAzDistribution`, `availabilityOriented`. You can read more in our documentation.
     */
    public readonly orientation!: pulumi.Output<string>;
    /**
     * Boolean, should the instance maintain its Data volumes.
     */
    public readonly persistBlockDevices!: pulumi.Output<boolean | undefined>;
    /**
     * Boolean, should the instance maintain its private IP.
     */
    public readonly persistPrivateIp!: pulumi.Output<boolean | undefined>;
    /**
     * Boolean, should the instance maintain its root device volumes.
     */
    public readonly persistRootDevice!: pulumi.Output<boolean | undefined>;
    /**
     * Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used. Valid values: "default", "dedicated" .
     */
    public readonly placementTenancy!: pulumi.Output<string | undefined>;
    /**
     * The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs. 
     * Note: Must be a sublist of `availabilityZones` and `orientation` value must not be `"equalAzDistribution"`.
     */
    public readonly preferredAvailabilityZones!: pulumi.Output<string[] | undefined>;
    /**
     * List of Private IPs to associate to the group instances.(e.g. "172.1.1.0"). Please note: This setting will only apply if persistence.persist_private_ip is set to true.
     */
    public readonly privateIps!: pulumi.Output<string[] | undefined>;
    /**
     * Operation system type. Valid values: `"Linux/UNIX"`, `"SUSE Linux"`, `"Windows"`. 
     * For EC2 Classic instances:  `"Linux/UNIX (Amazon VPC)"`, `"SUSE Linux (Amazon VPC)"`, `"Windows (Amazon VPC)"`.
     */
    public readonly product!: pulumi.Output<string>;
    /**
     * The AWS region your group will be created in.
     * Note: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * Hold settings for strategy correction â€“ replacing On-Demand for Spot instances. Supported Values: `"never"`, `"always"`, `"timeWindow"`
     */
    public readonly revertToSpot!: pulumi.Output<outputs.aws.ElastigroupRevertToSpot | undefined>;
    public readonly scalingDownPolicies!: pulumi.Output<outputs.aws.ElastigroupScalingDownPolicy[] | undefined>;
    /**
     * Set termination policy.
     */
    public readonly scalingStrategies!: pulumi.Output<outputs.aws.ElastigroupScalingStrategy[] | undefined>;
    public readonly scalingTargetPolicies!: pulumi.Output<outputs.aws.ElastigroupScalingTargetPolicy[] | undefined>;
    public readonly scalingUpPolicies!: pulumi.Output<outputs.aws.ElastigroupScalingUpPolicy[] | undefined>;
    public readonly scheduledTasks!: pulumi.Output<outputs.aws.ElastigroupScheduledTask[] | undefined>;
    /**
     * A list of associated security group IDS.
     */
    public readonly securityGroups!: pulumi.Output<string[]>;
    /**
     * The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
     */
    public readonly shutdownScript!: pulumi.Output<string | undefined>;
    public readonly signals!: pulumi.Output<outputs.aws.ElastigroupSignal[] | undefined>;
    /**
     * The percentage of Spot instances that would spin up from the `desiredCapacity` number.
     */
    public readonly spotPercentage!: pulumi.Output<number | undefined>;
    public readonly statefulDeallocation!: pulumi.Output<outputs.aws.ElastigroupStatefulDeallocation | undefined>;
    public readonly statefulInstanceActions!: pulumi.Output<outputs.aws.ElastigroupStatefulInstanceAction[] | undefined>;
    /**
     * List of Strings of subnet identifiers.
     * Note: When this parameter is set, `availabilityZones` should be left unused.
     */
    public readonly subnetIds!: pulumi.Output<string[] | undefined>;
    /**
     * A key/value mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<outputs.aws.ElastigroupTag[] | undefined>;
    /**
     * List of Target Group ARNs to register the instances to.
     */
    public readonly targetGroupArns!: pulumi.Output<string[] | undefined>;
    public readonly updatePolicy!: pulumi.Output<outputs.aws.ElastigroupUpdatePolicy | undefined>;
    /**
     * The user data to provide when launching the instance.
     */
    public readonly userData!: pulumi.Output<string | undefined>;
    public readonly utilizeCommitments!: pulumi.Output<boolean | undefined>;
    /**
     * In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.
     */
    public readonly utilizeReservedInstances!: pulumi.Output<boolean | undefined>;
    /**
     * Minimum number of instances in a 'HEALTHY' status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desiredCapacity`.
     */
    public readonly waitForCapacity!: pulumi.Output<number | undefined>;
    /**
     * Time (seconds) to wait for instances to report a 'HEALTHY' status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.
     */
    public readonly waitForCapacityTimeout!: pulumi.Output<number | undefined>;

    /**
     * Create a Elastigroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ElastigroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElastigroupArgs | ElastigroupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ElastigroupState | undefined;
            inputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            inputs["blockDevicesMode"] = state ? state.blockDevicesMode : undefined;
            inputs["capacityUnit"] = state ? state.capacityUnit : undefined;
            inputs["cpuCredits"] = state ? state.cpuCredits : undefined;
            inputs["cpuOptions"] = state ? state.cpuOptions : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["desiredCapacity"] = state ? state.desiredCapacity : undefined;
            inputs["drainingTimeout"] = state ? state.drainingTimeout : undefined;
            inputs["ebsBlockDevices"] = state ? state.ebsBlockDevices : undefined;
            inputs["ebsOptimized"] = state ? state.ebsOptimized : undefined;
            inputs["elasticIps"] = state ? state.elasticIps : undefined;
            inputs["elasticLoadBalancers"] = state ? state.elasticLoadBalancers : undefined;
            inputs["enableMonitoring"] = state ? state.enableMonitoring : undefined;
            inputs["ephemeralBlockDevices"] = state ? state.ephemeralBlockDevices : undefined;
            inputs["fallbackToOndemand"] = state ? state.fallbackToOndemand : undefined;
            inputs["healthCheckGracePeriod"] = state ? state.healthCheckGracePeriod : undefined;
            inputs["healthCheckType"] = state ? state.healthCheckType : undefined;
            inputs["healthCheckUnhealthyDurationBeforeReplacement"] = state ? state.healthCheckUnhealthyDurationBeforeReplacement : undefined;
            inputs["iamInstanceProfile"] = state ? state.iamInstanceProfile : undefined;
            inputs["imageId"] = state ? state.imageId : undefined;
            inputs["instanceTypesOndemand"] = state ? state.instanceTypesOndemand : undefined;
            inputs["instanceTypesPreferredSpots"] = state ? state.instanceTypesPreferredSpots : undefined;
            inputs["instanceTypesSpots"] = state ? state.instanceTypesSpots : undefined;
            inputs["instanceTypesWeights"] = state ? state.instanceTypesWeights : undefined;
            inputs["integrationBeanstalk"] = state ? state.integrationBeanstalk : undefined;
            inputs["integrationCodedeploy"] = state ? state.integrationCodedeploy : undefined;
            inputs["integrationDockerSwarm"] = state ? state.integrationDockerSwarm : undefined;
            inputs["integrationEcs"] = state ? state.integrationEcs : undefined;
            inputs["integrationGitlab"] = state ? state.integrationGitlab : undefined;
            inputs["integrationKubernetes"] = state ? state.integrationKubernetes : undefined;
            inputs["integrationMesosphere"] = state ? state.integrationMesosphere : undefined;
            inputs["integrationMultaiRuntime"] = state ? state.integrationMultaiRuntime : undefined;
            inputs["integrationNomad"] = state ? state.integrationNomad : undefined;
            inputs["integrationRancher"] = state ? state.integrationRancher : undefined;
            inputs["integrationRoute53"] = state ? state.integrationRoute53 : undefined;
            inputs["keyName"] = state ? state.keyName : undefined;
            inputs["lifetimePeriod"] = state ? state.lifetimePeriod : undefined;
            inputs["maxSize"] = state ? state.maxSize : undefined;
            inputs["metadataOptions"] = state ? state.metadataOptions : undefined;
            inputs["minSize"] = state ? state.minSize : undefined;
            inputs["minimumInstanceLifetime"] = state ? state.minimumInstanceLifetime : undefined;
            inputs["multaiTargetSets"] = state ? state.multaiTargetSets : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            inputs["ondemandCount"] = state ? state.ondemandCount : undefined;
            inputs["orientation"] = state ? state.orientation : undefined;
            inputs["persistBlockDevices"] = state ? state.persistBlockDevices : undefined;
            inputs["persistPrivateIp"] = state ? state.persistPrivateIp : undefined;
            inputs["persistRootDevice"] = state ? state.persistRootDevice : undefined;
            inputs["placementTenancy"] = state ? state.placementTenancy : undefined;
            inputs["preferredAvailabilityZones"] = state ? state.preferredAvailabilityZones : undefined;
            inputs["privateIps"] = state ? state.privateIps : undefined;
            inputs["product"] = state ? state.product : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["revertToSpot"] = state ? state.revertToSpot : undefined;
            inputs["scalingDownPolicies"] = state ? state.scalingDownPolicies : undefined;
            inputs["scalingStrategies"] = state ? state.scalingStrategies : undefined;
            inputs["scalingTargetPolicies"] = state ? state.scalingTargetPolicies : undefined;
            inputs["scalingUpPolicies"] = state ? state.scalingUpPolicies : undefined;
            inputs["scheduledTasks"] = state ? state.scheduledTasks : undefined;
            inputs["securityGroups"] = state ? state.securityGroups : undefined;
            inputs["shutdownScript"] = state ? state.shutdownScript : undefined;
            inputs["signals"] = state ? state.signals : undefined;
            inputs["spotPercentage"] = state ? state.spotPercentage : undefined;
            inputs["statefulDeallocation"] = state ? state.statefulDeallocation : undefined;
            inputs["statefulInstanceActions"] = state ? state.statefulInstanceActions : undefined;
            inputs["subnetIds"] = state ? state.subnetIds : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["targetGroupArns"] = state ? state.targetGroupArns : undefined;
            inputs["updatePolicy"] = state ? state.updatePolicy : undefined;
            inputs["userData"] = state ? state.userData : undefined;
            inputs["utilizeCommitments"] = state ? state.utilizeCommitments : undefined;
            inputs["utilizeReservedInstances"] = state ? state.utilizeReservedInstances : undefined;
            inputs["waitForCapacity"] = state ? state.waitForCapacity : undefined;
            inputs["waitForCapacityTimeout"] = state ? state.waitForCapacityTimeout : undefined;
        } else {
            const args = argsOrState as ElastigroupArgs | undefined;
            if ((!args || args.fallbackToOndemand === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fallbackToOndemand'");
            }
            if ((!args || args.instanceTypesOndemand === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceTypesOndemand'");
            }
            if ((!args || args.instanceTypesSpots === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceTypesSpots'");
            }
            if ((!args || args.orientation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orientation'");
            }
            if ((!args || args.product === undefined) && !opts.urn) {
                throw new Error("Missing required property 'product'");
            }
            if ((!args || args.securityGroups === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroups'");
            }
            inputs["availabilityZones"] = args ? args.availabilityZones : undefined;
            inputs["blockDevicesMode"] = args ? args.blockDevicesMode : undefined;
            inputs["capacityUnit"] = args ? args.capacityUnit : undefined;
            inputs["cpuCredits"] = args ? args.cpuCredits : undefined;
            inputs["cpuOptions"] = args ? args.cpuOptions : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["desiredCapacity"] = args ? args.desiredCapacity : undefined;
            inputs["drainingTimeout"] = args ? args.drainingTimeout : undefined;
            inputs["ebsBlockDevices"] = args ? args.ebsBlockDevices : undefined;
            inputs["ebsOptimized"] = args ? args.ebsOptimized : undefined;
            inputs["elasticIps"] = args ? args.elasticIps : undefined;
            inputs["elasticLoadBalancers"] = args ? args.elasticLoadBalancers : undefined;
            inputs["enableMonitoring"] = args ? args.enableMonitoring : undefined;
            inputs["ephemeralBlockDevices"] = args ? args.ephemeralBlockDevices : undefined;
            inputs["fallbackToOndemand"] = args ? args.fallbackToOndemand : undefined;
            inputs["healthCheckGracePeriod"] = args ? args.healthCheckGracePeriod : undefined;
            inputs["healthCheckType"] = args ? args.healthCheckType : undefined;
            inputs["healthCheckUnhealthyDurationBeforeReplacement"] = args ? args.healthCheckUnhealthyDurationBeforeReplacement : undefined;
            inputs["iamInstanceProfile"] = args ? args.iamInstanceProfile : undefined;
            inputs["imageId"] = args ? args.imageId : undefined;
            inputs["instanceTypesOndemand"] = args ? args.instanceTypesOndemand : undefined;
            inputs["instanceTypesPreferredSpots"] = args ? args.instanceTypesPreferredSpots : undefined;
            inputs["instanceTypesSpots"] = args ? args.instanceTypesSpots : undefined;
            inputs["instanceTypesWeights"] = args ? args.instanceTypesWeights : undefined;
            inputs["integrationBeanstalk"] = args ? args.integrationBeanstalk : undefined;
            inputs["integrationCodedeploy"] = args ? args.integrationCodedeploy : undefined;
            inputs["integrationDockerSwarm"] = args ? args.integrationDockerSwarm : undefined;
            inputs["integrationEcs"] = args ? args.integrationEcs : undefined;
            inputs["integrationGitlab"] = args ? args.integrationGitlab : undefined;
            inputs["integrationKubernetes"] = args ? args.integrationKubernetes : undefined;
            inputs["integrationMesosphere"] = args ? args.integrationMesosphere : undefined;
            inputs["integrationMultaiRuntime"] = args ? args.integrationMultaiRuntime : undefined;
            inputs["integrationNomad"] = args ? args.integrationNomad : undefined;
            inputs["integrationRancher"] = args ? args.integrationRancher : undefined;
            inputs["integrationRoute53"] = args ? args.integrationRoute53 : undefined;
            inputs["keyName"] = args ? args.keyName : undefined;
            inputs["lifetimePeriod"] = args ? args.lifetimePeriod : undefined;
            inputs["maxSize"] = args ? args.maxSize : undefined;
            inputs["metadataOptions"] = args ? args.metadataOptions : undefined;
            inputs["minSize"] = args ? args.minSize : undefined;
            inputs["minimumInstanceLifetime"] = args ? args.minimumInstanceLifetime : undefined;
            inputs["multaiTargetSets"] = args ? args.multaiTargetSets : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            inputs["ondemandCount"] = args ? args.ondemandCount : undefined;
            inputs["orientation"] = args ? args.orientation : undefined;
            inputs["persistBlockDevices"] = args ? args.persistBlockDevices : undefined;
            inputs["persistPrivateIp"] = args ? args.persistPrivateIp : undefined;
            inputs["persistRootDevice"] = args ? args.persistRootDevice : undefined;
            inputs["placementTenancy"] = args ? args.placementTenancy : undefined;
            inputs["preferredAvailabilityZones"] = args ? args.preferredAvailabilityZones : undefined;
            inputs["privateIps"] = args ? args.privateIps : undefined;
            inputs["product"] = args ? args.product : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["revertToSpot"] = args ? args.revertToSpot : undefined;
            inputs["scalingDownPolicies"] = args ? args.scalingDownPolicies : undefined;
            inputs["scalingStrategies"] = args ? args.scalingStrategies : undefined;
            inputs["scalingTargetPolicies"] = args ? args.scalingTargetPolicies : undefined;
            inputs["scalingUpPolicies"] = args ? args.scalingUpPolicies : undefined;
            inputs["scheduledTasks"] = args ? args.scheduledTasks : undefined;
            inputs["securityGroups"] = args ? args.securityGroups : undefined;
            inputs["shutdownScript"] = args ? args.shutdownScript : undefined;
            inputs["signals"] = args ? args.signals : undefined;
            inputs["spotPercentage"] = args ? args.spotPercentage : undefined;
            inputs["statefulDeallocation"] = args ? args.statefulDeallocation : undefined;
            inputs["statefulInstanceActions"] = args ? args.statefulInstanceActions : undefined;
            inputs["subnetIds"] = args ? args.subnetIds : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["targetGroupArns"] = args ? args.targetGroupArns : undefined;
            inputs["updatePolicy"] = args ? args.updatePolicy : undefined;
            inputs["userData"] = args ? args.userData : undefined;
            inputs["utilizeCommitments"] = args ? args.utilizeCommitments : undefined;
            inputs["utilizeReservedInstances"] = args ? args.utilizeReservedInstances : undefined;
            inputs["waitForCapacity"] = args ? args.waitForCapacity : undefined;
            inputs["waitForCapacityTimeout"] = args ? args.waitForCapacityTimeout : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Elastigroup.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Elastigroup resources.
 */
export interface ElastigroupState {
    /**
     * List of Strings of availability zones. When this parameter is set, `subnetIds` should be left unused.
     * Note: `availabilityZones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:
     * `availabilityZones = ["us-east-1a:subnet-123456:ClusterI03"]`
     */
    readonly availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * String, determine the way we attach the data volumes to the data devices, possible values: `"reattach"` and `"onLaunch"` (default is onLaunch).
     */
    readonly blockDevicesMode?: pulumi.Input<string>;
    /**
     * The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs. Valid values: `instance`, `weight`.
     */
    readonly capacityUnit?: pulumi.Input<string>;
    /**
     * Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.
     */
    readonly cpuCredits?: pulumi.Input<string>;
    /**
     * The CPU options for the instances that are launched within the group:
     */
    readonly cpuOptions?: pulumi.Input<inputs.aws.ElastigroupCpuOptions>;
    /**
     * The description of the network interface.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The desired number of instances the group should have at any time.
     */
    readonly desiredCapacity?: pulumi.Input<number>;
    /**
     * Indicates (in seconds) the timeout to wait until instance are detached.
     */
    readonly drainingTimeout?: pulumi.Input<number>;
    readonly ebsBlockDevices?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupEbsBlockDevice>[]>;
    /**
     * Enable high bandwidth connectivity between instances and AWSâ€™s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.
     */
    readonly ebsOptimized?: pulumi.Input<boolean>;
    /**
     * A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.
     */
    readonly elasticIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Elastic Load Balancers names (ELB).
     */
    readonly elasticLoadBalancers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether monitoring is enabled for the instance.
     */
    readonly enableMonitoring?: pulumi.Input<boolean>;
    readonly ephemeralBlockDevices?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupEphemeralBlockDevice>[]>;
    /**
     * In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.
     */
    readonly fallbackToOndemand?: pulumi.Input<boolean>;
    /**
     * The amount of time, in seconds, after the instance has launched to starts and check its health
     */
    readonly healthCheckGracePeriod?: pulumi.Input<number>;
    /**
     * Sets the health check type to use. Valid values: `"EC2"`, `"ECS_CLUSTER_INSTANCE"`, `"ELB"`, `"HCS"`, `"MLB"`, `"TARGET_GROUP"`, `"MULTAI_TARGET_SET"`, `"NONE"`.
     */
    readonly healthCheckType?: pulumi.Input<string>;
    /**
     * The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy)
     */
    readonly healthCheckUnhealthyDurationBeforeReplacement?: pulumi.Input<number>;
    /**
     * The ARN or name of an IAM instance profile to associate with launched instances.
     */
    readonly iamInstanceProfile?: pulumi.Input<string>;
    /**
     * The ID of the AMI used to launch the instance.
     */
    readonly imageId?: pulumi.Input<string>;
    /**
     * The type of instance determines your instance's CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).
     */
    readonly instanceTypesOndemand?: pulumi.Input<string>;
    /**
     * Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.
     */
    readonly instanceTypesPreferredSpots?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more instance types.
     */
    readonly instanceTypesSpots?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of weights per instance type for weighted groups. Each object in the list should have the following attributes:
     */
    readonly instanceTypesWeights?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupInstanceTypesWeight>[]>;
    readonly integrationBeanstalk?: pulumi.Input<inputs.aws.ElastigroupIntegrationBeanstalk>;
    /**
     * Describes the [Code Deploy](https://aws.amazon.com/documentation/codedeploy/?id=docs_gateway) integration.
     */
    readonly integrationCodedeploy?: pulumi.Input<inputs.aws.ElastigroupIntegrationCodedeploy>;
    /**
     * Describes the [Docker Swarm](https://api.spotinst.com/integration-docs/elastigroup/container-management/docker-swarm/docker-swarm-integration/) integration.
     */
    readonly integrationDockerSwarm?: pulumi.Input<inputs.aws.ElastigroupIntegrationDockerSwarm>;
    /**
     * Describes the [EC2 Container Service](https://aws.amazon.com/documentation/ecs/?id=docs_gateway) integration.
     */
    readonly integrationEcs?: pulumi.Input<inputs.aws.ElastigroupIntegrationEcs>;
    /**
     * Describes the [Gitlab](https://api.spotinst.com/integration-docs/gitlab/) integration.
     */
    readonly integrationGitlab?: pulumi.Input<inputs.aws.ElastigroupIntegrationGitlab>;
    /**
     * Describes the [Kubernetes](https://kubernetes.io/) integration.
     */
    readonly integrationKubernetes?: pulumi.Input<inputs.aws.ElastigroupIntegrationKubernetes>;
    /**
     * Describes the [Mesosphere](https://mesosphere.com/) integration.
     */
    readonly integrationMesosphere?: pulumi.Input<inputs.aws.ElastigroupIntegrationMesosphere>;
    /**
     * Describes the [Multai Runtime](https://spotinst.com/) integration.
     */
    readonly integrationMultaiRuntime?: pulumi.Input<inputs.aws.ElastigroupIntegrationMultaiRuntime>;
    /**
     * Describes the [Nomad](https://www.nomadproject.io/) integration.
     */
    readonly integrationNomad?: pulumi.Input<inputs.aws.ElastigroupIntegrationNomad>;
    /**
     * Describes the [Rancher](http://rancherlabs.com/) integration.
     */
    readonly integrationRancher?: pulumi.Input<inputs.aws.ElastigroupIntegrationRancher>;
    /**
     * Describes the [Route53](https://aws.amazon.com/documentation/route53/?id=docs_gateway) integration.
     */
    readonly integrationRoute53?: pulumi.Input<inputs.aws.ElastigroupIntegrationRoute53>;
    /**
     * The key name that should be used for the instance.
     */
    readonly keyName?: pulumi.Input<string>;
    readonly lifetimePeriod?: pulumi.Input<string>;
    /**
     * The maximum number of instances the group should have at any time.
     */
    readonly maxSize?: pulumi.Input<number>;
    /**
     * Data that used to configure or manage the running instances:
     */
    readonly metadataOptions?: pulumi.Input<inputs.aws.ElastigroupMetadataOptions>;
    /**
     * The minimum number of instances the group should have at any time.
     */
    readonly minSize?: pulumi.Input<number>;
    /**
     * Defines the preferred minimum instance lifetime in hours. Markets which comply with this preference will be prioritized. Optional values: 1, 3, 6, 12, 24.
     */
    readonly minimumInstanceLifetime?: pulumi.Input<number>;
    /**
     * Set of targets to register.
     */
    readonly multaiTargetSets?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupMultaiTargetSet>[]>;
    /**
     * The record set name.
     */
    readonly name?: pulumi.Input<string>;
    readonly networkInterfaces?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupNetworkInterface>[]>;
    /**
     * Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spotPercentage` parameter is being ignored.
     */
    readonly ondemandCount?: pulumi.Input<number>;
    /**
     * Select a prediction strategy. Valid values: `balanced`, `costOriented`, `equalAzDistribution`, `availabilityOriented`. You can read more in our documentation.
     */
    readonly orientation?: pulumi.Input<string>;
    /**
     * Boolean, should the instance maintain its Data volumes.
     */
    readonly persistBlockDevices?: pulumi.Input<boolean>;
    /**
     * Boolean, should the instance maintain its private IP.
     */
    readonly persistPrivateIp?: pulumi.Input<boolean>;
    /**
     * Boolean, should the instance maintain its root device volumes.
     */
    readonly persistRootDevice?: pulumi.Input<boolean>;
    /**
     * Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used. Valid values: "default", "dedicated" .
     */
    readonly placementTenancy?: pulumi.Input<string>;
    /**
     * The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs. 
     * Note: Must be a sublist of `availabilityZones` and `orientation` value must not be `"equalAzDistribution"`.
     */
    readonly preferredAvailabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Private IPs to associate to the group instances.(e.g. "172.1.1.0"). Please note: This setting will only apply if persistence.persist_private_ip is set to true.
     */
    readonly privateIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Operation system type. Valid values: `"Linux/UNIX"`, `"SUSE Linux"`, `"Windows"`. 
     * For EC2 Classic instances:  `"Linux/UNIX (Amazon VPC)"`, `"SUSE Linux (Amazon VPC)"`, `"Windows (Amazon VPC)"`.
     */
    readonly product?: pulumi.Input<string>;
    /**
     * The AWS region your group will be created in.
     * Note: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).
     */
    readonly region?: pulumi.Input<string>;
    /**
     * Hold settings for strategy correction â€“ replacing On-Demand for Spot instances. Supported Values: `"never"`, `"always"`, `"timeWindow"`
     */
    readonly revertToSpot?: pulumi.Input<inputs.aws.ElastigroupRevertToSpot>;
    readonly scalingDownPolicies?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupScalingDownPolicy>[]>;
    /**
     * Set termination policy.
     */
    readonly scalingStrategies?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupScalingStrategy>[]>;
    readonly scalingTargetPolicies?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupScalingTargetPolicy>[]>;
    readonly scalingUpPolicies?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupScalingUpPolicy>[]>;
    readonly scheduledTasks?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupScheduledTask>[]>;
    /**
     * A list of associated security group IDS.
     */
    readonly securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
     */
    readonly shutdownScript?: pulumi.Input<string>;
    readonly signals?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupSignal>[]>;
    /**
     * The percentage of Spot instances that would spin up from the `desiredCapacity` number.
     */
    readonly spotPercentage?: pulumi.Input<number>;
    readonly statefulDeallocation?: pulumi.Input<inputs.aws.ElastigroupStatefulDeallocation>;
    readonly statefulInstanceActions?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupStatefulInstanceAction>[]>;
    /**
     * List of Strings of subnet identifiers.
     * Note: When this parameter is set, `availabilityZones` should be left unused.
     */
    readonly subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A key/value mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupTag>[]>;
    /**
     * List of Target Group ARNs to register the instances to.
     */
    readonly targetGroupArns?: pulumi.Input<pulumi.Input<string>[]>;
    readonly updatePolicy?: pulumi.Input<inputs.aws.ElastigroupUpdatePolicy>;
    /**
     * The user data to provide when launching the instance.
     */
    readonly userData?: pulumi.Input<string>;
    readonly utilizeCommitments?: pulumi.Input<boolean>;
    /**
     * In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.
     */
    readonly utilizeReservedInstances?: pulumi.Input<boolean>;
    /**
     * Minimum number of instances in a 'HEALTHY' status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desiredCapacity`.
     */
    readonly waitForCapacity?: pulumi.Input<number>;
    /**
     * Time (seconds) to wait for instances to report a 'HEALTHY' status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.
     */
    readonly waitForCapacityTimeout?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Elastigroup resource.
 */
export interface ElastigroupArgs {
    /**
     * List of Strings of availability zones. When this parameter is set, `subnetIds` should be left unused.
     * Note: `availabilityZones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:
     * `availabilityZones = ["us-east-1a:subnet-123456:ClusterI03"]`
     */
    readonly availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * String, determine the way we attach the data volumes to the data devices, possible values: `"reattach"` and `"onLaunch"` (default is onLaunch).
     */
    readonly blockDevicesMode?: pulumi.Input<string>;
    /**
     * The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs. Valid values: `instance`, `weight`.
     */
    readonly capacityUnit?: pulumi.Input<string>;
    /**
     * Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.
     */
    readonly cpuCredits?: pulumi.Input<string>;
    /**
     * The CPU options for the instances that are launched within the group:
     */
    readonly cpuOptions?: pulumi.Input<inputs.aws.ElastigroupCpuOptions>;
    /**
     * The description of the network interface.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The desired number of instances the group should have at any time.
     */
    readonly desiredCapacity?: pulumi.Input<number>;
    /**
     * Indicates (in seconds) the timeout to wait until instance are detached.
     */
    readonly drainingTimeout?: pulumi.Input<number>;
    readonly ebsBlockDevices?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupEbsBlockDevice>[]>;
    /**
     * Enable high bandwidth connectivity between instances and AWSâ€™s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.
     */
    readonly ebsOptimized?: pulumi.Input<boolean>;
    /**
     * A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.
     */
    readonly elasticIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Elastic Load Balancers names (ELB).
     */
    readonly elasticLoadBalancers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether monitoring is enabled for the instance.
     */
    readonly enableMonitoring?: pulumi.Input<boolean>;
    readonly ephemeralBlockDevices?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupEphemeralBlockDevice>[]>;
    /**
     * In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.
     */
    readonly fallbackToOndemand: pulumi.Input<boolean>;
    /**
     * The amount of time, in seconds, after the instance has launched to starts and check its health
     */
    readonly healthCheckGracePeriod?: pulumi.Input<number>;
    /**
     * Sets the health check type to use. Valid values: `"EC2"`, `"ECS_CLUSTER_INSTANCE"`, `"ELB"`, `"HCS"`, `"MLB"`, `"TARGET_GROUP"`, `"MULTAI_TARGET_SET"`, `"NONE"`.
     */
    readonly healthCheckType?: pulumi.Input<string>;
    /**
     * The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy)
     */
    readonly healthCheckUnhealthyDurationBeforeReplacement?: pulumi.Input<number>;
    /**
     * The ARN or name of an IAM instance profile to associate with launched instances.
     */
    readonly iamInstanceProfile?: pulumi.Input<string>;
    /**
     * The ID of the AMI used to launch the instance.
     */
    readonly imageId?: pulumi.Input<string>;
    /**
     * The type of instance determines your instance's CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).
     */
    readonly instanceTypesOndemand: pulumi.Input<string>;
    /**
     * Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.
     */
    readonly instanceTypesPreferredSpots?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more instance types.
     */
    readonly instanceTypesSpots: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of weights per instance type for weighted groups. Each object in the list should have the following attributes:
     */
    readonly instanceTypesWeights?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupInstanceTypesWeight>[]>;
    readonly integrationBeanstalk?: pulumi.Input<inputs.aws.ElastigroupIntegrationBeanstalk>;
    /**
     * Describes the [Code Deploy](https://aws.amazon.com/documentation/codedeploy/?id=docs_gateway) integration.
     */
    readonly integrationCodedeploy?: pulumi.Input<inputs.aws.ElastigroupIntegrationCodedeploy>;
    /**
     * Describes the [Docker Swarm](https://api.spotinst.com/integration-docs/elastigroup/container-management/docker-swarm/docker-swarm-integration/) integration.
     */
    readonly integrationDockerSwarm?: pulumi.Input<inputs.aws.ElastigroupIntegrationDockerSwarm>;
    /**
     * Describes the [EC2 Container Service](https://aws.amazon.com/documentation/ecs/?id=docs_gateway) integration.
     */
    readonly integrationEcs?: pulumi.Input<inputs.aws.ElastigroupIntegrationEcs>;
    /**
     * Describes the [Gitlab](https://api.spotinst.com/integration-docs/gitlab/) integration.
     */
    readonly integrationGitlab?: pulumi.Input<inputs.aws.ElastigroupIntegrationGitlab>;
    /**
     * Describes the [Kubernetes](https://kubernetes.io/) integration.
     */
    readonly integrationKubernetes?: pulumi.Input<inputs.aws.ElastigroupIntegrationKubernetes>;
    /**
     * Describes the [Mesosphere](https://mesosphere.com/) integration.
     */
    readonly integrationMesosphere?: pulumi.Input<inputs.aws.ElastigroupIntegrationMesosphere>;
    /**
     * Describes the [Multai Runtime](https://spotinst.com/) integration.
     */
    readonly integrationMultaiRuntime?: pulumi.Input<inputs.aws.ElastigroupIntegrationMultaiRuntime>;
    /**
     * Describes the [Nomad](https://www.nomadproject.io/) integration.
     */
    readonly integrationNomad?: pulumi.Input<inputs.aws.ElastigroupIntegrationNomad>;
    /**
     * Describes the [Rancher](http://rancherlabs.com/) integration.
     */
    readonly integrationRancher?: pulumi.Input<inputs.aws.ElastigroupIntegrationRancher>;
    /**
     * Describes the [Route53](https://aws.amazon.com/documentation/route53/?id=docs_gateway) integration.
     */
    readonly integrationRoute53?: pulumi.Input<inputs.aws.ElastigroupIntegrationRoute53>;
    /**
     * The key name that should be used for the instance.
     */
    readonly keyName?: pulumi.Input<string>;
    readonly lifetimePeriod?: pulumi.Input<string>;
    /**
     * The maximum number of instances the group should have at any time.
     */
    readonly maxSize?: pulumi.Input<number>;
    /**
     * Data that used to configure or manage the running instances:
     */
    readonly metadataOptions?: pulumi.Input<inputs.aws.ElastigroupMetadataOptions>;
    /**
     * The minimum number of instances the group should have at any time.
     */
    readonly minSize?: pulumi.Input<number>;
    /**
     * Defines the preferred minimum instance lifetime in hours. Markets which comply with this preference will be prioritized. Optional values: 1, 3, 6, 12, 24.
     */
    readonly minimumInstanceLifetime?: pulumi.Input<number>;
    /**
     * Set of targets to register.
     */
    readonly multaiTargetSets?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupMultaiTargetSet>[]>;
    /**
     * The record set name.
     */
    readonly name?: pulumi.Input<string>;
    readonly networkInterfaces?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupNetworkInterface>[]>;
    /**
     * Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spotPercentage` parameter is being ignored.
     */
    readonly ondemandCount?: pulumi.Input<number>;
    /**
     * Select a prediction strategy. Valid values: `balanced`, `costOriented`, `equalAzDistribution`, `availabilityOriented`. You can read more in our documentation.
     */
    readonly orientation: pulumi.Input<string>;
    /**
     * Boolean, should the instance maintain its Data volumes.
     */
    readonly persistBlockDevices?: pulumi.Input<boolean>;
    /**
     * Boolean, should the instance maintain its private IP.
     */
    readonly persistPrivateIp?: pulumi.Input<boolean>;
    /**
     * Boolean, should the instance maintain its root device volumes.
     */
    readonly persistRootDevice?: pulumi.Input<boolean>;
    /**
     * Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used. Valid values: "default", "dedicated" .
     */
    readonly placementTenancy?: pulumi.Input<string>;
    /**
     * The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs. 
     * Note: Must be a sublist of `availabilityZones` and `orientation` value must not be `"equalAzDistribution"`.
     */
    readonly preferredAvailabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Private IPs to associate to the group instances.(e.g. "172.1.1.0"). Please note: This setting will only apply if persistence.persist_private_ip is set to true.
     */
    readonly privateIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Operation system type. Valid values: `"Linux/UNIX"`, `"SUSE Linux"`, `"Windows"`. 
     * For EC2 Classic instances:  `"Linux/UNIX (Amazon VPC)"`, `"SUSE Linux (Amazon VPC)"`, `"Windows (Amazon VPC)"`.
     */
    readonly product: pulumi.Input<string>;
    /**
     * The AWS region your group will be created in.
     * Note: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).
     */
    readonly region?: pulumi.Input<string>;
    /**
     * Hold settings for strategy correction â€“ replacing On-Demand for Spot instances. Supported Values: `"never"`, `"always"`, `"timeWindow"`
     */
    readonly revertToSpot?: pulumi.Input<inputs.aws.ElastigroupRevertToSpot>;
    readonly scalingDownPolicies?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupScalingDownPolicy>[]>;
    /**
     * Set termination policy.
     */
    readonly scalingStrategies?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupScalingStrategy>[]>;
    readonly scalingTargetPolicies?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupScalingTargetPolicy>[]>;
    readonly scalingUpPolicies?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupScalingUpPolicy>[]>;
    readonly scheduledTasks?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupScheduledTask>[]>;
    /**
     * A list of associated security group IDS.
     */
    readonly securityGroups: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
     */
    readonly shutdownScript?: pulumi.Input<string>;
    readonly signals?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupSignal>[]>;
    /**
     * The percentage of Spot instances that would spin up from the `desiredCapacity` number.
     */
    readonly spotPercentage?: pulumi.Input<number>;
    readonly statefulDeallocation?: pulumi.Input<inputs.aws.ElastigroupStatefulDeallocation>;
    readonly statefulInstanceActions?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupStatefulInstanceAction>[]>;
    /**
     * List of Strings of subnet identifiers.
     * Note: When this parameter is set, `availabilityZones` should be left unused.
     */
    readonly subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A key/value mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<pulumi.Input<inputs.aws.ElastigroupTag>[]>;
    /**
     * List of Target Group ARNs to register the instances to.
     */
    readonly targetGroupArns?: pulumi.Input<pulumi.Input<string>[]>;
    readonly updatePolicy?: pulumi.Input<inputs.aws.ElastigroupUpdatePolicy>;
    /**
     * The user data to provide when launching the instance.
     */
    readonly userData?: pulumi.Input<string>;
    readonly utilizeCommitments?: pulumi.Input<boolean>;
    /**
     * In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.
     */
    readonly utilizeReservedInstances?: pulumi.Input<boolean>;
    /**
     * Minimum number of instances in a 'HEALTHY' status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desiredCapacity`.
     */
    readonly waitForCapacity?: pulumi.Input<number>;
    /**
     * Time (seconds) to wait for instances to report a 'HEALTHY' status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.
     */
    readonly waitForCapacityTimeout?: pulumi.Input<number>;
}

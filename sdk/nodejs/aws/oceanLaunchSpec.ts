// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages a Spotinst Ocean AWS [Virtual Node Group](https://docs.spot.io/ocean/features/launch-specifications) resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spotinst from "@pulumi/spotinst";
 *
 * const example = new spotinst.aws.OceanLaunchSpec("example", {
 *     associatePublicIpAddress: true,
 *     autoscaleHeadrooms: [{
 *         cpuPerUnit: 1000,
 *         gpuPerUnit: 0,
 *         memoryPerUnit: 2048,
 *         numOfUnits: 5,
 *     }],
 *     blockDeviceMappings: [{
 *         deviceName: "/dev/xvda",
 *         ebs: {
 *             deleteOnTermination: true,
 *             dynamicVolumeSize: {
 *                 baseSize: 50,
 *                 resource: "CPU",
 *                 sizePerResourceUnit: 20,
 *             },
 *             encrypted: false,
 *             throughput: 500,
 *             volumeSize: 50,
 *             volumeType: "gp2",
 *         },
 *     }],
 *     createOptions: {
 *         initialNodes: 1,
 *     },
 *     elasticIpPools: [{
 *         tagSelector: {
 *             tagKey: "key",
 *             tagValue: "value",
 *         },
 *     }],
 *     iamInstanceProfile: "iam-profile",
 *     imageId: "ami-123456",
 *     instanceTypes: [
 *         "m4.large",
 *         "m4.xlarge",
 *         "m4.2xlarge",
 *         "m4.4xlarge",
 *     ],
 *     labels: [{
 *         key: "key1",
 *         value: "value1",
 *     }],
 *     oceanId: "o-123456",
 *     preferredSpotTypes: [
 *         "m4.large",
 *         "m4.xlarge",
 *     ],
 *     resourceLimits: [{
 *         maxInstanceCount: 4,
 *     }],
 *     restrictScaleDown: true,
 *     rootVolumeSize: 30,
 *     securityGroups: ["sg-987654321"],
 *     strategies: [{
 *         spotPercentage: 70,
 *     }],
 *     subnetIds: ["subnet-1234"],
 *     tags: [{
 *         key: "Env",
 *         value: "production",
 *     }],
 *     taints: [{
 *         effect: "NoExecute",
 *         key: "key1",
 *         value: "value1",
 *     }],
 *     userData: "echo Hello, world!",
 * });
 * ```
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 *
 * export const oceanLaunchspecId = spotinst_ocean_aws_launch_spec.example.id;
 * ```
 */
export class OceanLaunchSpec extends pulumi.CustomResource {
    /**
     * Get an existing OceanLaunchSpec resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OceanLaunchSpecState, opts?: pulumi.CustomResourceOptions): OceanLaunchSpec {
        return new OceanLaunchSpec(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spotinst:aws/oceanLaunchSpec:OceanLaunchSpec';

    /**
     * Returns true if the given object is an instance of OceanLaunchSpec.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OceanLaunchSpec {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OceanLaunchSpec.__pulumiType;
    }

    /**
     * Configure public IP address allocation.
     */
    public readonly associatePublicIpAddress!: pulumi.Output<boolean | undefined>;
    /**
     * Set custom headroom per Virtual Node Group. Provide a list of headrooms object.
     */
    public readonly autoscaleHeadrooms!: pulumi.Output<outputs.aws.OceanLaunchSpecAutoscaleHeadroom[] | undefined>;
    /**
     * Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.
     */
    public readonly blockDeviceMappings!: pulumi.Output<outputs.aws.OceanLaunchSpecBlockDeviceMapping[] | undefined>;
    public readonly createOptions!: pulumi.Output<outputs.aws.OceanLaunchSpecCreateOptions | undefined>;
    /**
     * Assign an Elastic IP to the instances spun by the Virtual Node Group. Can be null.
     */
    public readonly elasticIpPools!: pulumi.Output<outputs.aws.OceanLaunchSpecElasticIpPool[] | undefined>;
    /**
     * The ARN or name of an IAM instance profile to associate with launched instances.
     */
    public readonly iamInstanceProfile!: pulumi.Output<string | undefined>;
    /**
     * ID of the image used to launch the instances.
     */
    public readonly imageId!: pulumi.Output<string | undefined>;
    /**
     * A list of instance types allowed to be provisioned for pods pending under the specified launch specification. The list overrides the list defined for the cluster.
     */
    public readonly instanceTypes!: pulumi.Output<string[] | undefined>;
    /**
     * Optionally adds labels to instances launched in the cluster.
     */
    public readonly labels!: pulumi.Output<outputs.aws.OceanLaunchSpecLabel[] | undefined>;
    /**
     * The name of the Virtual Node Group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the Ocean cluster.
     */
    public readonly oceanId!: pulumi.Output<string>;
    /**
     * A list of instance types. Takes the preferred types into consideration while maintaining a variety of machine types running for optimized distribution.
     */
    public readonly preferredSpotTypes!: pulumi.Output<string[] | undefined>;
    public readonly resourceLimits!: pulumi.Output<outputs.aws.OceanLaunchSpecResourceLimit[] | undefined>;
    /**
     * Boolean. When set to `True`, nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.
     */
    public readonly restrictScaleDown!: pulumi.Output<boolean | undefined>;
    /**
     * Set root volume size (in GB).
     */
    public readonly rootVolumeSize!: pulumi.Output<number | undefined>;
    /**
     * Optionally adds security group IDs.
     */
    public readonly securityGroups!: pulumi.Output<string[] | undefined>;
    public readonly strategies!: pulumi.Output<outputs.aws.OceanLaunchSpecStrategy[] | undefined>;
    /**
     * A list of subnet IDs.
     */
    public readonly subnetIds!: pulumi.Output<string[] | undefined>;
    /**
     * A key/value mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<outputs.aws.OceanLaunchSpecTag[] | undefined>;
    /**
     * Optionally adds labels to instances launched in the cluster.
     */
    public readonly taints!: pulumi.Output<outputs.aws.OceanLaunchSpecTaint[] | undefined>;
    /**
     * Base64-encoded MIME user data to make available to the instances.
     */
    public readonly userData!: pulumi.Output<string | undefined>;

    /**
     * Create a OceanLaunchSpec resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OceanLaunchSpecArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OceanLaunchSpecArgs | OceanLaunchSpecState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OceanLaunchSpecState | undefined;
            inputs["associatePublicIpAddress"] = state ? state.associatePublicIpAddress : undefined;
            inputs["autoscaleHeadrooms"] = state ? state.autoscaleHeadrooms : undefined;
            inputs["blockDeviceMappings"] = state ? state.blockDeviceMappings : undefined;
            inputs["createOptions"] = state ? state.createOptions : undefined;
            inputs["elasticIpPools"] = state ? state.elasticIpPools : undefined;
            inputs["iamInstanceProfile"] = state ? state.iamInstanceProfile : undefined;
            inputs["imageId"] = state ? state.imageId : undefined;
            inputs["instanceTypes"] = state ? state.instanceTypes : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["oceanId"] = state ? state.oceanId : undefined;
            inputs["preferredSpotTypes"] = state ? state.preferredSpotTypes : undefined;
            inputs["resourceLimits"] = state ? state.resourceLimits : undefined;
            inputs["restrictScaleDown"] = state ? state.restrictScaleDown : undefined;
            inputs["rootVolumeSize"] = state ? state.rootVolumeSize : undefined;
            inputs["securityGroups"] = state ? state.securityGroups : undefined;
            inputs["strategies"] = state ? state.strategies : undefined;
            inputs["subnetIds"] = state ? state.subnetIds : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["taints"] = state ? state.taints : undefined;
            inputs["userData"] = state ? state.userData : undefined;
        } else {
            const args = argsOrState as OceanLaunchSpecArgs | undefined;
            if ((!args || args.oceanId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oceanId'");
            }
            inputs["associatePublicIpAddress"] = args ? args.associatePublicIpAddress : undefined;
            inputs["autoscaleHeadrooms"] = args ? args.autoscaleHeadrooms : undefined;
            inputs["blockDeviceMappings"] = args ? args.blockDeviceMappings : undefined;
            inputs["createOptions"] = args ? args.createOptions : undefined;
            inputs["elasticIpPools"] = args ? args.elasticIpPools : undefined;
            inputs["iamInstanceProfile"] = args ? args.iamInstanceProfile : undefined;
            inputs["imageId"] = args ? args.imageId : undefined;
            inputs["instanceTypes"] = args ? args.instanceTypes : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["oceanId"] = args ? args.oceanId : undefined;
            inputs["preferredSpotTypes"] = args ? args.preferredSpotTypes : undefined;
            inputs["resourceLimits"] = args ? args.resourceLimits : undefined;
            inputs["restrictScaleDown"] = args ? args.restrictScaleDown : undefined;
            inputs["rootVolumeSize"] = args ? args.rootVolumeSize : undefined;
            inputs["securityGroups"] = args ? args.securityGroups : undefined;
            inputs["strategies"] = args ? args.strategies : undefined;
            inputs["subnetIds"] = args ? args.subnetIds : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["taints"] = args ? args.taints : undefined;
            inputs["userData"] = args ? args.userData : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(OceanLaunchSpec.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OceanLaunchSpec resources.
 */
export interface OceanLaunchSpecState {
    /**
     * Configure public IP address allocation.
     */
    readonly associatePublicIpAddress?: pulumi.Input<boolean>;
    /**
     * Set custom headroom per Virtual Node Group. Provide a list of headrooms object.
     */
    readonly autoscaleHeadrooms?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecAutoscaleHeadroom>[]>;
    /**
     * Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.
     */
    readonly blockDeviceMappings?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecBlockDeviceMapping>[]>;
    readonly createOptions?: pulumi.Input<inputs.aws.OceanLaunchSpecCreateOptions>;
    /**
     * Assign an Elastic IP to the instances spun by the Virtual Node Group. Can be null.
     */
    readonly elasticIpPools?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecElasticIpPool>[]>;
    /**
     * The ARN or name of an IAM instance profile to associate with launched instances.
     */
    readonly iamInstanceProfile?: pulumi.Input<string>;
    /**
     * ID of the image used to launch the instances.
     */
    readonly imageId?: pulumi.Input<string>;
    /**
     * A list of instance types allowed to be provisioned for pods pending under the specified launch specification. The list overrides the list defined for the cluster.
     */
    readonly instanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Optionally adds labels to instances launched in the cluster.
     */
    readonly labels?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecLabel>[]>;
    /**
     * The name of the Virtual Node Group.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the Ocean cluster.
     */
    readonly oceanId?: pulumi.Input<string>;
    /**
     * A list of instance types. Takes the preferred types into consideration while maintaining a variety of machine types running for optimized distribution.
     */
    readonly preferredSpotTypes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly resourceLimits?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecResourceLimit>[]>;
    /**
     * Boolean. When set to `True`, nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.
     */
    readonly restrictScaleDown?: pulumi.Input<boolean>;
    /**
     * Set root volume size (in GB).
     */
    readonly rootVolumeSize?: pulumi.Input<number>;
    /**
     * Optionally adds security group IDs.
     */
    readonly securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    readonly strategies?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecStrategy>[]>;
    /**
     * A list of subnet IDs.
     */
    readonly subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A key/value mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecTag>[]>;
    /**
     * Optionally adds labels to instances launched in the cluster.
     */
    readonly taints?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecTaint>[]>;
    /**
     * Base64-encoded MIME user data to make available to the instances.
     */
    readonly userData?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OceanLaunchSpec resource.
 */
export interface OceanLaunchSpecArgs {
    /**
     * Configure public IP address allocation.
     */
    readonly associatePublicIpAddress?: pulumi.Input<boolean>;
    /**
     * Set custom headroom per Virtual Node Group. Provide a list of headrooms object.
     */
    readonly autoscaleHeadrooms?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecAutoscaleHeadroom>[]>;
    /**
     * Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.
     */
    readonly blockDeviceMappings?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecBlockDeviceMapping>[]>;
    readonly createOptions?: pulumi.Input<inputs.aws.OceanLaunchSpecCreateOptions>;
    /**
     * Assign an Elastic IP to the instances spun by the Virtual Node Group. Can be null.
     */
    readonly elasticIpPools?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecElasticIpPool>[]>;
    /**
     * The ARN or name of an IAM instance profile to associate with launched instances.
     */
    readonly iamInstanceProfile?: pulumi.Input<string>;
    /**
     * ID of the image used to launch the instances.
     */
    readonly imageId?: pulumi.Input<string>;
    /**
     * A list of instance types allowed to be provisioned for pods pending under the specified launch specification. The list overrides the list defined for the cluster.
     */
    readonly instanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Optionally adds labels to instances launched in the cluster.
     */
    readonly labels?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecLabel>[]>;
    /**
     * The name of the Virtual Node Group.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the Ocean cluster.
     */
    readonly oceanId: pulumi.Input<string>;
    /**
     * A list of instance types. Takes the preferred types into consideration while maintaining a variety of machine types running for optimized distribution.
     */
    readonly preferredSpotTypes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly resourceLimits?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecResourceLimit>[]>;
    /**
     * Boolean. When set to `True`, nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.
     */
    readonly restrictScaleDown?: pulumi.Input<boolean>;
    /**
     * Set root volume size (in GB).
     */
    readonly rootVolumeSize?: pulumi.Input<number>;
    /**
     * Optionally adds security group IDs.
     */
    readonly securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    readonly strategies?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecStrategy>[]>;
    /**
     * A list of subnet IDs.
     */
    readonly subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A key/value mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecTag>[]>;
    /**
     * Optionally adds labels to instances launched in the cluster.
     */
    readonly taints?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecTaint>[]>;
    /**
     * Base64-encoded MIME user data to make available to the instances.
     */
    readonly userData?: pulumi.Input<string>;
}

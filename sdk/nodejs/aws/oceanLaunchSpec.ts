// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a custom Spotinst Ocean AWS Launch Spec resource.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spotinst from "@pulumi/spotinst";
 * 
 * const example = new spotinst.aws.OceanLaunchSpec("example", {
 *     iamInstanceProfile: "iam-profile",
 *     imageId: "ami-123456",
 *     labels: [{
 *         key: "fakeKey",
 *         value: "fakeValue",
 *     }],
 *     oceanId: "o-123456",
 *     taints: [{
 *         effect: "NoExecute",
 *         key: "taint key updated",
 *         value: "taint value updated",
 *     }],
 *     userData: "echo hello world",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-spotinst/blob/master/website/docs/r/ocean_aws_launch_spec.html.markdown.
 */
export class OceanLaunchSpec extends pulumi.CustomResource {
    /**
     * Get an existing OceanLaunchSpec resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OceanLaunchSpecState, opts?: pulumi.CustomResourceOptions): OceanLaunchSpec {
        return new OceanLaunchSpec(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spotinst:aws/oceanLaunchSpec:OceanLaunchSpec';

    /**
     * Returns true if the given object is an instance of OceanLaunchSpec.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OceanLaunchSpec {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OceanLaunchSpec.__pulumiType;
    }

    /**
     * The ARN or name of an IAM instance profile to associate with launched instances.
     */
    public readonly iamInstanceProfile!: pulumi.Output<string | undefined>;
    /**
     * ID of the image used to launch the instances.
     */
    public readonly imageId!: pulumi.Output<string | undefined>;
    /**
     * Optionally adds labels to instances launched in an Ocean cluster.
     */
    public readonly labels!: pulumi.Output<outputs.aws.OceanLaunchSpecLabel[] | undefined>;
    /**
     * The ocean cluster you wish to 
     */
    public readonly oceanId!: pulumi.Output<string>;
    /**
     * Optionally adds labels to instances launched in an Ocean cluster.
     */
    public readonly taints!: pulumi.Output<outputs.aws.OceanLaunchSpecTaint[] | undefined>;
    /**
     * Base64-encoded MIME user data to make available to the instances.
     */
    public readonly userData!: pulumi.Output<string | undefined>;

    /**
     * Create a OceanLaunchSpec resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OceanLaunchSpecArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OceanLaunchSpecArgs | OceanLaunchSpecState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as OceanLaunchSpecState | undefined;
            inputs["iamInstanceProfile"] = state ? state.iamInstanceProfile : undefined;
            inputs["imageId"] = state ? state.imageId : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["oceanId"] = state ? state.oceanId : undefined;
            inputs["taints"] = state ? state.taints : undefined;
            inputs["userData"] = state ? state.userData : undefined;
        } else {
            const args = argsOrState as OceanLaunchSpecArgs | undefined;
            if (!args || args.oceanId === undefined) {
                throw new Error("Missing required property 'oceanId'");
            }
            inputs["iamInstanceProfile"] = args ? args.iamInstanceProfile : undefined;
            inputs["imageId"] = args ? args.imageId : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["oceanId"] = args ? args.oceanId : undefined;
            inputs["taints"] = args ? args.taints : undefined;
            inputs["userData"] = args ? args.userData : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(OceanLaunchSpec.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OceanLaunchSpec resources.
 */
export interface OceanLaunchSpecState {
    /**
     * The ARN or name of an IAM instance profile to associate with launched instances.
     */
    readonly iamInstanceProfile?: pulumi.Input<string>;
    /**
     * ID of the image used to launch the instances.
     */
    readonly imageId?: pulumi.Input<string>;
    /**
     * Optionally adds labels to instances launched in an Ocean cluster.
     */
    readonly labels?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecLabel>[]>;
    /**
     * The ocean cluster you wish to 
     */
    readonly oceanId?: pulumi.Input<string>;
    /**
     * Optionally adds labels to instances launched in an Ocean cluster.
     */
    readonly taints?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecTaint>[]>;
    /**
     * Base64-encoded MIME user data to make available to the instances.
     */
    readonly userData?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OceanLaunchSpec resource.
 */
export interface OceanLaunchSpecArgs {
    /**
     * The ARN or name of an IAM instance profile to associate with launched instances.
     */
    readonly iamInstanceProfile?: pulumi.Input<string>;
    /**
     * ID of the image used to launch the instances.
     */
    readonly imageId?: pulumi.Input<string>;
    /**
     * Optionally adds labels to instances launched in an Ocean cluster.
     */
    readonly labels?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecLabel>[]>;
    /**
     * The ocean cluster you wish to 
     */
    readonly oceanId: pulumi.Input<string>;
    /**
     * Optionally adds labels to instances launched in an Ocean cluster.
     */
    readonly taints?: pulumi.Input<pulumi.Input<inputs.aws.OceanLaunchSpecTaint>[]>;
    /**
     * Base64-encoded MIME user data to make available to the instances.
     */
    readonly userData?: pulumi.Input<string>;
}

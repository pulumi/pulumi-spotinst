// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a Spotinst AWS MrScaler resource.
 *
 * ## Provisioning Timeout (Clone, New strategies)
 *
 * * `timeout` - (Optional) The amount of time (minutes) after which the cluster is automatically terminated if it's still in provisioning status. Minimum: '15'.
 * * `timeoutAction` - (Optional) The action to take if the timeout is exceeded. Valid values: `terminate`, `terminateAndRetry`.
 *
 * <a id="cluster-config"></a>
 * ## Cluster Configuration (New strategy only)
 *
 * * `logUri` - (Optional) The path to the Amazon S3 location where logs for this cluster are stored.
 * * `additionalInfo` - (Optional) This is meta information about third-party applications that third-party vendors use for testing purposes.
 * * `securityConfig` - (Optional) The name of the security configuration applied to the cluster.
 * * `serviceRole` - (Optional) The IAM role that will be assumed by the Amazon EMR service to access AWS resources on your behalf.
 * * `jobFlowRole` - (Optional) The IAM role that was specified when the job flow was launched. The EC2 instances of the job flow assume this role.
 * * `terminationProtected` - (Optional) Specifies whether the Amazon EC2 instances in the cluster are protected from termination by API calls, user intervention, or in the event of a job-flow error.
 * * `keepJobFlowAlive` - (Optional) Specifies whether the cluster should remain available after completing all steps.
 * * `retries` - (Optional; Requires: `timeoutAction` is set to `terminateAndRetry`) Specifies the maximum number of times a capacity provisioning should be retried if the provisioning timeout is exceeded. Valid values: `1-5`.
 *
 * <a id="task-group"></a>
 * ## Task Group (Wrap, Clone, and New strategies)
 *
 * * `taskInstanceTypes` - (Required) The MrScaler instance types for the task nodes.
 * * `taskTarget` - (Required) amount of instances in task group.
 * * `taskMaximum` - (Optional) maximal amount of instances in task group.
 * * `taskMinimum` - (Optional) The minimal amount of instances in task group.
 * * `taskUnit` - (Optional, Default: `instance`) Unit of task group for target, min and max. The unit could be `instance` or `weight`. instance - amount of instances. weight - amount of vCPU.
 * * `taskLifecycle` - (Required) The MrScaler lifecycle for instances in task group. Allowed values are 'SPOT' and 'ON_DEMAND'.
 * * `taskEbsOptimized` - (Optional) EBS Optimization setting for instances in group.
 * * `taskEbsBlockDevice` - (Required) This determines the ebs configuration for your task group instances. Only a single block is allowed.
 *     * `volumesPerInstance` - (Optional; Default 1) Amount of volumes per instance in the task group.
 *     * `volumeType` - (Required) volume type. Allowed values are 'gp2', 'io1' and others.
 *     * `sizeInGb` - (Required) Size of the volume, in GBs.
 *     * `iops` - (Optional) IOPS for the volume. Required in some volume types, such as io1.
 *
 * <a id="core-group"></a>
 * ## Core Group (Clone, New strategies)
 *
 * * `coreInstanceTypes` - (Required) The MrScaler instance types for the core nodes.
 * * `coreTarget` - (Required) amount of instances in core group.
 * * `coreMaximum` - (Optional) maximal amount of instances in core group.
 * * `coreMinimum` - (Optional) The minimal amount of instances in core group.
 * * `coreUnit` - (Optional, Default: `instance`) Unit of task group for target, min and max. The unit could be `instance` or `weight`. instance - amount of instances. weight - amount of vCPU.
 * * `coreLifecycle` - (Required) The MrScaler lifecycle for instances in core group. Allowed values are 'SPOT' and 'ON_DEMAND'.
 * * `coreEbsOptimized` - (Optional) EBS Optimization setting for instances in group.
 * * `coreEbsBlockDevice` - (Required) This determines the ebs configuration for your core group instances. Only a single block is allowed.
 *     * `volumesPerInstance` - (Optional; Default 1) Amount of volumes per instance in the core group.
 *     * `volumeType` - (Required) volume type. Allowed values are 'gp2', 'io1' and others.
 *     * `sizeInGb` - (Required) Size of the volume, in GBs.
 *     * `iops` - (Optional) IOPS for the volume. Required in some volume types, such as io1.
 *
 * <a id="master-group"></a>
 * ## Master Group (Clone, New strategies)
 *
 * * `masterInstanceTypes` - (Required) The MrScaler instance types for the master nodes.
 * * `masterLifecycle` - (Required) The MrScaler lifecycle for instances in master group. Allowed values are 'SPOT' and 'ON_DEMAND'.
 * * `masterEbsOptimized` - (Optional) EBS Optimization setting for instances in group.
 * * `masterEbsBlockDevice` - (Required) This determines the ebs configuration for your master group instances. Only a single block is allowed.
 *     * `volumesPerInstance` - (Optional; Default 1) Amount of volumes per instance in the master group.
 *     * `volumeType` - (Required) volume type. Allowed values are 'gp2', 'io1' and others.
 *     * `sizeInGb` - (Required) Size of the volume, in GBs.
 *     * `iops` - (Optional) IOPS for the volume. Required in some volume types, such as io1.
 *
 * <a id="tags"></a>
 * ## Tags (Clone, New strategies)
 *
 * * `tags` - (Optional) A list of tags to assign to the resource. You may define multiple tags.
 *     * `key` - (Required) Tag key.
 *     * `value` - (Required) Tag value.
 *
 * <a id="Optional Compute Parameters"></a>
 * ## Optional Compute Parameters (New strategy)
 *
 * * `managedPrimarySecurityGroup` - (Optional) EMR Managed Security group that will be set to the primary instance group.
 * * `managedReplicaSecurityGroup` - (Optional) EMR Managed Security group that will be set to the replica instance group.
 * * `serviceAccessSecurityGroup` - (Optional) The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.
 * * `additionalPrimarySecurityGroups` - (Optional) A list of additional Amazon EC2 security group IDs for the master node.
 * * `additionalReplicaSecurityGroups` - (Optional) A list of additional Amazon EC2 security group IDs for the core and task nodes.
 * * `customAmiId` - (Optional) The ID of a custom Amazon EBS-backed Linux AMI if the cluster uses a custom AMI.
 * * `repoUpgradeOnBoot` - (Optional) Applies only when `customAmiId` is used. Specifies the type of updates that are applied from the Amazon Linux AMI package repositories when an instance boots using the AMI. Possible values include: `SECURITY`, `NONE`.
 * * `ec2KeyName` - (Optional) The name of an Amazon EC2 key pair that can be used to ssh to the master node.
 * * `applications` - (Optional) A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster
 *     * `args` - (Optional) Arguments for EMR to pass to the application.
 *     * `name` - (Required) The application name.
 *     * `version`- (Optional)T he version of the application.
 * * `instanceWeights` - (Optional) Describes the instance and weights. Check out [Elastigroup Weighted Instances](https://api.spotinst.com/elastigroup-for-aws/concepts/general-concepts/elastigroup-capacity-instances-or-weighted) for more info.
 *     * `instanceType` - (Required) The type of the instance.
 *     * `weightedCapacity` - (Required) The weight given to the associated instance type.
 *
 * <a id="availability-zone"></a>
 * ## Availability Zones (Clone, New strategies)
 *
 * * `availabilityZones` - (Required in Clone) List of AZs and their subnet Ids. See example above for usage.
 *
 * <a id="configurations"></a>
 * ## Configurations (Clone, New strategies)
 *
 * * `configurationsFile` - (Optional) Describes path to S3 file containing description of configurations. [More Information](https://api.spotinst.com/elastigroup-for-aws/services-integrations/elastic-mapreduce/import-an-emr-cluster/advanced/)
 *     * `bucket` - (Required) S3 Bucket name for configurations.
 *     * `key`- (Required) S3 key for configurations.
 *
 * <a id="steps"></a>
 * ## Steps (Clone, New strategies)
 *
 * * `stepsFile` - (Optional) Steps from S3.
 *     * `bucket` - (Required) S3 Bucket name for steps.
 *     * `key`- (Required) S3 key for steps.
 *
 * <a id="boostrap-actions"></a>
 * ## Bootstrap Actions (Clone, New strategies)
 *
 * * `bootstrapActionsFile` - (Optional) Describes path to S3 file containing description of bootstrap actions. [More Information](https://api.spotinst.com/elastigroup-for-aws/services-integrations/elastic-mapreduce/import-an-emr-cluster/advanced/)
 *     * `bucket` - (Required) S3 Bucket name for bootstrap actions.
 *     * `key`- (Required) S3 key for bootstrap actions.
 *
 * <a id="scaling-policy"></a>
 * ## Scaling Policies
 *
 * Possible task group scaling policies (Wrap, Clone, and New strategies):
 * * `taskScalingUpPolicy`
 * * `taskScalingDownPolicy`
 *
 * Possible core group scaling policies (Clone, New strategies):
 * * `coreScalingUpPolicy`
 * * `coreScalingDownPolicy`
 *
 * Each `*_scaling_*_policy` supports the following:
 *
 * * `policyName` - (Required) The name of the policy.
 * * `metricName` - (Required) The name of the metric, with or without spaces.
 * * `statistic` - (Required) The metric statistics to return. For information about specific statistics go to [Statistics](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/index.html?CHAP_TerminologyandKeyConcepts.html#Statistic) in the Amazon CloudWatch Developer Guide.
 * * `unit` - (Required) The unit for the metric.
 * * `threshold` - (Required) The value against which the specified statistic is compared.
 * * `adjustment` - (Optional) The number of instances to add/remove to/from the target capacity when scale is needed.
 * * `minTargetCapacity` - (Optional) Min target capacity for scale up.
 * * `maxTargetCapacity` - (Optional) Max target capacity for scale down.
 * * `namespace` - (Required) The namespace for the metric.
 * * `operator` - (Required) The operator to use. Allowed values are : 'gt', 'gte', 'lt' , 'lte'.
 * * `evaluationPeriods` - (Required) The number of periods over which data is compared to the specified threshold.
 * * `period` - (Required) The granularity, in seconds, of the returned datapoints. Period must be at least 60 seconds and must be a multiple of 60.
 * * `cooldown` - (Required) The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
 * * `dimensions` - (Optional) A mapping of dimensions describing qualities of the metric.
 * * `minimum` - (Optional) The minimum to set when scale is needed.
 * * `maximum` - (Optional) The maximum to set when scale is needed.
 * * `target` - (Optional) The number of instances to set when scale is needed.
 * * `actionType` - (Required) The type of action to perform. Allowed values are : 'adjustment', 'setMinTarget', 'setMaxTarget', 'updateCapacity', 'percentageAdjustment'
 *
 * <a id="scheduled-task"></a>
 * ## Scheduled Tasks
 *
 * * `scheduledTask` - (Optional) An array of scheduled tasks.
 * * `isEnabled` - (Optional) Enable/Disable the specified scheduling task.
 * * `taskType` - (Required) The type of task to be scheduled. Valid values: `setCapacity`.
 * * `instanceGroupType` - (Required) Select the EMR instance groups to execute the scheduled task on. Valid values: `task`.
 * * `cron` - (Required) A cron expression representing the schedule for the task.
 * * `desiredCapacity` - (Optional) New desired capacity for the elastigroup.
 * * `minCapacity` - (Optional) New min capacity for the elastigroup.
 * * `maxCapacity` - (Optional) New max capacity for the elastigroup.
 *
 * <a id="termination-policies"></a>
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * ```
 * ### New Strategy
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spotinst from "@pulumi/spotinst";
 *
 * const terraform_MrScaler_01 = new spotinst.aws.MrScalar("Terraform-MrScaler-01", {
 *     additionalInfo: "{'test':'more information'}",
 *     additionalPrimarySecurityGroups: ["sg-456321"],
 *     additionalReplicaSecurityGroups: ["sg-123654"],
 *     applications: [
 *         {
 *             name: "Ganglia",
 *             version: "1.0",
 *         },
 *         {
 *             name: "Hadoop",
 *         },
 *         {
 *             args: [
 *                 "fake",
 *                 "args",
 *             ],
 *             name: "Pig",
 *         },
 *     ],
 *     availabilityZones: ["us-west-2a:subnet-123456"],
 *     bootstrapActionsFiles: [{
 *         bucket: "terraform-emr-test",
 *         key: "bootstrap-actions.json",
 *     }],
 *     configurationsFiles: [{
 *         bucket: "example-bucket",
 *         key: "configurations.json",
 *     }],
 *     coreDesiredCapacity: 1,
 *     coreEbsBlockDevices: [{
 *         sizeInGb: 40,
 *         volumeType: "gp2",
 *         volumesPerInstance: 2,
 *     }],
 *     coreEbsOptimized: false,
 *     // --- CORE GROUP -------------
 *     coreInstanceTypes: [
 *         "c3.xlarge",
 *         "c4.xlarge",
 *     ],
 *     coreLifecycle: "ON_DEMAND",
 *     coreMaxSize: 1,
 *     coreMinSize: 1,
 *     coreUnit: "instance",
 *     // --- OPTONAL COMPUTE -----
 *     customAmiId: "ami-123456",
 *     description: "Testing MrScaler creation via Terraform",
 *     ec2KeyName: "test-key",
 *     instanceWeights: [
 *         {
 *             instanceType: "t2.small",
 *             weightedCapacity: 10,
 *         },
 *         {
 *             instanceType: "t2.medium",
 *             weightedCapacity: 90,
 *         },
 *     ],
 *     jobFlowRole: "EMR_EC2_ExampleRole",
 *     keepJobFlowAlive: true,
 *     // --- CLUSTER ------------
 *     logUri: "s3://example-logs",
 *     managedPrimarySecurityGroup: "sg-123456",
 *     managedReplicaSecurityGroup: "sg-987654",
 *     masterEbsBlockDevices: [{
 *         sizeInGb: 30,
 *         volumeType: "gp2",
 *         volumesPerInstance: 1,
 *     }],
 *     masterEbsOptimized: true,
 *     // --- MASTER GROUP -------------
 *     masterInstanceTypes: ["c3.xlarge"],
 *     masterLifecycle: "SPOT",
 *     provisioningTimeout: {
 *         timeout: 15,
 *         timeoutAction: "terminateAndRetry",
 *     },
 *     region: "us-west-2",
 *     releaseLabel: "emr-5.17.0",
 *     repoUpgradeOnBoot: "NONE",
 *     retries: 2,
 *     securityConfig: "example-config",
 *     serviceAccessSecurityGroup: "access-example",
 *     serviceRole: "example-role",
 *     stepsFiles: [{
 *         bucket: "example-bucket",
 *         key: "steps.json",
 *     }],
 *     strategy: "new",
 *     // --- TAGS -------------------
 *     tags: [{
 *         key: "Creator",
 *         value: "Terraform",
 *     }],
 *     taskDesiredCapacity: 1,
 *     taskEbsBlockDevices: [{
 *         sizeInGb: 40,
 *         volumeType: "gp2",
 *         volumesPerInstance: 2,
 *     }],
 *     taskEbsOptimized: false,
 *     // --- TASK GROUP -------------
 *     taskInstanceTypes: [
 *         "c3.xlarge",
 *         "c4.xlarge",
 *     ],
 *     taskLifecycle: "SPOT",
 *     taskMaxSize: 30,
 *     taskMinSize: 0,
 *     taskUnit: "instance",
 *     terminationProtected: false,
 * });
 * ```
 * ### Clone Strategy
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spotinst from "@pulumi/spotinst";
 *
 * const terraform_MrScaler_01 = new spotinst.aws.MrScalar("Terraform-MrScaler-01", {
 *     availabilityZones: ["us-west-2a:subnet-12345678"],
 *     clusterId: "j-123456789",
 *     coreDesiredCapacity: 1,
 *     coreEbsBlockDevices: [{
 *         sizeInGb: 40,
 *         volumeType: "gp2",
 *         volumesPerInstance: 2,
 *     }],
 *     coreEbsOptimized: false,
 *     // --- CORE GROUP -------------
 *     coreInstanceTypes: [
 *         "c3.xlarge",
 *         "c4.xlarge",
 *     ],
 *     coreLifecycle: "ON_DEMAND",
 *     coreMaxSize: 1,
 *     coreMinSize: 1,
 *     coreUnit: "instance",
 *     description: "Testing MrScaler creation via Terraform",
 *     exposeClusterId: true,
 *     masterEbsBlockDevices: [{
 *         sizeInGb: 30,
 *         volumeType: "gp2",
 *         volumesPerInstance: 1,
 *     }],
 *     masterEbsOptimized: true,
 *     // --- MASTER GROUP -------------
 *     masterInstanceTypes: ["c3.xlarge"],
 *     masterLifecycle: "SPOT",
 *     region: "us-west-2",
 *     strategy: "clone",
 *     // --- TAGS -------------------
 *     tags: [{
 *         key: "Creator",
 *         value: "Terraform",
 *     }],
 *     taskDesiredCapacity: 1,
 *     taskEbsBlockDevices: [{
 *         sizeInGb: 40,
 *         volumeType: "gp2",
 *         volumesPerInstance: 2,
 *     }],
 *     taskEbsOptimized: false,
 *     // --- TASK GROUP -------------
 *     taskInstanceTypes: [
 *         "c3.xlarge",
 *         "c4.xlarge",
 *     ],
 *     taskLifecycle: "SPOT",
 *     taskMaxSize: 30,
 *     taskMinSize: 0,
 *     // --- TASK SCALING POLICY ------
 *     taskScalingDownPolicies: [{
 *         actionType: "",
 *         adjustment: "1",
 *         cooldown: 60,
 *         dimensions: {
 *             name: "name-1",
 *             value: "value-1",
 *         },
 *         evaluationPeriods: 10,
 *         maxTargetCapacity: "1",
 *         maximum: "10",
 *         metricName: "CPUUtilization",
 *         minimum: "0",
 *         namespace: "AWS/EC2",
 *         operator: "gt",
 *         period: 60,
 *         policyName: "policy-name",
 *         statistic: "average",
 *         target: "5",
 *         threshold: 10,
 *         unit: "",
 *     }],
 *     taskUnit: "instance",
 * });
 *
 * export const mrscaler_name = terraform_MrScaler_01.name;
 * export const mrscaler_created_cluster_id = terraform_MrScaler_01.outputClusterId;
 * ```
 * ### Wrap Strategy
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spotinst from "@pulumi/spotinst";
 *
 * const example_scaler_2 = new spotinst.aws.MrScalar("example-scaler-2", {
 *     clusterId: "j-27UVDEHXL4OQM",
 *     description: "created by Terraform",
 *     region: "us-west-2",
 *     strategy: "wrap",
 *     taskDesiredCapacity: 2,
 *     taskEbsBlockDevices: [{
 *         sizeInGb: 20,
 *         volumeType: "gp2",
 *         volumesPerInstance: 1,
 *     }],
 *     // --- TASK GROUP -------------
 *     taskInstanceTypes: [
 *         "c3.xlarge",
 *         "c4.xlarge",
 *     ],
 *     taskLifecycle: "SPOT",
 *     taskMaxSize: 4,
 *     taskMinSize: 0,
 *     taskUnit: "instance",
 * });
 * ```
 */
export class MrScalar extends pulumi.CustomResource {
    /**
     * Get an existing MrScalar resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MrScalarState, opts?: pulumi.CustomResourceOptions): MrScalar {
        return new MrScalar(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spotinst:aws/mrScalar:MrScalar';

    /**
     * Returns true if the given object is an instance of MrScalar.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MrScalar {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MrScalar.__pulumiType;
    }

    public readonly additionalInfo!: pulumi.Output<string | undefined>;
    public readonly additionalPrimarySecurityGroups!: pulumi.Output<string[] | undefined>;
    public readonly additionalReplicaSecurityGroups!: pulumi.Output<string[] | undefined>;
    public readonly applications!: pulumi.Output<outputs.aws.MrScalarApplication[] | undefined>;
    public readonly availabilityZones!: pulumi.Output<string[] | undefined>;
    public readonly bootstrapActionsFiles!: pulumi.Output<outputs.aws.MrScalarBootstrapActionsFile[] | undefined>;
    /**
     * The MrScaler cluster id.
     */
    public readonly clusterId!: pulumi.Output<string | undefined>;
    public readonly configurationsFiles!: pulumi.Output<outputs.aws.MrScalarConfigurationsFile[] | undefined>;
    public readonly coreDesiredCapacity!: pulumi.Output<number | undefined>;
    public readonly coreEbsBlockDevices!: pulumi.Output<outputs.aws.MrScalarCoreEbsBlockDevice[] | undefined>;
    public readonly coreEbsOptimized!: pulumi.Output<boolean | undefined>;
    public readonly coreInstanceTypes!: pulumi.Output<string[] | undefined>;
    public readonly coreLifecycle!: pulumi.Output<string | undefined>;
    public readonly coreMaxSize!: pulumi.Output<number | undefined>;
    public readonly coreMinSize!: pulumi.Output<number | undefined>;
    public readonly coreScalingDownPolicies!: pulumi.Output<outputs.aws.MrScalarCoreScalingDownPolicy[] | undefined>;
    public readonly coreScalingUpPolicies!: pulumi.Output<outputs.aws.MrScalarCoreScalingUpPolicy[] | undefined>;
    public readonly coreUnit!: pulumi.Output<string | undefined>;
    public readonly customAmiId!: pulumi.Output<string | undefined>;
    /**
     * The MrScaler description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly ebsRootVolumeSize!: pulumi.Output<number | undefined>;
    public readonly ec2KeyName!: pulumi.Output<string | undefined>;
    public readonly exposeClusterId!: pulumi.Output<boolean | undefined>;
    public readonly instanceWeights!: pulumi.Output<outputs.aws.MrScalarInstanceWeight[] | undefined>;
    public readonly jobFlowRole!: pulumi.Output<string | undefined>;
    public readonly keepJobFlowAlive!: pulumi.Output<boolean | undefined>;
    public readonly logUri!: pulumi.Output<string | undefined>;
    public readonly managedPrimarySecurityGroup!: pulumi.Output<string | undefined>;
    public readonly managedReplicaSecurityGroup!: pulumi.Output<string | undefined>;
    public readonly masterEbsBlockDevices!: pulumi.Output<outputs.aws.MrScalarMasterEbsBlockDevice[] | undefined>;
    public readonly masterEbsOptimized!: pulumi.Output<boolean | undefined>;
    public readonly masterInstanceTypes!: pulumi.Output<string[] | undefined>;
    public readonly masterLifecycle!: pulumi.Output<string | undefined>;
    /**
     * The MrScaler name.
     */
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly outputClusterId!: pulumi.Output<string>;
    public readonly provisioningTimeout!: pulumi.Output<outputs.aws.MrScalarProvisioningTimeout | undefined>;
    /**
     * The MrScaler region.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    public readonly releaseLabel!: pulumi.Output<string | undefined>;
    public readonly repoUpgradeOnBoot!: pulumi.Output<string | undefined>;
    public readonly retries!: pulumi.Output<number | undefined>;
    public readonly scheduledTasks!: pulumi.Output<outputs.aws.MrScalarScheduledTask[] | undefined>;
    public readonly securityConfig!: pulumi.Output<string | undefined>;
    public readonly serviceAccessSecurityGroup!: pulumi.Output<string | undefined>;
    public readonly serviceRole!: pulumi.Output<string | undefined>;
    public readonly stepsFiles!: pulumi.Output<outputs.aws.MrScalarStepsFile[] | undefined>;
    /**
     * The MrScaler strategy. Allowed values are `new` `clone` and `wrap`.
     */
    public readonly strategy!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.aws.MrScalarTag[] | undefined>;
    public readonly taskDesiredCapacity!: pulumi.Output<number | undefined>;
    public readonly taskEbsBlockDevices!: pulumi.Output<outputs.aws.MrScalarTaskEbsBlockDevice[] | undefined>;
    public readonly taskEbsOptimized!: pulumi.Output<boolean | undefined>;
    public readonly taskInstanceTypes!: pulumi.Output<string[] | undefined>;
    public readonly taskLifecycle!: pulumi.Output<string | undefined>;
    public readonly taskMaxSize!: pulumi.Output<number | undefined>;
    public readonly taskMinSize!: pulumi.Output<number | undefined>;
    public readonly taskScalingDownPolicies!: pulumi.Output<outputs.aws.MrScalarTaskScalingDownPolicy[] | undefined>;
    public readonly taskScalingUpPolicies!: pulumi.Output<outputs.aws.MrScalarTaskScalingUpPolicy[] | undefined>;
    public readonly taskUnit!: pulumi.Output<string | undefined>;
    /**
     * Allows defining termination policies for EMR clusters based on CloudWatch Metrics.
     */
    public readonly terminationPolicies!: pulumi.Output<outputs.aws.MrScalarTerminationPolicy[] | undefined>;
    public readonly terminationProtected!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated This field has been removed from our API and is no longer functional.
     */
    public readonly visibleToAllUsers!: pulumi.Output<boolean | undefined>;

    /**
     * Create a MrScalar resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MrScalarArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MrScalarArgs | MrScalarState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as MrScalarState | undefined;
            inputs["additionalInfo"] = state ? state.additionalInfo : undefined;
            inputs["additionalPrimarySecurityGroups"] = state ? state.additionalPrimarySecurityGroups : undefined;
            inputs["additionalReplicaSecurityGroups"] = state ? state.additionalReplicaSecurityGroups : undefined;
            inputs["applications"] = state ? state.applications : undefined;
            inputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            inputs["bootstrapActionsFiles"] = state ? state.bootstrapActionsFiles : undefined;
            inputs["clusterId"] = state ? state.clusterId : undefined;
            inputs["configurationsFiles"] = state ? state.configurationsFiles : undefined;
            inputs["coreDesiredCapacity"] = state ? state.coreDesiredCapacity : undefined;
            inputs["coreEbsBlockDevices"] = state ? state.coreEbsBlockDevices : undefined;
            inputs["coreEbsOptimized"] = state ? state.coreEbsOptimized : undefined;
            inputs["coreInstanceTypes"] = state ? state.coreInstanceTypes : undefined;
            inputs["coreLifecycle"] = state ? state.coreLifecycle : undefined;
            inputs["coreMaxSize"] = state ? state.coreMaxSize : undefined;
            inputs["coreMinSize"] = state ? state.coreMinSize : undefined;
            inputs["coreScalingDownPolicies"] = state ? state.coreScalingDownPolicies : undefined;
            inputs["coreScalingUpPolicies"] = state ? state.coreScalingUpPolicies : undefined;
            inputs["coreUnit"] = state ? state.coreUnit : undefined;
            inputs["customAmiId"] = state ? state.customAmiId : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["ebsRootVolumeSize"] = state ? state.ebsRootVolumeSize : undefined;
            inputs["ec2KeyName"] = state ? state.ec2KeyName : undefined;
            inputs["exposeClusterId"] = state ? state.exposeClusterId : undefined;
            inputs["instanceWeights"] = state ? state.instanceWeights : undefined;
            inputs["jobFlowRole"] = state ? state.jobFlowRole : undefined;
            inputs["keepJobFlowAlive"] = state ? state.keepJobFlowAlive : undefined;
            inputs["logUri"] = state ? state.logUri : undefined;
            inputs["managedPrimarySecurityGroup"] = state ? state.managedPrimarySecurityGroup : undefined;
            inputs["managedReplicaSecurityGroup"] = state ? state.managedReplicaSecurityGroup : undefined;
            inputs["masterEbsBlockDevices"] = state ? state.masterEbsBlockDevices : undefined;
            inputs["masterEbsOptimized"] = state ? state.masterEbsOptimized : undefined;
            inputs["masterInstanceTypes"] = state ? state.masterInstanceTypes : undefined;
            inputs["masterLifecycle"] = state ? state.masterLifecycle : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["outputClusterId"] = state ? state.outputClusterId : undefined;
            inputs["provisioningTimeout"] = state ? state.provisioningTimeout : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["releaseLabel"] = state ? state.releaseLabel : undefined;
            inputs["repoUpgradeOnBoot"] = state ? state.repoUpgradeOnBoot : undefined;
            inputs["retries"] = state ? state.retries : undefined;
            inputs["scheduledTasks"] = state ? state.scheduledTasks : undefined;
            inputs["securityConfig"] = state ? state.securityConfig : undefined;
            inputs["serviceAccessSecurityGroup"] = state ? state.serviceAccessSecurityGroup : undefined;
            inputs["serviceRole"] = state ? state.serviceRole : undefined;
            inputs["stepsFiles"] = state ? state.stepsFiles : undefined;
            inputs["strategy"] = state ? state.strategy : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["taskDesiredCapacity"] = state ? state.taskDesiredCapacity : undefined;
            inputs["taskEbsBlockDevices"] = state ? state.taskEbsBlockDevices : undefined;
            inputs["taskEbsOptimized"] = state ? state.taskEbsOptimized : undefined;
            inputs["taskInstanceTypes"] = state ? state.taskInstanceTypes : undefined;
            inputs["taskLifecycle"] = state ? state.taskLifecycle : undefined;
            inputs["taskMaxSize"] = state ? state.taskMaxSize : undefined;
            inputs["taskMinSize"] = state ? state.taskMinSize : undefined;
            inputs["taskScalingDownPolicies"] = state ? state.taskScalingDownPolicies : undefined;
            inputs["taskScalingUpPolicies"] = state ? state.taskScalingUpPolicies : undefined;
            inputs["taskUnit"] = state ? state.taskUnit : undefined;
            inputs["terminationPolicies"] = state ? state.terminationPolicies : undefined;
            inputs["terminationProtected"] = state ? state.terminationProtected : undefined;
            inputs["visibleToAllUsers"] = state ? state.visibleToAllUsers : undefined;
        } else {
            const args = argsOrState as MrScalarArgs | undefined;
            if (!args || args.strategy === undefined) {
                throw new Error("Missing required property 'strategy'");
            }
            inputs["additionalInfo"] = args ? args.additionalInfo : undefined;
            inputs["additionalPrimarySecurityGroups"] = args ? args.additionalPrimarySecurityGroups : undefined;
            inputs["additionalReplicaSecurityGroups"] = args ? args.additionalReplicaSecurityGroups : undefined;
            inputs["applications"] = args ? args.applications : undefined;
            inputs["availabilityZones"] = args ? args.availabilityZones : undefined;
            inputs["bootstrapActionsFiles"] = args ? args.bootstrapActionsFiles : undefined;
            inputs["clusterId"] = args ? args.clusterId : undefined;
            inputs["configurationsFiles"] = args ? args.configurationsFiles : undefined;
            inputs["coreDesiredCapacity"] = args ? args.coreDesiredCapacity : undefined;
            inputs["coreEbsBlockDevices"] = args ? args.coreEbsBlockDevices : undefined;
            inputs["coreEbsOptimized"] = args ? args.coreEbsOptimized : undefined;
            inputs["coreInstanceTypes"] = args ? args.coreInstanceTypes : undefined;
            inputs["coreLifecycle"] = args ? args.coreLifecycle : undefined;
            inputs["coreMaxSize"] = args ? args.coreMaxSize : undefined;
            inputs["coreMinSize"] = args ? args.coreMinSize : undefined;
            inputs["coreScalingDownPolicies"] = args ? args.coreScalingDownPolicies : undefined;
            inputs["coreScalingUpPolicies"] = args ? args.coreScalingUpPolicies : undefined;
            inputs["coreUnit"] = args ? args.coreUnit : undefined;
            inputs["customAmiId"] = args ? args.customAmiId : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["ebsRootVolumeSize"] = args ? args.ebsRootVolumeSize : undefined;
            inputs["ec2KeyName"] = args ? args.ec2KeyName : undefined;
            inputs["exposeClusterId"] = args ? args.exposeClusterId : undefined;
            inputs["instanceWeights"] = args ? args.instanceWeights : undefined;
            inputs["jobFlowRole"] = args ? args.jobFlowRole : undefined;
            inputs["keepJobFlowAlive"] = args ? args.keepJobFlowAlive : undefined;
            inputs["logUri"] = args ? args.logUri : undefined;
            inputs["managedPrimarySecurityGroup"] = args ? args.managedPrimarySecurityGroup : undefined;
            inputs["managedReplicaSecurityGroup"] = args ? args.managedReplicaSecurityGroup : undefined;
            inputs["masterEbsBlockDevices"] = args ? args.masterEbsBlockDevices : undefined;
            inputs["masterEbsOptimized"] = args ? args.masterEbsOptimized : undefined;
            inputs["masterInstanceTypes"] = args ? args.masterInstanceTypes : undefined;
            inputs["masterLifecycle"] = args ? args.masterLifecycle : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["provisioningTimeout"] = args ? args.provisioningTimeout : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["releaseLabel"] = args ? args.releaseLabel : undefined;
            inputs["repoUpgradeOnBoot"] = args ? args.repoUpgradeOnBoot : undefined;
            inputs["retries"] = args ? args.retries : undefined;
            inputs["scheduledTasks"] = args ? args.scheduledTasks : undefined;
            inputs["securityConfig"] = args ? args.securityConfig : undefined;
            inputs["serviceAccessSecurityGroup"] = args ? args.serviceAccessSecurityGroup : undefined;
            inputs["serviceRole"] = args ? args.serviceRole : undefined;
            inputs["stepsFiles"] = args ? args.stepsFiles : undefined;
            inputs["strategy"] = args ? args.strategy : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["taskDesiredCapacity"] = args ? args.taskDesiredCapacity : undefined;
            inputs["taskEbsBlockDevices"] = args ? args.taskEbsBlockDevices : undefined;
            inputs["taskEbsOptimized"] = args ? args.taskEbsOptimized : undefined;
            inputs["taskInstanceTypes"] = args ? args.taskInstanceTypes : undefined;
            inputs["taskLifecycle"] = args ? args.taskLifecycle : undefined;
            inputs["taskMaxSize"] = args ? args.taskMaxSize : undefined;
            inputs["taskMinSize"] = args ? args.taskMinSize : undefined;
            inputs["taskScalingDownPolicies"] = args ? args.taskScalingDownPolicies : undefined;
            inputs["taskScalingUpPolicies"] = args ? args.taskScalingUpPolicies : undefined;
            inputs["taskUnit"] = args ? args.taskUnit : undefined;
            inputs["terminationPolicies"] = args ? args.terminationPolicies : undefined;
            inputs["terminationProtected"] = args ? args.terminationProtected : undefined;
            inputs["visibleToAllUsers"] = args ? args.visibleToAllUsers : undefined;
            inputs["outputClusterId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(MrScalar.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MrScalar resources.
 */
export interface MrScalarState {
    readonly additionalInfo?: pulumi.Input<string>;
    readonly additionalPrimarySecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    readonly additionalReplicaSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    readonly applications?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarApplication>[]>;
    readonly availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    readonly bootstrapActionsFiles?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarBootstrapActionsFile>[]>;
    /**
     * The MrScaler cluster id.
     */
    readonly clusterId?: pulumi.Input<string>;
    readonly configurationsFiles?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarConfigurationsFile>[]>;
    readonly coreDesiredCapacity?: pulumi.Input<number>;
    readonly coreEbsBlockDevices?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarCoreEbsBlockDevice>[]>;
    readonly coreEbsOptimized?: pulumi.Input<boolean>;
    readonly coreInstanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly coreLifecycle?: pulumi.Input<string>;
    readonly coreMaxSize?: pulumi.Input<number>;
    readonly coreMinSize?: pulumi.Input<number>;
    readonly coreScalingDownPolicies?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarCoreScalingDownPolicy>[]>;
    readonly coreScalingUpPolicies?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarCoreScalingUpPolicy>[]>;
    readonly coreUnit?: pulumi.Input<string>;
    readonly customAmiId?: pulumi.Input<string>;
    /**
     * The MrScaler description.
     */
    readonly description?: pulumi.Input<string>;
    readonly ebsRootVolumeSize?: pulumi.Input<number>;
    readonly ec2KeyName?: pulumi.Input<string>;
    readonly exposeClusterId?: pulumi.Input<boolean>;
    readonly instanceWeights?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarInstanceWeight>[]>;
    readonly jobFlowRole?: pulumi.Input<string>;
    readonly keepJobFlowAlive?: pulumi.Input<boolean>;
    readonly logUri?: pulumi.Input<string>;
    readonly managedPrimarySecurityGroup?: pulumi.Input<string>;
    readonly managedReplicaSecurityGroup?: pulumi.Input<string>;
    readonly masterEbsBlockDevices?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarMasterEbsBlockDevice>[]>;
    readonly masterEbsOptimized?: pulumi.Input<boolean>;
    readonly masterInstanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly masterLifecycle?: pulumi.Input<string>;
    /**
     * The MrScaler name.
     */
    readonly name?: pulumi.Input<string>;
    readonly outputClusterId?: pulumi.Input<string>;
    readonly provisioningTimeout?: pulumi.Input<inputs.aws.MrScalarProvisioningTimeout>;
    /**
     * The MrScaler region.
     */
    readonly region?: pulumi.Input<string>;
    readonly releaseLabel?: pulumi.Input<string>;
    readonly repoUpgradeOnBoot?: pulumi.Input<string>;
    readonly retries?: pulumi.Input<number>;
    readonly scheduledTasks?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarScheduledTask>[]>;
    readonly securityConfig?: pulumi.Input<string>;
    readonly serviceAccessSecurityGroup?: pulumi.Input<string>;
    readonly serviceRole?: pulumi.Input<string>;
    readonly stepsFiles?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarStepsFile>[]>;
    /**
     * The MrScaler strategy. Allowed values are `new` `clone` and `wrap`.
     */
    readonly strategy?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarTag>[]>;
    readonly taskDesiredCapacity?: pulumi.Input<number>;
    readonly taskEbsBlockDevices?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarTaskEbsBlockDevice>[]>;
    readonly taskEbsOptimized?: pulumi.Input<boolean>;
    readonly taskInstanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly taskLifecycle?: pulumi.Input<string>;
    readonly taskMaxSize?: pulumi.Input<number>;
    readonly taskMinSize?: pulumi.Input<number>;
    readonly taskScalingDownPolicies?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarTaskScalingDownPolicy>[]>;
    readonly taskScalingUpPolicies?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarTaskScalingUpPolicy>[]>;
    readonly taskUnit?: pulumi.Input<string>;
    /**
     * Allows defining termination policies for EMR clusters based on CloudWatch Metrics.
     */
    readonly terminationPolicies?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarTerminationPolicy>[]>;
    readonly terminationProtected?: pulumi.Input<boolean>;
    /**
     * @deprecated This field has been removed from our API and is no longer functional.
     */
    readonly visibleToAllUsers?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a MrScalar resource.
 */
export interface MrScalarArgs {
    readonly additionalInfo?: pulumi.Input<string>;
    readonly additionalPrimarySecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    readonly additionalReplicaSecurityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    readonly applications?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarApplication>[]>;
    readonly availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    readonly bootstrapActionsFiles?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarBootstrapActionsFile>[]>;
    /**
     * The MrScaler cluster id.
     */
    readonly clusterId?: pulumi.Input<string>;
    readonly configurationsFiles?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarConfigurationsFile>[]>;
    readonly coreDesiredCapacity?: pulumi.Input<number>;
    readonly coreEbsBlockDevices?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarCoreEbsBlockDevice>[]>;
    readonly coreEbsOptimized?: pulumi.Input<boolean>;
    readonly coreInstanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly coreLifecycle?: pulumi.Input<string>;
    readonly coreMaxSize?: pulumi.Input<number>;
    readonly coreMinSize?: pulumi.Input<number>;
    readonly coreScalingDownPolicies?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarCoreScalingDownPolicy>[]>;
    readonly coreScalingUpPolicies?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarCoreScalingUpPolicy>[]>;
    readonly coreUnit?: pulumi.Input<string>;
    readonly customAmiId?: pulumi.Input<string>;
    /**
     * The MrScaler description.
     */
    readonly description?: pulumi.Input<string>;
    readonly ebsRootVolumeSize?: pulumi.Input<number>;
    readonly ec2KeyName?: pulumi.Input<string>;
    readonly exposeClusterId?: pulumi.Input<boolean>;
    readonly instanceWeights?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarInstanceWeight>[]>;
    readonly jobFlowRole?: pulumi.Input<string>;
    readonly keepJobFlowAlive?: pulumi.Input<boolean>;
    readonly logUri?: pulumi.Input<string>;
    readonly managedPrimarySecurityGroup?: pulumi.Input<string>;
    readonly managedReplicaSecurityGroup?: pulumi.Input<string>;
    readonly masterEbsBlockDevices?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarMasterEbsBlockDevice>[]>;
    readonly masterEbsOptimized?: pulumi.Input<boolean>;
    readonly masterInstanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly masterLifecycle?: pulumi.Input<string>;
    /**
     * The MrScaler name.
     */
    readonly name?: pulumi.Input<string>;
    readonly provisioningTimeout?: pulumi.Input<inputs.aws.MrScalarProvisioningTimeout>;
    /**
     * The MrScaler region.
     */
    readonly region?: pulumi.Input<string>;
    readonly releaseLabel?: pulumi.Input<string>;
    readonly repoUpgradeOnBoot?: pulumi.Input<string>;
    readonly retries?: pulumi.Input<number>;
    readonly scheduledTasks?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarScheduledTask>[]>;
    readonly securityConfig?: pulumi.Input<string>;
    readonly serviceAccessSecurityGroup?: pulumi.Input<string>;
    readonly serviceRole?: pulumi.Input<string>;
    readonly stepsFiles?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarStepsFile>[]>;
    /**
     * The MrScaler strategy. Allowed values are `new` `clone` and `wrap`.
     */
    readonly strategy: pulumi.Input<string>;
    readonly tags?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarTag>[]>;
    readonly taskDesiredCapacity?: pulumi.Input<number>;
    readonly taskEbsBlockDevices?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarTaskEbsBlockDevice>[]>;
    readonly taskEbsOptimized?: pulumi.Input<boolean>;
    readonly taskInstanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly taskLifecycle?: pulumi.Input<string>;
    readonly taskMaxSize?: pulumi.Input<number>;
    readonly taskMinSize?: pulumi.Input<number>;
    readonly taskScalingDownPolicies?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarTaskScalingDownPolicy>[]>;
    readonly taskScalingUpPolicies?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarTaskScalingUpPolicy>[]>;
    readonly taskUnit?: pulumi.Input<string>;
    /**
     * Allows defining termination policies for EMR clusters based on CloudWatch Metrics.
     */
    readonly terminationPolicies?: pulumi.Input<pulumi.Input<inputs.aws.MrScalarTerminationPolicy>[]>;
    readonly terminationProtected?: pulumi.Input<boolean>;
    /**
     * @deprecated This field has been removed from our API and is no longer functional.
     */
    readonly visibleToAllUsers?: pulumi.Input<boolean>;
}

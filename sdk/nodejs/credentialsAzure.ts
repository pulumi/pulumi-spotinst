// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Spotinst credential Azure resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spotinst from "@pulumi/spotinst";
 *
 * // set credential Azure
 * const credential = new spotinst.CredentialsAzure("credential", {
 *     accountId: "act-123456",
 *     clientId: "redacted",
 *     clientSecret: "redacted",
 *     tenantId: "redacted",
 *     subscriptionId: "redacted",
 *     expirationDate: "2025-12-31T23:59:00.000Z",
 * });
 * ```
 */
export class CredentialsAzure extends pulumi.CustomResource {
    /**
     * Get an existing CredentialsAzure resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CredentialsAzureState, opts?: pulumi.CustomResourceOptions): CredentialsAzure {
        return new CredentialsAzure(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spotinst:index/credentialsAzure:CredentialsAzure';

    /**
     * Returns true if the given object is an instance of CredentialsAzure.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CredentialsAzure {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CredentialsAzure.__pulumiType;
    }

    /**
     * The ID of the account associated with your token.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Set the application ID.
     */
    public readonly clientId!: pulumi.Output<string>;
    /**
     * Set the key secret.
     */
    public readonly clientSecret!: pulumi.Output<string>;
    /**
     * Set the key secret expiration date.
     */
    public readonly expirationDate!: pulumi.Output<string | undefined>;
    /**
     * Set the subscription ID.
     */
    public readonly subscriptionId!: pulumi.Output<string>;
    /**
     * Set the directory ID.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a CredentialsAzure resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CredentialsAzureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CredentialsAzureArgs | CredentialsAzureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CredentialsAzureState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["expirationDate"] = state ? state.expirationDate : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as CredentialsAzureArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.clientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if ((!args || args.clientSecret === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientSecret'");
            }
            if ((!args || args.subscriptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionId'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecret"] = args ? args.clientSecret : undefined;
            resourceInputs["expirationDate"] = args ? args.expirationDate : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CredentialsAzure.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CredentialsAzure resources.
 */
export interface CredentialsAzureState {
    /**
     * The ID of the account associated with your token.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Set the application ID.
     */
    clientId?: pulumi.Input<string>;
    /**
     * Set the key secret.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Set the key secret expiration date.
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * Set the subscription ID.
     */
    subscriptionId?: pulumi.Input<string>;
    /**
     * Set the directory ID.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CredentialsAzure resource.
 */
export interface CredentialsAzureArgs {
    /**
     * The ID of the account associated with your token.
     */
    accountId: pulumi.Input<string>;
    /**
     * Set the application ID.
     */
    clientId: pulumi.Input<string>;
    /**
     * Set the key secret.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Set the key secret expiration date.
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * Set the subscription ID.
     */
    subscriptionId: pulumi.Input<string>;
    /**
     * Set the directory ID.
     */
    tenantId: pulumi.Input<string>;
}

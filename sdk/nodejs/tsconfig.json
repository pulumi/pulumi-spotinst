{
    "compilerOptions": {
        "outDir": "bin",
        "target": "ES2020",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "account.ts",
        "aws/account.ts",
        "aws/beanstalk.ts",
        "aws/credentials.ts",
        "aws/elastigroup.ts",
        "aws/index.ts",
        "aws/managedInstance.ts",
        "aws/mrScalar.ts",
        "aws/ocean.ts",
        "aws/oceanExtendedResourceDefinition.ts",
        "aws/oceanLaunchSpec.ts",
        "aws/suspension.ts",
        "azure/index.ts",
        "azure/oceanNp.ts",
        "azure/oceanNpVirtualNodeGroup.ts",
        "config/index.ts",
        "config/vars.ts",
        "credentialsAzure.ts",
        "credentialsGcp.ts",
        "dataIntegration.ts",
        "ecs/index.ts",
        "ecs/ocean.ts",
        "ecs/oceanLaunchSpec.ts",
        "elastigroupAzureV3.ts",
        "gcp/elastigroup.ts",
        "gcp/index.ts",
        "gke/elastigroup.ts",
        "gke/index.ts",
        "gke/oceanImport.ts",
        "gke/oceanLaunchSpec.ts",
        "gke/oceanLaunchSpecImport.ts",
        "healthCheck.ts",
        "index.ts",
        "notificationCenter.ts",
        "oceanRightSizingRule.ts",
        "oceancd/index.ts",
        "oceancd/rolloutSpec.ts",
        "oceancd/strategy.ts",
        "oceancd/verificationProvider.ts",
        "oceancd/verificationTemplate.ts",
        "organization/index.ts",
        "organization/policy.ts",
        "organization/programmaticUser.ts",
        "organization/user.ts",
        "organization/userGroup.ts",
        "provider.ts",
        "spark/index.ts",
        "spark/ocean.ts",
        "spark/oceanVirtualNodeGroup.ts",
        "statefulNodeAzure.ts",
        "subscription.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts"
    ]
}

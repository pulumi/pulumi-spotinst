// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { OceanArgs, OceanState } from "./ocean";
export type Ocean = import("./ocean").Ocean;
export const Ocean: typeof import("./ocean").Ocean = null as any;
utilities.lazyLoad(exports, ["Ocean"], () => require("./ocean"));

export { OceanLaunchSpecArgs, OceanLaunchSpecState } from "./oceanLaunchSpec";
export type OceanLaunchSpec = import("./oceanLaunchSpec").OceanLaunchSpec;
export const OceanLaunchSpec: typeof import("./oceanLaunchSpec").OceanLaunchSpec = null as any;
utilities.lazyLoad(exports, ["OceanLaunchSpec"], () => require("./oceanLaunchSpec"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "spotinst:ecs/ocean:Ocean":
                return new Ocean(name, <any>undefined, { urn })
            case "spotinst:ecs/oceanLaunchSpec:OceanLaunchSpec":
                return new OceanLaunchSpec(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("spotinst", "ecs/ocean", _module)
pulumi.runtime.registerResourceModule("spotinst", "ecs/oceanLaunchSpec", _module)

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Spotinst Multai Target Set.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as spotinst from "@pulumi/spotinst";
 *
 * const myTargetSet = new spotinst.multai.TargetSet("my_target_set", {
 *     balancerId: "b-12345",
 *     deploymentId: "dp-12345",
 *     healthCheck: {
 *         healthyThreshold: 3,
 *         interval: 20,
 *         path: "/",
 *         port: 3001,
 *         protocol: "http",
 *         timeout: 5,
 *         unhealthyThreshold: 3,
 *     },
 *     port: 1338,
 *     protocol: "http",
 *     tags: [{
 *         key: "env",
 *         value: "prod",
 *     }],
 *     weight: 2,
 * });
 * ```
 */
export class TargetSet extends pulumi.CustomResource {
    /**
     * Get an existing TargetSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TargetSetState, opts?: pulumi.CustomResourceOptions): TargetSet {
        return new TargetSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spotinst:multai/targetSet:TargetSet';

    /**
     * Returns true if the given object is an instance of TargetSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TargetSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TargetSet.__pulumiType;
    }

    /**
     * The id of the balancer.
     */
    public readonly balancerId!: pulumi.Output<string>;
    /**
     * The id of the deployment.
     */
    public readonly deploymentId!: pulumi.Output<string>;
    public readonly healthCheck!: pulumi.Output<outputs.multai.TargetSetHealthCheck>;
    /**
     * The name of the Target Set. Must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The port on which the load balancer is listening.
     */
    public readonly port!: pulumi.Output<number | undefined>;
    /**
     * The protocol to allow connections to the target for the health check.
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * A list of key:value paired tags.
     */
    public readonly tags!: pulumi.Output<outputs.multai.TargetSetTag[] | undefined>;
    /**
     * Defines how traffic is distributed between the Target Set.
     */
    public readonly weight!: pulumi.Output<number>;

    /**
     * Create a TargetSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TargetSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TargetSetArgs | TargetSetState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as TargetSetState | undefined;
            inputs["balancerId"] = state ? state.balancerId : undefined;
            inputs["deploymentId"] = state ? state.deploymentId : undefined;
            inputs["healthCheck"] = state ? state.healthCheck : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["port"] = state ? state.port : undefined;
            inputs["protocol"] = state ? state.protocol : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as TargetSetArgs | undefined;
            if (!args || args.balancerId === undefined) {
                throw new Error("Missing required property 'balancerId'");
            }
            if (!args || args.deploymentId === undefined) {
                throw new Error("Missing required property 'deploymentId'");
            }
            if (!args || args.healthCheck === undefined) {
                throw new Error("Missing required property 'healthCheck'");
            }
            if (!args || args.protocol === undefined) {
                throw new Error("Missing required property 'protocol'");
            }
            if (!args || args.weight === undefined) {
                throw new Error("Missing required property 'weight'");
            }
            inputs["balancerId"] = args ? args.balancerId : undefined;
            inputs["deploymentId"] = args ? args.deploymentId : undefined;
            inputs["healthCheck"] = args ? args.healthCheck : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["port"] = args ? args.port : undefined;
            inputs["protocol"] = args ? args.protocol : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["weight"] = args ? args.weight : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(TargetSet.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TargetSet resources.
 */
export interface TargetSetState {
    /**
     * The id of the balancer.
     */
    readonly balancerId?: pulumi.Input<string>;
    /**
     * The id of the deployment.
     */
    readonly deploymentId?: pulumi.Input<string>;
    readonly healthCheck?: pulumi.Input<inputs.multai.TargetSetHealthCheck>;
    /**
     * The name of the Target Set. Must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The port on which the load balancer is listening.
     */
    readonly port?: pulumi.Input<number>;
    /**
     * The protocol to allow connections to the target for the health check.
     */
    readonly protocol?: pulumi.Input<string>;
    /**
     * A list of key:value paired tags.
     */
    readonly tags?: pulumi.Input<pulumi.Input<inputs.multai.TargetSetTag>[]>;
    /**
     * Defines how traffic is distributed between the Target Set.
     */
    readonly weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a TargetSet resource.
 */
export interface TargetSetArgs {
    /**
     * The id of the balancer.
     */
    readonly balancerId: pulumi.Input<string>;
    /**
     * The id of the deployment.
     */
    readonly deploymentId: pulumi.Input<string>;
    readonly healthCheck: pulumi.Input<inputs.multai.TargetSetHealthCheck>;
    /**
     * The name of the Target Set. Must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The port on which the load balancer is listening.
     */
    readonly port?: pulumi.Input<number>;
    /**
     * The protocol to allow connections to the target for the health check.
     */
    readonly protocol: pulumi.Input<string>;
    /**
     * A list of key:value paired tags.
     */
    readonly tags?: pulumi.Input<pulumi.Input<inputs.multai.TargetSetTag>[]>;
    /**
     * Defines how traffic is distributed between the Target Set.
     */
    readonly weight: pulumi.Input<number>;
}

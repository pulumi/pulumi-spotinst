// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ElastigroupAzureV3 extends pulumi.CustomResource {
    /**
     * Get an existing ElastigroupAzureV3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElastigroupAzureV3State, opts?: pulumi.CustomResourceOptions): ElastigroupAzureV3 {
        return new ElastigroupAzureV3(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spotinst:index/elastigroupAzureV3:ElastigroupAzureV3';

    /**
     * Returns true if the given object is an instance of ElastigroupAzureV3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ElastigroupAzureV3 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ElastigroupAzureV3.__pulumiType;
    }

    declare public readonly availabilityVsCost: pulumi.Output<number | undefined>;
    declare public readonly bootDiagnostics: pulumi.Output<outputs.ElastigroupAzureV3BootDiagnostic[]>;
    declare public readonly capacityReservation: pulumi.Output<outputs.ElastigroupAzureV3CapacityReservation | undefined>;
    declare public readonly customData: pulumi.Output<string | undefined>;
    declare public readonly dataDisks: pulumi.Output<outputs.ElastigroupAzureV3DataDisk[] | undefined>;
    declare public readonly description: pulumi.Output<string | undefined>;
    declare public readonly desiredCapacity: pulumi.Output<number | undefined>;
    declare public readonly drainingTimeout: pulumi.Output<number>;
    declare public readonly extensions: pulumi.Output<outputs.ElastigroupAzureV3Extension[]>;
    declare public readonly fallbackToOnDemand: pulumi.Output<boolean>;
    declare public readonly health: pulumi.Output<outputs.ElastigroupAzureV3Health | undefined>;
    declare public readonly images: pulumi.Output<outputs.ElastigroupAzureV3Image[] | undefined>;
    declare public readonly loadBalancers: pulumi.Output<outputs.ElastigroupAzureV3LoadBalancer[] | undefined>;
    declare public readonly login: pulumi.Output<outputs.ElastigroupAzureV3Login | undefined>;
    declare public readonly managedServiceIdentities: pulumi.Output<outputs.ElastigroupAzureV3ManagedServiceIdentity[] | undefined>;
    declare public readonly maxSize: pulumi.Output<number>;
    declare public readonly minSize: pulumi.Output<number>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly network: pulumi.Output<outputs.ElastigroupAzureV3Network>;
    declare public readonly onDemandCount: pulumi.Output<number | undefined>;
    declare public readonly optimizationWindows: pulumi.Output<string[] | undefined>;
    declare public readonly os: pulumi.Output<string>;
    declare public readonly osDisk: pulumi.Output<outputs.ElastigroupAzureV3OsDisk | undefined>;
    declare public readonly preferredZones: pulumi.Output<string[] | undefined>;
    declare public readonly proximityPlacementGroups: pulumi.Output<outputs.ElastigroupAzureV3ProximityPlacementGroup[] | undefined>;
    declare public readonly region: pulumi.Output<string>;
    declare public readonly resourceGroupName: pulumi.Output<string>;
    declare public readonly revertToSpot: pulumi.Output<outputs.ElastigroupAzureV3RevertToSpot | undefined>;
    declare public readonly scalingDownPolicies: pulumi.Output<outputs.ElastigroupAzureV3ScalingDownPolicy[] | undefined>;
    declare public readonly scalingUpPolicies: pulumi.Output<outputs.ElastigroupAzureV3ScalingUpPolicy[] | undefined>;
    declare public readonly schedulingTasks: pulumi.Output<outputs.ElastigroupAzureV3SchedulingTask[] | undefined>;
    declare public readonly secrets: pulumi.Output<outputs.ElastigroupAzureV3Secret[] | undefined>;
    declare public readonly security: pulumi.Output<outputs.ElastigroupAzureV3Security | undefined>;
    declare public readonly shutdownScript: pulumi.Output<string | undefined>;
    declare public readonly signals: pulumi.Output<outputs.ElastigroupAzureV3Signal[] | undefined>;
    declare public readonly spotPercentage: pulumi.Output<number | undefined>;
    declare public readonly tags: pulumi.Output<outputs.ElastigroupAzureV3Tag[] | undefined>;
    declare public readonly userData: pulumi.Output<string | undefined>;
    declare public readonly vmNamePrefix: pulumi.Output<string | undefined>;
    declare public readonly vmSizes: pulumi.Output<outputs.ElastigroupAzureV3VmSizes>;
    declare public readonly zones: pulumi.Output<string[] | undefined>;

    /**
     * Create a ElastigroupAzureV3 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ElastigroupAzureV3Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElastigroupAzureV3Args | ElastigroupAzureV3State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ElastigroupAzureV3State | undefined;
            resourceInputs["availabilityVsCost"] = state?.availabilityVsCost;
            resourceInputs["bootDiagnostics"] = state?.bootDiagnostics;
            resourceInputs["capacityReservation"] = state?.capacityReservation;
            resourceInputs["customData"] = state?.customData;
            resourceInputs["dataDisks"] = state?.dataDisks;
            resourceInputs["description"] = state?.description;
            resourceInputs["desiredCapacity"] = state?.desiredCapacity;
            resourceInputs["drainingTimeout"] = state?.drainingTimeout;
            resourceInputs["extensions"] = state?.extensions;
            resourceInputs["fallbackToOnDemand"] = state?.fallbackToOnDemand;
            resourceInputs["health"] = state?.health;
            resourceInputs["images"] = state?.images;
            resourceInputs["loadBalancers"] = state?.loadBalancers;
            resourceInputs["login"] = state?.login;
            resourceInputs["managedServiceIdentities"] = state?.managedServiceIdentities;
            resourceInputs["maxSize"] = state?.maxSize;
            resourceInputs["minSize"] = state?.minSize;
            resourceInputs["name"] = state?.name;
            resourceInputs["network"] = state?.network;
            resourceInputs["onDemandCount"] = state?.onDemandCount;
            resourceInputs["optimizationWindows"] = state?.optimizationWindows;
            resourceInputs["os"] = state?.os;
            resourceInputs["osDisk"] = state?.osDisk;
            resourceInputs["preferredZones"] = state?.preferredZones;
            resourceInputs["proximityPlacementGroups"] = state?.proximityPlacementGroups;
            resourceInputs["region"] = state?.region;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["revertToSpot"] = state?.revertToSpot;
            resourceInputs["scalingDownPolicies"] = state?.scalingDownPolicies;
            resourceInputs["scalingUpPolicies"] = state?.scalingUpPolicies;
            resourceInputs["schedulingTasks"] = state?.schedulingTasks;
            resourceInputs["secrets"] = state?.secrets;
            resourceInputs["security"] = state?.security;
            resourceInputs["shutdownScript"] = state?.shutdownScript;
            resourceInputs["signals"] = state?.signals;
            resourceInputs["spotPercentage"] = state?.spotPercentage;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["userData"] = state?.userData;
            resourceInputs["vmNamePrefix"] = state?.vmNamePrefix;
            resourceInputs["vmSizes"] = state?.vmSizes;
            resourceInputs["zones"] = state?.zones;
        } else {
            const args = argsOrState as ElastigroupAzureV3Args | undefined;
            if (args?.fallbackToOnDemand === undefined && !opts.urn) {
                throw new Error("Missing required property 'fallbackToOnDemand'");
            }
            if (args?.network === undefined && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            if (args?.os === undefined && !opts.urn) {
                throw new Error("Missing required property 'os'");
            }
            if (args?.region === undefined && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.vmSizes === undefined && !opts.urn) {
                throw new Error("Missing required property 'vmSizes'");
            }
            resourceInputs["availabilityVsCost"] = args?.availabilityVsCost;
            resourceInputs["bootDiagnostics"] = args?.bootDiagnostics;
            resourceInputs["capacityReservation"] = args?.capacityReservation;
            resourceInputs["customData"] = args?.customData;
            resourceInputs["dataDisks"] = args?.dataDisks;
            resourceInputs["description"] = args?.description;
            resourceInputs["desiredCapacity"] = args?.desiredCapacity;
            resourceInputs["drainingTimeout"] = args?.drainingTimeout;
            resourceInputs["extensions"] = args?.extensions;
            resourceInputs["fallbackToOnDemand"] = args?.fallbackToOnDemand;
            resourceInputs["health"] = args?.health;
            resourceInputs["images"] = args?.images;
            resourceInputs["loadBalancers"] = args?.loadBalancers;
            resourceInputs["login"] = args?.login;
            resourceInputs["managedServiceIdentities"] = args?.managedServiceIdentities;
            resourceInputs["maxSize"] = args?.maxSize;
            resourceInputs["minSize"] = args?.minSize;
            resourceInputs["name"] = args?.name;
            resourceInputs["network"] = args?.network;
            resourceInputs["onDemandCount"] = args?.onDemandCount;
            resourceInputs["optimizationWindows"] = args?.optimizationWindows;
            resourceInputs["os"] = args?.os;
            resourceInputs["osDisk"] = args?.osDisk;
            resourceInputs["preferredZones"] = args?.preferredZones;
            resourceInputs["proximityPlacementGroups"] = args?.proximityPlacementGroups;
            resourceInputs["region"] = args?.region;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["revertToSpot"] = args?.revertToSpot;
            resourceInputs["scalingDownPolicies"] = args?.scalingDownPolicies;
            resourceInputs["scalingUpPolicies"] = args?.scalingUpPolicies;
            resourceInputs["schedulingTasks"] = args?.schedulingTasks;
            resourceInputs["secrets"] = args?.secrets;
            resourceInputs["security"] = args?.security;
            resourceInputs["shutdownScript"] = args?.shutdownScript;
            resourceInputs["signals"] = args?.signals;
            resourceInputs["spotPercentage"] = args?.spotPercentage;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["userData"] = args?.userData;
            resourceInputs["vmNamePrefix"] = args?.vmNamePrefix;
            resourceInputs["vmSizes"] = args?.vmSizes;
            resourceInputs["zones"] = args?.zones;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ElastigroupAzureV3.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ElastigroupAzureV3 resources.
 */
export interface ElastigroupAzureV3State {
    availabilityVsCost?: pulumi.Input<number>;
    bootDiagnostics?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3BootDiagnostic>[]>;
    capacityReservation?: pulumi.Input<inputs.ElastigroupAzureV3CapacityReservation>;
    customData?: pulumi.Input<string>;
    dataDisks?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3DataDisk>[]>;
    description?: pulumi.Input<string>;
    desiredCapacity?: pulumi.Input<number>;
    drainingTimeout?: pulumi.Input<number>;
    extensions?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3Extension>[]>;
    fallbackToOnDemand?: pulumi.Input<boolean>;
    health?: pulumi.Input<inputs.ElastigroupAzureV3Health>;
    images?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3Image>[]>;
    loadBalancers?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3LoadBalancer>[]>;
    login?: pulumi.Input<inputs.ElastigroupAzureV3Login>;
    managedServiceIdentities?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3ManagedServiceIdentity>[]>;
    maxSize?: pulumi.Input<number>;
    minSize?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    network?: pulumi.Input<inputs.ElastigroupAzureV3Network>;
    onDemandCount?: pulumi.Input<number>;
    optimizationWindows?: pulumi.Input<pulumi.Input<string>[]>;
    os?: pulumi.Input<string>;
    osDisk?: pulumi.Input<inputs.ElastigroupAzureV3OsDisk>;
    preferredZones?: pulumi.Input<pulumi.Input<string>[]>;
    proximityPlacementGroups?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3ProximityPlacementGroup>[]>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    revertToSpot?: pulumi.Input<inputs.ElastigroupAzureV3RevertToSpot>;
    scalingDownPolicies?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3ScalingDownPolicy>[]>;
    scalingUpPolicies?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3ScalingUpPolicy>[]>;
    schedulingTasks?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3SchedulingTask>[]>;
    secrets?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3Secret>[]>;
    security?: pulumi.Input<inputs.ElastigroupAzureV3Security>;
    shutdownScript?: pulumi.Input<string>;
    signals?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3Signal>[]>;
    spotPercentage?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3Tag>[]>;
    userData?: pulumi.Input<string>;
    vmNamePrefix?: pulumi.Input<string>;
    vmSizes?: pulumi.Input<inputs.ElastigroupAzureV3VmSizes>;
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ElastigroupAzureV3 resource.
 */
export interface ElastigroupAzureV3Args {
    availabilityVsCost?: pulumi.Input<number>;
    bootDiagnostics?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3BootDiagnostic>[]>;
    capacityReservation?: pulumi.Input<inputs.ElastigroupAzureV3CapacityReservation>;
    customData?: pulumi.Input<string>;
    dataDisks?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3DataDisk>[]>;
    description?: pulumi.Input<string>;
    desiredCapacity?: pulumi.Input<number>;
    drainingTimeout?: pulumi.Input<number>;
    extensions?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3Extension>[]>;
    fallbackToOnDemand: pulumi.Input<boolean>;
    health?: pulumi.Input<inputs.ElastigroupAzureV3Health>;
    images?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3Image>[]>;
    loadBalancers?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3LoadBalancer>[]>;
    login?: pulumi.Input<inputs.ElastigroupAzureV3Login>;
    managedServiceIdentities?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3ManagedServiceIdentity>[]>;
    maxSize?: pulumi.Input<number>;
    minSize?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    network: pulumi.Input<inputs.ElastigroupAzureV3Network>;
    onDemandCount?: pulumi.Input<number>;
    optimizationWindows?: pulumi.Input<pulumi.Input<string>[]>;
    os: pulumi.Input<string>;
    osDisk?: pulumi.Input<inputs.ElastigroupAzureV3OsDisk>;
    preferredZones?: pulumi.Input<pulumi.Input<string>[]>;
    proximityPlacementGroups?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3ProximityPlacementGroup>[]>;
    region: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    revertToSpot?: pulumi.Input<inputs.ElastigroupAzureV3RevertToSpot>;
    scalingDownPolicies?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3ScalingDownPolicy>[]>;
    scalingUpPolicies?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3ScalingUpPolicy>[]>;
    schedulingTasks?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3SchedulingTask>[]>;
    secrets?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3Secret>[]>;
    security?: pulumi.Input<inputs.ElastigroupAzureV3Security>;
    shutdownScript?: pulumi.Input<string>;
    signals?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3Signal>[]>;
    spotPercentage?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.ElastigroupAzureV3Tag>[]>;
    userData?: pulumi.Input<string>;
    vmNamePrefix?: pulumi.Input<string>;
    vmSizes: pulumi.Input<inputs.ElastigroupAzureV3VmSizes>;
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

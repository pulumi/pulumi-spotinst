// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./healthCheck";
export * from "./provider";
export * from "./subscription";

// Export sub-modules:
import * as aws from "./aws";
import * as azure from "./azure";
import * as config from "./config";
import * as ecs from "./ecs";
import * as gcp from "./gcp";
import * as gke from "./gke";
import * as multai from "./multai";
import * as types from "./types";

export {
    aws,
    azure,
    config,
    ecs,
    gcp,
    gke,
    multai,
    types,
};

// Import resources to register:
import { HealthCheck } from "./healthCheck";
import { Subscription } from "./subscription";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "spotinst:index/healthCheck:HealthCheck":
                return new HealthCheck(name, <any>undefined, { urn })
            case "spotinst:index/subscription:Subscription":
                return new Subscription(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("spotinst", "index/healthCheck", _module)
pulumi.runtime.registerResourceModule("spotinst", "index/subscription", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("spotinst", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:spotinst") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});

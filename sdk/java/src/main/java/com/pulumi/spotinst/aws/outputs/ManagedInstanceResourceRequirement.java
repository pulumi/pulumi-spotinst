// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManagedInstanceResourceRequirement {
    private @Nullable List<String> excludedInstanceFamilies;
    private @Nullable List<String> excludedInstanceGenerations;
    private @Nullable List<String> excludedInstanceTypes;
    private @Nullable Integer requiredGpuMaximum;
    private @Nullable Integer requiredGpuMinimum;
    private Integer requiredMemoryMaximum;
    private Integer requiredMemoryMinimum;
    private Integer requiredVcpuMaximum;
    private Integer requiredVcpuMinimum;

    private ManagedInstanceResourceRequirement() {}
    public List<String> excludedInstanceFamilies() {
        return this.excludedInstanceFamilies == null ? List.of() : this.excludedInstanceFamilies;
    }
    public List<String> excludedInstanceGenerations() {
        return this.excludedInstanceGenerations == null ? List.of() : this.excludedInstanceGenerations;
    }
    public List<String> excludedInstanceTypes() {
        return this.excludedInstanceTypes == null ? List.of() : this.excludedInstanceTypes;
    }
    public Optional<Integer> requiredGpuMaximum() {
        return Optional.ofNullable(this.requiredGpuMaximum);
    }
    public Optional<Integer> requiredGpuMinimum() {
        return Optional.ofNullable(this.requiredGpuMinimum);
    }
    public Integer requiredMemoryMaximum() {
        return this.requiredMemoryMaximum;
    }
    public Integer requiredMemoryMinimum() {
        return this.requiredMemoryMinimum;
    }
    public Integer requiredVcpuMaximum() {
        return this.requiredVcpuMaximum;
    }
    public Integer requiredVcpuMinimum() {
        return this.requiredVcpuMinimum;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedInstanceResourceRequirement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> excludedInstanceFamilies;
        private @Nullable List<String> excludedInstanceGenerations;
        private @Nullable List<String> excludedInstanceTypes;
        private @Nullable Integer requiredGpuMaximum;
        private @Nullable Integer requiredGpuMinimum;
        private Integer requiredMemoryMaximum;
        private Integer requiredMemoryMinimum;
        private Integer requiredVcpuMaximum;
        private Integer requiredVcpuMinimum;
        public Builder() {}
        public Builder(ManagedInstanceResourceRequirement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludedInstanceFamilies = defaults.excludedInstanceFamilies;
    	      this.excludedInstanceGenerations = defaults.excludedInstanceGenerations;
    	      this.excludedInstanceTypes = defaults.excludedInstanceTypes;
    	      this.requiredGpuMaximum = defaults.requiredGpuMaximum;
    	      this.requiredGpuMinimum = defaults.requiredGpuMinimum;
    	      this.requiredMemoryMaximum = defaults.requiredMemoryMaximum;
    	      this.requiredMemoryMinimum = defaults.requiredMemoryMinimum;
    	      this.requiredVcpuMaximum = defaults.requiredVcpuMaximum;
    	      this.requiredVcpuMinimum = defaults.requiredVcpuMinimum;
        }

        @CustomType.Setter
        public Builder excludedInstanceFamilies(@Nullable List<String> excludedInstanceFamilies) {

            this.excludedInstanceFamilies = excludedInstanceFamilies;
            return this;
        }
        public Builder excludedInstanceFamilies(String... excludedInstanceFamilies) {
            return excludedInstanceFamilies(List.of(excludedInstanceFamilies));
        }
        @CustomType.Setter
        public Builder excludedInstanceGenerations(@Nullable List<String> excludedInstanceGenerations) {

            this.excludedInstanceGenerations = excludedInstanceGenerations;
            return this;
        }
        public Builder excludedInstanceGenerations(String... excludedInstanceGenerations) {
            return excludedInstanceGenerations(List.of(excludedInstanceGenerations));
        }
        @CustomType.Setter
        public Builder excludedInstanceTypes(@Nullable List<String> excludedInstanceTypes) {

            this.excludedInstanceTypes = excludedInstanceTypes;
            return this;
        }
        public Builder excludedInstanceTypes(String... excludedInstanceTypes) {
            return excludedInstanceTypes(List.of(excludedInstanceTypes));
        }
        @CustomType.Setter
        public Builder requiredGpuMaximum(@Nullable Integer requiredGpuMaximum) {

            this.requiredGpuMaximum = requiredGpuMaximum;
            return this;
        }
        @CustomType.Setter
        public Builder requiredGpuMinimum(@Nullable Integer requiredGpuMinimum) {

            this.requiredGpuMinimum = requiredGpuMinimum;
            return this;
        }
        @CustomType.Setter
        public Builder requiredMemoryMaximum(Integer requiredMemoryMaximum) {
            if (requiredMemoryMaximum == null) {
              throw new MissingRequiredPropertyException("ManagedInstanceResourceRequirement", "requiredMemoryMaximum");
            }
            this.requiredMemoryMaximum = requiredMemoryMaximum;
            return this;
        }
        @CustomType.Setter
        public Builder requiredMemoryMinimum(Integer requiredMemoryMinimum) {
            if (requiredMemoryMinimum == null) {
              throw new MissingRequiredPropertyException("ManagedInstanceResourceRequirement", "requiredMemoryMinimum");
            }
            this.requiredMemoryMinimum = requiredMemoryMinimum;
            return this;
        }
        @CustomType.Setter
        public Builder requiredVcpuMaximum(Integer requiredVcpuMaximum) {
            if (requiredVcpuMaximum == null) {
              throw new MissingRequiredPropertyException("ManagedInstanceResourceRequirement", "requiredVcpuMaximum");
            }
            this.requiredVcpuMaximum = requiredVcpuMaximum;
            return this;
        }
        @CustomType.Setter
        public Builder requiredVcpuMinimum(Integer requiredVcpuMinimum) {
            if (requiredVcpuMinimum == null) {
              throw new MissingRequiredPropertyException("ManagedInstanceResourceRequirement", "requiredVcpuMinimum");
            }
            this.requiredVcpuMinimum = requiredVcpuMinimum;
            return this;
        }
        public ManagedInstanceResourceRequirement build() {
            final var _resultValue = new ManagedInstanceResourceRequirement();
            _resultValue.excludedInstanceFamilies = excludedInstanceFamilies;
            _resultValue.excludedInstanceGenerations = excludedInstanceGenerations;
            _resultValue.excludedInstanceTypes = excludedInstanceTypes;
            _resultValue.requiredGpuMaximum = requiredGpuMaximum;
            _resultValue.requiredGpuMinimum = requiredGpuMinimum;
            _resultValue.requiredMemoryMaximum = requiredMemoryMaximum;
            _resultValue.requiredMemoryMinimum = requiredMemoryMinimum;
            _resultValue.requiredVcpuMaximum = requiredVcpuMaximum;
            _resultValue.requiredVcpuMinimum = requiredVcpuMinimum;
            return _resultValue;
        }
    }
}

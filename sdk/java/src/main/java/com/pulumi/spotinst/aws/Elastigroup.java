// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.spotinst.Utilities;
import com.pulumi.spotinst.aws.ElastigroupArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupState;
import com.pulumi.spotinst.aws.outputs.ElastigroupCpuOptions;
import com.pulumi.spotinst.aws.outputs.ElastigroupEbsBlockDevice;
import com.pulumi.spotinst.aws.outputs.ElastigroupEphemeralBlockDevice;
import com.pulumi.spotinst.aws.outputs.ElastigroupImage;
import com.pulumi.spotinst.aws.outputs.ElastigroupInstanceTypesWeight;
import com.pulumi.spotinst.aws.outputs.ElastigroupIntegrationBeanstalk;
import com.pulumi.spotinst.aws.outputs.ElastigroupIntegrationCodedeploy;
import com.pulumi.spotinst.aws.outputs.ElastigroupIntegrationDockerSwarm;
import com.pulumi.spotinst.aws.outputs.ElastigroupIntegrationEcs;
import com.pulumi.spotinst.aws.outputs.ElastigroupIntegrationGitlab;
import com.pulumi.spotinst.aws.outputs.ElastigroupIntegrationKubernetes;
import com.pulumi.spotinst.aws.outputs.ElastigroupIntegrationMesosphere;
import com.pulumi.spotinst.aws.outputs.ElastigroupIntegrationNomad;
import com.pulumi.spotinst.aws.outputs.ElastigroupIntegrationRancher;
import com.pulumi.spotinst.aws.outputs.ElastigroupIntegrationRoute53;
import com.pulumi.spotinst.aws.outputs.ElastigroupItf;
import com.pulumi.spotinst.aws.outputs.ElastigroupLogging;
import com.pulumi.spotinst.aws.outputs.ElastigroupMetadataOptions;
import com.pulumi.spotinst.aws.outputs.ElastigroupMultipleMetrics;
import com.pulumi.spotinst.aws.outputs.ElastigroupNetworkInterface;
import com.pulumi.spotinst.aws.outputs.ElastigroupResourceRequirement;
import com.pulumi.spotinst.aws.outputs.ElastigroupResourceTagSpecification;
import com.pulumi.spotinst.aws.outputs.ElastigroupRevertToSpot;
import com.pulumi.spotinst.aws.outputs.ElastigroupScalingDownPolicy;
import com.pulumi.spotinst.aws.outputs.ElastigroupScalingStrategy;
import com.pulumi.spotinst.aws.outputs.ElastigroupScalingTargetPolicy;
import com.pulumi.spotinst.aws.outputs.ElastigroupScalingUpPolicy;
import com.pulumi.spotinst.aws.outputs.ElastigroupScheduledTask;
import com.pulumi.spotinst.aws.outputs.ElastigroupSignal;
import com.pulumi.spotinst.aws.outputs.ElastigroupStatefulDeallocation;
import com.pulumi.spotinst.aws.outputs.ElastigroupStatefulInstanceAction;
import com.pulumi.spotinst.aws.outputs.ElastigroupTag;
import com.pulumi.spotinst.aws.outputs.ElastigroupUpdatePolicy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Spotinst AWS group resource.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.spotinst.aws.Elastigroup;
 * import com.pulumi.spotinst.aws.ElastigroupArgs;
 * import com.pulumi.spotinst.aws.inputs.ElastigroupMetadataOptionsArgs;
 * import com.pulumi.spotinst.aws.inputs.ElastigroupCpuOptionsArgs;
 * import com.pulumi.spotinst.aws.inputs.ElastigroupInstanceTypesWeightArgs;
 * import com.pulumi.spotinst.aws.inputs.ElastigroupResourceRequirementArgs;
 * import com.pulumi.spotinst.aws.inputs.ElastigroupScalingStrategyArgs;
 * import com.pulumi.spotinst.aws.inputs.ElastigroupScalingUpPolicyArgs;
 * import com.pulumi.spotinst.aws.inputs.ElastigroupScalingDownPolicyArgs;
 * import com.pulumi.spotinst.aws.inputs.ElastigroupTagArgs;
 * import com.pulumi.spotinst.aws.inputs.ElastigroupResourceTagSpecificationArgs;
 * import com.pulumi.spotinst.aws.inputs.ElastigroupLoggingArgs;
 * import com.pulumi.spotinst.aws.inputs.ElastigroupLoggingExportArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Create an Elastigroup
 *         var default_elastigroup = new Elastigroup(&#34;default-elastigroup&#34;, ElastigroupArgs.builder()        
 *             .name(&#34;default-elastigroup&#34;)
 *             .description(&#34;created by Pulumi&#34;)
 *             .product(&#34;Linux/UNIX&#34;)
 *             .maxSize(0)
 *             .minSize(0)
 *             .desiredCapacity(0)
 *             .capacityUnit(&#34;weight&#34;)
 *             .region(&#34;us-west-2&#34;)
 *             .subnetIds(            
 *                 &#34;sb-123456&#34;,
 *                 &#34;sb-456789&#34;)
 *             .imageId(&#34;ami-a27d8fda&#34;)
 *             .iamInstanceProfile(&#34;iam-profile&#34;)
 *             .keyName(&#34;my-key.ssh&#34;)
 *             .securityGroups(&#34;sg-123456&#34;)
 *             .userData(&#34;echo hello world&#34;)
 *             .enableMonitoring(false)
 *             .ebsOptimized(false)
 *             .placementTenancy(&#34;default&#34;)
 *             .metadataOptions(ElastigroupMetadataOptionsArgs.builder()
 *                 .httpTokens(&#34;optional&#34;)
 *                 .httpPutResponseHopLimit(10)
 *                 .instanceMetadataTags(&#34;enabled&#34;)
 *                 .build())
 *             .cpuOptions(ElastigroupCpuOptionsArgs.builder()
 *                 .threadsPerCore(1)
 *                 .build())
 *             .instanceTypesOndemand(&#34;m3.2xlarge&#34;)
 *             .instanceTypesSpots(            
 *                 &#34;m3.xlarge&#34;,
 *                 &#34;m3.2xlarge&#34;)
 *             .instanceTypesPreferredSpots(&#34;m3.xlarge&#34;)
 *             .onDemandTypes(&#34;c3.large&#34;)
 *             .instanceTypesWeights(            
 *                 ElastigroupInstanceTypesWeightArgs.builder()
 *                     .instanceType(&#34;m3.xlarge&#34;)
 *                     .weight(10)
 *                     .build(),
 *                 ElastigroupInstanceTypesWeightArgs.builder()
 *                     .instanceType(&#34;m3.2xlarge&#34;)
 *                     .weight(16)
 *                     .build())
 *             .resourceRequirements(ElastigroupResourceRequirementArgs.builder()
 *                 .excludedInstanceFamilies(                
 *                     &#34;a&#34;,
 *                     &#34;m&#34;)
 *                 .excludedInstanceTypes(&#34;m3.large&#34;)
 *                 .excludedInstanceGenerations(                
 *                     &#34;1&#34;,
 *                     &#34;2&#34;)
 *                 .requiredGpuMinimum(1)
 *                 .requiredGpuMaximum(16)
 *                 .requiredMemoryMinimum(1)
 *                 .requiredMemoryMaximum(512)
 *                 .requiredVcpuMinimum(1)
 *                 .requiredVcpuMaximum(64)
 *                 .build())
 *             .orientation(&#34;balanced&#34;)
 *             .fallbackToOndemand(false)
 *             .cpuCredits(&#34;unlimited&#34;)
 *             .minimumInstanceLifetime(12)
 *             .waitForCapacity(5)
 *             .waitForCapacityTimeout(300)
 *             .scalingStrategies(ElastigroupScalingStrategyArgs.builder()
 *                 .terminateAtEndOfBillingHour(true)
 *                 .terminationPolicy(&#34;default&#34;)
 *                 .build())
 *             .scalingUpPolicies(ElastigroupScalingUpPolicyArgs.builder()
 *                 .policyName(&#34;Default Scaling Up Policy&#34;)
 *                 .metricName(&#34;DefaultQueuesDepth&#34;)
 *                 .statistic(&#34;average&#34;)
 *                 .unit(&#34;none&#34;)
 *                 .adjustment(1)
 *                 .namespace(&#34;custom&#34;)
 *                 .threshold(100)
 *                 .period(60)
 *                 .evaluationPeriods(5)
 *                 .cooldown(300)
 *                 .build())
 *             .scalingDownPolicies(ElastigroupScalingDownPolicyArgs.builder()
 *                 .policyName(&#34;Default Scaling Down Policy&#34;)
 *                 .metricName(&#34;DefaultQueuesDepth&#34;)
 *                 .statistic(&#34;average&#34;)
 *                 .unit(&#34;none&#34;)
 *                 .adjustment(1)
 *                 .namespace(&#34;custom&#34;)
 *                 .threshold(10)
 *                 .period(60)
 *                 .evaluationPeriods(10)
 *                 .cooldown(300)
 *                 .build())
 *             .tags(            
 *                 ElastigroupTagArgs.builder()
 *                     .key(&#34;Env&#34;)
 *                     .value(&#34;production&#34;)
 *                     .build(),
 *                 ElastigroupTagArgs.builder()
 *                     .key(&#34;Name&#34;)
 *                     .value(&#34;default-production&#34;)
 *                     .build(),
 *                 ElastigroupTagArgs.builder()
 *                     .key(&#34;Project&#34;)
 *                     .value(&#34;app_v2&#34;)
 *                     .build())
 *             .resourceTagSpecifications(ElastigroupResourceTagSpecificationArgs.builder()
 *                 .shouldTagEnis(true)
 *                 .shouldTagVolumes(true)
 *                 .shouldTagSnapshots(true)
 *                 .shouldTagAmis(true)
 *                 .build())
 *             .logging(ElastigroupLoggingArgs.builder()
 *                 .export(ElastigroupLoggingExportArgs.builder()
 *                     .s3s(ElastigroupLoggingExportS3Args.builder()
 *                         .id(&#34;di-123456&#34;)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="spotinst:aws/elastigroup:Elastigroup")
public class Elastigroup extends com.pulumi.resources.CustomResource {
    /**
     * List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.
     * Note: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:
     * `availability_zones = [&#34;us-east-1a:subnet-123456:ClusterI03&#34;]`
     * 
     */
    @Export(name="availabilityZones", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> availabilityZones;

    /**
     * @return List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.
     * Note: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:
     * `availability_zones = [&#34;us-east-1a:subnet-123456:ClusterI03&#34;]`
     * 
     */
    public Output<Optional<List<String>>> availabilityZones() {
        return Codegen.optional(this.availabilityZones);
    }
    @Export(name="blockDevicesMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> blockDevicesMode;

    public Output<Optional<String>> blockDevicesMode() {
        return Codegen.optional(this.blockDevicesMode);
    }
    /**
     * The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs. Valid values: `instance`, `weight`.
     * 
     */
    @Export(name="capacityUnit", refs={String.class}, tree="[0]")
    private Output<String> capacityUnit;

    /**
     * @return The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs. Valid values: `instance`, `weight`.
     * 
     */
    public Output<String> capacityUnit() {
        return this.capacityUnit;
    }
    @Export(name="considerOdPricing", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> considerOdPricing;

    public Output<Optional<Boolean>> considerOdPricing() {
        return Codegen.optional(this.considerOdPricing);
    }
    /**
     * Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.
     * 
     */
    @Export(name="cpuCredits", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cpuCredits;

    /**
     * @return Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.
     * 
     */
    public Output<Optional<String>> cpuCredits() {
        return Codegen.optional(this.cpuCredits);
    }
    /**
     * The CPU options for the instances that are launched within the group:
     * 
     */
    @Export(name="cpuOptions", refs={ElastigroupCpuOptions.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupCpuOptions> cpuOptions;

    /**
     * @return The CPU options for the instances that are launched within the group:
     * 
     */
    public Output<Optional<ElastigroupCpuOptions>> cpuOptions() {
        return Codegen.optional(this.cpuOptions);
    }
    /**
     * The group description.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The group description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The desired number of instances the group should have at any time.
     * 
     */
    @Export(name="desiredCapacity", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> desiredCapacity;

    /**
     * @return The desired number of instances the group should have at any time.
     * 
     */
    public Output<Optional<Integer>> desiredCapacity() {
        return Codegen.optional(this.desiredCapacity);
    }
    /**
     * The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.
     * 
     */
    @Export(name="drainingTimeout", refs={Integer.class}, tree="[0]")
    private Output<Integer> drainingTimeout;

    /**
     * @return The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.
     * 
     */
    public Output<Integer> drainingTimeout() {
        return this.drainingTimeout;
    }
    @Export(name="ebsBlockDevices", refs={List.class,ElastigroupEbsBlockDevice.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupEbsBlockDevice>> ebsBlockDevices;

    public Output<Optional<List<ElastigroupEbsBlockDevice>>> ebsBlockDevices() {
        return Codegen.optional(this.ebsBlockDevices);
    }
    /**
     * Enable high bandwidth connectivity between instances and AWS’s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.
     * 
     */
    @Export(name="ebsOptimized", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> ebsOptimized;

    /**
     * @return Enable high bandwidth connectivity between instances and AWS’s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.
     * 
     */
    public Output<Boolean> ebsOptimized() {
        return this.ebsOptimized;
    }
    /**
     * A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.
     * 
     */
    @Export(name="elasticIps", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> elasticIps;

    /**
     * @return A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.
     * 
     */
    public Output<Optional<List<String>>> elasticIps() {
        return Codegen.optional(this.elasticIps);
    }
    @Export(name="elasticLoadBalancers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> elasticLoadBalancers;

    public Output<Optional<List<String>>> elasticLoadBalancers() {
        return Codegen.optional(this.elasticLoadBalancers);
    }
    /**
     * Indicates whether monitoring is enabled for the instance.
     * 
     */
    @Export(name="enableMonitoring", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableMonitoring;

    /**
     * @return Indicates whether monitoring is enabled for the instance.
     * 
     */
    public Output<Optional<Boolean>> enableMonitoring() {
        return Codegen.optional(this.enableMonitoring);
    }
    @Export(name="ephemeralBlockDevices", refs={List.class,ElastigroupEphemeralBlockDevice.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupEphemeralBlockDevice>> ephemeralBlockDevices;

    public Output<Optional<List<ElastigroupEphemeralBlockDevice>>> ephemeralBlockDevices() {
        return Codegen.optional(this.ephemeralBlockDevices);
    }
    /**
     * In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.
     * 
     */
    @Export(name="fallbackToOndemand", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> fallbackToOndemand;

    /**
     * @return In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.
     * 
     */
    public Output<Boolean> fallbackToOndemand() {
        return this.fallbackToOndemand;
    }
    /**
     * The amount of time, in seconds, after the instance has launched to starts and check its health.
     * 
     */
    @Export(name="healthCheckGracePeriod", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> healthCheckGracePeriod;

    /**
     * @return The amount of time, in seconds, after the instance has launched to starts and check its health.
     * 
     */
    public Output<Optional<Integer>> healthCheckGracePeriod() {
        return Codegen.optional(this.healthCheckGracePeriod);
    }
    /**
     * The service that will perform health checks for the instance. Valid values: `&#34;ELB&#34;`, `&#34;HCS&#34;`, `&#34;TARGET_GROUP&#34;`, `&#34;EC2&#34;`, `&#34;K8S_NODE&#34;`, `&#34;NOMAD_NODE&#34;`, `&#34;ECS_CLUSTER_INSTANCE&#34;`.
     * 
     */
    @Export(name="healthCheckType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> healthCheckType;

    /**
     * @return The service that will perform health checks for the instance. Valid values: `&#34;ELB&#34;`, `&#34;HCS&#34;`, `&#34;TARGET_GROUP&#34;`, `&#34;EC2&#34;`, `&#34;K8S_NODE&#34;`, `&#34;NOMAD_NODE&#34;`, `&#34;ECS_CLUSTER_INSTANCE&#34;`.
     * 
     */
    public Output<Optional<String>> healthCheckType() {
        return Codegen.optional(this.healthCheckType);
    }
    /**
     * The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).
     * 
     */
    @Export(name="healthCheckUnhealthyDurationBeforeReplacement", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> healthCheckUnhealthyDurationBeforeReplacement;

    /**
     * @return The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).
     * 
     */
    public Output<Optional<Integer>> healthCheckUnhealthyDurationBeforeReplacement() {
        return Codegen.optional(this.healthCheckUnhealthyDurationBeforeReplacement);
    }
    /**
     * The ARN or name of an IAM instance profile to associate with launched instances.
     * 
     */
    @Export(name="iamInstanceProfile", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> iamInstanceProfile;

    /**
     * @return The ARN or name of an IAM instance profile to associate with launched instances.
     * 
     */
    public Output<Optional<String>> iamInstanceProfile() {
        return Codegen.optional(this.iamInstanceProfile);
    }
    /**
     * The ID of the AMI used to launch the instance.
     * 
     */
    @Export(name="imageId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> imageId;

    /**
     * @return The ID of the AMI used to launch the instance.
     * 
     */
    public Output<Optional<String>> imageId() {
        return Codegen.optional(this.imageId);
    }
    /**
     * An array of image objects.
     * Note: Elastigroup can be configured with either imageId or images, but not both.
     * 
     */
    @Export(name="images", refs={List.class,ElastigroupImage.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupImage>> images;

    /**
     * @return An array of image objects.
     * Note: Elastigroup can be configured with either imageId or images, but not both.
     * 
     */
    public Output<Optional<List<ElastigroupImage>>> images() {
        return Codegen.optional(this.images);
    }
    @Export(name="immediateOdRecoverThreshold", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> immediateOdRecoverThreshold;

    public Output<Optional<Integer>> immediateOdRecoverThreshold() {
        return Codegen.optional(this.immediateOdRecoverThreshold);
    }
    /**
     * The type of instance determines your instance&#39;s CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).
     * 
     */
    @Export(name="instanceTypesOndemand", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> instanceTypesOndemand;

    /**
     * @return The type of instance determines your instance&#39;s CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).
     * 
     */
    public Output<Optional<String>> instanceTypesOndemand() {
        return Codegen.optional(this.instanceTypesOndemand);
    }
    /**
     * Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.
     * 
     */
    @Export(name="instanceTypesPreferredSpots", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> instanceTypesPreferredSpots;

    /**
     * @return Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.
     * 
     */
    public Output<Optional<List<String>>> instanceTypesPreferredSpots() {
        return Codegen.optional(this.instanceTypesPreferredSpots);
    }
    /**
     * One or more instance types. Note: Cannot be defined if &#39;resourceRequirements&#39; is defined.
     * 
     */
    @Export(name="instanceTypesSpots", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> instanceTypesSpots;

    /**
     * @return One or more instance types. Note: Cannot be defined if &#39;resourceRequirements&#39; is defined.
     * 
     */
    public Output<Optional<List<String>>> instanceTypesSpots() {
        return Codegen.optional(this.instanceTypesSpots);
    }
    /**
     * List of weights per instance type for weighted groups. Each object in the list should have the following attributes:
     * 
     */
    @Export(name="instanceTypesWeights", refs={List.class,ElastigroupInstanceTypesWeight.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupInstanceTypesWeight>> instanceTypesWeights;

    /**
     * @return List of weights per instance type for weighted groups. Each object in the list should have the following attributes:
     * 
     */
    public Output<Optional<List<ElastigroupInstanceTypesWeight>>> instanceTypesWeights() {
        return Codegen.optional(this.instanceTypesWeights);
    }
    @Export(name="integrationBeanstalk", refs={ElastigroupIntegrationBeanstalk.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupIntegrationBeanstalk> integrationBeanstalk;

    public Output<Optional<ElastigroupIntegrationBeanstalk>> integrationBeanstalk() {
        return Codegen.optional(this.integrationBeanstalk);
    }
    @Export(name="integrationCodedeploy", refs={ElastigroupIntegrationCodedeploy.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupIntegrationCodedeploy> integrationCodedeploy;

    public Output<Optional<ElastigroupIntegrationCodedeploy>> integrationCodedeploy() {
        return Codegen.optional(this.integrationCodedeploy);
    }
    @Export(name="integrationDockerSwarm", refs={ElastigroupIntegrationDockerSwarm.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupIntegrationDockerSwarm> integrationDockerSwarm;

    public Output<Optional<ElastigroupIntegrationDockerSwarm>> integrationDockerSwarm() {
        return Codegen.optional(this.integrationDockerSwarm);
    }
    @Export(name="integrationEcs", refs={ElastigroupIntegrationEcs.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupIntegrationEcs> integrationEcs;

    public Output<Optional<ElastigroupIntegrationEcs>> integrationEcs() {
        return Codegen.optional(this.integrationEcs);
    }
    @Export(name="integrationGitlab", refs={ElastigroupIntegrationGitlab.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupIntegrationGitlab> integrationGitlab;

    public Output<Optional<ElastigroupIntegrationGitlab>> integrationGitlab() {
        return Codegen.optional(this.integrationGitlab);
    }
    @Export(name="integrationKubernetes", refs={ElastigroupIntegrationKubernetes.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupIntegrationKubernetes> integrationKubernetes;

    public Output<Optional<ElastigroupIntegrationKubernetes>> integrationKubernetes() {
        return Codegen.optional(this.integrationKubernetes);
    }
    @Export(name="integrationMesosphere", refs={ElastigroupIntegrationMesosphere.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupIntegrationMesosphere> integrationMesosphere;

    public Output<Optional<ElastigroupIntegrationMesosphere>> integrationMesosphere() {
        return Codegen.optional(this.integrationMesosphere);
    }
    @Export(name="integrationNomad", refs={ElastigroupIntegrationNomad.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupIntegrationNomad> integrationNomad;

    public Output<Optional<ElastigroupIntegrationNomad>> integrationNomad() {
        return Codegen.optional(this.integrationNomad);
    }
    @Export(name="integrationRancher", refs={ElastigroupIntegrationRancher.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupIntegrationRancher> integrationRancher;

    public Output<Optional<ElastigroupIntegrationRancher>> integrationRancher() {
        return Codegen.optional(this.integrationRancher);
    }
    @Export(name="integrationRoute53", refs={ElastigroupIntegrationRoute53.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupIntegrationRoute53> integrationRoute53;

    public Output<Optional<ElastigroupIntegrationRoute53>> integrationRoute53() {
        return Codegen.optional(this.integrationRoute53);
    }
    @Export(name="itfs", refs={List.class,ElastigroupItf.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupItf>> itfs;

    public Output<Optional<List<ElastigroupItf>>> itfs() {
        return Codegen.optional(this.itfs);
    }
    /**
     * The key name that should be used for the instance.
     * 
     */
    @Export(name="keyName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyName;

    /**
     * @return The key name that should be used for the instance.
     * 
     */
    public Output<Optional<String>> keyName() {
        return Codegen.optional(this.keyName);
    }
    @Export(name="lifetimePeriod", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> lifetimePeriod;

    public Output<Optional<String>> lifetimePeriod() {
        return Codegen.optional(this.lifetimePeriod);
    }
    /**
     * Logging configuration.
     * 
     */
    @Export(name="logging", refs={ElastigroupLogging.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupLogging> logging;

    /**
     * @return Logging configuration.
     * 
     */
    public Output<Optional<ElastigroupLogging>> logging() {
        return Codegen.optional(this.logging);
    }
    /**
     * The maximum number of instances the group should have at any time.
     * 
     */
    @Export(name="maxSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> maxSize;

    /**
     * @return The maximum number of instances the group should have at any time.
     * 
     */
    public Output<Integer> maxSize() {
        return this.maxSize;
    }
    /**
     * Data that used to configure or manage the running instances:
     * 
     */
    @Export(name="metadataOptions", refs={ElastigroupMetadataOptions.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupMetadataOptions> metadataOptions;

    /**
     * @return Data that used to configure or manage the running instances:
     * 
     */
    public Output<Optional<ElastigroupMetadataOptions>> metadataOptions() {
        return Codegen.optional(this.metadataOptions);
    }
    /**
     * The minimum number of instances the group should have at any time.
     * 
     */
    @Export(name="minSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> minSize;

    /**
     * @return The minimum number of instances the group should have at any time.
     * 
     */
    public Output<Integer> minSize() {
        return this.minSize;
    }
    /**
     * Defines the preferred minimum instance lifetime in hours. Markets which comply with this preference will be prioritized. Optional values: 1, 3, 6, 12, 24.
     * 
     */
    @Export(name="minimumInstanceLifetime", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> minimumInstanceLifetime;

    /**
     * @return Defines the preferred minimum instance lifetime in hours. Markets which comply with this preference will be prioritized. Optional values: 1, 3, 6, 12, 24.
     * 
     */
    public Output<Optional<Integer>> minimumInstanceLifetime() {
        return Codegen.optional(this.minimumInstanceLifetime);
    }
    @Export(name="multipleMetrics", refs={ElastigroupMultipleMetrics.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupMultipleMetrics> multipleMetrics;

    public Output<Optional<ElastigroupMultipleMetrics>> multipleMetrics() {
        return Codegen.optional(this.multipleMetrics);
    }
    /**
     * The group name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The group name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="networkInterfaces", refs={List.class,ElastigroupNetworkInterface.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupNetworkInterface>> networkInterfaces;

    public Output<Optional<List<ElastigroupNetworkInterface>>> networkInterfaces() {
        return Codegen.optional(this.networkInterfaces);
    }
    /**
     * Available ondemand instance types. Note: Either ondemand or onDemandTypes must be defined, but not both.
     * 
     */
    @Export(name="onDemandTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> onDemandTypes;

    /**
     * @return Available ondemand instance types. Note: Either ondemand or onDemandTypes must be defined, but not both.
     * 
     */
    public Output<Optional<List<String>>> onDemandTypes() {
        return Codegen.optional(this.onDemandTypes);
    }
    /**
     * Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.
     * 
     */
    @Export(name="ondemandCount", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> ondemandCount;

    /**
     * @return Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.
     * 
     */
    public Output<Optional<Integer>> ondemandCount() {
        return Codegen.optional(this.ondemandCount);
    }
    /**
     * Select a prediction strategy. Valid values: `balanced`, `costOriented`, `equalAzDistribution`, `availabilityOriented`. You can read more in our documentation.
     * 
     */
    @Export(name="orientation", refs={String.class}, tree="[0]")
    private Output<String> orientation;

    /**
     * @return Select a prediction strategy. Valid values: `balanced`, `costOriented`, `equalAzDistribution`, `availabilityOriented`. You can read more in our documentation.
     * 
     */
    public Output<String> orientation() {
        return this.orientation;
    }
    @Export(name="persistBlockDevices", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> persistBlockDevices;

    public Output<Optional<Boolean>> persistBlockDevices() {
        return Codegen.optional(this.persistBlockDevices);
    }
    @Export(name="persistPrivateIp", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> persistPrivateIp;

    public Output<Optional<Boolean>> persistPrivateIp() {
        return Codegen.optional(this.persistPrivateIp);
    }
    @Export(name="persistRootDevice", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> persistRootDevice;

    public Output<Optional<Boolean>> persistRootDevice() {
        return Codegen.optional(this.persistRootDevice);
    }
    /**
     * Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used. Valid values: &#34;default&#34;, &#34;dedicated&#34; .
     * 
     */
    @Export(name="placementTenancy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> placementTenancy;

    /**
     * @return Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used. Valid values: &#34;default&#34;, &#34;dedicated&#34; .
     * 
     */
    public Output<Optional<String>> placementTenancy() {
        return Codegen.optional(this.placementTenancy);
    }
    /**
     * The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.
     * Note: Must be a sublist of `availability_zones` and `orientation` value must not be `&#34;equalAzDistribution&#34;`.
     * 
     */
    @Export(name="preferredAvailabilityZones", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> preferredAvailabilityZones;

    /**
     * @return The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.
     * Note: Must be a sublist of `availability_zones` and `orientation` value must not be `&#34;equalAzDistribution&#34;`.
     * 
     */
    public Output<Optional<List<String>>> preferredAvailabilityZones() {
        return Codegen.optional(this.preferredAvailabilityZones);
    }
    @Export(name="privateIps", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> privateIps;

    public Output<Optional<List<String>>> privateIps() {
        return Codegen.optional(this.privateIps);
    }
    /**
     * Operation system type. Valid values: `&#34;Linux/UNIX&#34;`, `&#34;SUSE Linux&#34;`, `&#34;Windows&#34;`.
     * For EC2 Classic instances:  `&#34;Linux/UNIX (Amazon VPC)&#34;`, `&#34;SUSE Linux (Amazon VPC)&#34;`, `&#34;Windows (Amazon VPC)&#34;`.
     * 
     */
    @Export(name="product", refs={String.class}, tree="[0]")
    private Output<String> product;

    /**
     * @return Operation system type. Valid values: `&#34;Linux/UNIX&#34;`, `&#34;SUSE Linux&#34;`, `&#34;Windows&#34;`.
     * For EC2 Classic instances:  `&#34;Linux/UNIX (Amazon VPC)&#34;`, `&#34;SUSE Linux (Amazon VPC)&#34;`, `&#34;Windows (Amazon VPC)&#34;`.
     * 
     */
    public Output<String> product() {
        return this.product;
    }
    /**
     * The AWS region your group will be created in.
     * Note: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> region;

    /**
     * @return The AWS region your group will be created in.
     * Note: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).
     * 
     */
    public Output<Optional<String>> region() {
        return Codegen.optional(this.region);
    }
    /**
     * Required instance attributes. Instance types will be selected based on these requirements.
     * 
     */
    @Export(name="resourceRequirements", refs={List.class,ElastigroupResourceRequirement.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupResourceRequirement>> resourceRequirements;

    /**
     * @return Required instance attributes. Instance types will be selected based on these requirements.
     * 
     */
    public Output<Optional<List<ElastigroupResourceRequirement>>> resourceRequirements() {
        return Codegen.optional(this.resourceRequirements);
    }
    /**
     * User will specify which resources should be tagged with group tags.
     * 
     */
    @Export(name="resourceTagSpecifications", refs={List.class,ElastigroupResourceTagSpecification.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupResourceTagSpecification>> resourceTagSpecifications;

    /**
     * @return User will specify which resources should be tagged with group tags.
     * 
     */
    public Output<Optional<List<ElastigroupResourceTagSpecification>>> resourceTagSpecifications() {
        return Codegen.optional(this.resourceTagSpecifications);
    }
    /**
     * Hold settings for strategy correction – replacing On-Demand for Spot instances. Supported Values: `&#34;never&#34;`, `&#34;always&#34;`, `&#34;timeWindow&#34;`
     * 
     */
    @Export(name="revertToSpot", refs={ElastigroupRevertToSpot.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupRevertToSpot> revertToSpot;

    /**
     * @return Hold settings for strategy correction – replacing On-Demand for Spot instances. Supported Values: `&#34;never&#34;`, `&#34;always&#34;`, `&#34;timeWindow&#34;`
     * 
     */
    public Output<Optional<ElastigroupRevertToSpot>> revertToSpot() {
        return Codegen.optional(this.revertToSpot);
    }
    @Export(name="scalingDownPolicies", refs={List.class,ElastigroupScalingDownPolicy.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupScalingDownPolicy>> scalingDownPolicies;

    public Output<Optional<List<ElastigroupScalingDownPolicy>>> scalingDownPolicies() {
        return Codegen.optional(this.scalingDownPolicies);
    }
    /**
     * Set termination policy.
     * 
     */
    @Export(name="scalingStrategies", refs={List.class,ElastigroupScalingStrategy.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupScalingStrategy>> scalingStrategies;

    /**
     * @return Set termination policy.
     * 
     */
    public Output<Optional<List<ElastigroupScalingStrategy>>> scalingStrategies() {
        return Codegen.optional(this.scalingStrategies);
    }
    @Export(name="scalingTargetPolicies", refs={List.class,ElastigroupScalingTargetPolicy.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupScalingTargetPolicy>> scalingTargetPolicies;

    public Output<Optional<List<ElastigroupScalingTargetPolicy>>> scalingTargetPolicies() {
        return Codegen.optional(this.scalingTargetPolicies);
    }
    @Export(name="scalingUpPolicies", refs={List.class,ElastigroupScalingUpPolicy.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupScalingUpPolicy>> scalingUpPolicies;

    public Output<Optional<List<ElastigroupScalingUpPolicy>>> scalingUpPolicies() {
        return Codegen.optional(this.scalingUpPolicies);
    }
    @Export(name="scheduledTasks", refs={List.class,ElastigroupScheduledTask.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupScheduledTask>> scheduledTasks;

    public Output<Optional<List<ElastigroupScheduledTask>>> scheduledTasks() {
        return Codegen.optional(this.scheduledTasks);
    }
    /**
     * A list of associated security group IDS.
     * 
     */
    @Export(name="securityGroups", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> securityGroups;

    /**
     * @return A list of associated security group IDS.
     * 
     */
    public Output<List<String>> securityGroups() {
        return this.securityGroups;
    }
    /**
     * The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
     * 
     */
    @Export(name="shutdownScript", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> shutdownScript;

    /**
     * @return The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
     * 
     */
    public Output<Optional<String>> shutdownScript() {
        return Codegen.optional(this.shutdownScript);
    }
    @Export(name="signals", refs={List.class,ElastigroupSignal.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupSignal>> signals;

    public Output<Optional<List<ElastigroupSignal>>> signals() {
        return Codegen.optional(this.signals);
    }
    /**
     * The percentage of Spot instances that would spin up from the `desired_capacity` number.
     * 
     */
    @Export(name="spotPercentage", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> spotPercentage;

    /**
     * @return The percentage of Spot instances that would spin up from the `desired_capacity` number.
     * 
     */
    public Output<Optional<Integer>> spotPercentage() {
        return Codegen.optional(this.spotPercentage);
    }
    @Export(name="statefulDeallocation", refs={ElastigroupStatefulDeallocation.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupStatefulDeallocation> statefulDeallocation;

    public Output<Optional<ElastigroupStatefulDeallocation>> statefulDeallocation() {
        return Codegen.optional(this.statefulDeallocation);
    }
    @Export(name="statefulInstanceActions", refs={List.class,ElastigroupStatefulInstanceAction.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupStatefulInstanceAction>> statefulInstanceActions;

    public Output<Optional<List<ElastigroupStatefulInstanceAction>>> statefulInstanceActions() {
        return Codegen.optional(this.statefulInstanceActions);
    }
    /**
     * List of Strings of subnet identifiers.
     * Note: When this parameter is set, `availability_zones` should be left unused.
     * 
     */
    @Export(name="subnetIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> subnetIds;

    /**
     * @return List of Strings of subnet identifiers.
     * Note: When this parameter is set, `availability_zones` should be left unused.
     * 
     */
    public Output<Optional<List<String>>> subnetIds() {
        return Codegen.optional(this.subnetIds);
    }
    /**
     * A key/value mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={List.class,ElastigroupTag.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ElastigroupTag>> tags;

    /**
     * @return A key/value mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<List<ElastigroupTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="targetGroupArns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> targetGroupArns;

    public Output<Optional<List<String>>> targetGroupArns() {
        return Codegen.optional(this.targetGroupArns);
    }
    @Export(name="updatePolicy", refs={ElastigroupUpdatePolicy.class}, tree="[0]")
    private Output</* @Nullable */ ElastigroupUpdatePolicy> updatePolicy;

    public Output<Optional<ElastigroupUpdatePolicy>> updatePolicy() {
        return Codegen.optional(this.updatePolicy);
    }
    /**
     * The user data to provide when launching the instance.
     * 
     */
    @Export(name="userData", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userData;

    /**
     * @return The user data to provide when launching the instance.
     * 
     */
    public Output<Optional<String>> userData() {
        return Codegen.optional(this.userData);
    }
    @Export(name="utilizeCommitments", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> utilizeCommitments;

    public Output<Optional<Boolean>> utilizeCommitments() {
        return Codegen.optional(this.utilizeCommitments);
    }
    /**
     * In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.
     * 
     */
    @Export(name="utilizeReservedInstances", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> utilizeReservedInstances;

    /**
     * @return In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.
     * 
     */
    public Output<Optional<Boolean>> utilizeReservedInstances() {
        return Codegen.optional(this.utilizeReservedInstances);
    }
    /**
     * Minimum number of instances in a &#39;HEALTHY&#39; status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.
     * 
     */
    @Export(name="waitForCapacity", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> waitForCapacity;

    /**
     * @return Minimum number of instances in a &#39;HEALTHY&#39; status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.
     * 
     */
    public Output<Optional<Integer>> waitForCapacity() {
        return Codegen.optional(this.waitForCapacity);
    }
    /**
     * Time (seconds) to wait for instances to report a &#39;HEALTHY&#39; status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.
     * 
     */
    @Export(name="waitForCapacityTimeout", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> waitForCapacityTimeout;

    /**
     * @return Time (seconds) to wait for instances to report a &#39;HEALTHY&#39; status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.
     * 
     */
    public Output<Optional<Integer>> waitForCapacityTimeout() {
        return Codegen.optional(this.waitForCapacityTimeout);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Elastigroup(String name) {
        this(name, ElastigroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Elastigroup(String name, ElastigroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Elastigroup(String name, ElastigroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("spotinst:aws/elastigroup:Elastigroup", name, args == null ? ElastigroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Elastigroup(String name, Output<String> id, @Nullable ElastigroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("spotinst:aws/elastigroup:Elastigroup", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Elastigroup get(String name, Output<String> id, @Nullable ElastigroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Elastigroup(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.multai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BalancerConnectionTimeoutsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BalancerConnectionTimeoutsArgs Empty = new BalancerConnectionTimeoutsArgs();

    @Import(name="draining")
    private @Nullable Output<Integer> draining;

    public Optional<Output<Integer>> draining() {
        return Optional.ofNullable(this.draining);
    }

    @Import(name="idle")
    private @Nullable Output<Integer> idle;

    public Optional<Output<Integer>> idle() {
        return Optional.ofNullable(this.idle);
    }

    private BalancerConnectionTimeoutsArgs() {}

    private BalancerConnectionTimeoutsArgs(BalancerConnectionTimeoutsArgs $) {
        this.draining = $.draining;
        this.idle = $.idle;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BalancerConnectionTimeoutsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BalancerConnectionTimeoutsArgs $;

        public Builder() {
            $ = new BalancerConnectionTimeoutsArgs();
        }

        public Builder(BalancerConnectionTimeoutsArgs defaults) {
            $ = new BalancerConnectionTimeoutsArgs(Objects.requireNonNull(defaults));
        }

        public Builder draining(@Nullable Output<Integer> draining) {
            $.draining = draining;
            return this;
        }

        public Builder draining(Integer draining) {
            return draining(Output.of(draining));
        }

        public Builder idle(@Nullable Output<Integer> idle) {
            $.idle = idle;
            return this;
        }

        public Builder idle(Integer idle) {
            return idle(Output.of(idle));
        }

        public BalancerConnectionTimeoutsArgs build() {
            return $;
        }
    }

}

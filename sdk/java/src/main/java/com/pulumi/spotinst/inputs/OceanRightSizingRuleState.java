// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.inputs.OceanRightSizingRuleAttachWorkloadArgs;
import com.pulumi.spotinst.inputs.OceanRightSizingRuleAutoApplyDefinitionArgs;
import com.pulumi.spotinst.inputs.OceanRightSizingRuleDetachWorkloadArgs;
import com.pulumi.spotinst.inputs.OceanRightSizingRuleRecommendationApplicationBoundaryArgs;
import com.pulumi.spotinst.inputs.OceanRightSizingRuleRecommendationApplicationHpaArgs;
import com.pulumi.spotinst.inputs.OceanRightSizingRuleRecommendationApplicationIntervalArgs;
import com.pulumi.spotinst.inputs.OceanRightSizingRuleRecommendationApplicationMinThresholdArgs;
import com.pulumi.spotinst.inputs.OceanRightSizingRuleRecommendationApplicationOverheadValueArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanRightSizingRuleState extends com.pulumi.resources.ResourceArgs {

    public static final OceanRightSizingRuleState Empty = new OceanRightSizingRuleState();

    @Import(name="attachWorkloads")
    private @Nullable Output<List<OceanRightSizingRuleAttachWorkloadArgs>> attachWorkloads;

    public Optional<Output<List<OceanRightSizingRuleAttachWorkloadArgs>>> attachWorkloads() {
        return Optional.ofNullable(this.attachWorkloads);
    }

    /**
     * Ocean Rightsizing Rule Auto Apply Configuration.
     * 
     */
    @Import(name="autoApplyDefinitions")
    private @Nullable Output<List<OceanRightSizingRuleAutoApplyDefinitionArgs>> autoApplyDefinitions;

    /**
     * @return Ocean Rightsizing Rule Auto Apply Configuration.
     * 
     */
    public Optional<Output<List<OceanRightSizingRuleAutoApplyDefinitionArgs>>> autoApplyDefinitions() {
        return Optional.ofNullable(this.autoApplyDefinitions);
    }

    @Import(name="detachWorkloads")
    private @Nullable Output<List<OceanRightSizingRuleDetachWorkloadArgs>> detachWorkloads;

    public Optional<Output<List<OceanRightSizingRuleDetachWorkloadArgs>>> detachWorkloads() {
        return Optional.ofNullable(this.detachWorkloads);
    }

    @Import(name="downsideOnly")
    private @Nullable Output<Boolean> downsideOnly;

    public Optional<Output<Boolean>> downsideOnly() {
        return Optional.ofNullable(this.downsideOnly);
    }

    /**
     * Exclude preliminary recommendations (recommendations based on less than 4 full days of data).
     * 
     */
    @Import(name="excludePreliminaryRecommendations")
    private @Nullable Output<Boolean> excludePreliminaryRecommendations;

    /**
     * @return Exclude preliminary recommendations (recommendations based on less than 4 full days of data).
     * 
     */
    public Optional<Output<Boolean>> excludePreliminaryRecommendations() {
        return Optional.ofNullable(this.excludePreliminaryRecommendations);
    }

    /**
     * Identifier of the Ocean cluster.
     * 
     */
    @Import(name="oceanId")
    private @Nullable Output<String> oceanId;

    /**
     * @return Identifier of the Ocean cluster.
     * 
     */
    public Optional<Output<String>> oceanId() {
        return Optional.ofNullable(this.oceanId);
    }

    /**
     * Determines the Ocean Rightsizing rule recommendation application boundaries.
     * 
     */
    @Import(name="recommendationApplicationBoundaries")
    private @Nullable Output<List<OceanRightSizingRuleRecommendationApplicationBoundaryArgs>> recommendationApplicationBoundaries;

    /**
     * @return Determines the Ocean Rightsizing rule recommendation application boundaries.
     * 
     */
    public Optional<Output<List<OceanRightSizingRuleRecommendationApplicationBoundaryArgs>>> recommendationApplicationBoundaries() {
        return Optional.ofNullable(this.recommendationApplicationBoundaries);
    }

    /**
     * HPA Rightsizing Rule Recommendation Configuration
     * 
     */
    @Import(name="recommendationApplicationHpas")
    private @Nullable Output<List<OceanRightSizingRuleRecommendationApplicationHpaArgs>> recommendationApplicationHpas;

    /**
     * @return HPA Rightsizing Rule Recommendation Configuration
     * 
     */
    public Optional<Output<List<OceanRightSizingRuleRecommendationApplicationHpaArgs>>> recommendationApplicationHpas() {
        return Optional.ofNullable(this.recommendationApplicationHpas);
    }

    /**
     * Determines the Ocean Rightsizing rule recommendation application intervals.
     * 
     */
    @Import(name="recommendationApplicationIntervals")
    private @Nullable Output<List<OceanRightSizingRuleRecommendationApplicationIntervalArgs>> recommendationApplicationIntervals;

    /**
     * @return Determines the Ocean Rightsizing rule recommendation application intervals.
     * 
     */
    public Optional<Output<List<OceanRightSizingRuleRecommendationApplicationIntervalArgs>>> recommendationApplicationIntervals() {
        return Optional.ofNullable(this.recommendationApplicationIntervals);
    }

    /**
     * Determines the extent of difference between current request and recommendation to trigger a change in percentage.
     * 
     */
    @Import(name="recommendationApplicationMinThresholds")
    private @Nullable Output<List<OceanRightSizingRuleRecommendationApplicationMinThresholdArgs>> recommendationApplicationMinThresholds;

    /**
     * @return Determines the extent of difference between current request and recommendation to trigger a change in percentage.
     * 
     */
    public Optional<Output<List<OceanRightSizingRuleRecommendationApplicationMinThresholdArgs>>> recommendationApplicationMinThresholds() {
        return Optional.ofNullable(this.recommendationApplicationMinThresholds);
    }

    /**
     * Determines the Ocean Rightsizing rule recommendation application overhead values.
     * 
     */
    @Import(name="recommendationApplicationOverheadValues")
    private @Nullable Output<List<OceanRightSizingRuleRecommendationApplicationOverheadValueArgs>> recommendationApplicationOverheadValues;

    /**
     * @return Determines the Ocean Rightsizing rule recommendation application overhead values.
     * 
     */
    public Optional<Output<List<OceanRightSizingRuleRecommendationApplicationOverheadValueArgs>>> recommendationApplicationOverheadValues() {
        return Optional.ofNullable(this.recommendationApplicationOverheadValues);
    }

    /**
     * Valid values: &#34;MORE_THAN_ONE_REPLICA&#34; &#34;ALL_MANIFEST&#34; &#34;NO_RESTART&#34;. Enable to sequentially restart pod batches according to recommendations, for all pods, only more than 1 replica, or not any pod.
     * 
     */
    @Import(name="restartReplicas")
    private @Nullable Output<String> restartReplicas;

    /**
     * @return Valid values: &#34;MORE_THAN_ONE_REPLICA&#34; &#34;ALL_MANIFEST&#34; &#34;NO_RESTART&#34;. Enable to sequentially restart pod batches according to recommendations, for all pods, only more than 1 replica, or not any pod.
     * 
     */
    public Optional<Output<String>> restartReplicas() {
        return Optional.ofNullable(this.restartReplicas);
    }

    /**
     * The unique name of the rule.
     * 
     */
    @Import(name="ruleName")
    private @Nullable Output<String> ruleName;

    /**
     * @return The unique name of the rule.
     * 
     */
    public Optional<Output<String>> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }

    private OceanRightSizingRuleState() {}

    private OceanRightSizingRuleState(OceanRightSizingRuleState $) {
        this.attachWorkloads = $.attachWorkloads;
        this.autoApplyDefinitions = $.autoApplyDefinitions;
        this.detachWorkloads = $.detachWorkloads;
        this.downsideOnly = $.downsideOnly;
        this.excludePreliminaryRecommendations = $.excludePreliminaryRecommendations;
        this.oceanId = $.oceanId;
        this.recommendationApplicationBoundaries = $.recommendationApplicationBoundaries;
        this.recommendationApplicationHpas = $.recommendationApplicationHpas;
        this.recommendationApplicationIntervals = $.recommendationApplicationIntervals;
        this.recommendationApplicationMinThresholds = $.recommendationApplicationMinThresholds;
        this.recommendationApplicationOverheadValues = $.recommendationApplicationOverheadValues;
        this.restartReplicas = $.restartReplicas;
        this.ruleName = $.ruleName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanRightSizingRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanRightSizingRuleState $;

        public Builder() {
            $ = new OceanRightSizingRuleState();
        }

        public Builder(OceanRightSizingRuleState defaults) {
            $ = new OceanRightSizingRuleState(Objects.requireNonNull(defaults));
        }

        public Builder attachWorkloads(@Nullable Output<List<OceanRightSizingRuleAttachWorkloadArgs>> attachWorkloads) {
            $.attachWorkloads = attachWorkloads;
            return this;
        }

        public Builder attachWorkloads(List<OceanRightSizingRuleAttachWorkloadArgs> attachWorkloads) {
            return attachWorkloads(Output.of(attachWorkloads));
        }

        public Builder attachWorkloads(OceanRightSizingRuleAttachWorkloadArgs... attachWorkloads) {
            return attachWorkloads(List.of(attachWorkloads));
        }

        /**
         * @param autoApplyDefinitions Ocean Rightsizing Rule Auto Apply Configuration.
         * 
         * @return builder
         * 
         */
        public Builder autoApplyDefinitions(@Nullable Output<List<OceanRightSizingRuleAutoApplyDefinitionArgs>> autoApplyDefinitions) {
            $.autoApplyDefinitions = autoApplyDefinitions;
            return this;
        }

        /**
         * @param autoApplyDefinitions Ocean Rightsizing Rule Auto Apply Configuration.
         * 
         * @return builder
         * 
         */
        public Builder autoApplyDefinitions(List<OceanRightSizingRuleAutoApplyDefinitionArgs> autoApplyDefinitions) {
            return autoApplyDefinitions(Output.of(autoApplyDefinitions));
        }

        /**
         * @param autoApplyDefinitions Ocean Rightsizing Rule Auto Apply Configuration.
         * 
         * @return builder
         * 
         */
        public Builder autoApplyDefinitions(OceanRightSizingRuleAutoApplyDefinitionArgs... autoApplyDefinitions) {
            return autoApplyDefinitions(List.of(autoApplyDefinitions));
        }

        public Builder detachWorkloads(@Nullable Output<List<OceanRightSizingRuleDetachWorkloadArgs>> detachWorkloads) {
            $.detachWorkloads = detachWorkloads;
            return this;
        }

        public Builder detachWorkloads(List<OceanRightSizingRuleDetachWorkloadArgs> detachWorkloads) {
            return detachWorkloads(Output.of(detachWorkloads));
        }

        public Builder detachWorkloads(OceanRightSizingRuleDetachWorkloadArgs... detachWorkloads) {
            return detachWorkloads(List.of(detachWorkloads));
        }

        public Builder downsideOnly(@Nullable Output<Boolean> downsideOnly) {
            $.downsideOnly = downsideOnly;
            return this;
        }

        public Builder downsideOnly(Boolean downsideOnly) {
            return downsideOnly(Output.of(downsideOnly));
        }

        /**
         * @param excludePreliminaryRecommendations Exclude preliminary recommendations (recommendations based on less than 4 full days of data).
         * 
         * @return builder
         * 
         */
        public Builder excludePreliminaryRecommendations(@Nullable Output<Boolean> excludePreliminaryRecommendations) {
            $.excludePreliminaryRecommendations = excludePreliminaryRecommendations;
            return this;
        }

        /**
         * @param excludePreliminaryRecommendations Exclude preliminary recommendations (recommendations based on less than 4 full days of data).
         * 
         * @return builder
         * 
         */
        public Builder excludePreliminaryRecommendations(Boolean excludePreliminaryRecommendations) {
            return excludePreliminaryRecommendations(Output.of(excludePreliminaryRecommendations));
        }

        /**
         * @param oceanId Identifier of the Ocean cluster.
         * 
         * @return builder
         * 
         */
        public Builder oceanId(@Nullable Output<String> oceanId) {
            $.oceanId = oceanId;
            return this;
        }

        /**
         * @param oceanId Identifier of the Ocean cluster.
         * 
         * @return builder
         * 
         */
        public Builder oceanId(String oceanId) {
            return oceanId(Output.of(oceanId));
        }

        /**
         * @param recommendationApplicationBoundaries Determines the Ocean Rightsizing rule recommendation application boundaries.
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationBoundaries(@Nullable Output<List<OceanRightSizingRuleRecommendationApplicationBoundaryArgs>> recommendationApplicationBoundaries) {
            $.recommendationApplicationBoundaries = recommendationApplicationBoundaries;
            return this;
        }

        /**
         * @param recommendationApplicationBoundaries Determines the Ocean Rightsizing rule recommendation application boundaries.
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationBoundaries(List<OceanRightSizingRuleRecommendationApplicationBoundaryArgs> recommendationApplicationBoundaries) {
            return recommendationApplicationBoundaries(Output.of(recommendationApplicationBoundaries));
        }

        /**
         * @param recommendationApplicationBoundaries Determines the Ocean Rightsizing rule recommendation application boundaries.
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationBoundaries(OceanRightSizingRuleRecommendationApplicationBoundaryArgs... recommendationApplicationBoundaries) {
            return recommendationApplicationBoundaries(List.of(recommendationApplicationBoundaries));
        }

        /**
         * @param recommendationApplicationHpas HPA Rightsizing Rule Recommendation Configuration
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationHpas(@Nullable Output<List<OceanRightSizingRuleRecommendationApplicationHpaArgs>> recommendationApplicationHpas) {
            $.recommendationApplicationHpas = recommendationApplicationHpas;
            return this;
        }

        /**
         * @param recommendationApplicationHpas HPA Rightsizing Rule Recommendation Configuration
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationHpas(List<OceanRightSizingRuleRecommendationApplicationHpaArgs> recommendationApplicationHpas) {
            return recommendationApplicationHpas(Output.of(recommendationApplicationHpas));
        }

        /**
         * @param recommendationApplicationHpas HPA Rightsizing Rule Recommendation Configuration
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationHpas(OceanRightSizingRuleRecommendationApplicationHpaArgs... recommendationApplicationHpas) {
            return recommendationApplicationHpas(List.of(recommendationApplicationHpas));
        }

        /**
         * @param recommendationApplicationIntervals Determines the Ocean Rightsizing rule recommendation application intervals.
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationIntervals(@Nullable Output<List<OceanRightSizingRuleRecommendationApplicationIntervalArgs>> recommendationApplicationIntervals) {
            $.recommendationApplicationIntervals = recommendationApplicationIntervals;
            return this;
        }

        /**
         * @param recommendationApplicationIntervals Determines the Ocean Rightsizing rule recommendation application intervals.
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationIntervals(List<OceanRightSizingRuleRecommendationApplicationIntervalArgs> recommendationApplicationIntervals) {
            return recommendationApplicationIntervals(Output.of(recommendationApplicationIntervals));
        }

        /**
         * @param recommendationApplicationIntervals Determines the Ocean Rightsizing rule recommendation application intervals.
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationIntervals(OceanRightSizingRuleRecommendationApplicationIntervalArgs... recommendationApplicationIntervals) {
            return recommendationApplicationIntervals(List.of(recommendationApplicationIntervals));
        }

        /**
         * @param recommendationApplicationMinThresholds Determines the extent of difference between current request and recommendation to trigger a change in percentage.
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationMinThresholds(@Nullable Output<List<OceanRightSizingRuleRecommendationApplicationMinThresholdArgs>> recommendationApplicationMinThresholds) {
            $.recommendationApplicationMinThresholds = recommendationApplicationMinThresholds;
            return this;
        }

        /**
         * @param recommendationApplicationMinThresholds Determines the extent of difference between current request and recommendation to trigger a change in percentage.
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationMinThresholds(List<OceanRightSizingRuleRecommendationApplicationMinThresholdArgs> recommendationApplicationMinThresholds) {
            return recommendationApplicationMinThresholds(Output.of(recommendationApplicationMinThresholds));
        }

        /**
         * @param recommendationApplicationMinThresholds Determines the extent of difference between current request and recommendation to trigger a change in percentage.
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationMinThresholds(OceanRightSizingRuleRecommendationApplicationMinThresholdArgs... recommendationApplicationMinThresholds) {
            return recommendationApplicationMinThresholds(List.of(recommendationApplicationMinThresholds));
        }

        /**
         * @param recommendationApplicationOverheadValues Determines the Ocean Rightsizing rule recommendation application overhead values.
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationOverheadValues(@Nullable Output<List<OceanRightSizingRuleRecommendationApplicationOverheadValueArgs>> recommendationApplicationOverheadValues) {
            $.recommendationApplicationOverheadValues = recommendationApplicationOverheadValues;
            return this;
        }

        /**
         * @param recommendationApplicationOverheadValues Determines the Ocean Rightsizing rule recommendation application overhead values.
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationOverheadValues(List<OceanRightSizingRuleRecommendationApplicationOverheadValueArgs> recommendationApplicationOverheadValues) {
            return recommendationApplicationOverheadValues(Output.of(recommendationApplicationOverheadValues));
        }

        /**
         * @param recommendationApplicationOverheadValues Determines the Ocean Rightsizing rule recommendation application overhead values.
         * 
         * @return builder
         * 
         */
        public Builder recommendationApplicationOverheadValues(OceanRightSizingRuleRecommendationApplicationOverheadValueArgs... recommendationApplicationOverheadValues) {
            return recommendationApplicationOverheadValues(List.of(recommendationApplicationOverheadValues));
        }

        /**
         * @param restartReplicas Valid values: &#34;MORE_THAN_ONE_REPLICA&#34; &#34;ALL_MANIFEST&#34; &#34;NO_RESTART&#34;. Enable to sequentially restart pod batches according to recommendations, for all pods, only more than 1 replica, or not any pod.
         * 
         * @return builder
         * 
         */
        public Builder restartReplicas(@Nullable Output<String> restartReplicas) {
            $.restartReplicas = restartReplicas;
            return this;
        }

        /**
         * @param restartReplicas Valid values: &#34;MORE_THAN_ONE_REPLICA&#34; &#34;ALL_MANIFEST&#34; &#34;NO_RESTART&#34;. Enable to sequentially restart pod batches according to recommendations, for all pods, only more than 1 replica, or not any pod.
         * 
         * @return builder
         * 
         */
        public Builder restartReplicas(String restartReplicas) {
            return restartReplicas(Output.of(restartReplicas));
        }

        /**
         * @param ruleName The unique name of the rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(@Nullable Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName The unique name of the rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        public OceanRightSizingRuleState build() {
            return $;
        }
    }

}

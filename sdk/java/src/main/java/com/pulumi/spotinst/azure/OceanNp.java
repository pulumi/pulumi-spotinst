// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.azure;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.spotinst.Utilities;
import com.pulumi.spotinst.azure.OceanNpArgs;
import com.pulumi.spotinst.azure.inputs.OceanNpState;
import com.pulumi.spotinst.azure.outputs.OceanNpAutoscaler;
import com.pulumi.spotinst.azure.outputs.OceanNpFilters;
import com.pulumi.spotinst.azure.outputs.OceanNpHeadroom;
import com.pulumi.spotinst.azure.outputs.OceanNpHealth;
import com.pulumi.spotinst.azure.outputs.OceanNpLinuxOsConfig;
import com.pulumi.spotinst.azure.outputs.OceanNpLogging;
import com.pulumi.spotinst.azure.outputs.OceanNpScheduling;
import com.pulumi.spotinst.azure.outputs.OceanNpTaint;
import com.pulumi.spotinst.azure.outputs.OceanNpUpdatePolicy;
import com.pulumi.spotinst.azure.outputs.OceanNpVngTemplateScheduling;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="spotinst:azure/oceanNp:OceanNp")
public class OceanNp extends com.pulumi.resources.CustomResource {
    @Export(name="aksClusterName", refs={String.class}, tree="[0]")
    private Output<String> aksClusterName;

    public Output<String> aksClusterName() {
        return this.aksClusterName;
    }
    @Export(name="aksInfrastructureResourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> aksInfrastructureResourceGroupName;

    public Output<String> aksInfrastructureResourceGroupName() {
        return this.aksInfrastructureResourceGroupName;
    }
    @Export(name="aksRegion", refs={String.class}, tree="[0]")
    private Output<String> aksRegion;

    public Output<String> aksRegion() {
        return this.aksRegion;
    }
    @Export(name="aksResourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> aksResourceGroupName;

    public Output<String> aksResourceGroupName() {
        return this.aksResourceGroupName;
    }
    /**
     * The Ocean Kubernetes Autoscaler object.
     * 
     */
    @Export(name="autoscaler", refs={OceanNpAutoscaler.class}, tree="[0]")
    private Output</* @Nullable */ OceanNpAutoscaler> autoscaler;

    /**
     * @return The Ocean Kubernetes Autoscaler object.
     * 
     */
    public Output<Optional<OceanNpAutoscaler>> autoscaler() {
        return Codegen.optional(this.autoscaler);
    }
    /**
     * An Array holding Availability Zones, this configures the availability zones the Ocean may launch instances in per VNG.
     * 
     */
    @Export(name="availabilityZones", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> availabilityZones;

    /**
     * @return An Array holding Availability Zones, this configures the availability zones the Ocean may launch instances in per VNG.
     * 
     */
    public Output<List<String>> availabilityZones() {
        return this.availabilityZones;
    }
    /**
     * Enter a unique Ocean cluster identifier. Cannot be updated. This needs to match with string that was used to install the controller in the cluster, typically clusterName + 8 digit string.
     * 
     */
    @Export(name="controllerClusterId", refs={String.class}, tree="[0]")
    private Output<String> controllerClusterId;

    /**
     * @return Enter a unique Ocean cluster identifier. Cannot be updated. This needs to match with string that was used to install the controller in the cluster, typically clusterName + 8 digit string.
     * 
     */
    public Output<String> controllerClusterId() {
        return this.controllerClusterId;
    }
    /**
     * Enable node public IP.
     * 
     */
    @Export(name="enableNodePublicIp", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableNodePublicIp;

    /**
     * @return Enable node public IP.
     * 
     */
    public Output<Optional<Boolean>> enableNodePublicIp() {
        return Codegen.optional(this.enableNodePublicIp);
    }
    /**
     * If no spot VM markets are available, enable Ocean to launch regular (pay-as-you-go) nodes instead.
     * 
     */
    @Export(name="fallbackToOndemand", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> fallbackToOndemand;

    /**
     * @return If no spot VM markets are available, enable Ocean to launch regular (pay-as-you-go) nodes instead.
     * 
     */
    public Output<Optional<Boolean>> fallbackToOndemand() {
        return Codegen.optional(this.fallbackToOndemand);
    }
    /**
     * Filters for the VM sizes that can be launched from the virtual node group.
     * 
     */
    @Export(name="filters", refs={OceanNpFilters.class}, tree="[0]")
    private Output</* @Nullable */ OceanNpFilters> filters;

    /**
     * @return Filters for the VM sizes that can be launched from the virtual node group.
     * 
     */
    public Output<Optional<OceanNpFilters>> filters() {
        return Codegen.optional(this.filters);
    }
    /**
     * Specify the custom headroom per VNG. Provide a list of headroom objects.
     * 
     */
    @Export(name="headrooms", refs={List.class,OceanNpHeadroom.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanNpHeadroom>> headrooms;

    /**
     * @return Specify the custom headroom per VNG. Provide a list of headroom objects.
     * 
     */
    public Output<Optional<List<OceanNpHeadroom>>> headrooms() {
        return Codegen.optional(this.headrooms);
    }
    /**
     * The Ocean AKS Health object.
     * 
     */
    @Export(name="health", refs={OceanNpHealth.class}, tree="[0]")
    private Output</* @Nullable */ OceanNpHealth> health;

    /**
     * @return The Ocean AKS Health object.
     * 
     */
    public Output<Optional<OceanNpHealth>> health() {
        return Codegen.optional(this.health);
    }
    /**
     * The desired Kubernetes version of the launched nodes. In case the value is null, the Kubernetes version of the control plane is used.
     * 
     */
    @Export(name="kubernetesVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kubernetesVersion;

    /**
     * @return The desired Kubernetes version of the launched nodes. In case the value is null, the Kubernetes version of the control plane is used.
     * 
     */
    public Output<Optional<String>> kubernetesVersion() {
        return Codegen.optional(this.kubernetesVersion);
    }
    /**
     * An array of labels to add to the virtual node group. Only custom user labels are allowed, and not [Kubernetes well-known labels](https://kubernetes.io/docs/reference/labels-annotations-taints/) or [ Azure AKS labels](https://learn.microsoft.com/en-us/azure/aks/use-labels) or [Spot labels](https://docs.spot.io/ocean/features/labels-and-taints?id=spot-labels).
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return An array of labels to add to the virtual node group. Only custom user labels are allowed, and not [Kubernetes well-known labels](https://kubernetes.io/docs/reference/labels-annotations-taints/) or [ Azure AKS labels](https://learn.microsoft.com/en-us/azure/aks/use-labels) or [Spot labels](https://docs.spot.io/ocean/features/labels-and-taints?id=spot-labels).
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Custom Linux OS configuration.
     * 
     */
    @Export(name="linuxOsConfigs", refs={List.class,OceanNpLinuxOsConfig.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanNpLinuxOsConfig>> linuxOsConfigs;

    /**
     * @return Custom Linux OS configuration.
     * 
     */
    public Output<Optional<List<OceanNpLinuxOsConfig>>> linuxOsConfigs() {
        return Codegen.optional(this.linuxOsConfigs);
    }
    /**
     * The Ocean AKS Logging Object.
     * 
     */
    @Export(name="logging", refs={OceanNpLogging.class}, tree="[0]")
    private Output</* @Nullable */ OceanNpLogging> logging;

    /**
     * @return The Ocean AKS Logging Object.
     * 
     */
    public Output<Optional<OceanNpLogging>> logging() {
        return Codegen.optional(this.logging);
    }
    /**
     * Maximum node count limit.
     * 
     */
    @Export(name="maxCount", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maxCount;

    /**
     * @return Maximum node count limit.
     * 
     */
    public Output<Optional<Integer>> maxCount() {
        return Codegen.optional(this.maxCount);
    }
    /**
     * The maximum number of pods per node in the node pools.
     * 
     */
    @Export(name="maxPodsPerNode", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maxPodsPerNode;

    /**
     * @return The maximum number of pods per node in the node pools.
     * 
     */
    public Output<Optional<Integer>> maxPodsPerNode() {
        return Codegen.optional(this.maxPodsPerNode);
    }
    /**
     * Minimum node count limit.
     * 
     */
    @Export(name="minCount", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> minCount;

    /**
     * @return Minimum node count limit.
     * 
     */
    public Output<Optional<Integer>> minCount() {
        return Codegen.optional(this.minCount);
    }
    /**
     * Add a name for the Ocean cluster.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Add a name for the Ocean cluster.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The size of the OS disk in GB.
     * 
     */
    @Export(name="osDiskSizeGb", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> osDiskSizeGb;

    /**
     * @return The size of the OS disk in GB.
     * 
     */
    public Output<Optional<Integer>> osDiskSizeGb() {
        return Codegen.optional(this.osDiskSizeGb);
    }
    /**
     * The type of the OS disk.
     * 
     */
    @Export(name="osDiskType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> osDiskType;

    /**
     * @return The type of the OS disk.
     * 
     */
    public Output<Optional<String>> osDiskType() {
        return Codegen.optional(this.osDiskType);
    }
    /**
     * The OS SKU of the OS type. Must correlate with the os type.
     * 
     */
    @Export(name="osSku", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> osSku;

    /**
     * @return The OS SKU of the OS type. Must correlate with the os type.
     * 
     */
    public Output<Optional<String>> osSku() {
        return Codegen.optional(this.osSku);
    }
    /**
     * The OS type of the OS disk. Can&#39;t be modified once set.
     * 
     */
    @Export(name="osType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> osType;

    /**
     * @return The OS type of the OS disk. Can&#39;t be modified once set.
     * 
     */
    public Output<Optional<String>> osType() {
        return Codegen.optional(this.osType);
    }
    /**
     * The IDs of subnets in an existing VNet into which to assign pods in the cluster (requires azure network-plugin).
     * 
     */
    @Export(name="podSubnetIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> podSubnetIds;

    /**
     * @return The IDs of subnets in an existing VNet into which to assign pods in the cluster (requires azure network-plugin).
     * 
     */
    public Output<Optional<List<String>>> podSubnetIds() {
        return Codegen.optional(this.podSubnetIds);
    }
    @Export(name="scheduling", refs={OceanNpScheduling.class}, tree="[0]")
    private Output</* @Nullable */ OceanNpScheduling> scheduling;

    public Output<Optional<OceanNpScheduling>> scheduling() {
        return Codegen.optional(this.scheduling);
    }
    /**
     * Percentage of spot VMs to maintain.
     * 
     */
    @Export(name="spotPercentage", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> spotPercentage;

    /**
     * @return Percentage of spot VMs to maintain.
     * 
     */
    public Output<Optional<Integer>> spotPercentage() {
        return Codegen.optional(this.spotPercentage);
    }
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Add taints to a virtual node group. Only custom user taints are allowed, and not [Kubernetes well-known taints](https://kubernetes.io/docs/reference/labels-annotations-taints/) or Azure AKS [ScaleSetPrioirty (Spot VM) taint](https://learn.microsoft.com/en-us/azure/aks/spot-node-pool). For all Spot VMs, AKS injects a taint kubernetes.azure.com/scalesetpriority=spot:NoSchedule, to ensure that only workloads that can handle interruptions are scheduled on Spot nodes. To [schedule a pod to run on Spot node](https://learn.microsoft.com/en-us/azure/aks/spot-node-pool#schedule-a-pod-to-run-on-the-spot-node), add a toleration but dont include the nodeAffinity (not supported for Spot Ocean), this will prevent the pod from being scheduled using Spot Ocean.
     * 
     */
    @Export(name="taints", refs={List.class,OceanNpTaint.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanNpTaint>> taints;

    /**
     * @return Add taints to a virtual node group. Only custom user taints are allowed, and not [Kubernetes well-known taints](https://kubernetes.io/docs/reference/labels-annotations-taints/) or Azure AKS [ScaleSetPrioirty (Spot VM) taint](https://learn.microsoft.com/en-us/azure/aks/spot-node-pool). For all Spot VMs, AKS injects a taint kubernetes.azure.com/scalesetpriority=spot:NoSchedule, to ensure that only workloads that can handle interruptions are scheduled on Spot nodes. To [schedule a pod to run on Spot node](https://learn.microsoft.com/en-us/azure/aks/spot-node-pool#schedule-a-pod-to-run-on-the-spot-node), add a toleration but dont include the nodeAffinity (not supported for Spot Ocean), this will prevent the pod from being scheduled using Spot Ocean.
     * 
     */
    public Output<Optional<List<OceanNpTaint>>> taints() {
        return Codegen.optional(this.taints);
    }
    @Export(name="updatePolicy", refs={OceanNpUpdatePolicy.class}, tree="[0]")
    private Output</* @Nullable */ OceanNpUpdatePolicy> updatePolicy;

    public Output<Optional<OceanNpUpdatePolicy>> updatePolicy() {
        return Codegen.optional(this.updatePolicy);
    }
    /**
     * The IDs of subnets in an existing VNet into which to assign nodes in the cluster (requires azure network-plugin).
     * 
     */
    @Export(name="vnetSubnetIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> vnetSubnetIds;

    /**
     * @return The IDs of subnets in an existing VNet into which to assign nodes in the cluster (requires azure network-plugin).
     * 
     */
    public Output<Optional<List<String>>> vnetSubnetIds() {
        return Codegen.optional(this.vnetSubnetIds);
    }
    /**
     * An object used to specify times when the virtual node group will turn off all its node pools. Once the shutdown time will be over, the virtual node group will return to its previous state.
     * 
     */
    @Export(name="vngTemplateScheduling", refs={OceanNpVngTemplateScheduling.class}, tree="[0]")
    private Output</* @Nullable */ OceanNpVngTemplateScheduling> vngTemplateScheduling;

    /**
     * @return An object used to specify times when the virtual node group will turn off all its node pools. Once the shutdown time will be over, the virtual node group will return to its previous state.
     * 
     */
    public Output<Optional<OceanNpVngTemplateScheduling>> vngTemplateScheduling() {
        return Codegen.optional(this.vngTemplateScheduling);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OceanNp(java.lang.String name) {
        this(name, OceanNpArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OceanNp(java.lang.String name, OceanNpArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OceanNp(java.lang.String name, OceanNpArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("spotinst:azure/oceanNp:OceanNp", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private OceanNp(java.lang.String name, Output<java.lang.String> id, @Nullable OceanNpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("spotinst:azure/oceanNp:OceanNp", name, state, makeResourceOptions(options, id), false);
    }

    private static OceanNpArgs makeArgs(OceanNpArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? OceanNpArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OceanNp get(java.lang.String name, Output<java.lang.String> id, @Nullable OceanNpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OceanNp(name, id, state, options);
    }
}

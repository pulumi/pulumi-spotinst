// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedInstanceMetadataOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedInstanceMetadataOptionsArgs Empty = new ManagedInstanceMetadataOptionsArgs();

    @Import(name="httpPutResponseHopLimit")
    private @Nullable Output<Integer> httpPutResponseHopLimit;

    public Optional<Output<Integer>> httpPutResponseHopLimit() {
        return Optional.ofNullable(this.httpPutResponseHopLimit);
    }

    @Import(name="httpTokens", required=true)
    private Output<String> httpTokens;

    public Output<String> httpTokens() {
        return this.httpTokens;
    }

    @Import(name="instanceMetadataTags")
    private @Nullable Output<String> instanceMetadataTags;

    public Optional<Output<String>> instanceMetadataTags() {
        return Optional.ofNullable(this.instanceMetadataTags);
    }

    private ManagedInstanceMetadataOptionsArgs() {}

    private ManagedInstanceMetadataOptionsArgs(ManagedInstanceMetadataOptionsArgs $) {
        this.httpPutResponseHopLimit = $.httpPutResponseHopLimit;
        this.httpTokens = $.httpTokens;
        this.instanceMetadataTags = $.instanceMetadataTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedInstanceMetadataOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedInstanceMetadataOptionsArgs $;

        public Builder() {
            $ = new ManagedInstanceMetadataOptionsArgs();
        }

        public Builder(ManagedInstanceMetadataOptionsArgs defaults) {
            $ = new ManagedInstanceMetadataOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder httpPutResponseHopLimit(@Nullable Output<Integer> httpPutResponseHopLimit) {
            $.httpPutResponseHopLimit = httpPutResponseHopLimit;
            return this;
        }

        public Builder httpPutResponseHopLimit(Integer httpPutResponseHopLimit) {
            return httpPutResponseHopLimit(Output.of(httpPutResponseHopLimit));
        }

        public Builder httpTokens(Output<String> httpTokens) {
            $.httpTokens = httpTokens;
            return this;
        }

        public Builder httpTokens(String httpTokens) {
            return httpTokens(Output.of(httpTokens));
        }

        public Builder instanceMetadataTags(@Nullable Output<String> instanceMetadataTags) {
            $.instanceMetadataTags = instanceMetadataTags;
            return this;
        }

        public Builder instanceMetadataTags(String instanceMetadataTags) {
            return instanceMetadataTags(Output.of(instanceMetadataTags));
        }

        public ManagedInstanceMetadataOptionsArgs build() {
            if ($.httpTokens == null) {
                throw new MissingRequiredPropertyException("ManagedInstanceMetadataOptionsArgs", "httpTokens");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.azure.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.azure.inputs.OceanVirtualNodeGroupLaunchSpecificationOsDiskArgs;
import com.pulumi.spotinst.azure.inputs.OceanVirtualNodeGroupLaunchSpecificationTagArgs;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanVirtualNodeGroupLaunchSpecificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanVirtualNodeGroupLaunchSpecificationArgs Empty = new OceanVirtualNodeGroupLaunchSpecificationArgs();

    /**
     * The maximum number of pods per node in an AKS cluster.
     * 
     */
    @Import(name="maxPods")
    private @Nullable Output<Integer> maxPods;

    /**
     * @return The maximum number of pods per node in an AKS cluster.
     * 
     */
    public Optional<Output<Integer>> maxPods() {
        return Optional.ofNullable(this.maxPods);
    }

    /**
     * Specify OS disk specification other than default.
     * 
     */
    @Import(name="osDisk")
    private @Nullable Output<OceanVirtualNodeGroupLaunchSpecificationOsDiskArgs> osDisk;

    /**
     * @return Specify OS disk specification other than default.
     * 
     */
    public Optional<Output<OceanVirtualNodeGroupLaunchSpecificationOsDiskArgs>> osDisk() {
        return Optional.ofNullable(this.osDisk);
    }

    /**
     * Additional key-value pairs to be used to tag the VMs in the virtual node group.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<OceanVirtualNodeGroupLaunchSpecificationTagArgs>> tags;

    /**
     * @return Additional key-value pairs to be used to tag the VMs in the virtual node group.
     * 
     */
    public Optional<Output<List<OceanVirtualNodeGroupLaunchSpecificationTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private OceanVirtualNodeGroupLaunchSpecificationArgs() {}

    private OceanVirtualNodeGroupLaunchSpecificationArgs(OceanVirtualNodeGroupLaunchSpecificationArgs $) {
        this.maxPods = $.maxPods;
        this.osDisk = $.osDisk;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanVirtualNodeGroupLaunchSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanVirtualNodeGroupLaunchSpecificationArgs $;

        public Builder() {
            $ = new OceanVirtualNodeGroupLaunchSpecificationArgs();
        }

        public Builder(OceanVirtualNodeGroupLaunchSpecificationArgs defaults) {
            $ = new OceanVirtualNodeGroupLaunchSpecificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxPods The maximum number of pods per node in an AKS cluster.
         * 
         * @return builder
         * 
         */
        public Builder maxPods(@Nullable Output<Integer> maxPods) {
            $.maxPods = maxPods;
            return this;
        }

        /**
         * @param maxPods The maximum number of pods per node in an AKS cluster.
         * 
         * @return builder
         * 
         */
        public Builder maxPods(Integer maxPods) {
            return maxPods(Output.of(maxPods));
        }

        /**
         * @param osDisk Specify OS disk specification other than default.
         * 
         * @return builder
         * 
         */
        public Builder osDisk(@Nullable Output<OceanVirtualNodeGroupLaunchSpecificationOsDiskArgs> osDisk) {
            $.osDisk = osDisk;
            return this;
        }

        /**
         * @param osDisk Specify OS disk specification other than default.
         * 
         * @return builder
         * 
         */
        public Builder osDisk(OceanVirtualNodeGroupLaunchSpecificationOsDiskArgs osDisk) {
            return osDisk(Output.of(osDisk));
        }

        /**
         * @param tags Additional key-value pairs to be used to tag the VMs in the virtual node group.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<OceanVirtualNodeGroupLaunchSpecificationTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Additional key-value pairs to be used to tag the VMs in the virtual node group.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<OceanVirtualNodeGroupLaunchSpecificationTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Additional key-value pairs to be used to tag the VMs in the virtual node group.
         * 
         * @return builder
         * 
         */
        public Builder tags(OceanVirtualNodeGroupLaunchSpecificationTagArgs... tags) {
            return tags(List.of(tags));
        }

        public OceanVirtualNodeGroupLaunchSpecificationArgs build() {
            return $;
        }
    }

}

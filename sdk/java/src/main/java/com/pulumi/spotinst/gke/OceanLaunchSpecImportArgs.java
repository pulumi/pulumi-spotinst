// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.gke;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class OceanLaunchSpecImportArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanLaunchSpecImportArgs Empty = new OceanLaunchSpecImportArgs();

    /**
     * The node pool you wish to use in your launchSpec.
     * 
     */
    @Import(name="nodePoolName", required=true)
    private Output<String> nodePoolName;

    /**
     * @return The node pool you wish to use in your launchSpec.
     * 
     */
    public Output<String> nodePoolName() {
        return this.nodePoolName;
    }

    /**
     * The Ocean cluster ID required for launchSpec create.
     * 
     */
    @Import(name="oceanId", required=true)
    private Output<String> oceanId;

    /**
     * @return The Ocean cluster ID required for launchSpec create.
     * 
     */
    public Output<String> oceanId() {
        return this.oceanId;
    }

    private OceanLaunchSpecImportArgs() {}

    private OceanLaunchSpecImportArgs(OceanLaunchSpecImportArgs $) {
        this.nodePoolName = $.nodePoolName;
        this.oceanId = $.oceanId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanLaunchSpecImportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanLaunchSpecImportArgs $;

        public Builder() {
            $ = new OceanLaunchSpecImportArgs();
        }

        public Builder(OceanLaunchSpecImportArgs defaults) {
            $ = new OceanLaunchSpecImportArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param nodePoolName The node pool you wish to use in your launchSpec.
         * 
         * @return builder
         * 
         */
        public Builder nodePoolName(Output<String> nodePoolName) {
            $.nodePoolName = nodePoolName;
            return this;
        }

        /**
         * @param nodePoolName The node pool you wish to use in your launchSpec.
         * 
         * @return builder
         * 
         */
        public Builder nodePoolName(String nodePoolName) {
            return nodePoolName(Output.of(nodePoolName));
        }

        /**
         * @param oceanId The Ocean cluster ID required for launchSpec create.
         * 
         * @return builder
         * 
         */
        public Builder oceanId(Output<String> oceanId) {
            $.oceanId = oceanId;
            return this;
        }

        /**
         * @param oceanId The Ocean cluster ID required for launchSpec create.
         * 
         * @return builder
         * 
         */
        public Builder oceanId(String oceanId) {
            return oceanId(Output.of(oceanId));
        }

        public OceanLaunchSpecImportArgs build() {
            if ($.nodePoolName == null) {
                throw new MissingRequiredPropertyException("OceanLaunchSpecImportArgs", "nodePoolName");
            }
            if ($.oceanId == null) {
                throw new MissingRequiredPropertyException("OceanLaunchSpecImportArgs", "oceanId");
            }
            return $;
        }
    }

}

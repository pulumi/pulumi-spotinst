// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MrScalarProvisioningTimeout {
    private Integer timeout;
    private String timeoutAction;

    private MrScalarProvisioningTimeout() {}
    public Integer timeout() {
        return this.timeout;
    }
    public String timeoutAction() {
        return this.timeoutAction;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MrScalarProvisioningTimeout defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer timeout;
        private String timeoutAction;
        public Builder() {}
        public Builder(MrScalarProvisioningTimeout defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.timeout = defaults.timeout;
    	      this.timeoutAction = defaults.timeoutAction;
        }

        @CustomType.Setter
        public Builder timeout(Integer timeout) {
            if (timeout == null) {
              throw new MissingRequiredPropertyException("MrScalarProvisioningTimeout", "timeout");
            }
            this.timeout = timeout;
            return this;
        }
        @CustomType.Setter
        public Builder timeoutAction(String timeoutAction) {
            if (timeoutAction == null) {
              throw new MissingRequiredPropertyException("MrScalarProvisioningTimeout", "timeoutAction");
            }
            this.timeoutAction = timeoutAction;
            return this;
        }
        public MrScalarProvisioningTimeout build() {
            final var _resultValue = new MrScalarProvisioningTimeout();
            _resultValue.timeout = timeout;
            _resultValue.timeoutAction = timeoutAction;
            return _resultValue;
        }
    }
}

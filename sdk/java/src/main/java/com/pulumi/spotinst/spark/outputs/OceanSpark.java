// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.spark.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class OceanSpark {
    /**
     * @return - List of Kubernetes namespaces that should be configured to run Spark applications, in addition to the default Spark application namespace `spark-apps`.
     * 
     */
    private @Nullable List<String> additionalAppNamespaces;

    private OceanSpark() {}
    /**
     * @return - List of Kubernetes namespaces that should be configured to run Spark applications, in addition to the default Spark application namespace `spark-apps`.
     * 
     */
    public List<String> additionalAppNamespaces() {
        return this.additionalAppNamespaces == null ? List.of() : this.additionalAppNamespaces;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OceanSpark defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> additionalAppNamespaces;
        public Builder() {}
        public Builder(OceanSpark defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalAppNamespaces = defaults.additionalAppNamespaces;
        }

        @CustomType.Setter
        public Builder additionalAppNamespaces(@Nullable List<String> additionalAppNamespaces) {
            this.additionalAppNamespaces = additionalAppNamespaces;
            return this;
        }
        public Builder additionalAppNamespaces(String... additionalAppNamespaces) {
            return additionalAppNamespaces(List.of(additionalAppNamespaces));
        }
        public OceanSpark build() {
            final var o = new OceanSpark();
            o.additionalAppNamespaces = additionalAppNamespaces;
            return o;
        }
    }
}

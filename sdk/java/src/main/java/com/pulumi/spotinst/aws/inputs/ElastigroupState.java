// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.aws.inputs.ElastigroupCpuOptionsArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupEbsBlockDeviceArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupEphemeralBlockDeviceArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupImageArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupInstanceTypesWeightArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupIntegrationBeanstalkArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupIntegrationCodedeployArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupIntegrationDockerSwarmArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupIntegrationEcsArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupIntegrationGitlabArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupIntegrationKubernetesArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupIntegrationMesosphereArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupIntegrationMultaiRuntimeArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupIntegrationNomadArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupIntegrationRancherArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupIntegrationRoute53Args;
import com.pulumi.spotinst.aws.inputs.ElastigroupItfArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupMetadataOptionsArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupMultaiTargetSetArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupMultipleMetricsArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupNetworkInterfaceArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupResourceTagSpecificationArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupRevertToSpotArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupScalingDownPolicyArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupScalingStrategyArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupScalingTargetPolicyArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupScalingUpPolicyArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupScheduledTaskArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupSignalArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupStatefulDeallocationArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupStatefulInstanceActionArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupTagArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupUpdatePolicyArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ElastigroupState extends com.pulumi.resources.ResourceArgs {

    public static final ElastigroupState Empty = new ElastigroupState();

    /**
     * List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.
     * Note: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:
     * `availability_zones = [&#34;us-east-1a:subnet-123456:ClusterI03&#34;]`
     * 
     */
    @Import(name="availabilityZones")
    private @Nullable Output<List<String>> availabilityZones;

    /**
     * @return List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.
     * Note: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:
     * `availability_zones = [&#34;us-east-1a:subnet-123456:ClusterI03&#34;]`
     * 
     */
    public Optional<Output<List<String>>> availabilityZones() {
        return Optional.ofNullable(this.availabilityZones);
    }

    /**
     * String, determine the way we attach the data volumes to the data devices, possible values: `&#34;reattach&#34;` and `&#34;onLaunch&#34;` (default is onLaunch).
     * 
     */
    @Import(name="blockDevicesMode")
    private @Nullable Output<String> blockDevicesMode;

    /**
     * @return String, determine the way we attach the data volumes to the data devices, possible values: `&#34;reattach&#34;` and `&#34;onLaunch&#34;` (default is onLaunch).
     * 
     */
    public Optional<Output<String>> blockDevicesMode() {
        return Optional.ofNullable(this.blockDevicesMode);
    }

    /**
     * The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs. Valid values: `instance`, `weight`.
     * 
     */
    @Import(name="capacityUnit")
    private @Nullable Output<String> capacityUnit;

    /**
     * @return The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs. Valid values: `instance`, `weight`.
     * 
     */
    public Optional<Output<String>> capacityUnit() {
        return Optional.ofNullable(this.capacityUnit);
    }

    @Import(name="considerOdPricing")
    private @Nullable Output<Boolean> considerOdPricing;

    public Optional<Output<Boolean>> considerOdPricing() {
        return Optional.ofNullable(this.considerOdPricing);
    }

    /**
     * Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.
     * 
     */
    @Import(name="cpuCredits")
    private @Nullable Output<String> cpuCredits;

    /**
     * @return Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.
     * 
     */
    public Optional<Output<String>> cpuCredits() {
        return Optional.ofNullable(this.cpuCredits);
    }

    /**
     * The CPU options for the instances that are launched within the group:
     * 
     */
    @Import(name="cpuOptions")
    private @Nullable Output<ElastigroupCpuOptionsArgs> cpuOptions;

    /**
     * @return The CPU options for the instances that are launched within the group:
     * 
     */
    public Optional<Output<ElastigroupCpuOptionsArgs>> cpuOptions() {
        return Optional.ofNullable(this.cpuOptions);
    }

    /**
     * The group description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The group description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The desired number of instances the group should have at any time.
     * 
     */
    @Import(name="desiredCapacity")
    private @Nullable Output<Integer> desiredCapacity;

    /**
     * @return The desired number of instances the group should have at any time.
     * 
     */
    public Optional<Output<Integer>> desiredCapacity() {
        return Optional.ofNullable(this.desiredCapacity);
    }

    /**
     * The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.
     * 
     */
    @Import(name="drainingTimeout")
    private @Nullable Output<Integer> drainingTimeout;

    /**
     * @return The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.
     * 
     */
    public Optional<Output<Integer>> drainingTimeout() {
        return Optional.ofNullable(this.drainingTimeout);
    }

    @Import(name="ebsBlockDevices")
    private @Nullable Output<List<ElastigroupEbsBlockDeviceArgs>> ebsBlockDevices;

    public Optional<Output<List<ElastigroupEbsBlockDeviceArgs>>> ebsBlockDevices() {
        return Optional.ofNullable(this.ebsBlockDevices);
    }

    /**
     * Enable high bandwidth connectivity between instances and AWS’s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.
     * 
     */
    @Import(name="ebsOptimized")
    private @Nullable Output<Boolean> ebsOptimized;

    /**
     * @return Enable high bandwidth connectivity between instances and AWS’s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.
     * 
     */
    public Optional<Output<Boolean>> ebsOptimized() {
        return Optional.ofNullable(this.ebsOptimized);
    }

    /**
     * A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.
     * 
     */
    @Import(name="elasticIps")
    private @Nullable Output<List<String>> elasticIps;

    /**
     * @return A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.
     * 
     */
    public Optional<Output<List<String>>> elasticIps() {
        return Optional.ofNullable(this.elasticIps);
    }

    /**
     * List of Elastic Load Balancers names (ELB).
     * 
     */
    @Import(name="elasticLoadBalancers")
    private @Nullable Output<List<String>> elasticLoadBalancers;

    /**
     * @return List of Elastic Load Balancers names (ELB).
     * 
     */
    public Optional<Output<List<String>>> elasticLoadBalancers() {
        return Optional.ofNullable(this.elasticLoadBalancers);
    }

    /**
     * Indicates whether monitoring is enabled for the instance.
     * 
     */
    @Import(name="enableMonitoring")
    private @Nullable Output<Boolean> enableMonitoring;

    /**
     * @return Indicates whether monitoring is enabled for the instance.
     * 
     */
    public Optional<Output<Boolean>> enableMonitoring() {
        return Optional.ofNullable(this.enableMonitoring);
    }

    @Import(name="ephemeralBlockDevices")
    private @Nullable Output<List<ElastigroupEphemeralBlockDeviceArgs>> ephemeralBlockDevices;

    public Optional<Output<List<ElastigroupEphemeralBlockDeviceArgs>>> ephemeralBlockDevices() {
        return Optional.ofNullable(this.ephemeralBlockDevices);
    }

    /**
     * In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.
     * 
     */
    @Import(name="fallbackToOndemand")
    private @Nullable Output<Boolean> fallbackToOndemand;

    /**
     * @return In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.
     * 
     */
    public Optional<Output<Boolean>> fallbackToOndemand() {
        return Optional.ofNullable(this.fallbackToOndemand);
    }

    /**
     * The amount of time, in seconds, after the instance has launched to starts and check its health.
     * 
     */
    @Import(name="healthCheckGracePeriod")
    private @Nullable Output<Integer> healthCheckGracePeriod;

    /**
     * @return The amount of time, in seconds, after the instance has launched to starts and check its health.
     * 
     */
    public Optional<Output<Integer>> healthCheckGracePeriod() {
        return Optional.ofNullable(this.healthCheckGracePeriod);
    }

    /**
     * The service that will perform health checks for the instance. Valid values: `&#34;ELB&#34;`, `&#34;HCS&#34;`, `&#34;TARGET_GROUP&#34;`, `&#34;MLB&#34;`, `&#34;EC2&#34;`, `&#34;MULTAI_TARGET_SET&#34;`, `&#34;MLB_RUNTIME&#34;`, `&#34;K8S_NODE&#34;`, `&#34;NOMAD_NODE&#34;`, `&#34;ECS_CLUSTER_INSTANCE&#34;`.
     * 
     */
    @Import(name="healthCheckType")
    private @Nullable Output<String> healthCheckType;

    /**
     * @return The service that will perform health checks for the instance. Valid values: `&#34;ELB&#34;`, `&#34;HCS&#34;`, `&#34;TARGET_GROUP&#34;`, `&#34;MLB&#34;`, `&#34;EC2&#34;`, `&#34;MULTAI_TARGET_SET&#34;`, `&#34;MLB_RUNTIME&#34;`, `&#34;K8S_NODE&#34;`, `&#34;NOMAD_NODE&#34;`, `&#34;ECS_CLUSTER_INSTANCE&#34;`.
     * 
     */
    public Optional<Output<String>> healthCheckType() {
        return Optional.ofNullable(this.healthCheckType);
    }

    /**
     * The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).
     * 
     */
    @Import(name="healthCheckUnhealthyDurationBeforeReplacement")
    private @Nullable Output<Integer> healthCheckUnhealthyDurationBeforeReplacement;

    /**
     * @return The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).
     * 
     */
    public Optional<Output<Integer>> healthCheckUnhealthyDurationBeforeReplacement() {
        return Optional.ofNullable(this.healthCheckUnhealthyDurationBeforeReplacement);
    }

    /**
     * The ARN or name of an IAM instance profile to associate with launched instances.
     * 
     */
    @Import(name="iamInstanceProfile")
    private @Nullable Output<String> iamInstanceProfile;

    /**
     * @return The ARN or name of an IAM instance profile to associate with launched instances.
     * 
     */
    public Optional<Output<String>> iamInstanceProfile() {
        return Optional.ofNullable(this.iamInstanceProfile);
    }

    /**
     * The ID of the AMI used to launch the instance.
     * 
     */
    @Import(name="imageId")
    private @Nullable Output<String> imageId;

    /**
     * @return The ID of the AMI used to launch the instance.
     * 
     */
    public Optional<Output<String>> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    /**
     * An array of image objects.
     * Note: Elastigroup can be configured with either imageId or images, but not both.
     * 
     */
    @Import(name="images")
    private @Nullable Output<List<ElastigroupImageArgs>> images;

    /**
     * @return An array of image objects.
     * Note: Elastigroup can be configured with either imageId or images, but not both.
     * 
     */
    public Optional<Output<List<ElastigroupImageArgs>>> images() {
        return Optional.ofNullable(this.images);
    }

    @Import(name="immediateOdRecoverThreshold")
    private @Nullable Output<Integer> immediateOdRecoverThreshold;

    public Optional<Output<Integer>> immediateOdRecoverThreshold() {
        return Optional.ofNullable(this.immediateOdRecoverThreshold);
    }

    /**
     * The type of instance determines your instance&#39;s CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).
     * 
     */
    @Import(name="instanceTypesOndemand")
    private @Nullable Output<String> instanceTypesOndemand;

    /**
     * @return The type of instance determines your instance&#39;s CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).
     * 
     */
    public Optional<Output<String>> instanceTypesOndemand() {
        return Optional.ofNullable(this.instanceTypesOndemand);
    }

    /**
     * Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.
     * 
     */
    @Import(name="instanceTypesPreferredSpots")
    private @Nullable Output<List<String>> instanceTypesPreferredSpots;

    /**
     * @return Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.
     * 
     */
    public Optional<Output<List<String>>> instanceTypesPreferredSpots() {
        return Optional.ofNullable(this.instanceTypesPreferredSpots);
    }

    /**
     * One or more instance types.
     * 
     */
    @Import(name="instanceTypesSpots")
    private @Nullable Output<List<String>> instanceTypesSpots;

    /**
     * @return One or more instance types.
     * 
     */
    public Optional<Output<List<String>>> instanceTypesSpots() {
        return Optional.ofNullable(this.instanceTypesSpots);
    }

    /**
     * List of weights per instance type for weighted groups. Each object in the list should have the following attributes:
     * 
     */
    @Import(name="instanceTypesWeights")
    private @Nullable Output<List<ElastigroupInstanceTypesWeightArgs>> instanceTypesWeights;

    /**
     * @return List of weights per instance type for weighted groups. Each object in the list should have the following attributes:
     * 
     */
    public Optional<Output<List<ElastigroupInstanceTypesWeightArgs>>> instanceTypesWeights() {
        return Optional.ofNullable(this.instanceTypesWeights);
    }

    @Import(name="integrationBeanstalk")
    private @Nullable Output<ElastigroupIntegrationBeanstalkArgs> integrationBeanstalk;

    public Optional<Output<ElastigroupIntegrationBeanstalkArgs>> integrationBeanstalk() {
        return Optional.ofNullable(this.integrationBeanstalk);
    }

    /**
     * Describes the [Code Deploy](https://aws.amazon.com/documentation/codedeploy/?id=docs_gateway) integration.
     * 
     */
    @Import(name="integrationCodedeploy")
    private @Nullable Output<ElastigroupIntegrationCodedeployArgs> integrationCodedeploy;

    /**
     * @return Describes the [Code Deploy](https://aws.amazon.com/documentation/codedeploy/?id=docs_gateway) integration.
     * 
     */
    public Optional<Output<ElastigroupIntegrationCodedeployArgs>> integrationCodedeploy() {
        return Optional.ofNullable(this.integrationCodedeploy);
    }

    /**
     * Describes the [Docker Swarm](https://api.spotinst.com/integration-docs/elastigroup/container-management/docker-swarm/docker-swarm-integration/) integration.
     * 
     */
    @Import(name="integrationDockerSwarm")
    private @Nullable Output<ElastigroupIntegrationDockerSwarmArgs> integrationDockerSwarm;

    /**
     * @return Describes the [Docker Swarm](https://api.spotinst.com/integration-docs/elastigroup/container-management/docker-swarm/docker-swarm-integration/) integration.
     * 
     */
    public Optional<Output<ElastigroupIntegrationDockerSwarmArgs>> integrationDockerSwarm() {
        return Optional.ofNullable(this.integrationDockerSwarm);
    }

    /**
     * Describes the [EC2 Container Service](https://aws.amazon.com/documentation/ecs/?id=docs_gateway) integration.
     * 
     */
    @Import(name="integrationEcs")
    private @Nullable Output<ElastigroupIntegrationEcsArgs> integrationEcs;

    /**
     * @return Describes the [EC2 Container Service](https://aws.amazon.com/documentation/ecs/?id=docs_gateway) integration.
     * 
     */
    public Optional<Output<ElastigroupIntegrationEcsArgs>> integrationEcs() {
        return Optional.ofNullable(this.integrationEcs);
    }

    /**
     * Describes the [Gitlab](https://api.spotinst.com/integration-docs/gitlab/) integration.
     * 
     */
    @Import(name="integrationGitlab")
    private @Nullable Output<ElastigroupIntegrationGitlabArgs> integrationGitlab;

    /**
     * @return Describes the [Gitlab](https://api.spotinst.com/integration-docs/gitlab/) integration.
     * 
     */
    public Optional<Output<ElastigroupIntegrationGitlabArgs>> integrationGitlab() {
        return Optional.ofNullable(this.integrationGitlab);
    }

    /**
     * Describes the [Kubernetes](https://kubernetes.io/) integration.
     * 
     */
    @Import(name="integrationKubernetes")
    private @Nullable Output<ElastigroupIntegrationKubernetesArgs> integrationKubernetes;

    /**
     * @return Describes the [Kubernetes](https://kubernetes.io/) integration.
     * 
     */
    public Optional<Output<ElastigroupIntegrationKubernetesArgs>> integrationKubernetes() {
        return Optional.ofNullable(this.integrationKubernetes);
    }

    /**
     * Describes the [Mesosphere](https://mesosphere.com/) integration.
     * 
     */
    @Import(name="integrationMesosphere")
    private @Nullable Output<ElastigroupIntegrationMesosphereArgs> integrationMesosphere;

    /**
     * @return Describes the [Mesosphere](https://mesosphere.com/) integration.
     * 
     */
    public Optional<Output<ElastigroupIntegrationMesosphereArgs>> integrationMesosphere() {
        return Optional.ofNullable(this.integrationMesosphere);
    }

    /**
     * Describes the [Multai Runtime](https://spotinst.com/) integration.
     * 
     */
    @Import(name="integrationMultaiRuntime")
    private @Nullable Output<ElastigroupIntegrationMultaiRuntimeArgs> integrationMultaiRuntime;

    /**
     * @return Describes the [Multai Runtime](https://spotinst.com/) integration.
     * 
     */
    public Optional<Output<ElastigroupIntegrationMultaiRuntimeArgs>> integrationMultaiRuntime() {
        return Optional.ofNullable(this.integrationMultaiRuntime);
    }

    /**
     * Describes the [Nomad](https://www.nomadproject.io/) integration.
     * 
     */
    @Import(name="integrationNomad")
    private @Nullable Output<ElastigroupIntegrationNomadArgs> integrationNomad;

    /**
     * @return Describes the [Nomad](https://www.nomadproject.io/) integration.
     * 
     */
    public Optional<Output<ElastigroupIntegrationNomadArgs>> integrationNomad() {
        return Optional.ofNullable(this.integrationNomad);
    }

    /**
     * Describes the [Rancher](http://rancherlabs.com/) integration.
     * 
     */
    @Import(name="integrationRancher")
    private @Nullable Output<ElastigroupIntegrationRancherArgs> integrationRancher;

    /**
     * @return Describes the [Rancher](http://rancherlabs.com/) integration.
     * 
     */
    public Optional<Output<ElastigroupIntegrationRancherArgs>> integrationRancher() {
        return Optional.ofNullable(this.integrationRancher);
    }

    /**
     * Describes the [Route53](https://aws.amazon.com/documentation/route53/?id=docs_gateway) integration.
     * 
     */
    @Import(name="integrationRoute53")
    private @Nullable Output<ElastigroupIntegrationRoute53Args> integrationRoute53;

    /**
     * @return Describes the [Route53](https://aws.amazon.com/documentation/route53/?id=docs_gateway) integration.
     * 
     */
    public Optional<Output<ElastigroupIntegrationRoute53Args>> integrationRoute53() {
        return Optional.ofNullable(this.integrationRoute53);
    }

    @Import(name="itfs")
    private @Nullable Output<List<ElastigroupItfArgs>> itfs;

    public Optional<Output<List<ElastigroupItfArgs>>> itfs() {
        return Optional.ofNullable(this.itfs);
    }

    /**
     * The key name that should be used for the instance.
     * 
     */
    @Import(name="keyName")
    private @Nullable Output<String> keyName;

    /**
     * @return The key name that should be used for the instance.
     * 
     */
    public Optional<Output<String>> keyName() {
        return Optional.ofNullable(this.keyName);
    }

    @Import(name="lifetimePeriod")
    private @Nullable Output<String> lifetimePeriod;

    public Optional<Output<String>> lifetimePeriod() {
        return Optional.ofNullable(this.lifetimePeriod);
    }

    /**
     * The maximum number of instances the group should have at any time.
     * 
     */
    @Import(name="maxSize")
    private @Nullable Output<Integer> maxSize;

    /**
     * @return The maximum number of instances the group should have at any time.
     * 
     */
    public Optional<Output<Integer>> maxSize() {
        return Optional.ofNullable(this.maxSize);
    }

    /**
     * Data that used to configure or manage the running instances:
     * 
     */
    @Import(name="metadataOptions")
    private @Nullable Output<ElastigroupMetadataOptionsArgs> metadataOptions;

    /**
     * @return Data that used to configure or manage the running instances:
     * 
     */
    public Optional<Output<ElastigroupMetadataOptionsArgs>> metadataOptions() {
        return Optional.ofNullable(this.metadataOptions);
    }

    /**
     * The minimum number of instances the group should have at any time.
     * 
     */
    @Import(name="minSize")
    private @Nullable Output<Integer> minSize;

    /**
     * @return The minimum number of instances the group should have at any time.
     * 
     */
    public Optional<Output<Integer>> minSize() {
        return Optional.ofNullable(this.minSize);
    }

    /**
     * Defines the preferred minimum instance lifetime in hours. Markets which comply with this preference will be prioritized. Optional values: 1, 3, 6, 12, 24.
     * 
     */
    @Import(name="minimumInstanceLifetime")
    private @Nullable Output<Integer> minimumInstanceLifetime;

    /**
     * @return Defines the preferred minimum instance lifetime in hours. Markets which comply with this preference will be prioritized. Optional values: 1, 3, 6, 12, 24.
     * 
     */
    public Optional<Output<Integer>> minimumInstanceLifetime() {
        return Optional.ofNullable(this.minimumInstanceLifetime);
    }

    /**
     * Set of targets to register.
     * 
     */
    @Import(name="multaiTargetSets")
    private @Nullable Output<List<ElastigroupMultaiTargetSetArgs>> multaiTargetSets;

    /**
     * @return Set of targets to register.
     * 
     */
    public Optional<Output<List<ElastigroupMultaiTargetSetArgs>>> multaiTargetSets() {
        return Optional.ofNullable(this.multaiTargetSets);
    }

    @Import(name="multipleMetrics")
    private @Nullable Output<ElastigroupMultipleMetricsArgs> multipleMetrics;

    public Optional<Output<ElastigroupMultipleMetricsArgs>> multipleMetrics() {
        return Optional.ofNullable(this.multipleMetrics);
    }

    /**
     * The group name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The group name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="networkInterfaces")
    private @Nullable Output<List<ElastigroupNetworkInterfaceArgs>> networkInterfaces;

    public Optional<Output<List<ElastigroupNetworkInterfaceArgs>>> networkInterfaces() {
        return Optional.ofNullable(this.networkInterfaces);
    }

    /**
     * Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.
     * 
     */
    @Import(name="ondemandCount")
    private @Nullable Output<Integer> ondemandCount;

    /**
     * @return Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.
     * 
     */
    public Optional<Output<Integer>> ondemandCount() {
        return Optional.ofNullable(this.ondemandCount);
    }

    /**
     * Select a prediction strategy. Valid values: `balanced`, `costOriented`, `equalAzDistribution`, `availabilityOriented`. You can read more in our documentation.
     * 
     */
    @Import(name="orientation")
    private @Nullable Output<String> orientation;

    /**
     * @return Select a prediction strategy. Valid values: `balanced`, `costOriented`, `equalAzDistribution`, `availabilityOriented`. You can read more in our documentation.
     * 
     */
    public Optional<Output<String>> orientation() {
        return Optional.ofNullable(this.orientation);
    }

    /**
     * Boolean, should the instance maintain its Data volumes.
     * 
     */
    @Import(name="persistBlockDevices")
    private @Nullable Output<Boolean> persistBlockDevices;

    /**
     * @return Boolean, should the instance maintain its Data volumes.
     * 
     */
    public Optional<Output<Boolean>> persistBlockDevices() {
        return Optional.ofNullable(this.persistBlockDevices);
    }

    /**
     * Boolean, should the instance maintain its private IP.
     * 
     */
    @Import(name="persistPrivateIp")
    private @Nullable Output<Boolean> persistPrivateIp;

    /**
     * @return Boolean, should the instance maintain its private IP.
     * 
     */
    public Optional<Output<Boolean>> persistPrivateIp() {
        return Optional.ofNullable(this.persistPrivateIp);
    }

    /**
     * Boolean, should the instance maintain its root device volumes.
     * 
     */
    @Import(name="persistRootDevice")
    private @Nullable Output<Boolean> persistRootDevice;

    /**
     * @return Boolean, should the instance maintain its root device volumes.
     * 
     */
    public Optional<Output<Boolean>> persistRootDevice() {
        return Optional.ofNullable(this.persistRootDevice);
    }

    /**
     * Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used. Valid values: &#34;default&#34;, &#34;dedicated&#34; .
     * 
     */
    @Import(name="placementTenancy")
    private @Nullable Output<String> placementTenancy;

    /**
     * @return Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used. Valid values: &#34;default&#34;, &#34;dedicated&#34; .
     * 
     */
    public Optional<Output<String>> placementTenancy() {
        return Optional.ofNullable(this.placementTenancy);
    }

    /**
     * The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.
     * Note: Must be a sublist of `availability_zones` and `orientation` value must not be `&#34;equalAzDistribution&#34;`.
     * 
     */
    @Import(name="preferredAvailabilityZones")
    private @Nullable Output<List<String>> preferredAvailabilityZones;

    /**
     * @return The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.
     * Note: Must be a sublist of `availability_zones` and `orientation` value must not be `&#34;equalAzDistribution&#34;`.
     * 
     */
    public Optional<Output<List<String>>> preferredAvailabilityZones() {
        return Optional.ofNullable(this.preferredAvailabilityZones);
    }

    /**
     * List of Private IPs to associate to the group instances.(e.g. &#34;172.1.1.0&#34;). Please note: This setting will only apply if persistence.persist_private_ip is set to true.
     * 
     */
    @Import(name="privateIps")
    private @Nullable Output<List<String>> privateIps;

    /**
     * @return List of Private IPs to associate to the group instances.(e.g. &#34;172.1.1.0&#34;). Please note: This setting will only apply if persistence.persist_private_ip is set to true.
     * 
     */
    public Optional<Output<List<String>>> privateIps() {
        return Optional.ofNullable(this.privateIps);
    }

    /**
     * Operation system type. Valid values: `&#34;Linux/UNIX&#34;`, `&#34;SUSE Linux&#34;`, `&#34;Windows&#34;`.
     * For EC2 Classic instances:  `&#34;Linux/UNIX (Amazon VPC)&#34;`, `&#34;SUSE Linux (Amazon VPC)&#34;`, `&#34;Windows (Amazon VPC)&#34;`.
     * 
     */
    @Import(name="product")
    private @Nullable Output<String> product;

    /**
     * @return Operation system type. Valid values: `&#34;Linux/UNIX&#34;`, `&#34;SUSE Linux&#34;`, `&#34;Windows&#34;`.
     * For EC2 Classic instances:  `&#34;Linux/UNIX (Amazon VPC)&#34;`, `&#34;SUSE Linux (Amazon VPC)&#34;`, `&#34;Windows (Amazon VPC)&#34;`.
     * 
     */
    public Optional<Output<String>> product() {
        return Optional.ofNullable(this.product);
    }

    /**
     * The AWS region your group will be created in.
     * Note: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The AWS region your group will be created in.
     * Note: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * User will specify which resources should be tagged with group tags.
     * 
     */
    @Import(name="resourceTagSpecifications")
    private @Nullable Output<List<ElastigroupResourceTagSpecificationArgs>> resourceTagSpecifications;

    /**
     * @return User will specify which resources should be tagged with group tags.
     * 
     */
    public Optional<Output<List<ElastigroupResourceTagSpecificationArgs>>> resourceTagSpecifications() {
        return Optional.ofNullable(this.resourceTagSpecifications);
    }

    /**
     * Hold settings for strategy correction – replacing On-Demand for Spot instances. Supported Values: `&#34;never&#34;`, `&#34;always&#34;`, `&#34;timeWindow&#34;`
     * 
     */
    @Import(name="revertToSpot")
    private @Nullable Output<ElastigroupRevertToSpotArgs> revertToSpot;

    /**
     * @return Hold settings for strategy correction – replacing On-Demand for Spot instances. Supported Values: `&#34;never&#34;`, `&#34;always&#34;`, `&#34;timeWindow&#34;`
     * 
     */
    public Optional<Output<ElastigroupRevertToSpotArgs>> revertToSpot() {
        return Optional.ofNullable(this.revertToSpot);
    }

    @Import(name="scalingDownPolicies")
    private @Nullable Output<List<ElastigroupScalingDownPolicyArgs>> scalingDownPolicies;

    public Optional<Output<List<ElastigroupScalingDownPolicyArgs>>> scalingDownPolicies() {
        return Optional.ofNullable(this.scalingDownPolicies);
    }

    /**
     * Set termination policy.
     * 
     */
    @Import(name="scalingStrategies")
    private @Nullable Output<List<ElastigroupScalingStrategyArgs>> scalingStrategies;

    /**
     * @return Set termination policy.
     * 
     */
    public Optional<Output<List<ElastigroupScalingStrategyArgs>>> scalingStrategies() {
        return Optional.ofNullable(this.scalingStrategies);
    }

    @Import(name="scalingTargetPolicies")
    private @Nullable Output<List<ElastigroupScalingTargetPolicyArgs>> scalingTargetPolicies;

    public Optional<Output<List<ElastigroupScalingTargetPolicyArgs>>> scalingTargetPolicies() {
        return Optional.ofNullable(this.scalingTargetPolicies);
    }

    @Import(name="scalingUpPolicies")
    private @Nullable Output<List<ElastigroupScalingUpPolicyArgs>> scalingUpPolicies;

    public Optional<Output<List<ElastigroupScalingUpPolicyArgs>>> scalingUpPolicies() {
        return Optional.ofNullable(this.scalingUpPolicies);
    }

    @Import(name="scheduledTasks")
    private @Nullable Output<List<ElastigroupScheduledTaskArgs>> scheduledTasks;

    public Optional<Output<List<ElastigroupScheduledTaskArgs>>> scheduledTasks() {
        return Optional.ofNullable(this.scheduledTasks);
    }

    /**
     * A list of associated security group IDS.
     * 
     */
    @Import(name="securityGroups")
    private @Nullable Output<List<String>> securityGroups;

    /**
     * @return A list of associated security group IDS.
     * 
     */
    public Optional<Output<List<String>>> securityGroups() {
        return Optional.ofNullable(this.securityGroups);
    }

    /**
     * The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
     * 
     */
    @Import(name="shutdownScript")
    private @Nullable Output<String> shutdownScript;

    /**
     * @return The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
     * 
     */
    public Optional<Output<String>> shutdownScript() {
        return Optional.ofNullable(this.shutdownScript);
    }

    @Import(name="signals")
    private @Nullable Output<List<ElastigroupSignalArgs>> signals;

    public Optional<Output<List<ElastigroupSignalArgs>>> signals() {
        return Optional.ofNullable(this.signals);
    }

    /**
     * The percentage of Spot instances that would spin up from the `desired_capacity` number.
     * 
     */
    @Import(name="spotPercentage")
    private @Nullable Output<Integer> spotPercentage;

    /**
     * @return The percentage of Spot instances that would spin up from the `desired_capacity` number.
     * 
     */
    public Optional<Output<Integer>> spotPercentage() {
        return Optional.ofNullable(this.spotPercentage);
    }

    @Import(name="statefulDeallocation")
    private @Nullable Output<ElastigroupStatefulDeallocationArgs> statefulDeallocation;

    public Optional<Output<ElastigroupStatefulDeallocationArgs>> statefulDeallocation() {
        return Optional.ofNullable(this.statefulDeallocation);
    }

    @Import(name="statefulInstanceActions")
    private @Nullable Output<List<ElastigroupStatefulInstanceActionArgs>> statefulInstanceActions;

    public Optional<Output<List<ElastigroupStatefulInstanceActionArgs>>> statefulInstanceActions() {
        return Optional.ofNullable(this.statefulInstanceActions);
    }

    /**
     * List of Strings of subnet identifiers.
     * Note: When this parameter is set, `availability_zones` should be left unused.
     * 
     */
    @Import(name="subnetIds")
    private @Nullable Output<List<String>> subnetIds;

    /**
     * @return List of Strings of subnet identifiers.
     * Note: When this parameter is set, `availability_zones` should be left unused.
     * 
     */
    public Optional<Output<List<String>>> subnetIds() {
        return Optional.ofNullable(this.subnetIds);
    }

    /**
     * A key/value mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<ElastigroupTagArgs>> tags;

    /**
     * @return A key/value mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<List<ElastigroupTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * List of Target Group ARNs to register the instances to.
     * 
     */
    @Import(name="targetGroupArns")
    private @Nullable Output<List<String>> targetGroupArns;

    /**
     * @return List of Target Group ARNs to register the instances to.
     * 
     */
    public Optional<Output<List<String>>> targetGroupArns() {
        return Optional.ofNullable(this.targetGroupArns);
    }

    @Import(name="updatePolicy")
    private @Nullable Output<ElastigroupUpdatePolicyArgs> updatePolicy;

    public Optional<Output<ElastigroupUpdatePolicyArgs>> updatePolicy() {
        return Optional.ofNullable(this.updatePolicy);
    }

    /**
     * The user data to provide when launching the instance.
     * 
     */
    @Import(name="userData")
    private @Nullable Output<String> userData;

    /**
     * @return The user data to provide when launching the instance.
     * 
     */
    public Optional<Output<String>> userData() {
        return Optional.ofNullable(this.userData);
    }

    @Import(name="utilizeCommitments")
    private @Nullable Output<Boolean> utilizeCommitments;

    public Optional<Output<Boolean>> utilizeCommitments() {
        return Optional.ofNullable(this.utilizeCommitments);
    }

    /**
     * In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.
     * 
     */
    @Import(name="utilizeReservedInstances")
    private @Nullable Output<Boolean> utilizeReservedInstances;

    /**
     * @return In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.
     * 
     */
    public Optional<Output<Boolean>> utilizeReservedInstances() {
        return Optional.ofNullable(this.utilizeReservedInstances);
    }

    /**
     * Minimum number of instances in a &#39;HEALTHY&#39; status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.
     * 
     */
    @Import(name="waitForCapacity")
    private @Nullable Output<Integer> waitForCapacity;

    /**
     * @return Minimum number of instances in a &#39;HEALTHY&#39; status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.
     * 
     */
    public Optional<Output<Integer>> waitForCapacity() {
        return Optional.ofNullable(this.waitForCapacity);
    }

    /**
     * Time (seconds) to wait for instances to report a &#39;HEALTHY&#39; status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.
     * 
     */
    @Import(name="waitForCapacityTimeout")
    private @Nullable Output<Integer> waitForCapacityTimeout;

    /**
     * @return Time (seconds) to wait for instances to report a &#39;HEALTHY&#39; status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.
     * 
     */
    public Optional<Output<Integer>> waitForCapacityTimeout() {
        return Optional.ofNullable(this.waitForCapacityTimeout);
    }

    private ElastigroupState() {}

    private ElastigroupState(ElastigroupState $) {
        this.availabilityZones = $.availabilityZones;
        this.blockDevicesMode = $.blockDevicesMode;
        this.capacityUnit = $.capacityUnit;
        this.considerOdPricing = $.considerOdPricing;
        this.cpuCredits = $.cpuCredits;
        this.cpuOptions = $.cpuOptions;
        this.description = $.description;
        this.desiredCapacity = $.desiredCapacity;
        this.drainingTimeout = $.drainingTimeout;
        this.ebsBlockDevices = $.ebsBlockDevices;
        this.ebsOptimized = $.ebsOptimized;
        this.elasticIps = $.elasticIps;
        this.elasticLoadBalancers = $.elasticLoadBalancers;
        this.enableMonitoring = $.enableMonitoring;
        this.ephemeralBlockDevices = $.ephemeralBlockDevices;
        this.fallbackToOndemand = $.fallbackToOndemand;
        this.healthCheckGracePeriod = $.healthCheckGracePeriod;
        this.healthCheckType = $.healthCheckType;
        this.healthCheckUnhealthyDurationBeforeReplacement = $.healthCheckUnhealthyDurationBeforeReplacement;
        this.iamInstanceProfile = $.iamInstanceProfile;
        this.imageId = $.imageId;
        this.images = $.images;
        this.immediateOdRecoverThreshold = $.immediateOdRecoverThreshold;
        this.instanceTypesOndemand = $.instanceTypesOndemand;
        this.instanceTypesPreferredSpots = $.instanceTypesPreferredSpots;
        this.instanceTypesSpots = $.instanceTypesSpots;
        this.instanceTypesWeights = $.instanceTypesWeights;
        this.integrationBeanstalk = $.integrationBeanstalk;
        this.integrationCodedeploy = $.integrationCodedeploy;
        this.integrationDockerSwarm = $.integrationDockerSwarm;
        this.integrationEcs = $.integrationEcs;
        this.integrationGitlab = $.integrationGitlab;
        this.integrationKubernetes = $.integrationKubernetes;
        this.integrationMesosphere = $.integrationMesosphere;
        this.integrationMultaiRuntime = $.integrationMultaiRuntime;
        this.integrationNomad = $.integrationNomad;
        this.integrationRancher = $.integrationRancher;
        this.integrationRoute53 = $.integrationRoute53;
        this.itfs = $.itfs;
        this.keyName = $.keyName;
        this.lifetimePeriod = $.lifetimePeriod;
        this.maxSize = $.maxSize;
        this.metadataOptions = $.metadataOptions;
        this.minSize = $.minSize;
        this.minimumInstanceLifetime = $.minimumInstanceLifetime;
        this.multaiTargetSets = $.multaiTargetSets;
        this.multipleMetrics = $.multipleMetrics;
        this.name = $.name;
        this.networkInterfaces = $.networkInterfaces;
        this.ondemandCount = $.ondemandCount;
        this.orientation = $.orientation;
        this.persistBlockDevices = $.persistBlockDevices;
        this.persistPrivateIp = $.persistPrivateIp;
        this.persistRootDevice = $.persistRootDevice;
        this.placementTenancy = $.placementTenancy;
        this.preferredAvailabilityZones = $.preferredAvailabilityZones;
        this.privateIps = $.privateIps;
        this.product = $.product;
        this.region = $.region;
        this.resourceTagSpecifications = $.resourceTagSpecifications;
        this.revertToSpot = $.revertToSpot;
        this.scalingDownPolicies = $.scalingDownPolicies;
        this.scalingStrategies = $.scalingStrategies;
        this.scalingTargetPolicies = $.scalingTargetPolicies;
        this.scalingUpPolicies = $.scalingUpPolicies;
        this.scheduledTasks = $.scheduledTasks;
        this.securityGroups = $.securityGroups;
        this.shutdownScript = $.shutdownScript;
        this.signals = $.signals;
        this.spotPercentage = $.spotPercentage;
        this.statefulDeallocation = $.statefulDeallocation;
        this.statefulInstanceActions = $.statefulInstanceActions;
        this.subnetIds = $.subnetIds;
        this.tags = $.tags;
        this.targetGroupArns = $.targetGroupArns;
        this.updatePolicy = $.updatePolicy;
        this.userData = $.userData;
        this.utilizeCommitments = $.utilizeCommitments;
        this.utilizeReservedInstances = $.utilizeReservedInstances;
        this.waitForCapacity = $.waitForCapacity;
        this.waitForCapacityTimeout = $.waitForCapacityTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ElastigroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ElastigroupState $;

        public Builder() {
            $ = new ElastigroupState();
        }

        public Builder(ElastigroupState defaults) {
            $ = new ElastigroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityZones List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.
         * Note: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:
         * `availability_zones = [&#34;us-east-1a:subnet-123456:ClusterI03&#34;]`
         * 
         * @return builder
         * 
         */
        public Builder availabilityZones(@Nullable Output<List<String>> availabilityZones) {
            $.availabilityZones = availabilityZones;
            return this;
        }

        /**
         * @param availabilityZones List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.
         * Note: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:
         * `availability_zones = [&#34;us-east-1a:subnet-123456:ClusterI03&#34;]`
         * 
         * @return builder
         * 
         */
        public Builder availabilityZones(List<String> availabilityZones) {
            return availabilityZones(Output.of(availabilityZones));
        }

        /**
         * @param availabilityZones List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.
         * Note: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:
         * `availability_zones = [&#34;us-east-1a:subnet-123456:ClusterI03&#34;]`
         * 
         * @return builder
         * 
         */
        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }

        /**
         * @param blockDevicesMode String, determine the way we attach the data volumes to the data devices, possible values: `&#34;reattach&#34;` and `&#34;onLaunch&#34;` (default is onLaunch).
         * 
         * @return builder
         * 
         */
        public Builder blockDevicesMode(@Nullable Output<String> blockDevicesMode) {
            $.blockDevicesMode = blockDevicesMode;
            return this;
        }

        /**
         * @param blockDevicesMode String, determine the way we attach the data volumes to the data devices, possible values: `&#34;reattach&#34;` and `&#34;onLaunch&#34;` (default is onLaunch).
         * 
         * @return builder
         * 
         */
        public Builder blockDevicesMode(String blockDevicesMode) {
            return blockDevicesMode(Output.of(blockDevicesMode));
        }

        /**
         * @param capacityUnit The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs. Valid values: `instance`, `weight`.
         * 
         * @return builder
         * 
         */
        public Builder capacityUnit(@Nullable Output<String> capacityUnit) {
            $.capacityUnit = capacityUnit;
            return this;
        }

        /**
         * @param capacityUnit The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs. Valid values: `instance`, `weight`.
         * 
         * @return builder
         * 
         */
        public Builder capacityUnit(String capacityUnit) {
            return capacityUnit(Output.of(capacityUnit));
        }

        public Builder considerOdPricing(@Nullable Output<Boolean> considerOdPricing) {
            $.considerOdPricing = considerOdPricing;
            return this;
        }

        public Builder considerOdPricing(Boolean considerOdPricing) {
            return considerOdPricing(Output.of(considerOdPricing));
        }

        /**
         * @param cpuCredits Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.
         * 
         * @return builder
         * 
         */
        public Builder cpuCredits(@Nullable Output<String> cpuCredits) {
            $.cpuCredits = cpuCredits;
            return this;
        }

        /**
         * @param cpuCredits Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.
         * 
         * @return builder
         * 
         */
        public Builder cpuCredits(String cpuCredits) {
            return cpuCredits(Output.of(cpuCredits));
        }

        /**
         * @param cpuOptions The CPU options for the instances that are launched within the group:
         * 
         * @return builder
         * 
         */
        public Builder cpuOptions(@Nullable Output<ElastigroupCpuOptionsArgs> cpuOptions) {
            $.cpuOptions = cpuOptions;
            return this;
        }

        /**
         * @param cpuOptions The CPU options for the instances that are launched within the group:
         * 
         * @return builder
         * 
         */
        public Builder cpuOptions(ElastigroupCpuOptionsArgs cpuOptions) {
            return cpuOptions(Output.of(cpuOptions));
        }

        /**
         * @param description The group description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The group description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param desiredCapacity The desired number of instances the group should have at any time.
         * 
         * @return builder
         * 
         */
        public Builder desiredCapacity(@Nullable Output<Integer> desiredCapacity) {
            $.desiredCapacity = desiredCapacity;
            return this;
        }

        /**
         * @param desiredCapacity The desired number of instances the group should have at any time.
         * 
         * @return builder
         * 
         */
        public Builder desiredCapacity(Integer desiredCapacity) {
            return desiredCapacity(Output.of(desiredCapacity));
        }

        /**
         * @param drainingTimeout The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.
         * 
         * @return builder
         * 
         */
        public Builder drainingTimeout(@Nullable Output<Integer> drainingTimeout) {
            $.drainingTimeout = drainingTimeout;
            return this;
        }

        /**
         * @param drainingTimeout The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.
         * 
         * @return builder
         * 
         */
        public Builder drainingTimeout(Integer drainingTimeout) {
            return drainingTimeout(Output.of(drainingTimeout));
        }

        public Builder ebsBlockDevices(@Nullable Output<List<ElastigroupEbsBlockDeviceArgs>> ebsBlockDevices) {
            $.ebsBlockDevices = ebsBlockDevices;
            return this;
        }

        public Builder ebsBlockDevices(List<ElastigroupEbsBlockDeviceArgs> ebsBlockDevices) {
            return ebsBlockDevices(Output.of(ebsBlockDevices));
        }

        public Builder ebsBlockDevices(ElastigroupEbsBlockDeviceArgs... ebsBlockDevices) {
            return ebsBlockDevices(List.of(ebsBlockDevices));
        }

        /**
         * @param ebsOptimized Enable high bandwidth connectivity between instances and AWS’s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder ebsOptimized(@Nullable Output<Boolean> ebsOptimized) {
            $.ebsOptimized = ebsOptimized;
            return this;
        }

        /**
         * @param ebsOptimized Enable high bandwidth connectivity between instances and AWS’s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.
         * 
         * @return builder
         * 
         */
        public Builder ebsOptimized(Boolean ebsOptimized) {
            return ebsOptimized(Output.of(ebsOptimized));
        }

        /**
         * @param elasticIps A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.
         * 
         * @return builder
         * 
         */
        public Builder elasticIps(@Nullable Output<List<String>> elasticIps) {
            $.elasticIps = elasticIps;
            return this;
        }

        /**
         * @param elasticIps A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.
         * 
         * @return builder
         * 
         */
        public Builder elasticIps(List<String> elasticIps) {
            return elasticIps(Output.of(elasticIps));
        }

        /**
         * @param elasticIps A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.
         * 
         * @return builder
         * 
         */
        public Builder elasticIps(String... elasticIps) {
            return elasticIps(List.of(elasticIps));
        }

        /**
         * @param elasticLoadBalancers List of Elastic Load Balancers names (ELB).
         * 
         * @return builder
         * 
         */
        public Builder elasticLoadBalancers(@Nullable Output<List<String>> elasticLoadBalancers) {
            $.elasticLoadBalancers = elasticLoadBalancers;
            return this;
        }

        /**
         * @param elasticLoadBalancers List of Elastic Load Balancers names (ELB).
         * 
         * @return builder
         * 
         */
        public Builder elasticLoadBalancers(List<String> elasticLoadBalancers) {
            return elasticLoadBalancers(Output.of(elasticLoadBalancers));
        }

        /**
         * @param elasticLoadBalancers List of Elastic Load Balancers names (ELB).
         * 
         * @return builder
         * 
         */
        public Builder elasticLoadBalancers(String... elasticLoadBalancers) {
            return elasticLoadBalancers(List.of(elasticLoadBalancers));
        }

        /**
         * @param enableMonitoring Indicates whether monitoring is enabled for the instance.
         * 
         * @return builder
         * 
         */
        public Builder enableMonitoring(@Nullable Output<Boolean> enableMonitoring) {
            $.enableMonitoring = enableMonitoring;
            return this;
        }

        /**
         * @param enableMonitoring Indicates whether monitoring is enabled for the instance.
         * 
         * @return builder
         * 
         */
        public Builder enableMonitoring(Boolean enableMonitoring) {
            return enableMonitoring(Output.of(enableMonitoring));
        }

        public Builder ephemeralBlockDevices(@Nullable Output<List<ElastigroupEphemeralBlockDeviceArgs>> ephemeralBlockDevices) {
            $.ephemeralBlockDevices = ephemeralBlockDevices;
            return this;
        }

        public Builder ephemeralBlockDevices(List<ElastigroupEphemeralBlockDeviceArgs> ephemeralBlockDevices) {
            return ephemeralBlockDevices(Output.of(ephemeralBlockDevices));
        }

        public Builder ephemeralBlockDevices(ElastigroupEphemeralBlockDeviceArgs... ephemeralBlockDevices) {
            return ephemeralBlockDevices(List.of(ephemeralBlockDevices));
        }

        /**
         * @param fallbackToOndemand In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.
         * 
         * @return builder
         * 
         */
        public Builder fallbackToOndemand(@Nullable Output<Boolean> fallbackToOndemand) {
            $.fallbackToOndemand = fallbackToOndemand;
            return this;
        }

        /**
         * @param fallbackToOndemand In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.
         * 
         * @return builder
         * 
         */
        public Builder fallbackToOndemand(Boolean fallbackToOndemand) {
            return fallbackToOndemand(Output.of(fallbackToOndemand));
        }

        /**
         * @param healthCheckGracePeriod The amount of time, in seconds, after the instance has launched to starts and check its health.
         * 
         * @return builder
         * 
         */
        public Builder healthCheckGracePeriod(@Nullable Output<Integer> healthCheckGracePeriod) {
            $.healthCheckGracePeriod = healthCheckGracePeriod;
            return this;
        }

        /**
         * @param healthCheckGracePeriod The amount of time, in seconds, after the instance has launched to starts and check its health.
         * 
         * @return builder
         * 
         */
        public Builder healthCheckGracePeriod(Integer healthCheckGracePeriod) {
            return healthCheckGracePeriod(Output.of(healthCheckGracePeriod));
        }

        /**
         * @param healthCheckType The service that will perform health checks for the instance. Valid values: `&#34;ELB&#34;`, `&#34;HCS&#34;`, `&#34;TARGET_GROUP&#34;`, `&#34;MLB&#34;`, `&#34;EC2&#34;`, `&#34;MULTAI_TARGET_SET&#34;`, `&#34;MLB_RUNTIME&#34;`, `&#34;K8S_NODE&#34;`, `&#34;NOMAD_NODE&#34;`, `&#34;ECS_CLUSTER_INSTANCE&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder healthCheckType(@Nullable Output<String> healthCheckType) {
            $.healthCheckType = healthCheckType;
            return this;
        }

        /**
         * @param healthCheckType The service that will perform health checks for the instance. Valid values: `&#34;ELB&#34;`, `&#34;HCS&#34;`, `&#34;TARGET_GROUP&#34;`, `&#34;MLB&#34;`, `&#34;EC2&#34;`, `&#34;MULTAI_TARGET_SET&#34;`, `&#34;MLB_RUNTIME&#34;`, `&#34;K8S_NODE&#34;`, `&#34;NOMAD_NODE&#34;`, `&#34;ECS_CLUSTER_INSTANCE&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder healthCheckType(String healthCheckType) {
            return healthCheckType(Output.of(healthCheckType));
        }

        /**
         * @param healthCheckUnhealthyDurationBeforeReplacement The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).
         * 
         * @return builder
         * 
         */
        public Builder healthCheckUnhealthyDurationBeforeReplacement(@Nullable Output<Integer> healthCheckUnhealthyDurationBeforeReplacement) {
            $.healthCheckUnhealthyDurationBeforeReplacement = healthCheckUnhealthyDurationBeforeReplacement;
            return this;
        }

        /**
         * @param healthCheckUnhealthyDurationBeforeReplacement The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).
         * 
         * @return builder
         * 
         */
        public Builder healthCheckUnhealthyDurationBeforeReplacement(Integer healthCheckUnhealthyDurationBeforeReplacement) {
            return healthCheckUnhealthyDurationBeforeReplacement(Output.of(healthCheckUnhealthyDurationBeforeReplacement));
        }

        /**
         * @param iamInstanceProfile The ARN or name of an IAM instance profile to associate with launched instances.
         * 
         * @return builder
         * 
         */
        public Builder iamInstanceProfile(@Nullable Output<String> iamInstanceProfile) {
            $.iamInstanceProfile = iamInstanceProfile;
            return this;
        }

        /**
         * @param iamInstanceProfile The ARN or name of an IAM instance profile to associate with launched instances.
         * 
         * @return builder
         * 
         */
        public Builder iamInstanceProfile(String iamInstanceProfile) {
            return iamInstanceProfile(Output.of(iamInstanceProfile));
        }

        /**
         * @param imageId The ID of the AMI used to launch the instance.
         * 
         * @return builder
         * 
         */
        public Builder imageId(@Nullable Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        /**
         * @param imageId The ID of the AMI used to launch the instance.
         * 
         * @return builder
         * 
         */
        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        /**
         * @param images An array of image objects.
         * Note: Elastigroup can be configured with either imageId or images, but not both.
         * 
         * @return builder
         * 
         */
        public Builder images(@Nullable Output<List<ElastigroupImageArgs>> images) {
            $.images = images;
            return this;
        }

        /**
         * @param images An array of image objects.
         * Note: Elastigroup can be configured with either imageId or images, but not both.
         * 
         * @return builder
         * 
         */
        public Builder images(List<ElastigroupImageArgs> images) {
            return images(Output.of(images));
        }

        /**
         * @param images An array of image objects.
         * Note: Elastigroup can be configured with either imageId or images, but not both.
         * 
         * @return builder
         * 
         */
        public Builder images(ElastigroupImageArgs... images) {
            return images(List.of(images));
        }

        public Builder immediateOdRecoverThreshold(@Nullable Output<Integer> immediateOdRecoverThreshold) {
            $.immediateOdRecoverThreshold = immediateOdRecoverThreshold;
            return this;
        }

        public Builder immediateOdRecoverThreshold(Integer immediateOdRecoverThreshold) {
            return immediateOdRecoverThreshold(Output.of(immediateOdRecoverThreshold));
        }

        /**
         * @param instanceTypesOndemand The type of instance determines your instance&#39;s CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).
         * 
         * @return builder
         * 
         */
        public Builder instanceTypesOndemand(@Nullable Output<String> instanceTypesOndemand) {
            $.instanceTypesOndemand = instanceTypesOndemand;
            return this;
        }

        /**
         * @param instanceTypesOndemand The type of instance determines your instance&#39;s CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).
         * 
         * @return builder
         * 
         */
        public Builder instanceTypesOndemand(String instanceTypesOndemand) {
            return instanceTypesOndemand(Output.of(instanceTypesOndemand));
        }

        /**
         * @param instanceTypesPreferredSpots Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.
         * 
         * @return builder
         * 
         */
        public Builder instanceTypesPreferredSpots(@Nullable Output<List<String>> instanceTypesPreferredSpots) {
            $.instanceTypesPreferredSpots = instanceTypesPreferredSpots;
            return this;
        }

        /**
         * @param instanceTypesPreferredSpots Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.
         * 
         * @return builder
         * 
         */
        public Builder instanceTypesPreferredSpots(List<String> instanceTypesPreferredSpots) {
            return instanceTypesPreferredSpots(Output.of(instanceTypesPreferredSpots));
        }

        /**
         * @param instanceTypesPreferredSpots Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.
         * 
         * @return builder
         * 
         */
        public Builder instanceTypesPreferredSpots(String... instanceTypesPreferredSpots) {
            return instanceTypesPreferredSpots(List.of(instanceTypesPreferredSpots));
        }

        /**
         * @param instanceTypesSpots One or more instance types.
         * 
         * @return builder
         * 
         */
        public Builder instanceTypesSpots(@Nullable Output<List<String>> instanceTypesSpots) {
            $.instanceTypesSpots = instanceTypesSpots;
            return this;
        }

        /**
         * @param instanceTypesSpots One or more instance types.
         * 
         * @return builder
         * 
         */
        public Builder instanceTypesSpots(List<String> instanceTypesSpots) {
            return instanceTypesSpots(Output.of(instanceTypesSpots));
        }

        /**
         * @param instanceTypesSpots One or more instance types.
         * 
         * @return builder
         * 
         */
        public Builder instanceTypesSpots(String... instanceTypesSpots) {
            return instanceTypesSpots(List.of(instanceTypesSpots));
        }

        /**
         * @param instanceTypesWeights List of weights per instance type for weighted groups. Each object in the list should have the following attributes:
         * 
         * @return builder
         * 
         */
        public Builder instanceTypesWeights(@Nullable Output<List<ElastigroupInstanceTypesWeightArgs>> instanceTypesWeights) {
            $.instanceTypesWeights = instanceTypesWeights;
            return this;
        }

        /**
         * @param instanceTypesWeights List of weights per instance type for weighted groups. Each object in the list should have the following attributes:
         * 
         * @return builder
         * 
         */
        public Builder instanceTypesWeights(List<ElastigroupInstanceTypesWeightArgs> instanceTypesWeights) {
            return instanceTypesWeights(Output.of(instanceTypesWeights));
        }

        /**
         * @param instanceTypesWeights List of weights per instance type for weighted groups. Each object in the list should have the following attributes:
         * 
         * @return builder
         * 
         */
        public Builder instanceTypesWeights(ElastigroupInstanceTypesWeightArgs... instanceTypesWeights) {
            return instanceTypesWeights(List.of(instanceTypesWeights));
        }

        public Builder integrationBeanstalk(@Nullable Output<ElastigroupIntegrationBeanstalkArgs> integrationBeanstalk) {
            $.integrationBeanstalk = integrationBeanstalk;
            return this;
        }

        public Builder integrationBeanstalk(ElastigroupIntegrationBeanstalkArgs integrationBeanstalk) {
            return integrationBeanstalk(Output.of(integrationBeanstalk));
        }

        /**
         * @param integrationCodedeploy Describes the [Code Deploy](https://aws.amazon.com/documentation/codedeploy/?id=docs_gateway) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationCodedeploy(@Nullable Output<ElastigroupIntegrationCodedeployArgs> integrationCodedeploy) {
            $.integrationCodedeploy = integrationCodedeploy;
            return this;
        }

        /**
         * @param integrationCodedeploy Describes the [Code Deploy](https://aws.amazon.com/documentation/codedeploy/?id=docs_gateway) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationCodedeploy(ElastigroupIntegrationCodedeployArgs integrationCodedeploy) {
            return integrationCodedeploy(Output.of(integrationCodedeploy));
        }

        /**
         * @param integrationDockerSwarm Describes the [Docker Swarm](https://api.spotinst.com/integration-docs/elastigroup/container-management/docker-swarm/docker-swarm-integration/) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationDockerSwarm(@Nullable Output<ElastigroupIntegrationDockerSwarmArgs> integrationDockerSwarm) {
            $.integrationDockerSwarm = integrationDockerSwarm;
            return this;
        }

        /**
         * @param integrationDockerSwarm Describes the [Docker Swarm](https://api.spotinst.com/integration-docs/elastigroup/container-management/docker-swarm/docker-swarm-integration/) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationDockerSwarm(ElastigroupIntegrationDockerSwarmArgs integrationDockerSwarm) {
            return integrationDockerSwarm(Output.of(integrationDockerSwarm));
        }

        /**
         * @param integrationEcs Describes the [EC2 Container Service](https://aws.amazon.com/documentation/ecs/?id=docs_gateway) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationEcs(@Nullable Output<ElastigroupIntegrationEcsArgs> integrationEcs) {
            $.integrationEcs = integrationEcs;
            return this;
        }

        /**
         * @param integrationEcs Describes the [EC2 Container Service](https://aws.amazon.com/documentation/ecs/?id=docs_gateway) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationEcs(ElastigroupIntegrationEcsArgs integrationEcs) {
            return integrationEcs(Output.of(integrationEcs));
        }

        /**
         * @param integrationGitlab Describes the [Gitlab](https://api.spotinst.com/integration-docs/gitlab/) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationGitlab(@Nullable Output<ElastigroupIntegrationGitlabArgs> integrationGitlab) {
            $.integrationGitlab = integrationGitlab;
            return this;
        }

        /**
         * @param integrationGitlab Describes the [Gitlab](https://api.spotinst.com/integration-docs/gitlab/) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationGitlab(ElastigroupIntegrationGitlabArgs integrationGitlab) {
            return integrationGitlab(Output.of(integrationGitlab));
        }

        /**
         * @param integrationKubernetes Describes the [Kubernetes](https://kubernetes.io/) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationKubernetes(@Nullable Output<ElastigroupIntegrationKubernetesArgs> integrationKubernetes) {
            $.integrationKubernetes = integrationKubernetes;
            return this;
        }

        /**
         * @param integrationKubernetes Describes the [Kubernetes](https://kubernetes.io/) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationKubernetes(ElastigroupIntegrationKubernetesArgs integrationKubernetes) {
            return integrationKubernetes(Output.of(integrationKubernetes));
        }

        /**
         * @param integrationMesosphere Describes the [Mesosphere](https://mesosphere.com/) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationMesosphere(@Nullable Output<ElastigroupIntegrationMesosphereArgs> integrationMesosphere) {
            $.integrationMesosphere = integrationMesosphere;
            return this;
        }

        /**
         * @param integrationMesosphere Describes the [Mesosphere](https://mesosphere.com/) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationMesosphere(ElastigroupIntegrationMesosphereArgs integrationMesosphere) {
            return integrationMesosphere(Output.of(integrationMesosphere));
        }

        /**
         * @param integrationMultaiRuntime Describes the [Multai Runtime](https://spotinst.com/) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationMultaiRuntime(@Nullable Output<ElastigroupIntegrationMultaiRuntimeArgs> integrationMultaiRuntime) {
            $.integrationMultaiRuntime = integrationMultaiRuntime;
            return this;
        }

        /**
         * @param integrationMultaiRuntime Describes the [Multai Runtime](https://spotinst.com/) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationMultaiRuntime(ElastigroupIntegrationMultaiRuntimeArgs integrationMultaiRuntime) {
            return integrationMultaiRuntime(Output.of(integrationMultaiRuntime));
        }

        /**
         * @param integrationNomad Describes the [Nomad](https://www.nomadproject.io/) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationNomad(@Nullable Output<ElastigroupIntegrationNomadArgs> integrationNomad) {
            $.integrationNomad = integrationNomad;
            return this;
        }

        /**
         * @param integrationNomad Describes the [Nomad](https://www.nomadproject.io/) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationNomad(ElastigroupIntegrationNomadArgs integrationNomad) {
            return integrationNomad(Output.of(integrationNomad));
        }

        /**
         * @param integrationRancher Describes the [Rancher](http://rancherlabs.com/) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationRancher(@Nullable Output<ElastigroupIntegrationRancherArgs> integrationRancher) {
            $.integrationRancher = integrationRancher;
            return this;
        }

        /**
         * @param integrationRancher Describes the [Rancher](http://rancherlabs.com/) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationRancher(ElastigroupIntegrationRancherArgs integrationRancher) {
            return integrationRancher(Output.of(integrationRancher));
        }

        /**
         * @param integrationRoute53 Describes the [Route53](https://aws.amazon.com/documentation/route53/?id=docs_gateway) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationRoute53(@Nullable Output<ElastigroupIntegrationRoute53Args> integrationRoute53) {
            $.integrationRoute53 = integrationRoute53;
            return this;
        }

        /**
         * @param integrationRoute53 Describes the [Route53](https://aws.amazon.com/documentation/route53/?id=docs_gateway) integration.
         * 
         * @return builder
         * 
         */
        public Builder integrationRoute53(ElastigroupIntegrationRoute53Args integrationRoute53) {
            return integrationRoute53(Output.of(integrationRoute53));
        }

        public Builder itfs(@Nullable Output<List<ElastigroupItfArgs>> itfs) {
            $.itfs = itfs;
            return this;
        }

        public Builder itfs(List<ElastigroupItfArgs> itfs) {
            return itfs(Output.of(itfs));
        }

        public Builder itfs(ElastigroupItfArgs... itfs) {
            return itfs(List.of(itfs));
        }

        /**
         * @param keyName The key name that should be used for the instance.
         * 
         * @return builder
         * 
         */
        public Builder keyName(@Nullable Output<String> keyName) {
            $.keyName = keyName;
            return this;
        }

        /**
         * @param keyName The key name that should be used for the instance.
         * 
         * @return builder
         * 
         */
        public Builder keyName(String keyName) {
            return keyName(Output.of(keyName));
        }

        public Builder lifetimePeriod(@Nullable Output<String> lifetimePeriod) {
            $.lifetimePeriod = lifetimePeriod;
            return this;
        }

        public Builder lifetimePeriod(String lifetimePeriod) {
            return lifetimePeriod(Output.of(lifetimePeriod));
        }

        /**
         * @param maxSize The maximum number of instances the group should have at any time.
         * 
         * @return builder
         * 
         */
        public Builder maxSize(@Nullable Output<Integer> maxSize) {
            $.maxSize = maxSize;
            return this;
        }

        /**
         * @param maxSize The maximum number of instances the group should have at any time.
         * 
         * @return builder
         * 
         */
        public Builder maxSize(Integer maxSize) {
            return maxSize(Output.of(maxSize));
        }

        /**
         * @param metadataOptions Data that used to configure or manage the running instances:
         * 
         * @return builder
         * 
         */
        public Builder metadataOptions(@Nullable Output<ElastigroupMetadataOptionsArgs> metadataOptions) {
            $.metadataOptions = metadataOptions;
            return this;
        }

        /**
         * @param metadataOptions Data that used to configure or manage the running instances:
         * 
         * @return builder
         * 
         */
        public Builder metadataOptions(ElastigroupMetadataOptionsArgs metadataOptions) {
            return metadataOptions(Output.of(metadataOptions));
        }

        /**
         * @param minSize The minimum number of instances the group should have at any time.
         * 
         * @return builder
         * 
         */
        public Builder minSize(@Nullable Output<Integer> minSize) {
            $.minSize = minSize;
            return this;
        }

        /**
         * @param minSize The minimum number of instances the group should have at any time.
         * 
         * @return builder
         * 
         */
        public Builder minSize(Integer minSize) {
            return minSize(Output.of(minSize));
        }

        /**
         * @param minimumInstanceLifetime Defines the preferred minimum instance lifetime in hours. Markets which comply with this preference will be prioritized. Optional values: 1, 3, 6, 12, 24.
         * 
         * @return builder
         * 
         */
        public Builder minimumInstanceLifetime(@Nullable Output<Integer> minimumInstanceLifetime) {
            $.minimumInstanceLifetime = minimumInstanceLifetime;
            return this;
        }

        /**
         * @param minimumInstanceLifetime Defines the preferred minimum instance lifetime in hours. Markets which comply with this preference will be prioritized. Optional values: 1, 3, 6, 12, 24.
         * 
         * @return builder
         * 
         */
        public Builder minimumInstanceLifetime(Integer minimumInstanceLifetime) {
            return minimumInstanceLifetime(Output.of(minimumInstanceLifetime));
        }

        /**
         * @param multaiTargetSets Set of targets to register.
         * 
         * @return builder
         * 
         */
        public Builder multaiTargetSets(@Nullable Output<List<ElastigroupMultaiTargetSetArgs>> multaiTargetSets) {
            $.multaiTargetSets = multaiTargetSets;
            return this;
        }

        /**
         * @param multaiTargetSets Set of targets to register.
         * 
         * @return builder
         * 
         */
        public Builder multaiTargetSets(List<ElastigroupMultaiTargetSetArgs> multaiTargetSets) {
            return multaiTargetSets(Output.of(multaiTargetSets));
        }

        /**
         * @param multaiTargetSets Set of targets to register.
         * 
         * @return builder
         * 
         */
        public Builder multaiTargetSets(ElastigroupMultaiTargetSetArgs... multaiTargetSets) {
            return multaiTargetSets(List.of(multaiTargetSets));
        }

        public Builder multipleMetrics(@Nullable Output<ElastigroupMultipleMetricsArgs> multipleMetrics) {
            $.multipleMetrics = multipleMetrics;
            return this;
        }

        public Builder multipleMetrics(ElastigroupMultipleMetricsArgs multipleMetrics) {
            return multipleMetrics(Output.of(multipleMetrics));
        }

        /**
         * @param name The group name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The group name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder networkInterfaces(@Nullable Output<List<ElastigroupNetworkInterfaceArgs>> networkInterfaces) {
            $.networkInterfaces = networkInterfaces;
            return this;
        }

        public Builder networkInterfaces(List<ElastigroupNetworkInterfaceArgs> networkInterfaces) {
            return networkInterfaces(Output.of(networkInterfaces));
        }

        public Builder networkInterfaces(ElastigroupNetworkInterfaceArgs... networkInterfaces) {
            return networkInterfaces(List.of(networkInterfaces));
        }

        /**
         * @param ondemandCount Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.
         * 
         * @return builder
         * 
         */
        public Builder ondemandCount(@Nullable Output<Integer> ondemandCount) {
            $.ondemandCount = ondemandCount;
            return this;
        }

        /**
         * @param ondemandCount Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.
         * 
         * @return builder
         * 
         */
        public Builder ondemandCount(Integer ondemandCount) {
            return ondemandCount(Output.of(ondemandCount));
        }

        /**
         * @param orientation Select a prediction strategy. Valid values: `balanced`, `costOriented`, `equalAzDistribution`, `availabilityOriented`. You can read more in our documentation.
         * 
         * @return builder
         * 
         */
        public Builder orientation(@Nullable Output<String> orientation) {
            $.orientation = orientation;
            return this;
        }

        /**
         * @param orientation Select a prediction strategy. Valid values: `balanced`, `costOriented`, `equalAzDistribution`, `availabilityOriented`. You can read more in our documentation.
         * 
         * @return builder
         * 
         */
        public Builder orientation(String orientation) {
            return orientation(Output.of(orientation));
        }

        /**
         * @param persistBlockDevices Boolean, should the instance maintain its Data volumes.
         * 
         * @return builder
         * 
         */
        public Builder persistBlockDevices(@Nullable Output<Boolean> persistBlockDevices) {
            $.persistBlockDevices = persistBlockDevices;
            return this;
        }

        /**
         * @param persistBlockDevices Boolean, should the instance maintain its Data volumes.
         * 
         * @return builder
         * 
         */
        public Builder persistBlockDevices(Boolean persistBlockDevices) {
            return persistBlockDevices(Output.of(persistBlockDevices));
        }

        /**
         * @param persistPrivateIp Boolean, should the instance maintain its private IP.
         * 
         * @return builder
         * 
         */
        public Builder persistPrivateIp(@Nullable Output<Boolean> persistPrivateIp) {
            $.persistPrivateIp = persistPrivateIp;
            return this;
        }

        /**
         * @param persistPrivateIp Boolean, should the instance maintain its private IP.
         * 
         * @return builder
         * 
         */
        public Builder persistPrivateIp(Boolean persistPrivateIp) {
            return persistPrivateIp(Output.of(persistPrivateIp));
        }

        /**
         * @param persistRootDevice Boolean, should the instance maintain its root device volumes.
         * 
         * @return builder
         * 
         */
        public Builder persistRootDevice(@Nullable Output<Boolean> persistRootDevice) {
            $.persistRootDevice = persistRootDevice;
            return this;
        }

        /**
         * @param persistRootDevice Boolean, should the instance maintain its root device volumes.
         * 
         * @return builder
         * 
         */
        public Builder persistRootDevice(Boolean persistRootDevice) {
            return persistRootDevice(Output.of(persistRootDevice));
        }

        /**
         * @param placementTenancy Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used. Valid values: &#34;default&#34;, &#34;dedicated&#34; .
         * 
         * @return builder
         * 
         */
        public Builder placementTenancy(@Nullable Output<String> placementTenancy) {
            $.placementTenancy = placementTenancy;
            return this;
        }

        /**
         * @param placementTenancy Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used. Valid values: &#34;default&#34;, &#34;dedicated&#34; .
         * 
         * @return builder
         * 
         */
        public Builder placementTenancy(String placementTenancy) {
            return placementTenancy(Output.of(placementTenancy));
        }

        /**
         * @param preferredAvailabilityZones The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.
         * Note: Must be a sublist of `availability_zones` and `orientation` value must not be `&#34;equalAzDistribution&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder preferredAvailabilityZones(@Nullable Output<List<String>> preferredAvailabilityZones) {
            $.preferredAvailabilityZones = preferredAvailabilityZones;
            return this;
        }

        /**
         * @param preferredAvailabilityZones The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.
         * Note: Must be a sublist of `availability_zones` and `orientation` value must not be `&#34;equalAzDistribution&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder preferredAvailabilityZones(List<String> preferredAvailabilityZones) {
            return preferredAvailabilityZones(Output.of(preferredAvailabilityZones));
        }

        /**
         * @param preferredAvailabilityZones The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.
         * Note: Must be a sublist of `availability_zones` and `orientation` value must not be `&#34;equalAzDistribution&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder preferredAvailabilityZones(String... preferredAvailabilityZones) {
            return preferredAvailabilityZones(List.of(preferredAvailabilityZones));
        }

        /**
         * @param privateIps List of Private IPs to associate to the group instances.(e.g. &#34;172.1.1.0&#34;). Please note: This setting will only apply if persistence.persist_private_ip is set to true.
         * 
         * @return builder
         * 
         */
        public Builder privateIps(@Nullable Output<List<String>> privateIps) {
            $.privateIps = privateIps;
            return this;
        }

        /**
         * @param privateIps List of Private IPs to associate to the group instances.(e.g. &#34;172.1.1.0&#34;). Please note: This setting will only apply if persistence.persist_private_ip is set to true.
         * 
         * @return builder
         * 
         */
        public Builder privateIps(List<String> privateIps) {
            return privateIps(Output.of(privateIps));
        }

        /**
         * @param privateIps List of Private IPs to associate to the group instances.(e.g. &#34;172.1.1.0&#34;). Please note: This setting will only apply if persistence.persist_private_ip is set to true.
         * 
         * @return builder
         * 
         */
        public Builder privateIps(String... privateIps) {
            return privateIps(List.of(privateIps));
        }

        /**
         * @param product Operation system type. Valid values: `&#34;Linux/UNIX&#34;`, `&#34;SUSE Linux&#34;`, `&#34;Windows&#34;`.
         * For EC2 Classic instances:  `&#34;Linux/UNIX (Amazon VPC)&#34;`, `&#34;SUSE Linux (Amazon VPC)&#34;`, `&#34;Windows (Amazon VPC)&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder product(@Nullable Output<String> product) {
            $.product = product;
            return this;
        }

        /**
         * @param product Operation system type. Valid values: `&#34;Linux/UNIX&#34;`, `&#34;SUSE Linux&#34;`, `&#34;Windows&#34;`.
         * For EC2 Classic instances:  `&#34;Linux/UNIX (Amazon VPC)&#34;`, `&#34;SUSE Linux (Amazon VPC)&#34;`, `&#34;Windows (Amazon VPC)&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder product(String product) {
            return product(Output.of(product));
        }

        /**
         * @param region The AWS region your group will be created in.
         * Note: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The AWS region your group will be created in.
         * Note: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param resourceTagSpecifications User will specify which resources should be tagged with group tags.
         * 
         * @return builder
         * 
         */
        public Builder resourceTagSpecifications(@Nullable Output<List<ElastigroupResourceTagSpecificationArgs>> resourceTagSpecifications) {
            $.resourceTagSpecifications = resourceTagSpecifications;
            return this;
        }

        /**
         * @param resourceTagSpecifications User will specify which resources should be tagged with group tags.
         * 
         * @return builder
         * 
         */
        public Builder resourceTagSpecifications(List<ElastigroupResourceTagSpecificationArgs> resourceTagSpecifications) {
            return resourceTagSpecifications(Output.of(resourceTagSpecifications));
        }

        /**
         * @param resourceTagSpecifications User will specify which resources should be tagged with group tags.
         * 
         * @return builder
         * 
         */
        public Builder resourceTagSpecifications(ElastigroupResourceTagSpecificationArgs... resourceTagSpecifications) {
            return resourceTagSpecifications(List.of(resourceTagSpecifications));
        }

        /**
         * @param revertToSpot Hold settings for strategy correction – replacing On-Demand for Spot instances. Supported Values: `&#34;never&#34;`, `&#34;always&#34;`, `&#34;timeWindow&#34;`
         * 
         * @return builder
         * 
         */
        public Builder revertToSpot(@Nullable Output<ElastigroupRevertToSpotArgs> revertToSpot) {
            $.revertToSpot = revertToSpot;
            return this;
        }

        /**
         * @param revertToSpot Hold settings for strategy correction – replacing On-Demand for Spot instances. Supported Values: `&#34;never&#34;`, `&#34;always&#34;`, `&#34;timeWindow&#34;`
         * 
         * @return builder
         * 
         */
        public Builder revertToSpot(ElastigroupRevertToSpotArgs revertToSpot) {
            return revertToSpot(Output.of(revertToSpot));
        }

        public Builder scalingDownPolicies(@Nullable Output<List<ElastigroupScalingDownPolicyArgs>> scalingDownPolicies) {
            $.scalingDownPolicies = scalingDownPolicies;
            return this;
        }

        public Builder scalingDownPolicies(List<ElastigroupScalingDownPolicyArgs> scalingDownPolicies) {
            return scalingDownPolicies(Output.of(scalingDownPolicies));
        }

        public Builder scalingDownPolicies(ElastigroupScalingDownPolicyArgs... scalingDownPolicies) {
            return scalingDownPolicies(List.of(scalingDownPolicies));
        }

        /**
         * @param scalingStrategies Set termination policy.
         * 
         * @return builder
         * 
         */
        public Builder scalingStrategies(@Nullable Output<List<ElastigroupScalingStrategyArgs>> scalingStrategies) {
            $.scalingStrategies = scalingStrategies;
            return this;
        }

        /**
         * @param scalingStrategies Set termination policy.
         * 
         * @return builder
         * 
         */
        public Builder scalingStrategies(List<ElastigroupScalingStrategyArgs> scalingStrategies) {
            return scalingStrategies(Output.of(scalingStrategies));
        }

        /**
         * @param scalingStrategies Set termination policy.
         * 
         * @return builder
         * 
         */
        public Builder scalingStrategies(ElastigroupScalingStrategyArgs... scalingStrategies) {
            return scalingStrategies(List.of(scalingStrategies));
        }

        public Builder scalingTargetPolicies(@Nullable Output<List<ElastigroupScalingTargetPolicyArgs>> scalingTargetPolicies) {
            $.scalingTargetPolicies = scalingTargetPolicies;
            return this;
        }

        public Builder scalingTargetPolicies(List<ElastigroupScalingTargetPolicyArgs> scalingTargetPolicies) {
            return scalingTargetPolicies(Output.of(scalingTargetPolicies));
        }

        public Builder scalingTargetPolicies(ElastigroupScalingTargetPolicyArgs... scalingTargetPolicies) {
            return scalingTargetPolicies(List.of(scalingTargetPolicies));
        }

        public Builder scalingUpPolicies(@Nullable Output<List<ElastigroupScalingUpPolicyArgs>> scalingUpPolicies) {
            $.scalingUpPolicies = scalingUpPolicies;
            return this;
        }

        public Builder scalingUpPolicies(List<ElastigroupScalingUpPolicyArgs> scalingUpPolicies) {
            return scalingUpPolicies(Output.of(scalingUpPolicies));
        }

        public Builder scalingUpPolicies(ElastigroupScalingUpPolicyArgs... scalingUpPolicies) {
            return scalingUpPolicies(List.of(scalingUpPolicies));
        }

        public Builder scheduledTasks(@Nullable Output<List<ElastigroupScheduledTaskArgs>> scheduledTasks) {
            $.scheduledTasks = scheduledTasks;
            return this;
        }

        public Builder scheduledTasks(List<ElastigroupScheduledTaskArgs> scheduledTasks) {
            return scheduledTasks(Output.of(scheduledTasks));
        }

        public Builder scheduledTasks(ElastigroupScheduledTaskArgs... scheduledTasks) {
            return scheduledTasks(List.of(scheduledTasks));
        }

        /**
         * @param securityGroups A list of associated security group IDS.
         * 
         * @return builder
         * 
         */
        public Builder securityGroups(@Nullable Output<List<String>> securityGroups) {
            $.securityGroups = securityGroups;
            return this;
        }

        /**
         * @param securityGroups A list of associated security group IDS.
         * 
         * @return builder
         * 
         */
        public Builder securityGroups(List<String> securityGroups) {
            return securityGroups(Output.of(securityGroups));
        }

        /**
         * @param securityGroups A list of associated security group IDS.
         * 
         * @return builder
         * 
         */
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }

        /**
         * @param shutdownScript The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
         * 
         * @return builder
         * 
         */
        public Builder shutdownScript(@Nullable Output<String> shutdownScript) {
            $.shutdownScript = shutdownScript;
            return this;
        }

        /**
         * @param shutdownScript The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
         * 
         * @return builder
         * 
         */
        public Builder shutdownScript(String shutdownScript) {
            return shutdownScript(Output.of(shutdownScript));
        }

        public Builder signals(@Nullable Output<List<ElastigroupSignalArgs>> signals) {
            $.signals = signals;
            return this;
        }

        public Builder signals(List<ElastigroupSignalArgs> signals) {
            return signals(Output.of(signals));
        }

        public Builder signals(ElastigroupSignalArgs... signals) {
            return signals(List.of(signals));
        }

        /**
         * @param spotPercentage The percentage of Spot instances that would spin up from the `desired_capacity` number.
         * 
         * @return builder
         * 
         */
        public Builder spotPercentage(@Nullable Output<Integer> spotPercentage) {
            $.spotPercentage = spotPercentage;
            return this;
        }

        /**
         * @param spotPercentage The percentage of Spot instances that would spin up from the `desired_capacity` number.
         * 
         * @return builder
         * 
         */
        public Builder spotPercentage(Integer spotPercentage) {
            return spotPercentage(Output.of(spotPercentage));
        }

        public Builder statefulDeallocation(@Nullable Output<ElastigroupStatefulDeallocationArgs> statefulDeallocation) {
            $.statefulDeallocation = statefulDeallocation;
            return this;
        }

        public Builder statefulDeallocation(ElastigroupStatefulDeallocationArgs statefulDeallocation) {
            return statefulDeallocation(Output.of(statefulDeallocation));
        }

        public Builder statefulInstanceActions(@Nullable Output<List<ElastigroupStatefulInstanceActionArgs>> statefulInstanceActions) {
            $.statefulInstanceActions = statefulInstanceActions;
            return this;
        }

        public Builder statefulInstanceActions(List<ElastigroupStatefulInstanceActionArgs> statefulInstanceActions) {
            return statefulInstanceActions(Output.of(statefulInstanceActions));
        }

        public Builder statefulInstanceActions(ElastigroupStatefulInstanceActionArgs... statefulInstanceActions) {
            return statefulInstanceActions(List.of(statefulInstanceActions));
        }

        /**
         * @param subnetIds List of Strings of subnet identifiers.
         * Note: When this parameter is set, `availability_zones` should be left unused.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(@Nullable Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        /**
         * @param subnetIds List of Strings of subnet identifiers.
         * Note: When this parameter is set, `availability_zones` should be left unused.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        /**
         * @param subnetIds List of Strings of subnet identifiers.
         * Note: When this parameter is set, `availability_zones` should be left unused.
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        /**
         * @param tags A key/value mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<ElastigroupTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A key/value mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<ElastigroupTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A key/value mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(ElastigroupTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param targetGroupArns List of Target Group ARNs to register the instances to.
         * 
         * @return builder
         * 
         */
        public Builder targetGroupArns(@Nullable Output<List<String>> targetGroupArns) {
            $.targetGroupArns = targetGroupArns;
            return this;
        }

        /**
         * @param targetGroupArns List of Target Group ARNs to register the instances to.
         * 
         * @return builder
         * 
         */
        public Builder targetGroupArns(List<String> targetGroupArns) {
            return targetGroupArns(Output.of(targetGroupArns));
        }

        /**
         * @param targetGroupArns List of Target Group ARNs to register the instances to.
         * 
         * @return builder
         * 
         */
        public Builder targetGroupArns(String... targetGroupArns) {
            return targetGroupArns(List.of(targetGroupArns));
        }

        public Builder updatePolicy(@Nullable Output<ElastigroupUpdatePolicyArgs> updatePolicy) {
            $.updatePolicy = updatePolicy;
            return this;
        }

        public Builder updatePolicy(ElastigroupUpdatePolicyArgs updatePolicy) {
            return updatePolicy(Output.of(updatePolicy));
        }

        /**
         * @param userData The user data to provide when launching the instance.
         * 
         * @return builder
         * 
         */
        public Builder userData(@Nullable Output<String> userData) {
            $.userData = userData;
            return this;
        }

        /**
         * @param userData The user data to provide when launching the instance.
         * 
         * @return builder
         * 
         */
        public Builder userData(String userData) {
            return userData(Output.of(userData));
        }

        public Builder utilizeCommitments(@Nullable Output<Boolean> utilizeCommitments) {
            $.utilizeCommitments = utilizeCommitments;
            return this;
        }

        public Builder utilizeCommitments(Boolean utilizeCommitments) {
            return utilizeCommitments(Output.of(utilizeCommitments));
        }

        /**
         * @param utilizeReservedInstances In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.
         * 
         * @return builder
         * 
         */
        public Builder utilizeReservedInstances(@Nullable Output<Boolean> utilizeReservedInstances) {
            $.utilizeReservedInstances = utilizeReservedInstances;
            return this;
        }

        /**
         * @param utilizeReservedInstances In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.
         * 
         * @return builder
         * 
         */
        public Builder utilizeReservedInstances(Boolean utilizeReservedInstances) {
            return utilizeReservedInstances(Output.of(utilizeReservedInstances));
        }

        /**
         * @param waitForCapacity Minimum number of instances in a &#39;HEALTHY&#39; status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.
         * 
         * @return builder
         * 
         */
        public Builder waitForCapacity(@Nullable Output<Integer> waitForCapacity) {
            $.waitForCapacity = waitForCapacity;
            return this;
        }

        /**
         * @param waitForCapacity Minimum number of instances in a &#39;HEALTHY&#39; status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.
         * 
         * @return builder
         * 
         */
        public Builder waitForCapacity(Integer waitForCapacity) {
            return waitForCapacity(Output.of(waitForCapacity));
        }

        /**
         * @param waitForCapacityTimeout Time (seconds) to wait for instances to report a &#39;HEALTHY&#39; status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.
         * 
         * @return builder
         * 
         */
        public Builder waitForCapacityTimeout(@Nullable Output<Integer> waitForCapacityTimeout) {
            $.waitForCapacityTimeout = waitForCapacityTimeout;
            return this;
        }

        /**
         * @param waitForCapacityTimeout Time (seconds) to wait for instances to report a &#39;HEALTHY&#39; status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment.
         * 
         * @return builder
         * 
         */
        public Builder waitForCapacityTimeout(Integer waitForCapacityTimeout) {
            return waitForCapacityTimeout(Output.of(waitForCapacityTimeout));
        }

        public ElastigroupState build() {
            return $;
        }
    }

}

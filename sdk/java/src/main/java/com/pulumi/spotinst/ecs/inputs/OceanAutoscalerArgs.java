// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.ecs.inputs.OceanAutoscalerDownArgs;
import com.pulumi.spotinst.ecs.inputs.OceanAutoscalerHeadroomArgs;
import com.pulumi.spotinst.ecs.inputs.OceanAutoscalerResourceLimitsArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanAutoscalerArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanAutoscalerArgs Empty = new OceanAutoscalerArgs();

    @Import(name="autoHeadroomPercentage")
    private @Nullable Output<Integer> autoHeadroomPercentage;

    public Optional<Output<Integer>> autoHeadroomPercentage() {
        return Optional.ofNullable(this.autoHeadroomPercentage);
    }

    @Import(name="cooldown")
    private @Nullable Output<Integer> cooldown;

    public Optional<Output<Integer>> cooldown() {
        return Optional.ofNullable(this.cooldown);
    }

    @Import(name="down")
    private @Nullable Output<OceanAutoscalerDownArgs> down;

    public Optional<Output<OceanAutoscalerDownArgs>> down() {
        return Optional.ofNullable(this.down);
    }

    @Import(name="enableAutomaticAndManualHeadroom")
    private @Nullable Output<Boolean> enableAutomaticAndManualHeadroom;

    public Optional<Output<Boolean>> enableAutomaticAndManualHeadroom() {
        return Optional.ofNullable(this.enableAutomaticAndManualHeadroom);
    }

    @Import(name="headroom")
    private @Nullable Output<OceanAutoscalerHeadroomArgs> headroom;

    public Optional<Output<OceanAutoscalerHeadroomArgs>> headroom() {
        return Optional.ofNullable(this.headroom);
    }

    @Import(name="isAutoConfig")
    private @Nullable Output<Boolean> isAutoConfig;

    public Optional<Output<Boolean>> isAutoConfig() {
        return Optional.ofNullable(this.isAutoConfig);
    }

    @Import(name="isEnabled")
    private @Nullable Output<Boolean> isEnabled;

    public Optional<Output<Boolean>> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }

    @Import(name="resourceLimits")
    private @Nullable Output<OceanAutoscalerResourceLimitsArgs> resourceLimits;

    public Optional<Output<OceanAutoscalerResourceLimitsArgs>> resourceLimits() {
        return Optional.ofNullable(this.resourceLimits);
    }

    @Import(name="shouldScaleDownNonServiceTasks")
    private @Nullable Output<Boolean> shouldScaleDownNonServiceTasks;

    public Optional<Output<Boolean>> shouldScaleDownNonServiceTasks() {
        return Optional.ofNullable(this.shouldScaleDownNonServiceTasks);
    }

    private OceanAutoscalerArgs() {}

    private OceanAutoscalerArgs(OceanAutoscalerArgs $) {
        this.autoHeadroomPercentage = $.autoHeadroomPercentage;
        this.cooldown = $.cooldown;
        this.down = $.down;
        this.enableAutomaticAndManualHeadroom = $.enableAutomaticAndManualHeadroom;
        this.headroom = $.headroom;
        this.isAutoConfig = $.isAutoConfig;
        this.isEnabled = $.isEnabled;
        this.resourceLimits = $.resourceLimits;
        this.shouldScaleDownNonServiceTasks = $.shouldScaleDownNonServiceTasks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanAutoscalerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanAutoscalerArgs $;

        public Builder() {
            $ = new OceanAutoscalerArgs();
        }

        public Builder(OceanAutoscalerArgs defaults) {
            $ = new OceanAutoscalerArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoHeadroomPercentage(@Nullable Output<Integer> autoHeadroomPercentage) {
            $.autoHeadroomPercentage = autoHeadroomPercentage;
            return this;
        }

        public Builder autoHeadroomPercentage(Integer autoHeadroomPercentage) {
            return autoHeadroomPercentage(Output.of(autoHeadroomPercentage));
        }

        public Builder cooldown(@Nullable Output<Integer> cooldown) {
            $.cooldown = cooldown;
            return this;
        }

        public Builder cooldown(Integer cooldown) {
            return cooldown(Output.of(cooldown));
        }

        public Builder down(@Nullable Output<OceanAutoscalerDownArgs> down) {
            $.down = down;
            return this;
        }

        public Builder down(OceanAutoscalerDownArgs down) {
            return down(Output.of(down));
        }

        public Builder enableAutomaticAndManualHeadroom(@Nullable Output<Boolean> enableAutomaticAndManualHeadroom) {
            $.enableAutomaticAndManualHeadroom = enableAutomaticAndManualHeadroom;
            return this;
        }

        public Builder enableAutomaticAndManualHeadroom(Boolean enableAutomaticAndManualHeadroom) {
            return enableAutomaticAndManualHeadroom(Output.of(enableAutomaticAndManualHeadroom));
        }

        public Builder headroom(@Nullable Output<OceanAutoscalerHeadroomArgs> headroom) {
            $.headroom = headroom;
            return this;
        }

        public Builder headroom(OceanAutoscalerHeadroomArgs headroom) {
            return headroom(Output.of(headroom));
        }

        public Builder isAutoConfig(@Nullable Output<Boolean> isAutoConfig) {
            $.isAutoConfig = isAutoConfig;
            return this;
        }

        public Builder isAutoConfig(Boolean isAutoConfig) {
            return isAutoConfig(Output.of(isAutoConfig));
        }

        public Builder isEnabled(@Nullable Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        public Builder resourceLimits(@Nullable Output<OceanAutoscalerResourceLimitsArgs> resourceLimits) {
            $.resourceLimits = resourceLimits;
            return this;
        }

        public Builder resourceLimits(OceanAutoscalerResourceLimitsArgs resourceLimits) {
            return resourceLimits(Output.of(resourceLimits));
        }

        public Builder shouldScaleDownNonServiceTasks(@Nullable Output<Boolean> shouldScaleDownNonServiceTasks) {
            $.shouldScaleDownNonServiceTasks = shouldScaleDownNonServiceTasks;
            return this;
        }

        public Builder shouldScaleDownNonServiceTasks(Boolean shouldScaleDownNonServiceTasks) {
            return shouldScaleDownNonServiceTasks(Output.of(shouldScaleDownNonServiceTasks));
        }

        public OceanAutoscalerArgs build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.azure.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.azure.inputs.OceanAutoscalerAutoscaleDownArgs;
import com.pulumi.spotinst.azure.inputs.OceanAutoscalerAutoscaleHeadroomArgs;
import com.pulumi.spotinst.azure.inputs.OceanAutoscalerResourceLimitsArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanAutoscalerArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanAutoscalerArgs Empty = new OceanAutoscalerArgs();

    /**
     * Auto Scaling scale down operations.
     * 
     */
    @Import(name="autoscaleDown")
    private @Nullable Output<OceanAutoscalerAutoscaleDownArgs> autoscaleDown;

    /**
     * @return Auto Scaling scale down operations.
     * 
     */
    public Optional<Output<OceanAutoscalerAutoscaleDownArgs>> autoscaleDown() {
        return Optional.ofNullable(this.autoscaleDown);
    }

    /**
     * Spare Resource Capacity Management feature enables fast assignment of Pods without having to wait for new resources to be launched.
     * 
     */
    @Import(name="autoscaleHeadroom")
    private @Nullable Output<OceanAutoscalerAutoscaleHeadroomArgs> autoscaleHeadroom;

    /**
     * @return Spare Resource Capacity Management feature enables fast assignment of Pods without having to wait for new resources to be launched.
     * 
     */
    public Optional<Output<OceanAutoscalerAutoscaleHeadroomArgs>> autoscaleHeadroom() {
        return Optional.ofNullable(this.autoscaleHeadroom);
    }

    /**
     * Enable the Ocean Kubernetes Autoscaler.
     * 
     */
    @Import(name="autoscaleIsEnabled")
    private @Nullable Output<Boolean> autoscaleIsEnabled;

    /**
     * @return Enable the Ocean Kubernetes Autoscaler.
     * 
     */
    public Optional<Output<Boolean>> autoscaleIsEnabled() {
        return Optional.ofNullable(this.autoscaleIsEnabled);
    }

    /**
     * Optionally set upper and lower bounds on the resource usage of the cluster.
     * 
     */
    @Import(name="resourceLimits")
    private @Nullable Output<OceanAutoscalerResourceLimitsArgs> resourceLimits;

    /**
     * @return Optionally set upper and lower bounds on the resource usage of the cluster.
     * 
     */
    public Optional<Output<OceanAutoscalerResourceLimitsArgs>> resourceLimits() {
        return Optional.ofNullable(this.resourceLimits);
    }

    private OceanAutoscalerArgs() {}

    private OceanAutoscalerArgs(OceanAutoscalerArgs $) {
        this.autoscaleDown = $.autoscaleDown;
        this.autoscaleHeadroom = $.autoscaleHeadroom;
        this.autoscaleIsEnabled = $.autoscaleIsEnabled;
        this.resourceLimits = $.resourceLimits;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanAutoscalerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanAutoscalerArgs $;

        public Builder() {
            $ = new OceanAutoscalerArgs();
        }

        public Builder(OceanAutoscalerArgs defaults) {
            $ = new OceanAutoscalerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoscaleDown Auto Scaling scale down operations.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleDown(@Nullable Output<OceanAutoscalerAutoscaleDownArgs> autoscaleDown) {
            $.autoscaleDown = autoscaleDown;
            return this;
        }

        /**
         * @param autoscaleDown Auto Scaling scale down operations.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleDown(OceanAutoscalerAutoscaleDownArgs autoscaleDown) {
            return autoscaleDown(Output.of(autoscaleDown));
        }

        /**
         * @param autoscaleHeadroom Spare Resource Capacity Management feature enables fast assignment of Pods without having to wait for new resources to be launched.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleHeadroom(@Nullable Output<OceanAutoscalerAutoscaleHeadroomArgs> autoscaleHeadroom) {
            $.autoscaleHeadroom = autoscaleHeadroom;
            return this;
        }

        /**
         * @param autoscaleHeadroom Spare Resource Capacity Management feature enables fast assignment of Pods without having to wait for new resources to be launched.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleHeadroom(OceanAutoscalerAutoscaleHeadroomArgs autoscaleHeadroom) {
            return autoscaleHeadroom(Output.of(autoscaleHeadroom));
        }

        /**
         * @param autoscaleIsEnabled Enable the Ocean Kubernetes Autoscaler.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleIsEnabled(@Nullable Output<Boolean> autoscaleIsEnabled) {
            $.autoscaleIsEnabled = autoscaleIsEnabled;
            return this;
        }

        /**
         * @param autoscaleIsEnabled Enable the Ocean Kubernetes Autoscaler.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleIsEnabled(Boolean autoscaleIsEnabled) {
            return autoscaleIsEnabled(Output.of(autoscaleIsEnabled));
        }

        /**
         * @param resourceLimits Optionally set upper and lower bounds on the resource usage of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder resourceLimits(@Nullable Output<OceanAutoscalerResourceLimitsArgs> resourceLimits) {
            $.resourceLimits = resourceLimits;
            return this;
        }

        /**
         * @param resourceLimits Optionally set upper and lower bounds on the resource usage of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder resourceLimits(OceanAutoscalerResourceLimitsArgs resourceLimits) {
            return resourceLimits(Output.of(resourceLimits));
        }

        public OceanAutoscalerArgs build() {
            return $;
        }
    }

}

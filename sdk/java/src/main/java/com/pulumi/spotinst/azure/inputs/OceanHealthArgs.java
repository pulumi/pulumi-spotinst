// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.azure.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanHealthArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanHealthArgs Empty = new OceanHealthArgs();

    /**
     * The amount of time to wait, in seconds, from the moment the instance has launched before monitoring its health checks.
     * 
     */
    @Import(name="gracePeriod")
    private @Nullable Output<Integer> gracePeriod;

    /**
     * @return The amount of time to wait, in seconds, from the moment the instance has launched before monitoring its health checks.
     * 
     */
    public Optional<Output<Integer>> gracePeriod() {
        return Optional.ofNullable(this.gracePeriod);
    }

    private OceanHealthArgs() {}

    private OceanHealthArgs(OceanHealthArgs $) {
        this.gracePeriod = $.gracePeriod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanHealthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanHealthArgs $;

        public Builder() {
            $ = new OceanHealthArgs();
        }

        public Builder(OceanHealthArgs defaults) {
            $ = new OceanHealthArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gracePeriod The amount of time to wait, in seconds, from the moment the instance has launched before monitoring its health checks.
         * 
         * @return builder
         * 
         */
        public Builder gracePeriod(@Nullable Output<Integer> gracePeriod) {
            $.gracePeriod = gracePeriod;
            return this;
        }

        /**
         * @param gracePeriod The amount of time to wait, in seconds, from the moment the instance has launched before monitoring its health checks.
         * 
         * @return builder
         * 
         */
        public Builder gracePeriod(Integer gracePeriod) {
            return gracePeriod(Output.of(gracePeriod));
        }

        public OceanHealthArgs build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs Empty = new OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs();

    /**
     * Valid values: &#34;SUNDAY&#34; &#34;MONDAY&#34; &#34;TUESDAY&#34; &#34;WEDNESDAY&#34; &#34;THURSDAY&#34; &#34;FRIDAY&#34; &#34;SATURDAY&#34;. Array of the days of the week, when we want to trigger the apply recommendations.
     * 
     */
    @Import(name="intervalDays", required=true)
    private Output<List<String>> intervalDays;

    /**
     * @return Valid values: &#34;SUNDAY&#34; &#34;MONDAY&#34; &#34;TUESDAY&#34; &#34;WEDNESDAY&#34; &#34;THURSDAY&#34; &#34;FRIDAY&#34; &#34;SATURDAY&#34;. Array of the days of the week, when we want to trigger the apply recommendations.
     * 
     */
    public Output<List<String>> intervalDays() {
        return this.intervalDays;
    }

    /**
     * End time.
     * 
     */
    @Import(name="intervalHoursEndTime", required=true)
    private Output<String> intervalHoursEndTime;

    /**
     * @return End time.
     * 
     */
    public Output<String> intervalHoursEndTime() {
        return this.intervalHoursEndTime;
    }

    /**
     * Start time.
     * 
     */
    @Import(name="intervalHoursStartTime", required=true)
    private Output<String> intervalHoursStartTime;

    /**
     * @return Start time.
     * 
     */
    public Output<String> intervalHoursStartTime() {
        return this.intervalHoursStartTime;
    }

    private OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs() {}

    private OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs(OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs $) {
        this.intervalDays = $.intervalDays;
        this.intervalHoursEndTime = $.intervalHoursEndTime;
        this.intervalHoursStartTime = $.intervalHoursStartTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs $;

        public Builder() {
            $ = new OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs();
        }

        public Builder(OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs defaults) {
            $ = new OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param intervalDays Valid values: &#34;SUNDAY&#34; &#34;MONDAY&#34; &#34;TUESDAY&#34; &#34;WEDNESDAY&#34; &#34;THURSDAY&#34; &#34;FRIDAY&#34; &#34;SATURDAY&#34;. Array of the days of the week, when we want to trigger the apply recommendations.
         * 
         * @return builder
         * 
         */
        public Builder intervalDays(Output<List<String>> intervalDays) {
            $.intervalDays = intervalDays;
            return this;
        }

        /**
         * @param intervalDays Valid values: &#34;SUNDAY&#34; &#34;MONDAY&#34; &#34;TUESDAY&#34; &#34;WEDNESDAY&#34; &#34;THURSDAY&#34; &#34;FRIDAY&#34; &#34;SATURDAY&#34;. Array of the days of the week, when we want to trigger the apply recommendations.
         * 
         * @return builder
         * 
         */
        public Builder intervalDays(List<String> intervalDays) {
            return intervalDays(Output.of(intervalDays));
        }

        /**
         * @param intervalDays Valid values: &#34;SUNDAY&#34; &#34;MONDAY&#34; &#34;TUESDAY&#34; &#34;WEDNESDAY&#34; &#34;THURSDAY&#34; &#34;FRIDAY&#34; &#34;SATURDAY&#34;. Array of the days of the week, when we want to trigger the apply recommendations.
         * 
         * @return builder
         * 
         */
        public Builder intervalDays(String... intervalDays) {
            return intervalDays(List.of(intervalDays));
        }

        /**
         * @param intervalHoursEndTime End time.
         * 
         * @return builder
         * 
         */
        public Builder intervalHoursEndTime(Output<String> intervalHoursEndTime) {
            $.intervalHoursEndTime = intervalHoursEndTime;
            return this;
        }

        /**
         * @param intervalHoursEndTime End time.
         * 
         * @return builder
         * 
         */
        public Builder intervalHoursEndTime(String intervalHoursEndTime) {
            return intervalHoursEndTime(Output.of(intervalHoursEndTime));
        }

        /**
         * @param intervalHoursStartTime Start time.
         * 
         * @return builder
         * 
         */
        public Builder intervalHoursStartTime(Output<String> intervalHoursStartTime) {
            $.intervalHoursStartTime = intervalHoursStartTime;
            return this;
        }

        /**
         * @param intervalHoursStartTime Start time.
         * 
         * @return builder
         * 
         */
        public Builder intervalHoursStartTime(String intervalHoursStartTime) {
            return intervalHoursStartTime(Output.of(intervalHoursStartTime));
        }

        public OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs build() {
            if ($.intervalDays == null) {
                throw new MissingRequiredPropertyException("OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs", "intervalDays");
            }
            if ($.intervalHoursEndTime == null) {
                throw new MissingRequiredPropertyException("OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs", "intervalHoursEndTime");
            }
            if ($.intervalHoursStartTime == null) {
                throw new MissingRequiredPropertyException("OceanRightSizingRuleRecommendationApplicationIntervalWeeklyRepetitionBaseArgs", "intervalHoursStartTime");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.gke.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.gke.inputs.OceanLaunchSpecNetworkInterfaceAccessConfigArgs;
import com.pulumi.spotinst.gke.inputs.OceanLaunchSpecNetworkInterfaceAliasIpRangeArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanLaunchSpecNetworkInterfaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanLaunchSpecNetworkInterfaceArgs Empty = new OceanLaunchSpecNetworkInterfaceArgs();

    /**
     * The network protocol of the VNG.
     * 
     */
    @Import(name="accessConfigs")
    private @Nullable Output<List<OceanLaunchSpecNetworkInterfaceAccessConfigArgs>> accessConfigs;

    /**
     * @return The network protocol of the VNG.
     * 
     */
    public Optional<Output<List<OceanLaunchSpecNetworkInterfaceAccessConfigArgs>>> accessConfigs() {
        return Optional.ofNullable(this.accessConfigs);
    }

    /**
     * use the imported node pool’s associated aliasIpRange to assign secondary IP addresses to the nodes. Cannot be changed after VNG creation.
     * 
     */
    @Import(name="aliasIpRanges")
    private @Nullable Output<List<OceanLaunchSpecNetworkInterfaceAliasIpRangeArgs>> aliasIpRanges;

    /**
     * @return use the imported node pool’s associated aliasIpRange to assign secondary IP addresses to the nodes. Cannot be changed after VNG creation.
     * 
     */
    public Optional<Output<List<OceanLaunchSpecNetworkInterfaceAliasIpRangeArgs>>> aliasIpRanges() {
        return Optional.ofNullable(this.aliasIpRanges);
    }

    /**
     * The name of the network.
     * 
     */
    @Import(name="network", required=true)
    private Output<String> network;

    /**
     * @return The name of the network.
     * 
     */
    public Output<String> network() {
        return this.network;
    }

    /**
     * Use a network resource from a different project. Set the project identifier to use its network resource. This parameter is relevant only if the network resource is in a different project.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return Use a network resource from a different project. Set the project identifier to use its network resource. This parameter is relevant only if the network resource is in a different project.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    private OceanLaunchSpecNetworkInterfaceArgs() {}

    private OceanLaunchSpecNetworkInterfaceArgs(OceanLaunchSpecNetworkInterfaceArgs $) {
        this.accessConfigs = $.accessConfigs;
        this.aliasIpRanges = $.aliasIpRanges;
        this.network = $.network;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanLaunchSpecNetworkInterfaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanLaunchSpecNetworkInterfaceArgs $;

        public Builder() {
            $ = new OceanLaunchSpecNetworkInterfaceArgs();
        }

        public Builder(OceanLaunchSpecNetworkInterfaceArgs defaults) {
            $ = new OceanLaunchSpecNetworkInterfaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessConfigs The network protocol of the VNG.
         * 
         * @return builder
         * 
         */
        public Builder accessConfigs(@Nullable Output<List<OceanLaunchSpecNetworkInterfaceAccessConfigArgs>> accessConfigs) {
            $.accessConfigs = accessConfigs;
            return this;
        }

        /**
         * @param accessConfigs The network protocol of the VNG.
         * 
         * @return builder
         * 
         */
        public Builder accessConfigs(List<OceanLaunchSpecNetworkInterfaceAccessConfigArgs> accessConfigs) {
            return accessConfigs(Output.of(accessConfigs));
        }

        /**
         * @param accessConfigs The network protocol of the VNG.
         * 
         * @return builder
         * 
         */
        public Builder accessConfigs(OceanLaunchSpecNetworkInterfaceAccessConfigArgs... accessConfigs) {
            return accessConfigs(List.of(accessConfigs));
        }

        /**
         * @param aliasIpRanges use the imported node pool’s associated aliasIpRange to assign secondary IP addresses to the nodes. Cannot be changed after VNG creation.
         * 
         * @return builder
         * 
         */
        public Builder aliasIpRanges(@Nullable Output<List<OceanLaunchSpecNetworkInterfaceAliasIpRangeArgs>> aliasIpRanges) {
            $.aliasIpRanges = aliasIpRanges;
            return this;
        }

        /**
         * @param aliasIpRanges use the imported node pool’s associated aliasIpRange to assign secondary IP addresses to the nodes. Cannot be changed after VNG creation.
         * 
         * @return builder
         * 
         */
        public Builder aliasIpRanges(List<OceanLaunchSpecNetworkInterfaceAliasIpRangeArgs> aliasIpRanges) {
            return aliasIpRanges(Output.of(aliasIpRanges));
        }

        /**
         * @param aliasIpRanges use the imported node pool’s associated aliasIpRange to assign secondary IP addresses to the nodes. Cannot be changed after VNG creation.
         * 
         * @return builder
         * 
         */
        public Builder aliasIpRanges(OceanLaunchSpecNetworkInterfaceAliasIpRangeArgs... aliasIpRanges) {
            return aliasIpRanges(List.of(aliasIpRanges));
        }

        /**
         * @param network The name of the network.
         * 
         * @return builder
         * 
         */
        public Builder network(Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network The name of the network.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param projectId Use a network resource from a different project. Set the project identifier to use its network resource. This parameter is relevant only if the network resource is in a different project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Use a network resource from a different project. Set the project identifier to use its network resource. This parameter is relevant only if the network resource is in a different project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public OceanLaunchSpecNetworkInterfaceArgs build() {
            $.network = Objects.requireNonNull($.network, "expected parameter 'network' to be non-null");
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.multai;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.multai.inputs.TargetSetHealthCheckArgs;
import com.pulumi.spotinst.multai.inputs.TargetSetTagArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetSetArgs Empty = new TargetSetArgs();

    @Import(name="balancerId", required=true)
    private Output<String> balancerId;

    public Output<String> balancerId() {
        return this.balancerId;
    }

    @Import(name="deploymentId", required=true)
    private Output<String> deploymentId;

    public Output<String> deploymentId() {
        return this.deploymentId;
    }

    @Import(name="healthCheck", required=true)
    private Output<TargetSetHealthCheckArgs> healthCheck;

    public Output<TargetSetHealthCheckArgs> healthCheck() {
        return this.healthCheck;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="port")
    private @Nullable Output<Integer> port;

    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    @Import(name="protocol", required=true)
    private Output<String> protocol;

    public Output<String> protocol() {
        return this.protocol;
    }

    @Import(name="tags")
    private @Nullable Output<List<TargetSetTagArgs>> tags;

    public Optional<Output<List<TargetSetTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="weight", required=true)
    private Output<Integer> weight;

    public Output<Integer> weight() {
        return this.weight;
    }

    private TargetSetArgs() {}

    private TargetSetArgs(TargetSetArgs $) {
        this.balancerId = $.balancerId;
        this.deploymentId = $.deploymentId;
        this.healthCheck = $.healthCheck;
        this.name = $.name;
        this.port = $.port;
        this.protocol = $.protocol;
        this.tags = $.tags;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetSetArgs $;

        public Builder() {
            $ = new TargetSetArgs();
        }

        public Builder(TargetSetArgs defaults) {
            $ = new TargetSetArgs(Objects.requireNonNull(defaults));
        }

        public Builder balancerId(Output<String> balancerId) {
            $.balancerId = balancerId;
            return this;
        }

        public Builder balancerId(String balancerId) {
            return balancerId(Output.of(balancerId));
        }

        public Builder deploymentId(Output<String> deploymentId) {
            $.deploymentId = deploymentId;
            return this;
        }

        public Builder deploymentId(String deploymentId) {
            return deploymentId(Output.of(deploymentId));
        }

        public Builder healthCheck(Output<TargetSetHealthCheckArgs> healthCheck) {
            $.healthCheck = healthCheck;
            return this;
        }

        public Builder healthCheck(TargetSetHealthCheckArgs healthCheck) {
            return healthCheck(Output.of(healthCheck));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public Builder protocol(Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public Builder tags(@Nullable Output<List<TargetSetTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<TargetSetTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(TargetSetTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder weight(Output<Integer> weight) {
            $.weight = weight;
            return this;
        }

        public Builder weight(Integer weight) {
            return weight(Output.of(weight));
        }

        public TargetSetArgs build() {
            $.balancerId = Objects.requireNonNull($.balancerId, "expected parameter 'balancerId' to be non-null");
            $.deploymentId = Objects.requireNonNull($.deploymentId, "expected parameter 'deploymentId' to be non-null");
            $.healthCheck = Objects.requireNonNull($.healthCheck, "expected parameter 'healthCheck' to be non-null");
            $.protocol = Objects.requireNonNull($.protocol, "expected parameter 'protocol' to be non-null");
            $.weight = Objects.requireNonNull($.weight, "expected parameter 'weight' to be non-null");
            return $;
        }
    }

}

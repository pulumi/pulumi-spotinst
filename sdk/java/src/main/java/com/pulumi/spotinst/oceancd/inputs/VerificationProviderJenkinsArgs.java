// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.oceancd.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class VerificationProviderJenkinsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VerificationProviderJenkinsArgs Empty = new VerificationProviderJenkinsArgs();

    /**
     * The Jenkins server’s access apiToken.
     * 
     */
    @Import(name="apiToken", required=true)
    private Output<String> apiToken;

    /**
     * @return The Jenkins server’s access apiToken.
     * 
     */
    public Output<String> apiToken() {
        return this.apiToken;
    }

    /**
     * The address of the Jenkins server within the cluster.
     * 
     */
    @Import(name="baseUrl", required=true)
    private Output<String> baseUrl;

    /**
     * @return The address of the Jenkins server within the cluster.
     * 
     */
    public Output<String> baseUrl() {
        return this.baseUrl;
    }

    /**
     * The Jenkins server’s access username.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    /**
     * @return The Jenkins server’s access username.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    private VerificationProviderJenkinsArgs() {}

    private VerificationProviderJenkinsArgs(VerificationProviderJenkinsArgs $) {
        this.apiToken = $.apiToken;
        this.baseUrl = $.baseUrl;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VerificationProviderJenkinsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VerificationProviderJenkinsArgs $;

        public Builder() {
            $ = new VerificationProviderJenkinsArgs();
        }

        public Builder(VerificationProviderJenkinsArgs defaults) {
            $ = new VerificationProviderJenkinsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiToken The Jenkins server’s access apiToken.
         * 
         * @return builder
         * 
         */
        public Builder apiToken(Output<String> apiToken) {
            $.apiToken = apiToken;
            return this;
        }

        /**
         * @param apiToken The Jenkins server’s access apiToken.
         * 
         * @return builder
         * 
         */
        public Builder apiToken(String apiToken) {
            return apiToken(Output.of(apiToken));
        }

        /**
         * @param baseUrl The address of the Jenkins server within the cluster.
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(Output<String> baseUrl) {
            $.baseUrl = baseUrl;
            return this;
        }

        /**
         * @param baseUrl The address of the Jenkins server within the cluster.
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(String baseUrl) {
            return baseUrl(Output.of(baseUrl));
        }

        /**
         * @param username The Jenkins server’s access username.
         * 
         * @return builder
         * 
         */
        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username The Jenkins server’s access username.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public VerificationProviderJenkinsArgs build() {
            if ($.apiToken == null) {
                throw new MissingRequiredPropertyException("VerificationProviderJenkinsArgs", "apiToken");
            }
            if ($.baseUrl == null) {
                throw new MissingRequiredPropertyException("VerificationProviderJenkinsArgs", "baseUrl");
            }
            if ($.username == null) {
                throw new MissingRequiredPropertyException("VerificationProviderJenkinsArgs", "username");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.aws.inputs.ManagedInstanceBlockDeviceMappingEbsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedInstanceBlockDeviceMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedInstanceBlockDeviceMappingArgs Empty = new ManagedInstanceBlockDeviceMappingArgs();

    /**
     * The name of the device to mount.
     * 
     */
    @Import(name="deviceName", required=true)
    private Output<String> deviceName;

    /**
     * @return The name of the device to mount.
     * 
     */
    public Output<String> deviceName() {
        return this.deviceName;
    }

    /**
     * Object
     * 
     */
    @Import(name="ebs")
    private @Nullable Output<ManagedInstanceBlockDeviceMappingEbsArgs> ebs;

    /**
     * @return Object
     * 
     */
    public Optional<Output<ManagedInstanceBlockDeviceMappingEbsArgs>> ebs() {
        return Optional.ofNullable(this.ebs);
    }

    private ManagedInstanceBlockDeviceMappingArgs() {}

    private ManagedInstanceBlockDeviceMappingArgs(ManagedInstanceBlockDeviceMappingArgs $) {
        this.deviceName = $.deviceName;
        this.ebs = $.ebs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedInstanceBlockDeviceMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedInstanceBlockDeviceMappingArgs $;

        public Builder() {
            $ = new ManagedInstanceBlockDeviceMappingArgs();
        }

        public Builder(ManagedInstanceBlockDeviceMappingArgs defaults) {
            $ = new ManagedInstanceBlockDeviceMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deviceName The name of the device to mount.
         * 
         * @return builder
         * 
         */
        public Builder deviceName(Output<String> deviceName) {
            $.deviceName = deviceName;
            return this;
        }

        /**
         * @param deviceName The name of the device to mount.
         * 
         * @return builder
         * 
         */
        public Builder deviceName(String deviceName) {
            return deviceName(Output.of(deviceName));
        }

        /**
         * @param ebs Object
         * 
         * @return builder
         * 
         */
        public Builder ebs(@Nullable Output<ManagedInstanceBlockDeviceMappingEbsArgs> ebs) {
            $.ebs = ebs;
            return this;
        }

        /**
         * @param ebs Object
         * 
         * @return builder
         * 
         */
        public Builder ebs(ManagedInstanceBlockDeviceMappingEbsArgs ebs) {
            return ebs(Output.of(ebs));
        }

        public ManagedInstanceBlockDeviceMappingArgs build() {
            $.deviceName = Objects.requireNonNull($.deviceName, "expected parameter 'deviceName' to be non-null");
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StatefulNodeAzureDetachDataDisk {
    private String dataDiskName;
    private String dataDiskResourceGroupName;
    private Boolean shouldDeallocate;
    private @Nullable Integer ttlInHours;

    private StatefulNodeAzureDetachDataDisk() {}
    public String dataDiskName() {
        return this.dataDiskName;
    }
    public String dataDiskResourceGroupName() {
        return this.dataDiskResourceGroupName;
    }
    public Boolean shouldDeallocate() {
        return this.shouldDeallocate;
    }
    public Optional<Integer> ttlInHours() {
        return Optional.ofNullable(this.ttlInHours);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StatefulNodeAzureDetachDataDisk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dataDiskName;
        private String dataDiskResourceGroupName;
        private Boolean shouldDeallocate;
        private @Nullable Integer ttlInHours;
        public Builder() {}
        public Builder(StatefulNodeAzureDetachDataDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataDiskName = defaults.dataDiskName;
    	      this.dataDiskResourceGroupName = defaults.dataDiskResourceGroupName;
    	      this.shouldDeallocate = defaults.shouldDeallocate;
    	      this.ttlInHours = defaults.ttlInHours;
        }

        @CustomType.Setter
        public Builder dataDiskName(String dataDiskName) {
            this.dataDiskName = Objects.requireNonNull(dataDiskName);
            return this;
        }
        @CustomType.Setter
        public Builder dataDiskResourceGroupName(String dataDiskResourceGroupName) {
            this.dataDiskResourceGroupName = Objects.requireNonNull(dataDiskResourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder shouldDeallocate(Boolean shouldDeallocate) {
            this.shouldDeallocate = Objects.requireNonNull(shouldDeallocate);
            return this;
        }
        @CustomType.Setter
        public Builder ttlInHours(@Nullable Integer ttlInHours) {
            this.ttlInHours = ttlInHours;
            return this;
        }
        public StatefulNodeAzureDetachDataDisk build() {
            final var _resultValue = new StatefulNodeAzureDetachDataDisk();
            _resultValue.dataDiskName = dataDiskName;
            _resultValue.dataDiskResourceGroupName = dataDiskResourceGroupName;
            _resultValue.shouldDeallocate = shouldDeallocate;
            _resultValue.ttlInHours = ttlInHours;
            return _resultValue;
        }
    }
}

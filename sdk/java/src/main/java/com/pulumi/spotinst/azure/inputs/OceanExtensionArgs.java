// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.azure.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanExtensionArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanExtensionArgs Empty = new OceanExtensionArgs();

    /**
     * API version of the extension.
     * 
     */
    @Import(name="apiVersion")
    private @Nullable Output<String> apiVersion;

    /**
     * @return API version of the extension.
     * 
     */
    public Optional<Output<String>> apiVersion() {
        return Optional.ofNullable(this.apiVersion);
    }

    /**
     * Toggles whether auto upgrades are allowed.
     * 
     */
    @Import(name="minorVersionAutoUpgrade")
    private @Nullable Output<Boolean> minorVersionAutoUpgrade;

    /**
     * @return Toggles whether auto upgrades are allowed.
     * 
     */
    public Optional<Output<Boolean>> minorVersionAutoUpgrade() {
        return Optional.ofNullable(this.minorVersionAutoUpgrade);
    }

    /**
     * Extension name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Extension name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Image publisher.
     * 
     */
    @Import(name="publisher")
    private @Nullable Output<String> publisher;

    /**
     * @return Image publisher.
     * 
     */
    public Optional<Output<String>> publisher() {
        return Optional.ofNullable(this.publisher);
    }

    /**
     * Extension type.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Extension type.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private OceanExtensionArgs() {}

    private OceanExtensionArgs(OceanExtensionArgs $) {
        this.apiVersion = $.apiVersion;
        this.minorVersionAutoUpgrade = $.minorVersionAutoUpgrade;
        this.name = $.name;
        this.publisher = $.publisher;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanExtensionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanExtensionArgs $;

        public Builder() {
            $ = new OceanExtensionArgs();
        }

        public Builder(OceanExtensionArgs defaults) {
            $ = new OceanExtensionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiVersion API version of the extension.
         * 
         * @return builder
         * 
         */
        public Builder apiVersion(@Nullable Output<String> apiVersion) {
            $.apiVersion = apiVersion;
            return this;
        }

        /**
         * @param apiVersion API version of the extension.
         * 
         * @return builder
         * 
         */
        public Builder apiVersion(String apiVersion) {
            return apiVersion(Output.of(apiVersion));
        }

        /**
         * @param minorVersionAutoUpgrade Toggles whether auto upgrades are allowed.
         * 
         * @return builder
         * 
         */
        public Builder minorVersionAutoUpgrade(@Nullable Output<Boolean> minorVersionAutoUpgrade) {
            $.minorVersionAutoUpgrade = minorVersionAutoUpgrade;
            return this;
        }

        /**
         * @param minorVersionAutoUpgrade Toggles whether auto upgrades are allowed.
         * 
         * @return builder
         * 
         */
        public Builder minorVersionAutoUpgrade(Boolean minorVersionAutoUpgrade) {
            return minorVersionAutoUpgrade(Output.of(minorVersionAutoUpgrade));
        }

        /**
         * @param name Extension name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Extension name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publisher Image publisher.
         * 
         * @return builder
         * 
         */
        public Builder publisher(@Nullable Output<String> publisher) {
            $.publisher = publisher;
            return this;
        }

        /**
         * @param publisher Image publisher.
         * 
         * @return builder
         * 
         */
        public Builder publisher(String publisher) {
            return publisher(Output.of(publisher));
        }

        /**
         * @param type Extension type.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Extension type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public OceanExtensionArgs build() {
            return $;
        }
    }

}

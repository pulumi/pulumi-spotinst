// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.azure.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanVirtualNodeGroupResourceLimitArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanVirtualNodeGroupResourceLimitArgs Empty = new OceanVirtualNodeGroupResourceLimitArgs();

    /**
     * Option to set a maximum number of instances per virtual node group. If set, value must be greater than or equal to 0.
     * 
     */
    @Import(name="maxInstanceCount")
    private @Nullable Output<Integer> maxInstanceCount;

    /**
     * @return Option to set a maximum number of instances per virtual node group. If set, value must be greater than or equal to 0.
     * 
     */
    public Optional<Output<Integer>> maxInstanceCount() {
        return Optional.ofNullable(this.maxInstanceCount);
    }

    private OceanVirtualNodeGroupResourceLimitArgs() {}

    private OceanVirtualNodeGroupResourceLimitArgs(OceanVirtualNodeGroupResourceLimitArgs $) {
        this.maxInstanceCount = $.maxInstanceCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanVirtualNodeGroupResourceLimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanVirtualNodeGroupResourceLimitArgs $;

        public Builder() {
            $ = new OceanVirtualNodeGroupResourceLimitArgs();
        }

        public Builder(OceanVirtualNodeGroupResourceLimitArgs defaults) {
            $ = new OceanVirtualNodeGroupResourceLimitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxInstanceCount Option to set a maximum number of instances per virtual node group. If set, value must be greater than or equal to 0.
         * 
         * @return builder
         * 
         */
        public Builder maxInstanceCount(@Nullable Output<Integer> maxInstanceCount) {
            $.maxInstanceCount = maxInstanceCount;
            return this;
        }

        /**
         * @param maxInstanceCount Option to set a maximum number of instances per virtual node group. If set, value must be greater than or equal to 0.
         * 
         * @return builder
         * 
         */
        public Builder maxInstanceCount(Integer maxInstanceCount) {
            return maxInstanceCount(Output.of(maxInstanceCount));
        }

        public OceanVirtualNodeGroupResourceLimitArgs build() {
            return $;
        }
    }

}

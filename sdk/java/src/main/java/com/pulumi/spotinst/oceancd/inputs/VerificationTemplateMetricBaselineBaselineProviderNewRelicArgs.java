// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.oceancd.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs extends com.pulumi.resources.ResourceArgs {

    public static final VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs Empty = new VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs();

    /**
     * A raw newrelic NRQL query to perform.
     * 
     */
    @Import(name="newRelicQuery", required=true)
    private Output<String> newRelicQuery;

    /**
     * @return A raw newrelic NRQL query to perform.
     * 
     */
    public Output<String> newRelicQuery() {
        return this.newRelicQuery;
    }

    /**
     * The name of the secret holding NR account configuration.
     * 
     */
    @Import(name="profile")
    private @Nullable Output<String> profile;

    /**
     * @return The name of the secret holding NR account configuration.
     * 
     */
    public Optional<Output<String>> profile() {
        return Optional.ofNullable(this.profile);
    }

    private VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs() {}

    private VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs(VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs $) {
        this.newRelicQuery = $.newRelicQuery;
        this.profile = $.profile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs $;

        public Builder() {
            $ = new VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs();
        }

        public Builder(VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs defaults) {
            $ = new VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param newRelicQuery A raw newrelic NRQL query to perform.
         * 
         * @return builder
         * 
         */
        public Builder newRelicQuery(Output<String> newRelicQuery) {
            $.newRelicQuery = newRelicQuery;
            return this;
        }

        /**
         * @param newRelicQuery A raw newrelic NRQL query to perform.
         * 
         * @return builder
         * 
         */
        public Builder newRelicQuery(String newRelicQuery) {
            return newRelicQuery(Output.of(newRelicQuery));
        }

        /**
         * @param profile The name of the secret holding NR account configuration.
         * 
         * @return builder
         * 
         */
        public Builder profile(@Nullable Output<String> profile) {
            $.profile = profile;
            return this;
        }

        /**
         * @param profile The name of the secret holding NR account configuration.
         * 
         * @return builder
         * 
         */
        public Builder profile(String profile) {
            return profile(Output.of(profile));
        }

        public VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs build() {
            if ($.newRelicQuery == null) {
                throw new MissingRequiredPropertyException("VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs", "newRelicQuery");
            }
            return $;
        }
    }

}

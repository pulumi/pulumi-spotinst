// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.inputs.DataIntegrationS3Args;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataIntegrationState extends com.pulumi.resources.ResourceArgs {

    public static final DataIntegrationState Empty = new DataIntegrationState();

    /**
     * The name of the data integration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the data integration.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * When vendor value is s3, the following fields are included:
     * * `bucketName` - (Required) The name of the bucket to use. Your spot IAM Role policy needs to include s3:putObject permissions for this bucket. Can&#39;t be null.
     * 
     */
    @Import(name="s3")
    private @Nullable Output<DataIntegrationS3Args> s3;

    /**
     * @return When vendor value is s3, the following fields are included:
     * * `bucketName` - (Required) The name of the bucket to use. Your spot IAM Role policy needs to include s3:putObject permissions for this bucket. Can&#39;t be null.
     * 
     */
    public Optional<Output<DataIntegrationS3Args>> s3() {
        return Optional.ofNullable(this.s3);
    }

    /**
     * Determines if this data integration is on or off. Valid values: `&#34;enabled&#34;`, `&#34;disabled&#34;`
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Determines if this data integration is on or off. Valid values: `&#34;enabled&#34;`, `&#34;disabled&#34;`
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private DataIntegrationState() {}

    private DataIntegrationState(DataIntegrationState $) {
        this.name = $.name;
        this.s3 = $.s3;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataIntegrationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataIntegrationState $;

        public Builder() {
            $ = new DataIntegrationState();
        }

        public Builder(DataIntegrationState defaults) {
            $ = new DataIntegrationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the data integration.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the data integration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param s3 When vendor value is s3, the following fields are included:
         * * `bucketName` - (Required) The name of the bucket to use. Your spot IAM Role policy needs to include s3:putObject permissions for this bucket. Can&#39;t be null.
         * 
         * @return builder
         * 
         */
        public Builder s3(@Nullable Output<DataIntegrationS3Args> s3) {
            $.s3 = s3;
            return this;
        }

        /**
         * @param s3 When vendor value is s3, the following fields are included:
         * * `bucketName` - (Required) The name of the bucket to use. Your spot IAM Role policy needs to include s3:putObject permissions for this bucket. Can&#39;t be null.
         * 
         * @return builder
         * 
         */
        public Builder s3(DataIntegrationS3Args s3) {
            return s3(Output.of(s3));
        }

        /**
         * @param status Determines if this data integration is on or off. Valid values: `&#34;enabled&#34;`, `&#34;disabled&#34;`
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Determines if this data integration is on or off. Valid values: `&#34;enabled&#34;`, `&#34;disabled&#34;`
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public DataIntegrationState build() {
            return $;
        }
    }

}

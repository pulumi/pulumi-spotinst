// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.gke.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.spotinst.gke.outputs.OceanImportAutoscalerDown;
import com.pulumi.spotinst.gke.outputs.OceanImportAutoscalerHeadroom;
import com.pulumi.spotinst.gke.outputs.OceanImportAutoscalerResourceLimits;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OceanImportAutoscaler {
    private @Nullable Integer autoHeadroomPercentage;
    private @Nullable Integer cooldown;
    private @Nullable OceanImportAutoscalerDown down;
    private @Nullable Boolean enableAutomaticAndManualHeadroom;
    private @Nullable OceanImportAutoscalerHeadroom headroom;
    private @Nullable Boolean isAutoConfig;
    private @Nullable Boolean isEnabled;
    private @Nullable OceanImportAutoscalerResourceLimits resourceLimits;

    private OceanImportAutoscaler() {}
    public Optional<Integer> autoHeadroomPercentage() {
        return Optional.ofNullable(this.autoHeadroomPercentage);
    }
    public Optional<Integer> cooldown() {
        return Optional.ofNullable(this.cooldown);
    }
    public Optional<OceanImportAutoscalerDown> down() {
        return Optional.ofNullable(this.down);
    }
    public Optional<Boolean> enableAutomaticAndManualHeadroom() {
        return Optional.ofNullable(this.enableAutomaticAndManualHeadroom);
    }
    public Optional<OceanImportAutoscalerHeadroom> headroom() {
        return Optional.ofNullable(this.headroom);
    }
    public Optional<Boolean> isAutoConfig() {
        return Optional.ofNullable(this.isAutoConfig);
    }
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    public Optional<OceanImportAutoscalerResourceLimits> resourceLimits() {
        return Optional.ofNullable(this.resourceLimits);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OceanImportAutoscaler defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer autoHeadroomPercentage;
        private @Nullable Integer cooldown;
        private @Nullable OceanImportAutoscalerDown down;
        private @Nullable Boolean enableAutomaticAndManualHeadroom;
        private @Nullable OceanImportAutoscalerHeadroom headroom;
        private @Nullable Boolean isAutoConfig;
        private @Nullable Boolean isEnabled;
        private @Nullable OceanImportAutoscalerResourceLimits resourceLimits;
        public Builder() {}
        public Builder(OceanImportAutoscaler defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoHeadroomPercentage = defaults.autoHeadroomPercentage;
    	      this.cooldown = defaults.cooldown;
    	      this.down = defaults.down;
    	      this.enableAutomaticAndManualHeadroom = defaults.enableAutomaticAndManualHeadroom;
    	      this.headroom = defaults.headroom;
    	      this.isAutoConfig = defaults.isAutoConfig;
    	      this.isEnabled = defaults.isEnabled;
    	      this.resourceLimits = defaults.resourceLimits;
        }

        @CustomType.Setter
        public Builder autoHeadroomPercentage(@Nullable Integer autoHeadroomPercentage) {

            this.autoHeadroomPercentage = autoHeadroomPercentage;
            return this;
        }
        @CustomType.Setter
        public Builder cooldown(@Nullable Integer cooldown) {

            this.cooldown = cooldown;
            return this;
        }
        @CustomType.Setter
        public Builder down(@Nullable OceanImportAutoscalerDown down) {

            this.down = down;
            return this;
        }
        @CustomType.Setter
        public Builder enableAutomaticAndManualHeadroom(@Nullable Boolean enableAutomaticAndManualHeadroom) {

            this.enableAutomaticAndManualHeadroom = enableAutomaticAndManualHeadroom;
            return this;
        }
        @CustomType.Setter
        public Builder headroom(@Nullable OceanImportAutoscalerHeadroom headroom) {

            this.headroom = headroom;
            return this;
        }
        @CustomType.Setter
        public Builder isAutoConfig(@Nullable Boolean isAutoConfig) {

            this.isAutoConfig = isAutoConfig;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {

            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder resourceLimits(@Nullable OceanImportAutoscalerResourceLimits resourceLimits) {

            this.resourceLimits = resourceLimits;
            return this;
        }
        public OceanImportAutoscaler build() {
            final var _resultValue = new OceanImportAutoscaler();
            _resultValue.autoHeadroomPercentage = autoHeadroomPercentage;
            _resultValue.cooldown = cooldown;
            _resultValue.down = down;
            _resultValue.enableAutomaticAndManualHeadroom = enableAutomaticAndManualHeadroom;
            _resultValue.headroom = headroom;
            _resultValue.isAutoConfig = isAutoConfig;
            _resultValue.isEnabled = isEnabled;
            _resultValue.resourceLimits = resourceLimits;
            return _resultValue;
        }
    }
}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.organization.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class PolicyPolicyContentStatementArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyPolicyContentStatementArgs Empty = new PolicyPolicyContentStatementArgs();

    /**
     * Set a list of required actions for this permissions statement.
     * Full list of actions can be found in [https://docs.spot.io/account-user-management/user-management/access-policies-actions/](https://docs.spot.io/account-user-management/user-management/access-policies-actions/).
     * 
     */
    @Import(name="actions", required=true)
    private Output<List<String>> actions;

    /**
     * @return Set a list of required actions for this permissions statement.
     * Full list of actions can be found in [https://docs.spot.io/account-user-management/user-management/access-policies-actions/](https://docs.spot.io/account-user-management/user-management/access-policies-actions/).
     * 
     */
    public Output<List<String>> actions() {
        return this.actions;
    }

    /**
     * Valid values &#34;ALLOW&#34;, &#34;DENY&#34;.
     * 
     */
    @Import(name="effect", required=true)
    private Output<String> effect;

    /**
     * @return Valid values &#34;ALLOW&#34;, &#34;DENY&#34;.
     * 
     */
    public Output<String> effect() {
        return this.effect;
    }

    /**
     * Set a list of resources IDs. In order to include all resources in this statement - use &#34;*&#34;.
     * 
     */
    @Import(name="resources", required=true)
    private Output<List<String>> resources;

    /**
     * @return Set a list of resources IDs. In order to include all resources in this statement - use &#34;*&#34;.
     * 
     */
    public Output<List<String>> resources() {
        return this.resources;
    }

    private PolicyPolicyContentStatementArgs() {}

    private PolicyPolicyContentStatementArgs(PolicyPolicyContentStatementArgs $) {
        this.actions = $.actions;
        this.effect = $.effect;
        this.resources = $.resources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyPolicyContentStatementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyPolicyContentStatementArgs $;

        public Builder() {
            $ = new PolicyPolicyContentStatementArgs();
        }

        public Builder(PolicyPolicyContentStatementArgs defaults) {
            $ = new PolicyPolicyContentStatementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions Set a list of required actions for this permissions statement.
         * Full list of actions can be found in [https://docs.spot.io/account-user-management/user-management/access-policies-actions/](https://docs.spot.io/account-user-management/user-management/access-policies-actions/).
         * 
         * @return builder
         * 
         */
        public Builder actions(Output<List<String>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions Set a list of required actions for this permissions statement.
         * Full list of actions can be found in [https://docs.spot.io/account-user-management/user-management/access-policies-actions/](https://docs.spot.io/account-user-management/user-management/access-policies-actions/).
         * 
         * @return builder
         * 
         */
        public Builder actions(List<String> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions Set a list of required actions for this permissions statement.
         * Full list of actions can be found in [https://docs.spot.io/account-user-management/user-management/access-policies-actions/](https://docs.spot.io/account-user-management/user-management/access-policies-actions/).
         * 
         * @return builder
         * 
         */
        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param effect Valid values &#34;ALLOW&#34;, &#34;DENY&#34;.
         * 
         * @return builder
         * 
         */
        public Builder effect(Output<String> effect) {
            $.effect = effect;
            return this;
        }

        /**
         * @param effect Valid values &#34;ALLOW&#34;, &#34;DENY&#34;.
         * 
         * @return builder
         * 
         */
        public Builder effect(String effect) {
            return effect(Output.of(effect));
        }

        /**
         * @param resources Set a list of resources IDs. In order to include all resources in this statement - use &#34;*&#34;.
         * 
         * @return builder
         * 
         */
        public Builder resources(Output<List<String>> resources) {
            $.resources = resources;
            return this;
        }

        /**
         * @param resources Set a list of resources IDs. In order to include all resources in this statement - use &#34;*&#34;.
         * 
         * @return builder
         * 
         */
        public Builder resources(List<String> resources) {
            return resources(Output.of(resources));
        }

        /**
         * @param resources Set a list of resources IDs. In order to include all resources in this statement - use &#34;*&#34;.
         * 
         * @return builder
         * 
         */
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }

        public PolicyPolicyContentStatementArgs build() {
            if ($.actions == null) {
                throw new MissingRequiredPropertyException("PolicyPolicyContentStatementArgs", "actions");
            }
            if ($.effect == null) {
                throw new MissingRequiredPropertyException("PolicyPolicyContentStatementArgs", "effect");
            }
            if ($.resources == null) {
                throw new MissingRequiredPropertyException("PolicyPolicyContentStatementArgs", "resources");
            }
            return $;
        }
    }

}

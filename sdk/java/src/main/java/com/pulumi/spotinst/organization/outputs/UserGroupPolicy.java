// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.organization.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class UserGroupPolicy {
    /**
     * @return A list of accounts to register with the assigned under the
     * given group (should be existing accounts only).
     * 
     */
    private List<String> accountIds;
    /**
     * @return A policy to register under the given group
     * (should be existing policy only).
     * 
     */
    private String policyId;

    private UserGroupPolicy() {}
    /**
     * @return A list of accounts to register with the assigned under the
     * given group (should be existing accounts only).
     * 
     */
    public List<String> accountIds() {
        return this.accountIds;
    }
    /**
     * @return A policy to register under the given group
     * (should be existing policy only).
     * 
     */
    public String policyId() {
        return this.policyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserGroupPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> accountIds;
        private String policyId;
        public Builder() {}
        public Builder(UserGroupPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountIds = defaults.accountIds;
    	      this.policyId = defaults.policyId;
        }

        @CustomType.Setter
        public Builder accountIds(List<String> accountIds) {
            if (accountIds == null) {
              throw new MissingRequiredPropertyException("UserGroupPolicy", "accountIds");
            }
            this.accountIds = accountIds;
            return this;
        }
        public Builder accountIds(String... accountIds) {
            return accountIds(List.of(accountIds));
        }
        @CustomType.Setter
        public Builder policyId(String policyId) {
            if (policyId == null) {
              throw new MissingRequiredPropertyException("UserGroupPolicy", "policyId");
            }
            this.policyId = policyId;
            return this;
        }
        public UserGroupPolicy build() {
            final var _resultValue = new UserGroupPolicy();
            _resultValue.accountIds = accountIds;
            _resultValue.policyId = policyId;
            return _resultValue;
        }
    }
}

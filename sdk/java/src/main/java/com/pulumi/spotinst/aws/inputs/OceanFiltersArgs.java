// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanFiltersArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanFiltersArgs Empty = new OceanFiltersArgs();

    @Import(name="architectures")
    private @Nullable Output<List<String>> architectures;

    public Optional<Output<List<String>>> architectures() {
        return Optional.ofNullable(this.architectures);
    }

    @Import(name="categories")
    private @Nullable Output<List<String>> categories;

    public Optional<Output<List<String>>> categories() {
        return Optional.ofNullable(this.categories);
    }

    @Import(name="diskTypes")
    private @Nullable Output<List<String>> diskTypes;

    public Optional<Output<List<String>>> diskTypes() {
        return Optional.ofNullable(this.diskTypes);
    }

    @Import(name="excludeFamilies")
    private @Nullable Output<List<String>> excludeFamilies;

    public Optional<Output<List<String>>> excludeFamilies() {
        return Optional.ofNullable(this.excludeFamilies);
    }

    @Import(name="excludeMetal")
    private @Nullable Output<Boolean> excludeMetal;

    public Optional<Output<Boolean>> excludeMetal() {
        return Optional.ofNullable(this.excludeMetal);
    }

    @Import(name="hypervisors")
    private @Nullable Output<List<String>> hypervisors;

    public Optional<Output<List<String>>> hypervisors() {
        return Optional.ofNullable(this.hypervisors);
    }

    @Import(name="includeFamilies")
    private @Nullable Output<List<String>> includeFamilies;

    public Optional<Output<List<String>>> includeFamilies() {
        return Optional.ofNullable(this.includeFamilies);
    }

    @Import(name="isEnaSupported")
    private @Nullable Output<String> isEnaSupported;

    public Optional<Output<String>> isEnaSupported() {
        return Optional.ofNullable(this.isEnaSupported);
    }

    @Import(name="maxGpu")
    private @Nullable Output<Integer> maxGpu;

    public Optional<Output<Integer>> maxGpu() {
        return Optional.ofNullable(this.maxGpu);
    }

    @Import(name="maxMemoryGib")
    private @Nullable Output<Double> maxMemoryGib;

    public Optional<Output<Double>> maxMemoryGib() {
        return Optional.ofNullable(this.maxMemoryGib);
    }

    @Import(name="maxNetworkPerformance")
    private @Nullable Output<Integer> maxNetworkPerformance;

    public Optional<Output<Integer>> maxNetworkPerformance() {
        return Optional.ofNullable(this.maxNetworkPerformance);
    }

    @Import(name="maxVcpu")
    private @Nullable Output<Integer> maxVcpu;

    public Optional<Output<Integer>> maxVcpu() {
        return Optional.ofNullable(this.maxVcpu);
    }

    @Import(name="minEnis")
    private @Nullable Output<Integer> minEnis;

    public Optional<Output<Integer>> minEnis() {
        return Optional.ofNullable(this.minEnis);
    }

    @Import(name="minGpu")
    private @Nullable Output<Integer> minGpu;

    public Optional<Output<Integer>> minGpu() {
        return Optional.ofNullable(this.minGpu);
    }

    @Import(name="minMemoryGib")
    private @Nullable Output<Double> minMemoryGib;

    public Optional<Output<Double>> minMemoryGib() {
        return Optional.ofNullable(this.minMemoryGib);
    }

    @Import(name="minNetworkPerformance")
    private @Nullable Output<Integer> minNetworkPerformance;

    public Optional<Output<Integer>> minNetworkPerformance() {
        return Optional.ofNullable(this.minNetworkPerformance);
    }

    @Import(name="minVcpu")
    private @Nullable Output<Integer> minVcpu;

    public Optional<Output<Integer>> minVcpu() {
        return Optional.ofNullable(this.minVcpu);
    }

    @Import(name="rootDeviceTypes")
    private @Nullable Output<List<String>> rootDeviceTypes;

    public Optional<Output<List<String>>> rootDeviceTypes() {
        return Optional.ofNullable(this.rootDeviceTypes);
    }

    @Import(name="virtualizationTypes")
    private @Nullable Output<List<String>> virtualizationTypes;

    public Optional<Output<List<String>>> virtualizationTypes() {
        return Optional.ofNullable(this.virtualizationTypes);
    }

    private OceanFiltersArgs() {}

    private OceanFiltersArgs(OceanFiltersArgs $) {
        this.architectures = $.architectures;
        this.categories = $.categories;
        this.diskTypes = $.diskTypes;
        this.excludeFamilies = $.excludeFamilies;
        this.excludeMetal = $.excludeMetal;
        this.hypervisors = $.hypervisors;
        this.includeFamilies = $.includeFamilies;
        this.isEnaSupported = $.isEnaSupported;
        this.maxGpu = $.maxGpu;
        this.maxMemoryGib = $.maxMemoryGib;
        this.maxNetworkPerformance = $.maxNetworkPerformance;
        this.maxVcpu = $.maxVcpu;
        this.minEnis = $.minEnis;
        this.minGpu = $.minGpu;
        this.minMemoryGib = $.minMemoryGib;
        this.minNetworkPerformance = $.minNetworkPerformance;
        this.minVcpu = $.minVcpu;
        this.rootDeviceTypes = $.rootDeviceTypes;
        this.virtualizationTypes = $.virtualizationTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanFiltersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanFiltersArgs $;

        public Builder() {
            $ = new OceanFiltersArgs();
        }

        public Builder(OceanFiltersArgs defaults) {
            $ = new OceanFiltersArgs(Objects.requireNonNull(defaults));
        }

        public Builder architectures(@Nullable Output<List<String>> architectures) {
            $.architectures = architectures;
            return this;
        }

        public Builder architectures(List<String> architectures) {
            return architectures(Output.of(architectures));
        }

        public Builder architectures(String... architectures) {
            return architectures(List.of(architectures));
        }

        public Builder categories(@Nullable Output<List<String>> categories) {
            $.categories = categories;
            return this;
        }

        public Builder categories(List<String> categories) {
            return categories(Output.of(categories));
        }

        public Builder categories(String... categories) {
            return categories(List.of(categories));
        }

        public Builder diskTypes(@Nullable Output<List<String>> diskTypes) {
            $.diskTypes = diskTypes;
            return this;
        }

        public Builder diskTypes(List<String> diskTypes) {
            return diskTypes(Output.of(diskTypes));
        }

        public Builder diskTypes(String... diskTypes) {
            return diskTypes(List.of(diskTypes));
        }

        public Builder excludeFamilies(@Nullable Output<List<String>> excludeFamilies) {
            $.excludeFamilies = excludeFamilies;
            return this;
        }

        public Builder excludeFamilies(List<String> excludeFamilies) {
            return excludeFamilies(Output.of(excludeFamilies));
        }

        public Builder excludeFamilies(String... excludeFamilies) {
            return excludeFamilies(List.of(excludeFamilies));
        }

        public Builder excludeMetal(@Nullable Output<Boolean> excludeMetal) {
            $.excludeMetal = excludeMetal;
            return this;
        }

        public Builder excludeMetal(Boolean excludeMetal) {
            return excludeMetal(Output.of(excludeMetal));
        }

        public Builder hypervisors(@Nullable Output<List<String>> hypervisors) {
            $.hypervisors = hypervisors;
            return this;
        }

        public Builder hypervisors(List<String> hypervisors) {
            return hypervisors(Output.of(hypervisors));
        }

        public Builder hypervisors(String... hypervisors) {
            return hypervisors(List.of(hypervisors));
        }

        public Builder includeFamilies(@Nullable Output<List<String>> includeFamilies) {
            $.includeFamilies = includeFamilies;
            return this;
        }

        public Builder includeFamilies(List<String> includeFamilies) {
            return includeFamilies(Output.of(includeFamilies));
        }

        public Builder includeFamilies(String... includeFamilies) {
            return includeFamilies(List.of(includeFamilies));
        }

        public Builder isEnaSupported(@Nullable Output<String> isEnaSupported) {
            $.isEnaSupported = isEnaSupported;
            return this;
        }

        public Builder isEnaSupported(String isEnaSupported) {
            return isEnaSupported(Output.of(isEnaSupported));
        }

        public Builder maxGpu(@Nullable Output<Integer> maxGpu) {
            $.maxGpu = maxGpu;
            return this;
        }

        public Builder maxGpu(Integer maxGpu) {
            return maxGpu(Output.of(maxGpu));
        }

        public Builder maxMemoryGib(@Nullable Output<Double> maxMemoryGib) {
            $.maxMemoryGib = maxMemoryGib;
            return this;
        }

        public Builder maxMemoryGib(Double maxMemoryGib) {
            return maxMemoryGib(Output.of(maxMemoryGib));
        }

        public Builder maxNetworkPerformance(@Nullable Output<Integer> maxNetworkPerformance) {
            $.maxNetworkPerformance = maxNetworkPerformance;
            return this;
        }

        public Builder maxNetworkPerformance(Integer maxNetworkPerformance) {
            return maxNetworkPerformance(Output.of(maxNetworkPerformance));
        }

        public Builder maxVcpu(@Nullable Output<Integer> maxVcpu) {
            $.maxVcpu = maxVcpu;
            return this;
        }

        public Builder maxVcpu(Integer maxVcpu) {
            return maxVcpu(Output.of(maxVcpu));
        }

        public Builder minEnis(@Nullable Output<Integer> minEnis) {
            $.minEnis = minEnis;
            return this;
        }

        public Builder minEnis(Integer minEnis) {
            return minEnis(Output.of(minEnis));
        }

        public Builder minGpu(@Nullable Output<Integer> minGpu) {
            $.minGpu = minGpu;
            return this;
        }

        public Builder minGpu(Integer minGpu) {
            return minGpu(Output.of(minGpu));
        }

        public Builder minMemoryGib(@Nullable Output<Double> minMemoryGib) {
            $.minMemoryGib = minMemoryGib;
            return this;
        }

        public Builder minMemoryGib(Double minMemoryGib) {
            return minMemoryGib(Output.of(minMemoryGib));
        }

        public Builder minNetworkPerformance(@Nullable Output<Integer> minNetworkPerformance) {
            $.minNetworkPerformance = minNetworkPerformance;
            return this;
        }

        public Builder minNetworkPerformance(Integer minNetworkPerformance) {
            return minNetworkPerformance(Output.of(minNetworkPerformance));
        }

        public Builder minVcpu(@Nullable Output<Integer> minVcpu) {
            $.minVcpu = minVcpu;
            return this;
        }

        public Builder minVcpu(Integer minVcpu) {
            return minVcpu(Output.of(minVcpu));
        }

        public Builder rootDeviceTypes(@Nullable Output<List<String>> rootDeviceTypes) {
            $.rootDeviceTypes = rootDeviceTypes;
            return this;
        }

        public Builder rootDeviceTypes(List<String> rootDeviceTypes) {
            return rootDeviceTypes(Output.of(rootDeviceTypes));
        }

        public Builder rootDeviceTypes(String... rootDeviceTypes) {
            return rootDeviceTypes(List.of(rootDeviceTypes));
        }

        public Builder virtualizationTypes(@Nullable Output<List<String>> virtualizationTypes) {
            $.virtualizationTypes = virtualizationTypes;
            return this;
        }

        public Builder virtualizationTypes(List<String> virtualizationTypes) {
            return virtualizationTypes(Output.of(virtualizationTypes));
        }

        public Builder virtualizationTypes(String... virtualizationTypes) {
            return virtualizationTypes(List.of(virtualizationTypes));
        }

        public OceanFiltersArgs build() {
            return $;
        }
    }

}

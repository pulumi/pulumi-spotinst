// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.gcp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ElastigroupSubnetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ElastigroupSubnetArgs Empty = new ElastigroupSubnetArgs();

    /**
     * The region for the group of subnets.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return The region for the group of subnets.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     * The names of the subnets in the region.
     * 
     */
    @Import(name="subnetNames", required=true)
    private Output<List<String>> subnetNames;

    /**
     * @return The names of the subnets in the region.
     * 
     */
    public Output<List<String>> subnetNames() {
        return this.subnetNames;
    }

    private ElastigroupSubnetArgs() {}

    private ElastigroupSubnetArgs(ElastigroupSubnetArgs $) {
        this.region = $.region;
        this.subnetNames = $.subnetNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ElastigroupSubnetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ElastigroupSubnetArgs $;

        public Builder() {
            $ = new ElastigroupSubnetArgs();
        }

        public Builder(ElastigroupSubnetArgs defaults) {
            $ = new ElastigroupSubnetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param region The region for the group of subnets.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region for the group of subnets.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param subnetNames The names of the subnets in the region.
         * 
         * @return builder
         * 
         */
        public Builder subnetNames(Output<List<String>> subnetNames) {
            $.subnetNames = subnetNames;
            return this;
        }

        /**
         * @param subnetNames The names of the subnets in the region.
         * 
         * @return builder
         * 
         */
        public Builder subnetNames(List<String> subnetNames) {
            return subnetNames(Output.of(subnetNames));
        }

        /**
         * @param subnetNames The names of the subnets in the region.
         * 
         * @return builder
         * 
         */
        public Builder subnetNames(String... subnetNames) {
            return subnetNames(List.of(subnetNames));
        }

        public ElastigroupSubnetArgs build() {
            if ($.region == null) {
                throw new MissingRequiredPropertyException("ElastigroupSubnetArgs", "region");
            }
            if ($.subnetNames == null) {
                throw new MissingRequiredPropertyException("ElastigroupSubnetArgs", "subnetNames");
            }
            return $;
        }
    }

}

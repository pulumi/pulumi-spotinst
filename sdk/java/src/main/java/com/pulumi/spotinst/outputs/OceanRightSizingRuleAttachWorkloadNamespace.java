// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.spotinst.outputs.OceanRightSizingRuleAttachWorkloadNamespaceLabel;
import com.pulumi.spotinst.outputs.OceanRightSizingRuleAttachWorkloadNamespaceWorkload;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class OceanRightSizingRuleAttachWorkloadNamespace {
    /**
     * @return A set of key-value label pairs used to automatically apply this rule to all workloads in the cluster that match these labels.
     * 
     * &lt;a id=&#34;attachWorkloads&#34;&gt;&lt;/a&gt;
     * 
     */
    private @Nullable List<OceanRightSizingRuleAttachWorkloadNamespaceLabel> labels;
    private String namespaceName;
    private @Nullable List<OceanRightSizingRuleAttachWorkloadNamespaceWorkload> workloads;

    private OceanRightSizingRuleAttachWorkloadNamespace() {}
    /**
     * @return A set of key-value label pairs used to automatically apply this rule to all workloads in the cluster that match these labels.
     * 
     * &lt;a id=&#34;attachWorkloads&#34;&gt;&lt;/a&gt;
     * 
     */
    public List<OceanRightSizingRuleAttachWorkloadNamespaceLabel> labels() {
        return this.labels == null ? List.of() : this.labels;
    }
    public String namespaceName() {
        return this.namespaceName;
    }
    public List<OceanRightSizingRuleAttachWorkloadNamespaceWorkload> workloads() {
        return this.workloads == null ? List.of() : this.workloads;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OceanRightSizingRuleAttachWorkloadNamespace defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<OceanRightSizingRuleAttachWorkloadNamespaceLabel> labels;
        private String namespaceName;
        private @Nullable List<OceanRightSizingRuleAttachWorkloadNamespaceWorkload> workloads;
        public Builder() {}
        public Builder(OceanRightSizingRuleAttachWorkloadNamespace defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.labels = defaults.labels;
    	      this.namespaceName = defaults.namespaceName;
    	      this.workloads = defaults.workloads;
        }

        @CustomType.Setter
        public Builder labels(@Nullable List<OceanRightSizingRuleAttachWorkloadNamespaceLabel> labels) {

            this.labels = labels;
            return this;
        }
        public Builder labels(OceanRightSizingRuleAttachWorkloadNamespaceLabel... labels) {
            return labels(List.of(labels));
        }
        @CustomType.Setter
        public Builder namespaceName(String namespaceName) {
            if (namespaceName == null) {
              throw new MissingRequiredPropertyException("OceanRightSizingRuleAttachWorkloadNamespace", "namespaceName");
            }
            this.namespaceName = namespaceName;
            return this;
        }
        @CustomType.Setter
        public Builder workloads(@Nullable List<OceanRightSizingRuleAttachWorkloadNamespaceWorkload> workloads) {

            this.workloads = workloads;
            return this;
        }
        public Builder workloads(OceanRightSizingRuleAttachWorkloadNamespaceWorkload... workloads) {
            return workloads(List.of(workloads));
        }
        public OceanRightSizingRuleAttachWorkloadNamespace build() {
            final var _resultValue = new OceanRightSizingRuleAttachWorkloadNamespace();
            _resultValue.labels = labels;
            _resultValue.namespaceName = namespaceName;
            _resultValue.workloads = workloads;
            return _resultValue;
        }
    }
}

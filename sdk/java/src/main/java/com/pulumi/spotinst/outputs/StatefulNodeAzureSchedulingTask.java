// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class StatefulNodeAzureSchedulingTask {
    private String cronExpression;
    private Boolean isEnabled;
    private String type;

    private StatefulNodeAzureSchedulingTask() {}
    public String cronExpression() {
        return this.cronExpression;
    }
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StatefulNodeAzureSchedulingTask defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cronExpression;
        private Boolean isEnabled;
        private String type;
        public Builder() {}
        public Builder(StatefulNodeAzureSchedulingTask defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cronExpression = defaults.cronExpression;
    	      this.isEnabled = defaults.isEnabled;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder cronExpression(String cronExpression) {
            if (cronExpression == null) {
              throw new MissingRequiredPropertyException("StatefulNodeAzureSchedulingTask", "cronExpression");
            }
            this.cronExpression = cronExpression;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            if (isEnabled == null) {
              throw new MissingRequiredPropertyException("StatefulNodeAzureSchedulingTask", "isEnabled");
            }
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("StatefulNodeAzureSchedulingTask", "type");
            }
            this.type = type;
            return this;
        }
        public StatefulNodeAzureSchedulingTask build() {
            final var _resultValue = new StatefulNodeAzureSchedulingTask();
            _resultValue.cronExpression = cronExpression;
            _resultValue.isEnabled = isEnabled;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}

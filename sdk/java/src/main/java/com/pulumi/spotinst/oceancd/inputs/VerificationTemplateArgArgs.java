// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.oceancd.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.spotinst.oceancd.inputs.VerificationTemplateArgValueFromArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VerificationTemplateArgArgs extends com.pulumi.resources.ResourceArgs {

    public static final VerificationTemplateArgArgs Empty = new VerificationTemplateArgArgs();

    /**
     * Name of an argument.
     * 
     */
    @Import(name="argName", required=true)
    private Output<String> argName;

    /**
     * @return Name of an argument.
     * 
     */
    public Output<String> argName() {
        return this.argName;
    }

    /**
     * String representation of data.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return String representation of data.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    /**
     * ValueFrom object.
     * 
     */
    @Import(name="valueFrom")
    private @Nullable Output<VerificationTemplateArgValueFromArgs> valueFrom;

    /**
     * @return ValueFrom object.
     * 
     */
    public Optional<Output<VerificationTemplateArgValueFromArgs>> valueFrom() {
        return Optional.ofNullable(this.valueFrom);
    }

    private VerificationTemplateArgArgs() {}

    private VerificationTemplateArgArgs(VerificationTemplateArgArgs $) {
        this.argName = $.argName;
        this.value = $.value;
        this.valueFrom = $.valueFrom;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VerificationTemplateArgArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VerificationTemplateArgArgs $;

        public Builder() {
            $ = new VerificationTemplateArgArgs();
        }

        public Builder(VerificationTemplateArgArgs defaults) {
            $ = new VerificationTemplateArgArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param argName Name of an argument.
         * 
         * @return builder
         * 
         */
        public Builder argName(Output<String> argName) {
            $.argName = argName;
            return this;
        }

        /**
         * @param argName Name of an argument.
         * 
         * @return builder
         * 
         */
        public Builder argName(String argName) {
            return argName(Output.of(argName));
        }

        /**
         * @param value String representation of data.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value String representation of data.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        /**
         * @param valueFrom ValueFrom object.
         * 
         * @return builder
         * 
         */
        public Builder valueFrom(@Nullable Output<VerificationTemplateArgValueFromArgs> valueFrom) {
            $.valueFrom = valueFrom;
            return this;
        }

        /**
         * @param valueFrom ValueFrom object.
         * 
         * @return builder
         * 
         */
        public Builder valueFrom(VerificationTemplateArgValueFromArgs valueFrom) {
            return valueFrom(Output.of(valueFrom));
        }

        public VerificationTemplateArgArgs build() {
            if ($.argName == null) {
                throw new MissingRequiredPropertyException("VerificationTemplateArgArgs", "argName");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.aws.inputs.ElastigroupIntegrationDockerSwarmAutoscaleDownArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupIntegrationDockerSwarmAutoscaleHeadroomArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ElastigroupIntegrationDockerSwarmArgs extends com.pulumi.resources.ResourceArgs {

    public static final ElastigroupIntegrationDockerSwarmArgs Empty = new ElastigroupIntegrationDockerSwarmArgs();

    /**
     * The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start. Minimum 180, must be a multiple of 60.
     * 
     */
    @Import(name="autoscaleCooldown")
    private @Nullable Output<Integer> autoscaleCooldown;

    /**
     * @return The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start. Minimum 180, must be a multiple of 60.
     * 
     */
    public Optional<Output<Integer>> autoscaleCooldown() {
        return Optional.ofNullable(this.autoscaleCooldown);
    }

    /**
     * Settings for scale down actions.
     * 
     */
    @Import(name="autoscaleDown")
    private @Nullable Output<ElastigroupIntegrationDockerSwarmAutoscaleDownArgs> autoscaleDown;

    /**
     * @return Settings for scale down actions.
     * 
     */
    public Optional<Output<ElastigroupIntegrationDockerSwarmAutoscaleDownArgs>> autoscaleDown() {
        return Optional.ofNullable(this.autoscaleDown);
    }

    /**
     * An option to set compute reserve for the cluster.
     * 
     */
    @Import(name="autoscaleHeadroom")
    private @Nullable Output<ElastigroupIntegrationDockerSwarmAutoscaleHeadroomArgs> autoscaleHeadroom;

    /**
     * @return An option to set compute reserve for the cluster.
     * 
     */
    public Optional<Output<ElastigroupIntegrationDockerSwarmAutoscaleHeadroomArgs>> autoscaleHeadroom() {
        return Optional.ofNullable(this.autoscaleHeadroom);
    }

    /**
     * Specifies whether the auto scaling feature is enabled.
     * 
     */
    @Import(name="autoscaleIsEnabled")
    private @Nullable Output<Boolean> autoscaleIsEnabled;

    /**
     * @return Specifies whether the auto scaling feature is enabled.
     * 
     */
    public Optional<Output<Boolean>> autoscaleIsEnabled() {
        return Optional.ofNullable(this.autoscaleIsEnabled);
    }

    /**
     * IP or FQDN of one of your swarm managers.
     * 
     */
    @Import(name="masterHost", required=true)
    private Output<String> masterHost;

    /**
     * @return IP or FQDN of one of your swarm managers.
     * 
     */
    public Output<String> masterHost() {
        return this.masterHost;
    }

    /**
     * Network port used by your swarm.
     * 
     */
    @Import(name="masterPort", required=true)
    private Output<Integer> masterPort;

    /**
     * @return Network port used by your swarm.
     * 
     */
    public Output<Integer> masterPort() {
        return this.masterPort;
    }

    private ElastigroupIntegrationDockerSwarmArgs() {}

    private ElastigroupIntegrationDockerSwarmArgs(ElastigroupIntegrationDockerSwarmArgs $) {
        this.autoscaleCooldown = $.autoscaleCooldown;
        this.autoscaleDown = $.autoscaleDown;
        this.autoscaleHeadroom = $.autoscaleHeadroom;
        this.autoscaleIsEnabled = $.autoscaleIsEnabled;
        this.masterHost = $.masterHost;
        this.masterPort = $.masterPort;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ElastigroupIntegrationDockerSwarmArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ElastigroupIntegrationDockerSwarmArgs $;

        public Builder() {
            $ = new ElastigroupIntegrationDockerSwarmArgs();
        }

        public Builder(ElastigroupIntegrationDockerSwarmArgs defaults) {
            $ = new ElastigroupIntegrationDockerSwarmArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoscaleCooldown The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start. Minimum 180, must be a multiple of 60.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleCooldown(@Nullable Output<Integer> autoscaleCooldown) {
            $.autoscaleCooldown = autoscaleCooldown;
            return this;
        }

        /**
         * @param autoscaleCooldown The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start. Minimum 180, must be a multiple of 60.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleCooldown(Integer autoscaleCooldown) {
            return autoscaleCooldown(Output.of(autoscaleCooldown));
        }

        /**
         * @param autoscaleDown Settings for scale down actions.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleDown(@Nullable Output<ElastigroupIntegrationDockerSwarmAutoscaleDownArgs> autoscaleDown) {
            $.autoscaleDown = autoscaleDown;
            return this;
        }

        /**
         * @param autoscaleDown Settings for scale down actions.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleDown(ElastigroupIntegrationDockerSwarmAutoscaleDownArgs autoscaleDown) {
            return autoscaleDown(Output.of(autoscaleDown));
        }

        /**
         * @param autoscaleHeadroom An option to set compute reserve for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleHeadroom(@Nullable Output<ElastigroupIntegrationDockerSwarmAutoscaleHeadroomArgs> autoscaleHeadroom) {
            $.autoscaleHeadroom = autoscaleHeadroom;
            return this;
        }

        /**
         * @param autoscaleHeadroom An option to set compute reserve for the cluster.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleHeadroom(ElastigroupIntegrationDockerSwarmAutoscaleHeadroomArgs autoscaleHeadroom) {
            return autoscaleHeadroom(Output.of(autoscaleHeadroom));
        }

        /**
         * @param autoscaleIsEnabled Specifies whether the auto scaling feature is enabled.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleIsEnabled(@Nullable Output<Boolean> autoscaleIsEnabled) {
            $.autoscaleIsEnabled = autoscaleIsEnabled;
            return this;
        }

        /**
         * @param autoscaleIsEnabled Specifies whether the auto scaling feature is enabled.
         * 
         * @return builder
         * 
         */
        public Builder autoscaleIsEnabled(Boolean autoscaleIsEnabled) {
            return autoscaleIsEnabled(Output.of(autoscaleIsEnabled));
        }

        /**
         * @param masterHost IP or FQDN of one of your swarm managers.
         * 
         * @return builder
         * 
         */
        public Builder masterHost(Output<String> masterHost) {
            $.masterHost = masterHost;
            return this;
        }

        /**
         * @param masterHost IP or FQDN of one of your swarm managers.
         * 
         * @return builder
         * 
         */
        public Builder masterHost(String masterHost) {
            return masterHost(Output.of(masterHost));
        }

        /**
         * @param masterPort Network port used by your swarm.
         * 
         * @return builder
         * 
         */
        public Builder masterPort(Output<Integer> masterPort) {
            $.masterPort = masterPort;
            return this;
        }

        /**
         * @param masterPort Network port used by your swarm.
         * 
         * @return builder
         * 
         */
        public Builder masterPort(Integer masterPort) {
            return masterPort(Output.of(masterPort));
        }

        public ElastigroupIntegrationDockerSwarmArgs build() {
            $.masterHost = Objects.requireNonNull($.masterHost, "expected parameter 'masterHost' to be non-null");
            $.masterPort = Objects.requireNonNull($.masterPort, "expected parameter 'masterPort' to be non-null");
            return $;
        }
    }

}

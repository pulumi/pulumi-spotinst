// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanLaunchSpecStrategyOrientationArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanLaunchSpecStrategyOrientationArgs Empty = new OceanLaunchSpecStrategyOrientationArgs();

    /**
     * Set this value to control the approach that Ocean takes while launching nodes. Valid values: `&#34;costOriented&#34;`, `&#34;cheapest&#34;`, `&#34;balanced&#34;`.
     * 
     */
    @Import(name="availabilityVsCost")
    private @Nullable Output<String> availabilityVsCost;

    /**
     * @return Set this value to control the approach that Ocean takes while launching nodes. Valid values: `&#34;costOriented&#34;`, `&#34;cheapest&#34;`, `&#34;balanced&#34;`.
     * 
     */
    public Optional<Output<String>> availabilityVsCost() {
        return Optional.ofNullable(this.availabilityVsCost);
    }

    private OceanLaunchSpecStrategyOrientationArgs() {}

    private OceanLaunchSpecStrategyOrientationArgs(OceanLaunchSpecStrategyOrientationArgs $) {
        this.availabilityVsCost = $.availabilityVsCost;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanLaunchSpecStrategyOrientationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanLaunchSpecStrategyOrientationArgs $;

        public Builder() {
            $ = new OceanLaunchSpecStrategyOrientationArgs();
        }

        public Builder(OceanLaunchSpecStrategyOrientationArgs defaults) {
            $ = new OceanLaunchSpecStrategyOrientationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityVsCost Set this value to control the approach that Ocean takes while launching nodes. Valid values: `&#34;costOriented&#34;`, `&#34;cheapest&#34;`, `&#34;balanced&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder availabilityVsCost(@Nullable Output<String> availabilityVsCost) {
            $.availabilityVsCost = availabilityVsCost;
            return this;
        }

        /**
         * @param availabilityVsCost Set this value to control the approach that Ocean takes while launching nodes. Valid values: `&#34;costOriented&#34;`, `&#34;cheapest&#34;`, `&#34;balanced&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder availabilityVsCost(String availabilityVsCost) {
            return availabilityVsCost(Output.of(availabilityVsCost));
        }

        public OceanLaunchSpecStrategyOrientationArgs build() {
            return $;
        }
    }

}

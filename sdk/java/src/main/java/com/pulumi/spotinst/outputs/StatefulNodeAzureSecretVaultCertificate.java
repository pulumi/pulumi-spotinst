// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StatefulNodeAzureSecretVaultCertificate {
    private @Nullable String certificateStore;
    private @Nullable String certificateUrl;

    private StatefulNodeAzureSecretVaultCertificate() {}
    public Optional<String> certificateStore() {
        return Optional.ofNullable(this.certificateStore);
    }
    public Optional<String> certificateUrl() {
        return Optional.ofNullable(this.certificateUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StatefulNodeAzureSecretVaultCertificate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String certificateStore;
        private @Nullable String certificateUrl;
        public Builder() {}
        public Builder(StatefulNodeAzureSecretVaultCertificate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateStore = defaults.certificateStore;
    	      this.certificateUrl = defaults.certificateUrl;
        }

        @CustomType.Setter
        public Builder certificateStore(@Nullable String certificateStore) {
            this.certificateStore = certificateStore;
            return this;
        }
        @CustomType.Setter
        public Builder certificateUrl(@Nullable String certificateUrl) {
            this.certificateUrl = certificateUrl;
            return this;
        }
        public StatefulNodeAzureSecretVaultCertificate build() {
            final var _resultValue = new StatefulNodeAzureSecretVaultCertificate();
            _resultValue.certificateStore = certificateStore;
            _resultValue.certificateUrl = certificateUrl;
            return _resultValue;
        }
    }
}

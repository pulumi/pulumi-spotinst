// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubscriptionState extends com.pulumi.resources.ResourceArgs {

    public static final SubscriptionState Empty = new SubscriptionState();

    /**
     * The endpoint the notification will be sent to. url in case of `&#34;http&#34;`/`&#34;https&#34;`/`&#34;web&#34;`, email address in case of `&#34;email&#34;`/`&#34;email-json&#34;` and sns-topic-arn in case of `&#34;aws-sns&#34;`.
     * 
     */
    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    /**
     * @return The endpoint the notification will be sent to. url in case of `&#34;http&#34;`/`&#34;https&#34;`/`&#34;web&#34;`, email address in case of `&#34;email&#34;`/`&#34;email-json&#34;` and sns-topic-arn in case of `&#34;aws-sns&#34;`.
     * 
     */
    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    /**
     * The event to send the notification when triggered. Valid values: `&#34;AWS_EC2_INSTANCE_TERMINATE&#34;`, `&#34;AWS_EC2_INSTANCE_TERMINATED&#34;`, `&#34;AWS_EC2_INSTANCE_LAUNCH&#34;`, `&#34;AWS_EC2_INSTANCE_READY_SIGNAL_TIMEOUT&#34;`, `&#34;SIGNAL_TIMEOUT_SHUTDOWN_SCRIPT&#34;`, `&#34;AWS_EC2_CANT_SPIN_OD&#34;`, `&#34;AWS_EC2_INSTANCE_UNHEALTHY_IN_ELB&#34;`, `&#34;GROUP_ROLL_FAILED&#34;`, `&#34;GROUP_ROLL_FINISHED&#34;`,
     * `&#34;CANT_SCALE_UP_GROUP_MAX_CAPACITY&#34;`,
     * `&#34;GROUP_UPDATED&#34;`,
     * `&#34;AWS_EMR_PROVISION_TIMEOUT&#34;`,
     * `&#34;GROUP_BEANSTALK_INIT_READY&#34;`,
     * `&#34;AZURE_VM_TERMINATED&#34;`,
     * `&#34;AZURE_VM_TERMINATE&#34;`,
     * `&#34;AWS_EC2_MANAGED_INSTANCE_PAUSING&#34;`,
     * `&#34;AWS_EC2_MANAGED_INSTANCE_RESUMING&#34;`,
     * `&#34;AWS_EC2_MANAGED_INSTANCE_RECYCLING&#34;`,`&#34;AWS_EC2_MANAGED_INSTANCE_DELETING&#34;`.
     * Ocean Events:`&#34;CLUSTER_ROLL_FINISHED&#34;`,`&#34;GROUP_ROLL_FAILED&#34;`,`&#34;OCEAN_CANT_SCALE_UP_MAX_RESOURCES&#34;`
     * `&#34;OCEAN_LAUNCH_SPEC_CANT_SCALE_UP_MAX_INSTANCES&#34;`,`&#34;OCEAN_K8S_NODE_REMOVED&#34;`.
     * 
     */
    @Import(name="eventType")
    private @Nullable Output<String> eventType;

    /**
     * @return The event to send the notification when triggered. Valid values: `&#34;AWS_EC2_INSTANCE_TERMINATE&#34;`, `&#34;AWS_EC2_INSTANCE_TERMINATED&#34;`, `&#34;AWS_EC2_INSTANCE_LAUNCH&#34;`, `&#34;AWS_EC2_INSTANCE_READY_SIGNAL_TIMEOUT&#34;`, `&#34;SIGNAL_TIMEOUT_SHUTDOWN_SCRIPT&#34;`, `&#34;AWS_EC2_CANT_SPIN_OD&#34;`, `&#34;AWS_EC2_INSTANCE_UNHEALTHY_IN_ELB&#34;`, `&#34;GROUP_ROLL_FAILED&#34;`, `&#34;GROUP_ROLL_FINISHED&#34;`,
     * `&#34;CANT_SCALE_UP_GROUP_MAX_CAPACITY&#34;`,
     * `&#34;GROUP_UPDATED&#34;`,
     * `&#34;AWS_EMR_PROVISION_TIMEOUT&#34;`,
     * `&#34;GROUP_BEANSTALK_INIT_READY&#34;`,
     * `&#34;AZURE_VM_TERMINATED&#34;`,
     * `&#34;AZURE_VM_TERMINATE&#34;`,
     * `&#34;AWS_EC2_MANAGED_INSTANCE_PAUSING&#34;`,
     * `&#34;AWS_EC2_MANAGED_INSTANCE_RESUMING&#34;`,
     * `&#34;AWS_EC2_MANAGED_INSTANCE_RECYCLING&#34;`,`&#34;AWS_EC2_MANAGED_INSTANCE_DELETING&#34;`.
     * Ocean Events:`&#34;CLUSTER_ROLL_FINISHED&#34;`,`&#34;GROUP_ROLL_FAILED&#34;`,`&#34;OCEAN_CANT_SCALE_UP_MAX_RESOURCES&#34;`
     * `&#34;OCEAN_LAUNCH_SPEC_CANT_SCALE_UP_MAX_INSTANCES&#34;`,`&#34;OCEAN_K8S_NODE_REMOVED&#34;`.
     * 
     */
    public Optional<Output<String>> eventType() {
        return Optional.ofNullable(this.eventType);
    }

    /**
     * The format of the notification content (JSON Format - Key+Value). Valid Values : `&#34;instance-id&#34;`, `&#34;event&#34;`, `&#34;resource-id&#34;`, `&#34;resource-name&#34;`, `&#34;subnet-id&#34;`, `&#34;availability-zone&#34;`, `&#34;reason&#34;`, `&#34;private-ip&#34;`, `&#34;launchspec-id&#34;`
     * Example: {&#34;event&#34;: `&#34;event&#34;`, `&#34;resourceId&#34;`: `&#34;resource-id&#34;`, `&#34;resourceName&#34;`: `&#34;resource-name&#34;`&#34;, `&#34;myCustomKey&#34;`: `&#34;My content is set here&#34;` }
     * Default: {`&#34;event&#34;`: `&#34;&lt;event&gt;&#34;`, `&#34;instanceId&#34;`: `&#34;&lt;instance-id&gt;&#34;`, `&#34;resourceId&#34;`: `&#34;&lt;resource-id&gt;&#34;`, `&#34;resourceName&#34;`: `&#34;&lt;resource-name&gt;&#34;` }.
     * 
     */
    @Import(name="format")
    private @Nullable Output<Map<String,Object>> format;

    /**
     * @return The format of the notification content (JSON Format - Key+Value). Valid Values : `&#34;instance-id&#34;`, `&#34;event&#34;`, `&#34;resource-id&#34;`, `&#34;resource-name&#34;`, `&#34;subnet-id&#34;`, `&#34;availability-zone&#34;`, `&#34;reason&#34;`, `&#34;private-ip&#34;`, `&#34;launchspec-id&#34;`
     * Example: {&#34;event&#34;: `&#34;event&#34;`, `&#34;resourceId&#34;`: `&#34;resource-id&#34;`, `&#34;resourceName&#34;`: `&#34;resource-name&#34;`&#34;, `&#34;myCustomKey&#34;`: `&#34;My content is set here&#34;` }
     * Default: {`&#34;event&#34;`: `&#34;&lt;event&gt;&#34;`, `&#34;instanceId&#34;`: `&#34;&lt;instance-id&gt;&#34;`, `&#34;resourceId&#34;`: `&#34;&lt;resource-id&gt;&#34;`, `&#34;resourceName&#34;`: `&#34;&lt;resource-name&gt;&#34;` }.
     * 
     */
    public Optional<Output<Map<String,Object>>> format() {
        return Optional.ofNullable(this.format);
    }

    /**
     * The protocol to send the notification. Valid values: `&#34;email&#34;`, `&#34;email-json&#34;`, `&#34;aws-sns&#34;`, `&#34;web&#34;`.
     * The following values are deprecated: `&#34;http&#34;` , `&#34;https&#34;`
     * You can use the generic `&#34;web&#34;` protocol instead.
     * `&#34;aws-sns&#34;` is only supported with AWS provider
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return The protocol to send the notification. Valid values: `&#34;email&#34;`, `&#34;email-json&#34;`, `&#34;aws-sns&#34;`, `&#34;web&#34;`.
     * The following values are deprecated: `&#34;http&#34;` , `&#34;https&#34;`
     * You can use the generic `&#34;web&#34;` protocol instead.
     * `&#34;aws-sns&#34;` is only supported with AWS provider
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * Spotinst Resource id (Elastigroup or Ocean ID).
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return Spotinst Resource id (Elastigroup or Ocean ID).
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    private SubscriptionState() {}

    private SubscriptionState(SubscriptionState $) {
        this.endpoint = $.endpoint;
        this.eventType = $.eventType;
        this.format = $.format;
        this.protocol = $.protocol;
        this.resourceId = $.resourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubscriptionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubscriptionState $;

        public Builder() {
            $ = new SubscriptionState();
        }

        public Builder(SubscriptionState defaults) {
            $ = new SubscriptionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpoint The endpoint the notification will be sent to. url in case of `&#34;http&#34;`/`&#34;https&#34;`/`&#34;web&#34;`, email address in case of `&#34;email&#34;`/`&#34;email-json&#34;` and sns-topic-arn in case of `&#34;aws-sns&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint The endpoint the notification will be sent to. url in case of `&#34;http&#34;`/`&#34;https&#34;`/`&#34;web&#34;`, email address in case of `&#34;email&#34;`/`&#34;email-json&#34;` and sns-topic-arn in case of `&#34;aws-sns&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        /**
         * @param eventType The event to send the notification when triggered. Valid values: `&#34;AWS_EC2_INSTANCE_TERMINATE&#34;`, `&#34;AWS_EC2_INSTANCE_TERMINATED&#34;`, `&#34;AWS_EC2_INSTANCE_LAUNCH&#34;`, `&#34;AWS_EC2_INSTANCE_READY_SIGNAL_TIMEOUT&#34;`, `&#34;SIGNAL_TIMEOUT_SHUTDOWN_SCRIPT&#34;`, `&#34;AWS_EC2_CANT_SPIN_OD&#34;`, `&#34;AWS_EC2_INSTANCE_UNHEALTHY_IN_ELB&#34;`, `&#34;GROUP_ROLL_FAILED&#34;`, `&#34;GROUP_ROLL_FINISHED&#34;`,
         * `&#34;CANT_SCALE_UP_GROUP_MAX_CAPACITY&#34;`,
         * `&#34;GROUP_UPDATED&#34;`,
         * `&#34;AWS_EMR_PROVISION_TIMEOUT&#34;`,
         * `&#34;GROUP_BEANSTALK_INIT_READY&#34;`,
         * `&#34;AZURE_VM_TERMINATED&#34;`,
         * `&#34;AZURE_VM_TERMINATE&#34;`,
         * `&#34;AWS_EC2_MANAGED_INSTANCE_PAUSING&#34;`,
         * `&#34;AWS_EC2_MANAGED_INSTANCE_RESUMING&#34;`,
         * `&#34;AWS_EC2_MANAGED_INSTANCE_RECYCLING&#34;`,`&#34;AWS_EC2_MANAGED_INSTANCE_DELETING&#34;`.
         * Ocean Events:`&#34;CLUSTER_ROLL_FINISHED&#34;`,`&#34;GROUP_ROLL_FAILED&#34;`,`&#34;OCEAN_CANT_SCALE_UP_MAX_RESOURCES&#34;`
         * `&#34;OCEAN_LAUNCH_SPEC_CANT_SCALE_UP_MAX_INSTANCES&#34;`,`&#34;OCEAN_K8S_NODE_REMOVED&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder eventType(@Nullable Output<String> eventType) {
            $.eventType = eventType;
            return this;
        }

        /**
         * @param eventType The event to send the notification when triggered. Valid values: `&#34;AWS_EC2_INSTANCE_TERMINATE&#34;`, `&#34;AWS_EC2_INSTANCE_TERMINATED&#34;`, `&#34;AWS_EC2_INSTANCE_LAUNCH&#34;`, `&#34;AWS_EC2_INSTANCE_READY_SIGNAL_TIMEOUT&#34;`, `&#34;SIGNAL_TIMEOUT_SHUTDOWN_SCRIPT&#34;`, `&#34;AWS_EC2_CANT_SPIN_OD&#34;`, `&#34;AWS_EC2_INSTANCE_UNHEALTHY_IN_ELB&#34;`, `&#34;GROUP_ROLL_FAILED&#34;`, `&#34;GROUP_ROLL_FINISHED&#34;`,
         * `&#34;CANT_SCALE_UP_GROUP_MAX_CAPACITY&#34;`,
         * `&#34;GROUP_UPDATED&#34;`,
         * `&#34;AWS_EMR_PROVISION_TIMEOUT&#34;`,
         * `&#34;GROUP_BEANSTALK_INIT_READY&#34;`,
         * `&#34;AZURE_VM_TERMINATED&#34;`,
         * `&#34;AZURE_VM_TERMINATE&#34;`,
         * `&#34;AWS_EC2_MANAGED_INSTANCE_PAUSING&#34;`,
         * `&#34;AWS_EC2_MANAGED_INSTANCE_RESUMING&#34;`,
         * `&#34;AWS_EC2_MANAGED_INSTANCE_RECYCLING&#34;`,`&#34;AWS_EC2_MANAGED_INSTANCE_DELETING&#34;`.
         * Ocean Events:`&#34;CLUSTER_ROLL_FINISHED&#34;`,`&#34;GROUP_ROLL_FAILED&#34;`,`&#34;OCEAN_CANT_SCALE_UP_MAX_RESOURCES&#34;`
         * `&#34;OCEAN_LAUNCH_SPEC_CANT_SCALE_UP_MAX_INSTANCES&#34;`,`&#34;OCEAN_K8S_NODE_REMOVED&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder eventType(String eventType) {
            return eventType(Output.of(eventType));
        }

        /**
         * @param format The format of the notification content (JSON Format - Key+Value). Valid Values : `&#34;instance-id&#34;`, `&#34;event&#34;`, `&#34;resource-id&#34;`, `&#34;resource-name&#34;`, `&#34;subnet-id&#34;`, `&#34;availability-zone&#34;`, `&#34;reason&#34;`, `&#34;private-ip&#34;`, `&#34;launchspec-id&#34;`
         * Example: {&#34;event&#34;: `&#34;event&#34;`, `&#34;resourceId&#34;`: `&#34;resource-id&#34;`, `&#34;resourceName&#34;`: `&#34;resource-name&#34;`&#34;, `&#34;myCustomKey&#34;`: `&#34;My content is set here&#34;` }
         * Default: {`&#34;event&#34;`: `&#34;&lt;event&gt;&#34;`, `&#34;instanceId&#34;`: `&#34;&lt;instance-id&gt;&#34;`, `&#34;resourceId&#34;`: `&#34;&lt;resource-id&gt;&#34;`, `&#34;resourceName&#34;`: `&#34;&lt;resource-name&gt;&#34;` }.
         * 
         * @return builder
         * 
         */
        public Builder format(@Nullable Output<Map<String,Object>> format) {
            $.format = format;
            return this;
        }

        /**
         * @param format The format of the notification content (JSON Format - Key+Value). Valid Values : `&#34;instance-id&#34;`, `&#34;event&#34;`, `&#34;resource-id&#34;`, `&#34;resource-name&#34;`, `&#34;subnet-id&#34;`, `&#34;availability-zone&#34;`, `&#34;reason&#34;`, `&#34;private-ip&#34;`, `&#34;launchspec-id&#34;`
         * Example: {&#34;event&#34;: `&#34;event&#34;`, `&#34;resourceId&#34;`: `&#34;resource-id&#34;`, `&#34;resourceName&#34;`: `&#34;resource-name&#34;`&#34;, `&#34;myCustomKey&#34;`: `&#34;My content is set here&#34;` }
         * Default: {`&#34;event&#34;`: `&#34;&lt;event&gt;&#34;`, `&#34;instanceId&#34;`: `&#34;&lt;instance-id&gt;&#34;`, `&#34;resourceId&#34;`: `&#34;&lt;resource-id&gt;&#34;`, `&#34;resourceName&#34;`: `&#34;&lt;resource-name&gt;&#34;` }.
         * 
         * @return builder
         * 
         */
        public Builder format(Map<String,Object> format) {
            return format(Output.of(format));
        }

        /**
         * @param protocol The protocol to send the notification. Valid values: `&#34;email&#34;`, `&#34;email-json&#34;`, `&#34;aws-sns&#34;`, `&#34;web&#34;`.
         * The following values are deprecated: `&#34;http&#34;` , `&#34;https&#34;`
         * You can use the generic `&#34;web&#34;` protocol instead.
         * `&#34;aws-sns&#34;` is only supported with AWS provider
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol The protocol to send the notification. Valid values: `&#34;email&#34;`, `&#34;email-json&#34;`, `&#34;aws-sns&#34;`, `&#34;web&#34;`.
         * The following values are deprecated: `&#34;http&#34;` , `&#34;https&#34;`
         * You can use the generic `&#34;web&#34;` protocol instead.
         * `&#34;aws-sns&#34;` is only supported with AWS provider
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param resourceId Spotinst Resource id (Elastigroup or Ocean ID).
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId Spotinst Resource id (Elastigroup or Ocean ID).
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        public SubscriptionState build() {
            return $;
        }
    }

}

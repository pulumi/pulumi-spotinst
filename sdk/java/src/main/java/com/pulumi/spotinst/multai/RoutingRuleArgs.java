// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.multai;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.multai.inputs.RoutingRuleTagArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RoutingRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoutingRuleArgs Empty = new RoutingRuleArgs();

    @Import(name="balancerId", required=true)
    private Output<String> balancerId;

    public Output<String> balancerId() {
        return this.balancerId;
    }

    @Import(name="listenerId", required=true)
    private Output<String> listenerId;

    public Output<String> listenerId() {
        return this.listenerId;
    }

    @Import(name="middlewareIds")
    private @Nullable Output<List<String>> middlewareIds;

    public Optional<Output<List<String>>> middlewareIds() {
        return Optional.ofNullable(this.middlewareIds);
    }

    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    @Import(name="route", required=true)
    private Output<String> route;

    public Output<String> route() {
        return this.route;
    }

    @Import(name="strategy")
    private @Nullable Output<String> strategy;

    public Optional<Output<String>> strategy() {
        return Optional.ofNullable(this.strategy);
    }

    @Import(name="tags")
    private @Nullable Output<List<RoutingRuleTagArgs>> tags;

    public Optional<Output<List<RoutingRuleTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="targetSetIds", required=true)
    private Output<List<String>> targetSetIds;

    public Output<List<String>> targetSetIds() {
        return this.targetSetIds;
    }

    private RoutingRuleArgs() {}

    private RoutingRuleArgs(RoutingRuleArgs $) {
        this.balancerId = $.balancerId;
        this.listenerId = $.listenerId;
        this.middlewareIds = $.middlewareIds;
        this.priority = $.priority;
        this.route = $.route;
        this.strategy = $.strategy;
        this.tags = $.tags;
        this.targetSetIds = $.targetSetIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoutingRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoutingRuleArgs $;

        public Builder() {
            $ = new RoutingRuleArgs();
        }

        public Builder(RoutingRuleArgs defaults) {
            $ = new RoutingRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder balancerId(Output<String> balancerId) {
            $.balancerId = balancerId;
            return this;
        }

        public Builder balancerId(String balancerId) {
            return balancerId(Output.of(balancerId));
        }

        public Builder listenerId(Output<String> listenerId) {
            $.listenerId = listenerId;
            return this;
        }

        public Builder listenerId(String listenerId) {
            return listenerId(Output.of(listenerId));
        }

        public Builder middlewareIds(@Nullable Output<List<String>> middlewareIds) {
            $.middlewareIds = middlewareIds;
            return this;
        }

        public Builder middlewareIds(List<String> middlewareIds) {
            return middlewareIds(Output.of(middlewareIds));
        }

        public Builder middlewareIds(String... middlewareIds) {
            return middlewareIds(List.of(middlewareIds));
        }

        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        public Builder route(Output<String> route) {
            $.route = route;
            return this;
        }

        public Builder route(String route) {
            return route(Output.of(route));
        }

        public Builder strategy(@Nullable Output<String> strategy) {
            $.strategy = strategy;
            return this;
        }

        public Builder strategy(String strategy) {
            return strategy(Output.of(strategy));
        }

        public Builder tags(@Nullable Output<List<RoutingRuleTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<RoutingRuleTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(RoutingRuleTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder targetSetIds(Output<List<String>> targetSetIds) {
            $.targetSetIds = targetSetIds;
            return this;
        }

        public Builder targetSetIds(List<String> targetSetIds) {
            return targetSetIds(Output.of(targetSetIds));
        }

        public Builder targetSetIds(String... targetSetIds) {
            return targetSetIds(List.of(targetSetIds));
        }

        public RoutingRuleArgs build() {
            $.balancerId = Objects.requireNonNull($.balancerId, "expected parameter 'balancerId' to be non-null");
            $.listenerId = Objects.requireNonNull($.listenerId, "expected parameter 'listenerId' to be non-null");
            $.route = Objects.requireNonNull($.route, "expected parameter 'route' to be non-null");
            $.targetSetIds = Objects.requireNonNull($.targetSetIds, "expected parameter 'targetSetIds' to be non-null");
            return $;
        }
    }

}

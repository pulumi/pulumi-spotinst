// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.oceancd.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecContainer {
    private List<String> commands;
    private String containerName;
    private String image;

    private VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecContainer() {}
    public List<String> commands() {
        return this.commands;
    }
    public String containerName() {
        return this.containerName;
    }
    public String image() {
        return this.image;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecContainer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> commands;
        private String containerName;
        private String image;
        public Builder() {}
        public Builder(VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecContainer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commands = defaults.commands;
    	      this.containerName = defaults.containerName;
    	      this.image = defaults.image;
        }

        @CustomType.Setter
        public Builder commands(List<String> commands) {
            if (commands == null) {
              throw new MissingRequiredPropertyException("VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecContainer", "commands");
            }
            this.commands = commands;
            return this;
        }
        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }
        @CustomType.Setter
        public Builder containerName(String containerName) {
            if (containerName == null) {
              throw new MissingRequiredPropertyException("VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecContainer", "containerName");
            }
            this.containerName = containerName;
            return this;
        }
        @CustomType.Setter
        public Builder image(String image) {
            if (image == null) {
              throw new MissingRequiredPropertyException("VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecContainer", "image");
            }
            this.image = image;
            return this;
        }
        public VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecContainer build() {
            final var _resultValue = new VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecContainer();
            _resultValue.commands = commands;
            _resultValue.containerName = containerName;
            _resultValue.image = image;
            return _resultValue;
        }
    }
}

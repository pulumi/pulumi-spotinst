// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.spotinst.OceanRightSizingRuleArgs;
import com.pulumi.spotinst.Utilities;
import com.pulumi.spotinst.inputs.OceanRightSizingRuleState;
import com.pulumi.spotinst.outputs.OceanRightSizingRuleAttachWorkload;
import com.pulumi.spotinst.outputs.OceanRightSizingRuleDetachWorkload;
import com.pulumi.spotinst.outputs.OceanRightSizingRuleRecommendationApplicationBoundary;
import com.pulumi.spotinst.outputs.OceanRightSizingRuleRecommendationApplicationInterval;
import com.pulumi.spotinst.outputs.OceanRightSizingRuleRecommendationApplicationMinThreshold;
import com.pulumi.spotinst.outputs.OceanRightSizingRuleRecommendationApplicationOverheadValue;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="spotinst:index/oceanRightSizingRule:OceanRightSizingRule")
public class OceanRightSizingRule extends com.pulumi.resources.CustomResource {
    @Export(name="attachWorkloads", refs={List.class,OceanRightSizingRuleAttachWorkload.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanRightSizingRuleAttachWorkload>> attachWorkloads;

    public Output<Optional<List<OceanRightSizingRuleAttachWorkload>>> attachWorkloads() {
        return Codegen.optional(this.attachWorkloads);
    }
    @Export(name="detachWorkloads", refs={List.class,OceanRightSizingRuleDetachWorkload.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanRightSizingRuleDetachWorkload>> detachWorkloads;

    public Output<Optional<List<OceanRightSizingRuleDetachWorkload>>> detachWorkloads() {
        return Codegen.optional(this.detachWorkloads);
    }
    @Export(name="oceanId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> oceanId;

    public Output<Optional<String>> oceanId() {
        return Codegen.optional(this.oceanId);
    }
    @Export(name="recommendationApplicationBoundaries", refs={List.class,OceanRightSizingRuleRecommendationApplicationBoundary.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanRightSizingRuleRecommendationApplicationBoundary>> recommendationApplicationBoundaries;

    public Output<Optional<List<OceanRightSizingRuleRecommendationApplicationBoundary>>> recommendationApplicationBoundaries() {
        return Codegen.optional(this.recommendationApplicationBoundaries);
    }
    @Export(name="recommendationApplicationIntervals", refs={List.class,OceanRightSizingRuleRecommendationApplicationInterval.class}, tree="[0,1]")
    private Output<List<OceanRightSizingRuleRecommendationApplicationInterval>> recommendationApplicationIntervals;

    public Output<List<OceanRightSizingRuleRecommendationApplicationInterval>> recommendationApplicationIntervals() {
        return this.recommendationApplicationIntervals;
    }
    @Export(name="recommendationApplicationMinThresholds", refs={List.class,OceanRightSizingRuleRecommendationApplicationMinThreshold.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanRightSizingRuleRecommendationApplicationMinThreshold>> recommendationApplicationMinThresholds;

    public Output<Optional<List<OceanRightSizingRuleRecommendationApplicationMinThreshold>>> recommendationApplicationMinThresholds() {
        return Codegen.optional(this.recommendationApplicationMinThresholds);
    }
    @Export(name="recommendationApplicationOverheadValues", refs={List.class,OceanRightSizingRuleRecommendationApplicationOverheadValue.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanRightSizingRuleRecommendationApplicationOverheadValue>> recommendationApplicationOverheadValues;

    public Output<Optional<List<OceanRightSizingRuleRecommendationApplicationOverheadValue>>> recommendationApplicationOverheadValues() {
        return Codegen.optional(this.recommendationApplicationOverheadValues);
    }
    @Export(name="restartPods", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> restartPods;

    public Output<Optional<Boolean>> restartPods() {
        return Codegen.optional(this.restartPods);
    }
    @Export(name="ruleName", refs={String.class}, tree="[0]")
    private Output<String> ruleName;

    public Output<String> ruleName() {
        return this.ruleName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OceanRightSizingRule(String name) {
        this(name, OceanRightSizingRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OceanRightSizingRule(String name, OceanRightSizingRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OceanRightSizingRule(String name, OceanRightSizingRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("spotinst:index/oceanRightSizingRule:OceanRightSizingRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private OceanRightSizingRule(String name, Output<String> id, @Nullable OceanRightSizingRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("spotinst:index/oceanRightSizingRule:OceanRightSizingRule", name, state, makeResourceOptions(options, id));
    }

    private static OceanRightSizingRuleArgs makeArgs(OceanRightSizingRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? OceanRightSizingRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OceanRightSizingRule get(String name, Output<String> id, @Nullable OceanRightSizingRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OceanRightSizingRule(name, id, state, options);
    }
}

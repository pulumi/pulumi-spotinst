// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.spotinst.aws.outputs.ElastigroupUpdatePolicyRollConfig;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ElastigroupUpdatePolicy {
    /**
     * @return Enables updates to tags without rolling the group when set to `true`.
     * 
     */
    private @Nullable Boolean autoApplyTags;
    /**
     * @return While used, you can control whether the group should perform a deployment after an update to the configuration.
     * 
     */
    private @Nullable ElastigroupUpdatePolicyRollConfig rollConfig;
    /**
     * @return This will apply resuming action for Stateful instances in the Elastigroup upon scale up or capacity changes. Example usage will be for Elastigroups that will have scheduling rules to set a target capacity of 0 instances in the night and automatically restore the same state of the instances in the morning.
     * 
     */
    private Boolean shouldResumeStateful;
    /**
     * @return Sets the enablement of the roll option.
     * 
     */
    private Boolean shouldRoll;

    private ElastigroupUpdatePolicy() {}
    /**
     * @return Enables updates to tags without rolling the group when set to `true`.
     * 
     */
    public Optional<Boolean> autoApplyTags() {
        return Optional.ofNullable(this.autoApplyTags);
    }
    /**
     * @return While used, you can control whether the group should perform a deployment after an update to the configuration.
     * 
     */
    public Optional<ElastigroupUpdatePolicyRollConfig> rollConfig() {
        return Optional.ofNullable(this.rollConfig);
    }
    /**
     * @return This will apply resuming action for Stateful instances in the Elastigroup upon scale up or capacity changes. Example usage will be for Elastigroups that will have scheduling rules to set a target capacity of 0 instances in the night and automatically restore the same state of the instances in the morning.
     * 
     */
    public Boolean shouldResumeStateful() {
        return this.shouldResumeStateful;
    }
    /**
     * @return Sets the enablement of the roll option.
     * 
     */
    public Boolean shouldRoll() {
        return this.shouldRoll;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ElastigroupUpdatePolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean autoApplyTags;
        private @Nullable ElastigroupUpdatePolicyRollConfig rollConfig;
        private Boolean shouldResumeStateful;
        private Boolean shouldRoll;
        public Builder() {}
        public Builder(ElastigroupUpdatePolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoApplyTags = defaults.autoApplyTags;
    	      this.rollConfig = defaults.rollConfig;
    	      this.shouldResumeStateful = defaults.shouldResumeStateful;
    	      this.shouldRoll = defaults.shouldRoll;
        }

        @CustomType.Setter
        public Builder autoApplyTags(@Nullable Boolean autoApplyTags) {

            this.autoApplyTags = autoApplyTags;
            return this;
        }
        @CustomType.Setter
        public Builder rollConfig(@Nullable ElastigroupUpdatePolicyRollConfig rollConfig) {

            this.rollConfig = rollConfig;
            return this;
        }
        @CustomType.Setter
        public Builder shouldResumeStateful(Boolean shouldResumeStateful) {
            if (shouldResumeStateful == null) {
              throw new MissingRequiredPropertyException("ElastigroupUpdatePolicy", "shouldResumeStateful");
            }
            this.shouldResumeStateful = shouldResumeStateful;
            return this;
        }
        @CustomType.Setter
        public Builder shouldRoll(Boolean shouldRoll) {
            if (shouldRoll == null) {
              throw new MissingRequiredPropertyException("ElastigroupUpdatePolicy", "shouldRoll");
            }
            this.shouldRoll = shouldRoll;
            return this;
        }
        public ElastigroupUpdatePolicy build() {
            final var _resultValue = new ElastigroupUpdatePolicy();
            _resultValue.autoApplyTags = autoApplyTags;
            _resultValue.rollConfig = rollConfig;
            _resultValue.shouldResumeStateful = shouldResumeStateful;
            _resultValue.shouldRoll = shouldRoll;
            return _resultValue;
        }
    }
}

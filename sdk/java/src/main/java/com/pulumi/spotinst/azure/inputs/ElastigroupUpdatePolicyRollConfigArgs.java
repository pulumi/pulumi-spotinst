// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.azure.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ElastigroupUpdatePolicyRollConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ElastigroupUpdatePolicyRollConfigArgs Empty = new ElastigroupUpdatePolicyRollConfigArgs();

    @Import(name="batchSizePercentage", required=true)
    private Output<Integer> batchSizePercentage;

    public Output<Integer> batchSizePercentage() {
        return this.batchSizePercentage;
    }

    @Import(name="gracePeriod")
    private @Nullable Output<Integer> gracePeriod;

    public Optional<Output<Integer>> gracePeriod() {
        return Optional.ofNullable(this.gracePeriod);
    }

    @Import(name="healthCheckType")
    private @Nullable Output<String> healthCheckType;

    public Optional<Output<String>> healthCheckType() {
        return Optional.ofNullable(this.healthCheckType);
    }

    private ElastigroupUpdatePolicyRollConfigArgs() {}

    private ElastigroupUpdatePolicyRollConfigArgs(ElastigroupUpdatePolicyRollConfigArgs $) {
        this.batchSizePercentage = $.batchSizePercentage;
        this.gracePeriod = $.gracePeriod;
        this.healthCheckType = $.healthCheckType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ElastigroupUpdatePolicyRollConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ElastigroupUpdatePolicyRollConfigArgs $;

        public Builder() {
            $ = new ElastigroupUpdatePolicyRollConfigArgs();
        }

        public Builder(ElastigroupUpdatePolicyRollConfigArgs defaults) {
            $ = new ElastigroupUpdatePolicyRollConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder batchSizePercentage(Output<Integer> batchSizePercentage) {
            $.batchSizePercentage = batchSizePercentage;
            return this;
        }

        public Builder batchSizePercentage(Integer batchSizePercentage) {
            return batchSizePercentage(Output.of(batchSizePercentage));
        }

        public Builder gracePeriod(@Nullable Output<Integer> gracePeriod) {
            $.gracePeriod = gracePeriod;
            return this;
        }

        public Builder gracePeriod(Integer gracePeriod) {
            return gracePeriod(Output.of(gracePeriod));
        }

        public Builder healthCheckType(@Nullable Output<String> healthCheckType) {
            $.healthCheckType = healthCheckType;
            return this;
        }

        public Builder healthCheckType(String healthCheckType) {
            return healthCheckType(Output.of(healthCheckType));
        }

        public ElastigroupUpdatePolicyRollConfigArgs build() {
            if ($.batchSizePercentage == null) {
                throw new MissingRequiredPropertyException("ElastigroupUpdatePolicyRollConfigArgs", "batchSizePercentage");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.gke.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanLaunchSpecStorageArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanLaunchSpecStorageArgs Empty = new OceanLaunchSpecStorageArgs();

    /**
     * Defines the number of local SSDs to be attached per node for this VNG.
     * 
     */
    @Import(name="localSsdCount")
    private @Nullable Output<Integer> localSsdCount;

    /**
     * @return Defines the number of local SSDs to be attached per node for this VNG.
     * 
     */
    public Optional<Output<Integer>> localSsdCount() {
        return Optional.ofNullable(this.localSsdCount);
    }

    private OceanLaunchSpecStorageArgs() {}

    private OceanLaunchSpecStorageArgs(OceanLaunchSpecStorageArgs $) {
        this.localSsdCount = $.localSsdCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanLaunchSpecStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanLaunchSpecStorageArgs $;

        public Builder() {
            $ = new OceanLaunchSpecStorageArgs();
        }

        public Builder(OceanLaunchSpecStorageArgs defaults) {
            $ = new OceanLaunchSpecStorageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param localSsdCount Defines the number of local SSDs to be attached per node for this VNG.
         * 
         * @return builder
         * 
         */
        public Builder localSsdCount(@Nullable Output<Integer> localSsdCount) {
            $.localSsdCount = localSsdCount;
            return this;
        }

        /**
         * @param localSsdCount Defines the number of local SSDs to be attached per node for this VNG.
         * 
         * @return builder
         * 
         */
        public Builder localSsdCount(Integer localSsdCount) {
            return localSsdCount(Output.of(localSsdCount));
        }

        public OceanLaunchSpecStorageArgs build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.organization.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ProgrammaticUserPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProgrammaticUserPolicyArgs Empty = new ProgrammaticUserPolicyArgs();

    /**
     * A list of the accounts that the policy should be
     * enforced for the user.
     * 
     */
    @Import(name="policyAccountIds", required=true)
    private Output<List<String>> policyAccountIds;

    /**
     * @return A list of the accounts that the policy should be
     * enforced for the user.
     * 
     */
    public Output<List<String>> policyAccountIds() {
        return this.policyAccountIds;
    }

    /**
     * Policy ID the programmatic user will have access to.
     * 
     */
    @Import(name="policyId", required=true)
    private Output<String> policyId;

    /**
     * @return Policy ID the programmatic user will have access to.
     * 
     */
    public Output<String> policyId() {
        return this.policyId;
    }

    private ProgrammaticUserPolicyArgs() {}

    private ProgrammaticUserPolicyArgs(ProgrammaticUserPolicyArgs $) {
        this.policyAccountIds = $.policyAccountIds;
        this.policyId = $.policyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProgrammaticUserPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProgrammaticUserPolicyArgs $;

        public Builder() {
            $ = new ProgrammaticUserPolicyArgs();
        }

        public Builder(ProgrammaticUserPolicyArgs defaults) {
            $ = new ProgrammaticUserPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policyAccountIds A list of the accounts that the policy should be
         * enforced for the user.
         * 
         * @return builder
         * 
         */
        public Builder policyAccountIds(Output<List<String>> policyAccountIds) {
            $.policyAccountIds = policyAccountIds;
            return this;
        }

        /**
         * @param policyAccountIds A list of the accounts that the policy should be
         * enforced for the user.
         * 
         * @return builder
         * 
         */
        public Builder policyAccountIds(List<String> policyAccountIds) {
            return policyAccountIds(Output.of(policyAccountIds));
        }

        /**
         * @param policyAccountIds A list of the accounts that the policy should be
         * enforced for the user.
         * 
         * @return builder
         * 
         */
        public Builder policyAccountIds(String... policyAccountIds) {
            return policyAccountIds(List.of(policyAccountIds));
        }

        /**
         * @param policyId Policy ID the programmatic user will have access to.
         * 
         * @return builder
         * 
         */
        public Builder policyId(Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId Policy ID the programmatic user will have access to.
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        public ProgrammaticUserPolicyArgs build() {
            $.policyAccountIds = Objects.requireNonNull($.policyAccountIds, "expected parameter 'policyAccountIds' to be non-null");
            $.policyId = Objects.requireNonNull($.policyId, "expected parameter 'policyId' to be non-null");
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.spotinst.aws.inputs.OceanUpdatePolicyRollConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanUpdatePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanUpdatePolicyArgs Empty = new OceanUpdatePolicyArgs();

    @Import(name="autoApplyTags")
    private @Nullable Output<Boolean> autoApplyTags;

    public Optional<Output<Boolean>> autoApplyTags() {
        return Optional.ofNullable(this.autoApplyTags);
    }

    @Import(name="conditionedRoll")
    private @Nullable Output<Boolean> conditionedRoll;

    public Optional<Output<Boolean>> conditionedRoll() {
        return Optional.ofNullable(this.conditionedRoll);
    }

    @Import(name="conditionedRollParams")
    private @Nullable Output<List<String>> conditionedRollParams;

    public Optional<Output<List<String>>> conditionedRollParams() {
        return Optional.ofNullable(this.conditionedRollParams);
    }

    @Import(name="rollConfig")
    private @Nullable Output<OceanUpdatePolicyRollConfigArgs> rollConfig;

    public Optional<Output<OceanUpdatePolicyRollConfigArgs>> rollConfig() {
        return Optional.ofNullable(this.rollConfig);
    }

    @Import(name="shouldRoll", required=true)
    private Output<Boolean> shouldRoll;

    public Output<Boolean> shouldRoll() {
        return this.shouldRoll;
    }

    private OceanUpdatePolicyArgs() {}

    private OceanUpdatePolicyArgs(OceanUpdatePolicyArgs $) {
        this.autoApplyTags = $.autoApplyTags;
        this.conditionedRoll = $.conditionedRoll;
        this.conditionedRollParams = $.conditionedRollParams;
        this.rollConfig = $.rollConfig;
        this.shouldRoll = $.shouldRoll;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanUpdatePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanUpdatePolicyArgs $;

        public Builder() {
            $ = new OceanUpdatePolicyArgs();
        }

        public Builder(OceanUpdatePolicyArgs defaults) {
            $ = new OceanUpdatePolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoApplyTags(@Nullable Output<Boolean> autoApplyTags) {
            $.autoApplyTags = autoApplyTags;
            return this;
        }

        public Builder autoApplyTags(Boolean autoApplyTags) {
            return autoApplyTags(Output.of(autoApplyTags));
        }

        public Builder conditionedRoll(@Nullable Output<Boolean> conditionedRoll) {
            $.conditionedRoll = conditionedRoll;
            return this;
        }

        public Builder conditionedRoll(Boolean conditionedRoll) {
            return conditionedRoll(Output.of(conditionedRoll));
        }

        public Builder conditionedRollParams(@Nullable Output<List<String>> conditionedRollParams) {
            $.conditionedRollParams = conditionedRollParams;
            return this;
        }

        public Builder conditionedRollParams(List<String> conditionedRollParams) {
            return conditionedRollParams(Output.of(conditionedRollParams));
        }

        public Builder conditionedRollParams(String... conditionedRollParams) {
            return conditionedRollParams(List.of(conditionedRollParams));
        }

        public Builder rollConfig(@Nullable Output<OceanUpdatePolicyRollConfigArgs> rollConfig) {
            $.rollConfig = rollConfig;
            return this;
        }

        public Builder rollConfig(OceanUpdatePolicyRollConfigArgs rollConfig) {
            return rollConfig(Output.of(rollConfig));
        }

        public Builder shouldRoll(Output<Boolean> shouldRoll) {
            $.shouldRoll = shouldRoll;
            return this;
        }

        public Builder shouldRoll(Boolean shouldRoll) {
            return shouldRoll(Output.of(shouldRoll));
        }

        public OceanUpdatePolicyArgs build() {
            if ($.shouldRoll == null) {
                throw new MissingRequiredPropertyException("OceanUpdatePolicyArgs", "shouldRoll");
            }
            return $;
        }
    }

}

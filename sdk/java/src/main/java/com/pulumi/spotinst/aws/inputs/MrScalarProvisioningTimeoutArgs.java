// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class MrScalarProvisioningTimeoutArgs extends com.pulumi.resources.ResourceArgs {

    public static final MrScalarProvisioningTimeoutArgs Empty = new MrScalarProvisioningTimeoutArgs();

    @Import(name="timeout", required=true)
    private Output<Integer> timeout;

    public Output<Integer> timeout() {
        return this.timeout;
    }

    @Import(name="timeoutAction", required=true)
    private Output<String> timeoutAction;

    public Output<String> timeoutAction() {
        return this.timeoutAction;
    }

    private MrScalarProvisioningTimeoutArgs() {}

    private MrScalarProvisioningTimeoutArgs(MrScalarProvisioningTimeoutArgs $) {
        this.timeout = $.timeout;
        this.timeoutAction = $.timeoutAction;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MrScalarProvisioningTimeoutArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MrScalarProvisioningTimeoutArgs $;

        public Builder() {
            $ = new MrScalarProvisioningTimeoutArgs();
        }

        public Builder(MrScalarProvisioningTimeoutArgs defaults) {
            $ = new MrScalarProvisioningTimeoutArgs(Objects.requireNonNull(defaults));
        }

        public Builder timeout(Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        public Builder timeoutAction(Output<String> timeoutAction) {
            $.timeoutAction = timeoutAction;
            return this;
        }

        public Builder timeoutAction(String timeoutAction) {
            return timeoutAction(Output.of(timeoutAction));
        }

        public MrScalarProvisioningTimeoutArgs build() {
            if ($.timeout == null) {
                throw new MissingRequiredPropertyException("MrScalarProvisioningTimeoutArgs", "timeout");
            }
            if ($.timeoutAction == null) {
                throw new MissingRequiredPropertyException("MrScalarProvisioningTimeoutArgs", "timeoutAction");
            }
            return $;
        }
    }

}

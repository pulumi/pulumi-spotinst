// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.spotinst.inputs.OceanRightSizingRuleDetachWorkloadNamespaceLabelArgs;
import com.pulumi.spotinst.inputs.OceanRightSizingRuleDetachWorkloadNamespaceWorkloadArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanRightSizingRuleDetachWorkloadNamespaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanRightSizingRuleDetachWorkloadNamespaceArgs Empty = new OceanRightSizingRuleDetachWorkloadNamespaceArgs();

    @Import(name="labels")
    private @Nullable Output<List<OceanRightSizingRuleDetachWorkloadNamespaceLabelArgs>> labels;

    public Optional<Output<List<OceanRightSizingRuleDetachWorkloadNamespaceLabelArgs>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    @Import(name="namespaceName", required=true)
    private Output<String> namespaceName;

    public Output<String> namespaceName() {
        return this.namespaceName;
    }

    @Import(name="workloads")
    private @Nullable Output<List<OceanRightSizingRuleDetachWorkloadNamespaceWorkloadArgs>> workloads;

    public Optional<Output<List<OceanRightSizingRuleDetachWorkloadNamespaceWorkloadArgs>>> workloads() {
        return Optional.ofNullable(this.workloads);
    }

    private OceanRightSizingRuleDetachWorkloadNamespaceArgs() {}

    private OceanRightSizingRuleDetachWorkloadNamespaceArgs(OceanRightSizingRuleDetachWorkloadNamespaceArgs $) {
        this.labels = $.labels;
        this.namespaceName = $.namespaceName;
        this.workloads = $.workloads;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanRightSizingRuleDetachWorkloadNamespaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanRightSizingRuleDetachWorkloadNamespaceArgs $;

        public Builder() {
            $ = new OceanRightSizingRuleDetachWorkloadNamespaceArgs();
        }

        public Builder(OceanRightSizingRuleDetachWorkloadNamespaceArgs defaults) {
            $ = new OceanRightSizingRuleDetachWorkloadNamespaceArgs(Objects.requireNonNull(defaults));
        }

        public Builder labels(@Nullable Output<List<OceanRightSizingRuleDetachWorkloadNamespaceLabelArgs>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(List<OceanRightSizingRuleDetachWorkloadNamespaceLabelArgs> labels) {
            return labels(Output.of(labels));
        }

        public Builder labels(OceanRightSizingRuleDetachWorkloadNamespaceLabelArgs... labels) {
            return labels(List.of(labels));
        }

        public Builder namespaceName(Output<String> namespaceName) {
            $.namespaceName = namespaceName;
            return this;
        }

        public Builder namespaceName(String namespaceName) {
            return namespaceName(Output.of(namespaceName));
        }

        public Builder workloads(@Nullable Output<List<OceanRightSizingRuleDetachWorkloadNamespaceWorkloadArgs>> workloads) {
            $.workloads = workloads;
            return this;
        }

        public Builder workloads(List<OceanRightSizingRuleDetachWorkloadNamespaceWorkloadArgs> workloads) {
            return workloads(Output.of(workloads));
        }

        public Builder workloads(OceanRightSizingRuleDetachWorkloadNamespaceWorkloadArgs... workloads) {
            return workloads(List.of(workloads));
        }

        public OceanRightSizingRuleDetachWorkloadNamespaceArgs build() {
            if ($.namespaceName == null) {
                throw new MissingRequiredPropertyException("OceanRightSizingRuleDetachWorkloadNamespaceArgs", "namespaceName");
            }
            return $;
        }
    }

}

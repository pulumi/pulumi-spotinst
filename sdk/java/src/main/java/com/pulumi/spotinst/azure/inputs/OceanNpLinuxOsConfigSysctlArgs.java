// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.azure.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanNpLinuxOsConfigSysctlArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanNpLinuxOsConfigSysctlArgs Empty = new OceanNpLinuxOsConfigSysctlArgs();

    /**
     * Maximum number of memory map areas a process may have. Can be configured only if OS type is Linux.
     * 
     */
    @Import(name="vmMaxMapCount")
    private @Nullable Output<Integer> vmMaxMapCount;

    /**
     * @return Maximum number of memory map areas a process may have. Can be configured only if OS type is Linux.
     * 
     */
    public Optional<Output<Integer>> vmMaxMapCount() {
        return Optional.ofNullable(this.vmMaxMapCount);
    }

    private OceanNpLinuxOsConfigSysctlArgs() {}

    private OceanNpLinuxOsConfigSysctlArgs(OceanNpLinuxOsConfigSysctlArgs $) {
        this.vmMaxMapCount = $.vmMaxMapCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanNpLinuxOsConfigSysctlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanNpLinuxOsConfigSysctlArgs $;

        public Builder() {
            $ = new OceanNpLinuxOsConfigSysctlArgs();
        }

        public Builder(OceanNpLinuxOsConfigSysctlArgs defaults) {
            $ = new OceanNpLinuxOsConfigSysctlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param vmMaxMapCount Maximum number of memory map areas a process may have. Can be configured only if OS type is Linux.
         * 
         * @return builder
         * 
         */
        public Builder vmMaxMapCount(@Nullable Output<Integer> vmMaxMapCount) {
            $.vmMaxMapCount = vmMaxMapCount;
            return this;
        }

        /**
         * @param vmMaxMapCount Maximum number of memory map areas a process may have. Can be configured only if OS type is Linux.
         * 
         * @return builder
         * 
         */
        public Builder vmMaxMapCount(Integer vmMaxMapCount) {
            return vmMaxMapCount(Output.of(vmMaxMapCount));
        }

        public OceanNpLinuxOsConfigSysctlArgs build() {
            return $;
        }
    }

}

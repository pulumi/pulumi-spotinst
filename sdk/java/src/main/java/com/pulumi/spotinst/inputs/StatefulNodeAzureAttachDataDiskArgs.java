// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StatefulNodeAzureAttachDataDiskArgs extends com.pulumi.resources.ResourceArgs {

    public static final StatefulNodeAzureAttachDataDiskArgs Empty = new StatefulNodeAzureAttachDataDiskArgs();

    @Import(name="dataDiskName", required=true)
    private Output<String> dataDiskName;

    public Output<String> dataDiskName() {
        return this.dataDiskName;
    }

    @Import(name="dataDiskResourceGroupName", required=true)
    private Output<String> dataDiskResourceGroupName;

    public Output<String> dataDiskResourceGroupName() {
        return this.dataDiskResourceGroupName;
    }

    @Import(name="lun")
    private @Nullable Output<Integer> lun;

    public Optional<Output<Integer>> lun() {
        return Optional.ofNullable(this.lun);
    }

    @Import(name="sizeGb", required=true)
    private Output<Integer> sizeGb;

    public Output<Integer> sizeGb() {
        return this.sizeGb;
    }

    @Import(name="storageAccountType", required=true)
    private Output<String> storageAccountType;

    public Output<String> storageAccountType() {
        return this.storageAccountType;
    }

    @Import(name="zone")
    private @Nullable Output<String> zone;

    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private StatefulNodeAzureAttachDataDiskArgs() {}

    private StatefulNodeAzureAttachDataDiskArgs(StatefulNodeAzureAttachDataDiskArgs $) {
        this.dataDiskName = $.dataDiskName;
        this.dataDiskResourceGroupName = $.dataDiskResourceGroupName;
        this.lun = $.lun;
        this.sizeGb = $.sizeGb;
        this.storageAccountType = $.storageAccountType;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StatefulNodeAzureAttachDataDiskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StatefulNodeAzureAttachDataDiskArgs $;

        public Builder() {
            $ = new StatefulNodeAzureAttachDataDiskArgs();
        }

        public Builder(StatefulNodeAzureAttachDataDiskArgs defaults) {
            $ = new StatefulNodeAzureAttachDataDiskArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataDiskName(Output<String> dataDiskName) {
            $.dataDiskName = dataDiskName;
            return this;
        }

        public Builder dataDiskName(String dataDiskName) {
            return dataDiskName(Output.of(dataDiskName));
        }

        public Builder dataDiskResourceGroupName(Output<String> dataDiskResourceGroupName) {
            $.dataDiskResourceGroupName = dataDiskResourceGroupName;
            return this;
        }

        public Builder dataDiskResourceGroupName(String dataDiskResourceGroupName) {
            return dataDiskResourceGroupName(Output.of(dataDiskResourceGroupName));
        }

        public Builder lun(@Nullable Output<Integer> lun) {
            $.lun = lun;
            return this;
        }

        public Builder lun(Integer lun) {
            return lun(Output.of(lun));
        }

        public Builder sizeGb(Output<Integer> sizeGb) {
            $.sizeGb = sizeGb;
            return this;
        }

        public Builder sizeGb(Integer sizeGb) {
            return sizeGb(Output.of(sizeGb));
        }

        public Builder storageAccountType(Output<String> storageAccountType) {
            $.storageAccountType = storageAccountType;
            return this;
        }

        public Builder storageAccountType(String storageAccountType) {
            return storageAccountType(Output.of(storageAccountType));
        }

        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public StatefulNodeAzureAttachDataDiskArgs build() {
            if ($.dataDiskName == null) {
                throw new MissingRequiredPropertyException("StatefulNodeAzureAttachDataDiskArgs", "dataDiskName");
            }
            if ($.dataDiskResourceGroupName == null) {
                throw new MissingRequiredPropertyException("StatefulNodeAzureAttachDataDiskArgs", "dataDiskResourceGroupName");
            }
            if ($.sizeGb == null) {
                throw new MissingRequiredPropertyException("StatefulNodeAzureAttachDataDiskArgs", "sizeGb");
            }
            if ($.storageAccountType == null) {
                throw new MissingRequiredPropertyException("StatefulNodeAzureAttachDataDiskArgs", "storageAccountType");
            }
            return $;
        }
    }

}

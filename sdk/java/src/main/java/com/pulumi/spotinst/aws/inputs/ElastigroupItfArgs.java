// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.aws.inputs.ElastigroupItfDefaultStaticTargetGroupArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupItfLoadBalancerArgs;
import com.pulumi.spotinst.aws.inputs.ElastigroupItfTargetGroupConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ElastigroupItfArgs extends com.pulumi.resources.ResourceArgs {

    public static final ElastigroupItfArgs Empty = new ElastigroupItfArgs();

    @Import(name="defaultStaticTargetGroup")
    private @Nullable Output<ElastigroupItfDefaultStaticTargetGroupArgs> defaultStaticTargetGroup;

    public Optional<Output<ElastigroupItfDefaultStaticTargetGroupArgs>> defaultStaticTargetGroup() {
        return Optional.ofNullable(this.defaultStaticTargetGroup);
    }

    @Import(name="fixedTargetGroups", required=true)
    private Output<Boolean> fixedTargetGroups;

    public Output<Boolean> fixedTargetGroups() {
        return this.fixedTargetGroups;
    }

    @Import(name="loadBalancers", required=true)
    private Output<List<ElastigroupItfLoadBalancerArgs>> loadBalancers;

    public Output<List<ElastigroupItfLoadBalancerArgs>> loadBalancers() {
        return this.loadBalancers;
    }

    @Import(name="migrationHealthinessThreshold")
    private @Nullable Output<Integer> migrationHealthinessThreshold;

    public Optional<Output<Integer>> migrationHealthinessThreshold() {
        return Optional.ofNullable(this.migrationHealthinessThreshold);
    }

    @Import(name="targetGroupConfigs", required=true)
    private Output<List<ElastigroupItfTargetGroupConfigArgs>> targetGroupConfigs;

    public Output<List<ElastigroupItfTargetGroupConfigArgs>> targetGroupConfigs() {
        return this.targetGroupConfigs;
    }

    @Import(name="weightStrategy", required=true)
    private Output<String> weightStrategy;

    public Output<String> weightStrategy() {
        return this.weightStrategy;
    }

    private ElastigroupItfArgs() {}

    private ElastigroupItfArgs(ElastigroupItfArgs $) {
        this.defaultStaticTargetGroup = $.defaultStaticTargetGroup;
        this.fixedTargetGroups = $.fixedTargetGroups;
        this.loadBalancers = $.loadBalancers;
        this.migrationHealthinessThreshold = $.migrationHealthinessThreshold;
        this.targetGroupConfigs = $.targetGroupConfigs;
        this.weightStrategy = $.weightStrategy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ElastigroupItfArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ElastigroupItfArgs $;

        public Builder() {
            $ = new ElastigroupItfArgs();
        }

        public Builder(ElastigroupItfArgs defaults) {
            $ = new ElastigroupItfArgs(Objects.requireNonNull(defaults));
        }

        public Builder defaultStaticTargetGroup(@Nullable Output<ElastigroupItfDefaultStaticTargetGroupArgs> defaultStaticTargetGroup) {
            $.defaultStaticTargetGroup = defaultStaticTargetGroup;
            return this;
        }

        public Builder defaultStaticTargetGroup(ElastigroupItfDefaultStaticTargetGroupArgs defaultStaticTargetGroup) {
            return defaultStaticTargetGroup(Output.of(defaultStaticTargetGroup));
        }

        public Builder fixedTargetGroups(Output<Boolean> fixedTargetGroups) {
            $.fixedTargetGroups = fixedTargetGroups;
            return this;
        }

        public Builder fixedTargetGroups(Boolean fixedTargetGroups) {
            return fixedTargetGroups(Output.of(fixedTargetGroups));
        }

        public Builder loadBalancers(Output<List<ElastigroupItfLoadBalancerArgs>> loadBalancers) {
            $.loadBalancers = loadBalancers;
            return this;
        }

        public Builder loadBalancers(List<ElastigroupItfLoadBalancerArgs> loadBalancers) {
            return loadBalancers(Output.of(loadBalancers));
        }

        public Builder loadBalancers(ElastigroupItfLoadBalancerArgs... loadBalancers) {
            return loadBalancers(List.of(loadBalancers));
        }

        public Builder migrationHealthinessThreshold(@Nullable Output<Integer> migrationHealthinessThreshold) {
            $.migrationHealthinessThreshold = migrationHealthinessThreshold;
            return this;
        }

        public Builder migrationHealthinessThreshold(Integer migrationHealthinessThreshold) {
            return migrationHealthinessThreshold(Output.of(migrationHealthinessThreshold));
        }

        public Builder targetGroupConfigs(Output<List<ElastigroupItfTargetGroupConfigArgs>> targetGroupConfigs) {
            $.targetGroupConfigs = targetGroupConfigs;
            return this;
        }

        public Builder targetGroupConfigs(List<ElastigroupItfTargetGroupConfigArgs> targetGroupConfigs) {
            return targetGroupConfigs(Output.of(targetGroupConfigs));
        }

        public Builder targetGroupConfigs(ElastigroupItfTargetGroupConfigArgs... targetGroupConfigs) {
            return targetGroupConfigs(List.of(targetGroupConfigs));
        }

        public Builder weightStrategy(Output<String> weightStrategy) {
            $.weightStrategy = weightStrategy;
            return this;
        }

        public Builder weightStrategy(String weightStrategy) {
            return weightStrategy(Output.of(weightStrategy));
        }

        public ElastigroupItfArgs build() {
            $.fixedTargetGroups = Objects.requireNonNull($.fixedTargetGroups, "expected parameter 'fixedTargetGroups' to be non-null");
            $.loadBalancers = Objects.requireNonNull($.loadBalancers, "expected parameter 'loadBalancers' to be non-null");
            $.targetGroupConfigs = Objects.requireNonNull($.targetGroupConfigs, "expected parameter 'targetGroupConfigs' to be non-null");
            $.weightStrategy = Objects.requireNonNull($.weightStrategy, "expected parameter 'weightStrategy' to be non-null");
            return $;
        }
    }

}

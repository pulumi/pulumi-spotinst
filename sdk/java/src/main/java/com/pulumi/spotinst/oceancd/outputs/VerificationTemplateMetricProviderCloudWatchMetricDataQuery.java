// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.oceancd.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.spotinst.oceancd.outputs.VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStat;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VerificationTemplateMetricProviderCloudWatchMetricDataQuery {
    /**
     * @return This field can contain either a Metrics Insights query, or a metric math expression to be performed on the returned data. Within one metricdataquery object, you must specify either expression or metricstat but not both.
     * 
     */
    private @Nullable String expression;
    /**
     * @return The response ID. Must be unique and not null. This object can contain characters, letters, numbers and underscore. The first letter must be a lowercase letter.
     * 
     */
    private String id;
    /**
     * @return A human-readable label for this metric or expression. If the metric or expression is shown in a CloudWatch dashboard widget, the label is shown
     * 
     */
    private @Nullable String label;
    /**
     * @return The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.Within one metricdataquery object, you must specify either expression or metricstat but not both.
     * 
     */
    private @Nullable VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStat metricStat;
    /**
     * @return The granularity, in seconds, of the returned data points.
     * 
     */
    private @Nullable Integer period;
    /**
     * @return This option indicates whether to return the timestamps and raw data values of this metric. If you are performing this call just to do math expressions and do not also need the raw data returned, you can specify `false`. If you omit this, the default of `true` is used.
     * 
     */
    private @Nullable Boolean returnData;

    private VerificationTemplateMetricProviderCloudWatchMetricDataQuery() {}
    /**
     * @return This field can contain either a Metrics Insights query, or a metric math expression to be performed on the returned data. Within one metricdataquery object, you must specify either expression or metricstat but not both.
     * 
     */
    public Optional<String> expression() {
        return Optional.ofNullable(this.expression);
    }
    /**
     * @return The response ID. Must be unique and not null. This object can contain characters, letters, numbers and underscore. The first letter must be a lowercase letter.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A human-readable label for this metric or expression. If the metric or expression is shown in a CloudWatch dashboard widget, the label is shown
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }
    /**
     * @return The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.Within one metricdataquery object, you must specify either expression or metricstat but not both.
     * 
     */
    public Optional<VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStat> metricStat() {
        return Optional.ofNullable(this.metricStat);
    }
    /**
     * @return The granularity, in seconds, of the returned data points.
     * 
     */
    public Optional<Integer> period() {
        return Optional.ofNullable(this.period);
    }
    /**
     * @return This option indicates whether to return the timestamps and raw data values of this metric. If you are performing this call just to do math expressions and do not also need the raw data returned, you can specify `false`. If you omit this, the default of `true` is used.
     * 
     */
    public Optional<Boolean> returnData() {
        return Optional.ofNullable(this.returnData);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VerificationTemplateMetricProviderCloudWatchMetricDataQuery defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String expression;
        private String id;
        private @Nullable String label;
        private @Nullable VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStat metricStat;
        private @Nullable Integer period;
        private @Nullable Boolean returnData;
        public Builder() {}
        public Builder(VerificationTemplateMetricProviderCloudWatchMetricDataQuery defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expression = defaults.expression;
    	      this.id = defaults.id;
    	      this.label = defaults.label;
    	      this.metricStat = defaults.metricStat;
    	      this.period = defaults.period;
    	      this.returnData = defaults.returnData;
        }

        @CustomType.Setter
        public Builder expression(@Nullable String expression) {

            this.expression = expression;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("VerificationTemplateMetricProviderCloudWatchMetricDataQuery", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder label(@Nullable String label) {

            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder metricStat(@Nullable VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStat metricStat) {

            this.metricStat = metricStat;
            return this;
        }
        @CustomType.Setter
        public Builder period(@Nullable Integer period) {

            this.period = period;
            return this;
        }
        @CustomType.Setter
        public Builder returnData(@Nullable Boolean returnData) {

            this.returnData = returnData;
            return this;
        }
        public VerificationTemplateMetricProviderCloudWatchMetricDataQuery build() {
            final var _resultValue = new VerificationTemplateMetricProviderCloudWatchMetricDataQuery();
            _resultValue.expression = expression;
            _resultValue.id = id;
            _resultValue.label = label;
            _resultValue.metricStat = metricStat;
            _resultValue.period = period;
            _resultValue.returnData = returnData;
            return _resultValue;
        }
    }
}

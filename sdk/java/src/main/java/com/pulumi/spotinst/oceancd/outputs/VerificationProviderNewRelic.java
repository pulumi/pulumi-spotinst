// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.oceancd.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VerificationProviderNewRelic {
    private String accountId;
    /**
     * @return The base URL for NerdGraph for a proxy.
     * 
     */
    private @Nullable String baseUrlNerdGraph;
    /**
     * @return The base URL of the New Relic REST API for a proxy.
     * 
     */
    private @Nullable String baseUrlRest;
    /**
     * @return The NewRelic user key
     * 
     */
    private String personalApiKey;
    /**
     * @return A region which the account is attached to. Default is &#34;us&#34;.
     * 
     */
    private @Nullable String region;

    private VerificationProviderNewRelic() {}
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The base URL for NerdGraph for a proxy.
     * 
     */
    public Optional<String> baseUrlNerdGraph() {
        return Optional.ofNullable(this.baseUrlNerdGraph);
    }
    /**
     * @return The base URL of the New Relic REST API for a proxy.
     * 
     */
    public Optional<String> baseUrlRest() {
        return Optional.ofNullable(this.baseUrlRest);
    }
    /**
     * @return The NewRelic user key
     * 
     */
    public String personalApiKey() {
        return this.personalApiKey;
    }
    /**
     * @return A region which the account is attached to. Default is &#34;us&#34;.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VerificationProviderNewRelic defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private @Nullable String baseUrlNerdGraph;
        private @Nullable String baseUrlRest;
        private String personalApiKey;
        private @Nullable String region;
        public Builder() {}
        public Builder(VerificationProviderNewRelic defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.baseUrlNerdGraph = defaults.baseUrlNerdGraph;
    	      this.baseUrlRest = defaults.baseUrlRest;
    	      this.personalApiKey = defaults.personalApiKey;
    	      this.region = defaults.region;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("VerificationProviderNewRelic", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder baseUrlNerdGraph(@Nullable String baseUrlNerdGraph) {

            this.baseUrlNerdGraph = baseUrlNerdGraph;
            return this;
        }
        @CustomType.Setter
        public Builder baseUrlRest(@Nullable String baseUrlRest) {

            this.baseUrlRest = baseUrlRest;
            return this;
        }
        @CustomType.Setter
        public Builder personalApiKey(String personalApiKey) {
            if (personalApiKey == null) {
              throw new MissingRequiredPropertyException("VerificationProviderNewRelic", "personalApiKey");
            }
            this.personalApiKey = personalApiKey;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        public VerificationProviderNewRelic build() {
            final var _resultValue = new VerificationProviderNewRelic();
            _resultValue.accountId = accountId;
            _resultValue.baseUrlNerdGraph = baseUrlNerdGraph;
            _resultValue.baseUrlRest = baseUrlRest;
            _resultValue.personalApiKey = personalApiKey;
            _resultValue.region = region;
            return _resultValue;
        }
    }
}

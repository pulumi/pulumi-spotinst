// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.gke.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanLaunchSpecStrategyArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanLaunchSpecStrategyArgs Empty = new OceanLaunchSpecStrategyArgs();

    /**
     * Defines the desired preemptible percentage for this launch specification.
     * 
     */
    @Import(name="preemptiblePercentage")
    private @Nullable Output<Integer> preemptiblePercentage;

    /**
     * @return Defines the desired preemptible percentage for this launch specification.
     * 
     */
    public Optional<Output<Integer>> preemptiblePercentage() {
        return Optional.ofNullable(this.preemptiblePercentage);
    }

    /**
     * Valid Values: `&#34;cost&#34;, &#34;availability&#34;, &#34;balanced&#34;`. Set this value to control the approach that Ocean takes when launching nodes.
     * 
     */
    @Import(name="scalingOrientation")
    private @Nullable Output<String> scalingOrientation;

    /**
     * @return Valid Values: `&#34;cost&#34;, &#34;availability&#34;, &#34;balanced&#34;`. Set this value to control the approach that Ocean takes when launching nodes.
     * 
     */
    public Optional<Output<String>> scalingOrientation() {
        return Optional.ofNullable(this.scalingOrientation);
    }

    private OceanLaunchSpecStrategyArgs() {}

    private OceanLaunchSpecStrategyArgs(OceanLaunchSpecStrategyArgs $) {
        this.preemptiblePercentage = $.preemptiblePercentage;
        this.scalingOrientation = $.scalingOrientation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanLaunchSpecStrategyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanLaunchSpecStrategyArgs $;

        public Builder() {
            $ = new OceanLaunchSpecStrategyArgs();
        }

        public Builder(OceanLaunchSpecStrategyArgs defaults) {
            $ = new OceanLaunchSpecStrategyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param preemptiblePercentage Defines the desired preemptible percentage for this launch specification.
         * 
         * @return builder
         * 
         */
        public Builder preemptiblePercentage(@Nullable Output<Integer> preemptiblePercentage) {
            $.preemptiblePercentage = preemptiblePercentage;
            return this;
        }

        /**
         * @param preemptiblePercentage Defines the desired preemptible percentage for this launch specification.
         * 
         * @return builder
         * 
         */
        public Builder preemptiblePercentage(Integer preemptiblePercentage) {
            return preemptiblePercentage(Output.of(preemptiblePercentage));
        }

        /**
         * @param scalingOrientation Valid Values: `&#34;cost&#34;, &#34;availability&#34;, &#34;balanced&#34;`. Set this value to control the approach that Ocean takes when launching nodes.
         * 
         * @return builder
         * 
         */
        public Builder scalingOrientation(@Nullable Output<String> scalingOrientation) {
            $.scalingOrientation = scalingOrientation;
            return this;
        }

        /**
         * @param scalingOrientation Valid Values: `&#34;cost&#34;, &#34;availability&#34;, &#34;balanced&#34;`. Set this value to control the approach that Ocean takes when launching nodes.
         * 
         * @return builder
         * 
         */
        public Builder scalingOrientation(String scalingOrientation) {
            return scalingOrientation(Output.of(scalingOrientation));
        }

        public OceanLaunchSpecStrategyArgs build() {
            return $;
        }
    }

}

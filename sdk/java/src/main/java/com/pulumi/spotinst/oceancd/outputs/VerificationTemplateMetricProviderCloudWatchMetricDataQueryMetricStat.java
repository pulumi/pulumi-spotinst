// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.oceancd.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.spotinst.oceancd.outputs.VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatMetric;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStat {
    /**
     * @return The metric to return, including the metric name, namespace, and dimensions.
     * 
     */
    private @Nullable VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatMetric metric;
    /**
     * @return The granularity, in seconds, of the returned data points.
     * 
     */
    private @Nullable Integer metricPeriod;
    /**
     * @return The statistic to return. It can include any CloudWatch statistic or extended statistic.
     * 
     */
    private @Nullable String stat;
    /**
     * @return This defines what unit you want to use when storing the metric.  Enum: `&#34;Seconds&#34; &#34;Microseconds&#34; &#34;Milliseconds&#34; &#34;Bytes&#34; &#34;Kilobytes&#34; &#34;Megabytes&#34; &#34;Gigabytes&#34; &#34;Terabytes&#34; &#34;Bits&#34; &#34;Kilobits&#34; &#34;Megabits&#34; &#34;Gigabits&#34; &#34;Terabits&#34; &#34;Percent&#34; &#34;Count&#34; &#34;Bytes/Second&#34; &#34;Kilobytes/Second&#34; &#34;Megabytes/Second&#34; &#34;Gigabytes/Second&#34; &#34;Terabytes/Second&#34; &#34;Bits/Second&#34; &#34;Kilobits/Second&#34; &#34;Megabits/Second&#34; &#34;Gigabits/Second&#34; &#34;Terabits/Second&#34; &#34;Count/Second&#34; &#34;None&#34;`
     * 
     */
    private @Nullable String unit;

    private VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStat() {}
    /**
     * @return The metric to return, including the metric name, namespace, and dimensions.
     * 
     */
    public Optional<VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatMetric> metric() {
        return Optional.ofNullable(this.metric);
    }
    /**
     * @return The granularity, in seconds, of the returned data points.
     * 
     */
    public Optional<Integer> metricPeriod() {
        return Optional.ofNullable(this.metricPeriod);
    }
    /**
     * @return The statistic to return. It can include any CloudWatch statistic or extended statistic.
     * 
     */
    public Optional<String> stat() {
        return Optional.ofNullable(this.stat);
    }
    /**
     * @return This defines what unit you want to use when storing the metric.  Enum: `&#34;Seconds&#34; &#34;Microseconds&#34; &#34;Milliseconds&#34; &#34;Bytes&#34; &#34;Kilobytes&#34; &#34;Megabytes&#34; &#34;Gigabytes&#34; &#34;Terabytes&#34; &#34;Bits&#34; &#34;Kilobits&#34; &#34;Megabits&#34; &#34;Gigabits&#34; &#34;Terabits&#34; &#34;Percent&#34; &#34;Count&#34; &#34;Bytes/Second&#34; &#34;Kilobytes/Second&#34; &#34;Megabytes/Second&#34; &#34;Gigabytes/Second&#34; &#34;Terabytes/Second&#34; &#34;Bits/Second&#34; &#34;Kilobits/Second&#34; &#34;Megabits/Second&#34; &#34;Gigabits/Second&#34; &#34;Terabits/Second&#34; &#34;Count/Second&#34; &#34;None&#34;`
     * 
     */
    public Optional<String> unit() {
        return Optional.ofNullable(this.unit);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStat defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatMetric metric;
        private @Nullable Integer metricPeriod;
        private @Nullable String stat;
        private @Nullable String unit;
        public Builder() {}
        public Builder(VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStat defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metric = defaults.metric;
    	      this.metricPeriod = defaults.metricPeriod;
    	      this.stat = defaults.stat;
    	      this.unit = defaults.unit;
        }

        @CustomType.Setter
        public Builder metric(@Nullable VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatMetric metric) {

            this.metric = metric;
            return this;
        }
        @CustomType.Setter
        public Builder metricPeriod(@Nullable Integer metricPeriod) {

            this.metricPeriod = metricPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder stat(@Nullable String stat) {

            this.stat = stat;
            return this;
        }
        @CustomType.Setter
        public Builder unit(@Nullable String unit) {

            this.unit = unit;
            return this;
        }
        public VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStat build() {
            final var _resultValue = new VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStat();
            _resultValue.metric = metric;
            _resultValue.metricPeriod = metricPeriod;
            _resultValue.stat = stat;
            _resultValue.unit = unit;
            return _resultValue;
        }
    }
}

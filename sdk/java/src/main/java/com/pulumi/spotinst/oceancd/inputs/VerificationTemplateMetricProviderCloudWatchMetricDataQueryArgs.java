// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.oceancd.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.spotinst.oceancd.inputs.VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs Empty = new VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs();

    /**
     * This field can contain either a Metrics Insights query, or a metric math expression to be performed on the returned data. Within one metricdataquery object, you must specify either expression or metricstat but not both.
     * 
     */
    @Import(name="expression")
    private @Nullable Output<String> expression;

    /**
     * @return This field can contain either a Metrics Insights query, or a metric math expression to be performed on the returned data. Within one metricdataquery object, you must specify either expression or metricstat but not both.
     * 
     */
    public Optional<Output<String>> expression() {
        return Optional.ofNullable(this.expression);
    }

    /**
     * The response ID. Must be unique and not null. This object can contain characters, letters, numbers and underscore. The first letter must be a lowercase letter.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The response ID. Must be unique and not null. This object can contain characters, letters, numbers and underscore. The first letter must be a lowercase letter.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * A human-readable label for this metric or expression. If the metric or expression is shown in a CloudWatch dashboard widget, the label is shown
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return A human-readable label for this metric or expression. If the metric or expression is shown in a CloudWatch dashboard widget, the label is shown
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.Within one metricdataquery object, you must specify either expression or metricstat but not both.
     * 
     */
    @Import(name="metricStat")
    private @Nullable Output<VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatArgs> metricStat;

    /**
     * @return The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.Within one metricdataquery object, you must specify either expression or metricstat but not both.
     * 
     */
    public Optional<Output<VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatArgs>> metricStat() {
        return Optional.ofNullable(this.metricStat);
    }

    /**
     * The granularity, in seconds, of the returned data points.
     * 
     */
    @Import(name="period")
    private @Nullable Output<Integer> period;

    /**
     * @return The granularity, in seconds, of the returned data points.
     * 
     */
    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * This option indicates whether to return the timestamps and raw data values of this metric. If you are performing this call just to do math expressions and do not also need the raw data returned, you can specify `false`. If you omit this, the default of `true` is used.
     * 
     */
    @Import(name="returnData")
    private @Nullable Output<Boolean> returnData;

    /**
     * @return This option indicates whether to return the timestamps and raw data values of this metric. If you are performing this call just to do math expressions and do not also need the raw data returned, you can specify `false`. If you omit this, the default of `true` is used.
     * 
     */
    public Optional<Output<Boolean>> returnData() {
        return Optional.ofNullable(this.returnData);
    }

    private VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs() {}

    private VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs(VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs $) {
        this.expression = $.expression;
        this.id = $.id;
        this.label = $.label;
        this.metricStat = $.metricStat;
        this.period = $.period;
        this.returnData = $.returnData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs $;

        public Builder() {
            $ = new VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs();
        }

        public Builder(VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs defaults) {
            $ = new VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expression This field can contain either a Metrics Insights query, or a metric math expression to be performed on the returned data. Within one metricdataquery object, you must specify either expression or metricstat but not both.
         * 
         * @return builder
         * 
         */
        public Builder expression(@Nullable Output<String> expression) {
            $.expression = expression;
            return this;
        }

        /**
         * @param expression This field can contain either a Metrics Insights query, or a metric math expression to be performed on the returned data. Within one metricdataquery object, you must specify either expression or metricstat but not both.
         * 
         * @return builder
         * 
         */
        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param id The response ID. Must be unique and not null. This object can contain characters, letters, numbers and underscore. The first letter must be a lowercase letter.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The response ID. Must be unique and not null. This object can contain characters, letters, numbers and underscore. The first letter must be a lowercase letter.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param label A human-readable label for this metric or expression. If the metric or expression is shown in a CloudWatch dashboard widget, the label is shown
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label A human-readable label for this metric or expression. If the metric or expression is shown in a CloudWatch dashboard widget, the label is shown
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param metricStat The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.Within one metricdataquery object, you must specify either expression or metricstat but not both.
         * 
         * @return builder
         * 
         */
        public Builder metricStat(@Nullable Output<VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatArgs> metricStat) {
            $.metricStat = metricStat;
            return this;
        }

        /**
         * @param metricStat The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.Within one metricdataquery object, you must specify either expression or metricstat but not both.
         * 
         * @return builder
         * 
         */
        public Builder metricStat(VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatArgs metricStat) {
            return metricStat(Output.of(metricStat));
        }

        /**
         * @param period The granularity, in seconds, of the returned data points.
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period The granularity, in seconds, of the returned data points.
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param returnData This option indicates whether to return the timestamps and raw data values of this metric. If you are performing this call just to do math expressions and do not also need the raw data returned, you can specify `false`. If you omit this, the default of `true` is used.
         * 
         * @return builder
         * 
         */
        public Builder returnData(@Nullable Output<Boolean> returnData) {
            $.returnData = returnData;
            return this;
        }

        /**
         * @param returnData This option indicates whether to return the timestamps and raw data values of this metric. If you are performing this call just to do math expressions and do not also need the raw data returned, you can specify `false`. If you omit this, the default of `true` is used.
         * 
         * @return builder
         * 
         */
        public Builder returnData(Boolean returnData) {
            return returnData(Output.of(returnData));
        }

        public VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs", "id");
            }
            return $;
        }
    }

}

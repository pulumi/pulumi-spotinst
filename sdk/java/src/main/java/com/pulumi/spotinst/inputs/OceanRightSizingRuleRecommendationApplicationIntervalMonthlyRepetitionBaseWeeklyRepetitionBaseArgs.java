// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs Empty = new OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs();

    @Import(name="intervalDays", required=true)
    private Output<List<String>> intervalDays;

    public Output<List<String>> intervalDays() {
        return this.intervalDays;
    }

    @Import(name="intervalHoursEndTime", required=true)
    private Output<String> intervalHoursEndTime;

    public Output<String> intervalHoursEndTime() {
        return this.intervalHoursEndTime;
    }

    @Import(name="intervalHoursStartTime", required=true)
    private Output<String> intervalHoursStartTime;

    public Output<String> intervalHoursStartTime() {
        return this.intervalHoursStartTime;
    }

    private OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs() {}

    private OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs(OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs $) {
        this.intervalDays = $.intervalDays;
        this.intervalHoursEndTime = $.intervalHoursEndTime;
        this.intervalHoursStartTime = $.intervalHoursStartTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs $;

        public Builder() {
            $ = new OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs();
        }

        public Builder(OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs defaults) {
            $ = new OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs(Objects.requireNonNull(defaults));
        }

        public Builder intervalDays(Output<List<String>> intervalDays) {
            $.intervalDays = intervalDays;
            return this;
        }

        public Builder intervalDays(List<String> intervalDays) {
            return intervalDays(Output.of(intervalDays));
        }

        public Builder intervalDays(String... intervalDays) {
            return intervalDays(List.of(intervalDays));
        }

        public Builder intervalHoursEndTime(Output<String> intervalHoursEndTime) {
            $.intervalHoursEndTime = intervalHoursEndTime;
            return this;
        }

        public Builder intervalHoursEndTime(String intervalHoursEndTime) {
            return intervalHoursEndTime(Output.of(intervalHoursEndTime));
        }

        public Builder intervalHoursStartTime(Output<String> intervalHoursStartTime) {
            $.intervalHoursStartTime = intervalHoursStartTime;
            return this;
        }

        public Builder intervalHoursStartTime(String intervalHoursStartTime) {
            return intervalHoursStartTime(Output.of(intervalHoursStartTime));
        }

        public OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs build() {
            if ($.intervalDays == null) {
                throw new MissingRequiredPropertyException("OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs", "intervalDays");
            }
            if ($.intervalHoursEndTime == null) {
                throw new MissingRequiredPropertyException("OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs", "intervalHoursEndTime");
            }
            if ($.intervalHoursStartTime == null) {
                throw new MissingRequiredPropertyException("OceanRightSizingRuleRecommendationApplicationIntervalMonthlyRepetitionBaseWeeklyRepetitionBaseArgs", "intervalHoursStartTime");
            }
            return $;
        }
    }

}

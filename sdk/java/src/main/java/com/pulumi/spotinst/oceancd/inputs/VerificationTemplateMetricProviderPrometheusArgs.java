// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.oceancd.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class VerificationTemplateMetricProviderPrometheusArgs extends com.pulumi.resources.ResourceArgs {

    public static final VerificationTemplateMetricProviderPrometheusArgs Empty = new VerificationTemplateMetricProviderPrometheusArgs();

    @Import(name="prometheusQuery", required=true)
    private Output<String> prometheusQuery;

    public Output<String> prometheusQuery() {
        return this.prometheusQuery;
    }

    private VerificationTemplateMetricProviderPrometheusArgs() {}

    private VerificationTemplateMetricProviderPrometheusArgs(VerificationTemplateMetricProviderPrometheusArgs $) {
        this.prometheusQuery = $.prometheusQuery;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VerificationTemplateMetricProviderPrometheusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VerificationTemplateMetricProviderPrometheusArgs $;

        public Builder() {
            $ = new VerificationTemplateMetricProviderPrometheusArgs();
        }

        public Builder(VerificationTemplateMetricProviderPrometheusArgs defaults) {
            $ = new VerificationTemplateMetricProviderPrometheusArgs(Objects.requireNonNull(defaults));
        }

        public Builder prometheusQuery(Output<String> prometheusQuery) {
            $.prometheusQuery = prometheusQuery;
            return this;
        }

        public Builder prometheusQuery(String prometheusQuery) {
            return prometheusQuery(Output.of(prometheusQuery));
        }

        public VerificationTemplateMetricProviderPrometheusArgs build() {
            if ($.prometheusQuery == null) {
                throw new MissingRequiredPropertyException("VerificationTemplateMetricProviderPrometheusArgs", "prometheusQuery");
            }
            return $;
        }
    }

}

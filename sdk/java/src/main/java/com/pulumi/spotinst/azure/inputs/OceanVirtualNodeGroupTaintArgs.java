// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.azure.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class OceanVirtualNodeGroupTaintArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanVirtualNodeGroupTaintArgs Empty = new OceanVirtualNodeGroupTaintArgs();

    /**
     * The effect of the taint. Valid values: `&#34;NoSchedule&#34;`, `&#34;PreferNoSchedule&#34;`, `&#34;NoExecute&#34;`, `&#34;PreferNoExecute&#34;`.
     * 
     */
    @Import(name="effect", required=true)
    private Output<String> effect;

    /**
     * @return The effect of the taint. Valid values: `&#34;NoSchedule&#34;`, `&#34;PreferNoSchedule&#34;`, `&#34;NoExecute&#34;`, `&#34;PreferNoExecute&#34;`.
     * 
     */
    public Output<String> effect() {
        return this.effect;
    }

    /**
     * Tag Key for Vms in the cluster.
     * 
     */
    @Import(name="key", required=true)
    private Output<String> key;

    /**
     * @return Tag Key for Vms in the cluster.
     * 
     */
    public Output<String> key() {
        return this.key;
    }

    /**
     * Tag Value for VMs in the cluster.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return Tag Value for VMs in the cluster.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private OceanVirtualNodeGroupTaintArgs() {}

    private OceanVirtualNodeGroupTaintArgs(OceanVirtualNodeGroupTaintArgs $) {
        this.effect = $.effect;
        this.key = $.key;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanVirtualNodeGroupTaintArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanVirtualNodeGroupTaintArgs $;

        public Builder() {
            $ = new OceanVirtualNodeGroupTaintArgs();
        }

        public Builder(OceanVirtualNodeGroupTaintArgs defaults) {
            $ = new OceanVirtualNodeGroupTaintArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param effect The effect of the taint. Valid values: `&#34;NoSchedule&#34;`, `&#34;PreferNoSchedule&#34;`, `&#34;NoExecute&#34;`, `&#34;PreferNoExecute&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder effect(Output<String> effect) {
            $.effect = effect;
            return this;
        }

        /**
         * @param effect The effect of the taint. Valid values: `&#34;NoSchedule&#34;`, `&#34;PreferNoSchedule&#34;`, `&#34;NoExecute&#34;`, `&#34;PreferNoExecute&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder effect(String effect) {
            return effect(Output.of(effect));
        }

        /**
         * @param key Tag Key for Vms in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Tag Key for Vms in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param value Tag Value for VMs in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Tag Value for VMs in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public OceanVirtualNodeGroupTaintArgs build() {
            $.effect = Objects.requireNonNull($.effect, "expected parameter 'effect' to be non-null");
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}

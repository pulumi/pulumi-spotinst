// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.oceancd;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.spotinst.Utilities;
import com.pulumi.spotinst.oceancd.VerificationTemplateArgs;
import com.pulumi.spotinst.oceancd.inputs.VerificationTemplateState;
import com.pulumi.spotinst.oceancd.outputs.VerificationTemplateArg;
import com.pulumi.spotinst.oceancd.outputs.VerificationTemplateMetric;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Spotinst OceanCD Verfification Template resource.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.spotinst.oceancd.VerificationTemplate;
 * import com.pulumi.spotinst.oceancd.VerificationTemplateArgs;
 * import com.pulumi.spotinst.oceancd.inputs.VerificationTemplateArgArgs;
 * import com.pulumi.spotinst.oceancd.inputs.VerificationTemplateArgValueFromArgs;
 * import com.pulumi.spotinst.oceancd.inputs.VerificationTemplateArgValueFromSecretKeyRefArgs;
 * import com.pulumi.spotinst.oceancd.inputs.VerificationTemplateMetricArgs;
 * import com.pulumi.spotinst.oceancd.inputs.VerificationTemplateMetricBaselineArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new VerificationTemplate("test", VerificationTemplateArgs.builder()
 *             .name("test-verification-template-tes")
 *             .args(VerificationTemplateArgArgs.builder()
 *                 .argName("test-arg")
 *                 .value("test")
 *                 .valueFrom(VerificationTemplateArgValueFromArgs.builder()
 *                     .secretKeyRef(VerificationTemplateArgValueFromSecretKeyRefArgs.builder()
 *                         .name("test_key")
 *                         .key("key-value-test")
 *                         .build())
 *                     .build())
 *                 .build())
 *             .metrics(VerificationTemplateMetricArgs.builder()
 *                 .metricsName("test-metrics-names")
 *                 .dryRun(false)
 *                 .interval("10m")
 *                 .initialDelay("1m")
 *                 .count("10")
 *                 .successCondition("result[0] <= 0.95")
 *                 .failureCondition("result[0] >= 0.95")
 *                 .failureLimit(2)
 *                 .consecutiveErrorLimit(1)
 *                 .providers(VerificationTemplateMetricProviderArgs.builder()
 *                     .prometheus(VerificationTemplateMetricProviderPrometheusArgs.builder()
 *                         .prometheusQuery("http_requests_new")
 *                         .build())
 *                     .datadog(VerificationTemplateMetricProviderDatadogArgs.builder()
 *                         .duration("1m")
 *                         .datadogQuery("avg:kubernetes.cpu.user.total")
 *                         .build())
 *                     .newRelic(VerificationTemplateMetricProviderNewRelicArgs.builder()
 *                         .profile("test")
 *                         .newRelicQuery("FROM Metric SELECT count")
 *                         .build())
 *                     .cloudWatch(VerificationTemplateMetricProviderCloudWatchArgs.builder()
 *                         .duration("5m")
 *                         .metricDataQueries(VerificationTemplateMetricProviderCloudWatchMetricDataQueryArgs.builder()
 *                             .id("utilization")
 *                             .metricStat(VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatArgs.builder()
 *                                 .metric(VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatMetricArgs.builder()
 *                                     .metricName("Test")
 *                                     .namespace("AWS/EC2")
 *                                     .dimensions(VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatMetricDimensionArgs.builder()
 *                                         .dimensionName("instandId")
 *                                         .dimensionValue("i-123044")
 *                                         .build())
 *                                     .build())
 *                                 .metricPeriod(400)
 *                                 .stat("average")
 *                                 .unit("None")
 *                                 .build())
 *                             .expression("SELECT AVG(CPUUtilization) FROM SCHEMA")
 *                             .label("TestLabel")
 *                             .returnData(false)
 *                             .period(300)
 *                             .build())
 *                         .build())
 *                     .web(VerificationTemplateMetricProviderWebArgs.builder()
 *                         .method("GET")
 *                         .url("https://oceancd.com/api/v1/metrics?clusterId= args.clusterId")
 *                         .webHeaders(VerificationTemplateMetricProviderWebWebHeaderArgs.builder()
 *                             .webHeaderKey("Autorization")
 *                             .webHeaderValue("Bearer=args.token")
 *                             .build())
 *                         .body("{\"key\": \"test\"}")
 *                         .timeoutSeconds(20)
 *                         .jsonPath("$.data")
 *                         .insecure(false)
 *                         .build())
 *                     .job(VerificationTemplateMetricProviderJobArgs.builder()
 *                         .specs(VerificationTemplateMetricProviderJobSpecArgs.builder()
 *                             .backoffLimit(1)
 *                             .jobTemplates(VerificationTemplateMetricProviderJobSpecJobTemplateArgs.builder()
 *                                 .templateSpecs(VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecArgs.builder()
 *                                     .containers(VerificationTemplateMetricProviderJobSpecJobTemplateTemplateSpecContainerArgs.builder()
 *                                         .containerName("hello")
 *                                         .commands(                                        
 *                                             "sh",
 *                                             "-c")
 *                                         .image("nginx.2.1")
 *                                         .build())
 *                                     .restartPolicy("never")
 *                                     .build())
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .jenkins(VerificationTemplateMetricProviderJenkinsArgs.builder()
 *                         .pipelineName("testPipelineName")
 *                         .tlsVerification(true)
 *                         .timeout("2m")
 *                         .jenkinsInterval("5s")
 *                         .jenkinsParameters(VerificationTemplateMetricProviderJenkinsJenkinsParametersArgs.builder()
 *                             .parameterKey("app")
 *                             .parameterValue("my-app")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .baseline(VerificationTemplateMetricBaselineArgs.builder()
 *                     .baselineProviders(VerificationTemplateMetricBaselineBaselineProviderArgs.builder()
 *                         .prometheus(VerificationTemplateMetricBaselineBaselineProviderPrometheusArgs.builder()
 *                             .prometheusQuery("http_requests_total.status!")
 *                             .build())
 *                         .datadog(VerificationTemplateMetricBaselineBaselineProviderDatadogArgs.builder()
 *                             .duration("2m")
 *                             .datadogQuery("avg:kubernetes.cpu.user")
 *                             .build())
 *                         .newRelic(VerificationTemplateMetricBaselineBaselineProviderNewRelicArgs.builder()
 *                             .profile("test")
 *                             .newRelicQuery("FROM Metric SELECT count*")
 *                             .build())
 *                         .build())
 *                     .minRange(40)
 *                     .maxRange(50)
 *                     .threshold("range")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="spotinst:oceancd/verificationTemplate:VerificationTemplate")
public class VerificationTemplate extends com.pulumi.resources.CustomResource {
    /**
     * List of verification arguments. You may specify either `value` OR `valueFrom` but not both.In case `args`:`value` is already defined in the RolloutSpec entity, there is no need to also specify it in the VerificationTemplate entity.
     * 
     */
    @Export(name="args", refs={List.class,VerificationTemplateArg.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VerificationTemplateArg>> args;

    /**
     * @return List of verification arguments. You may specify either `value` OR `valueFrom` but not both.In case `args`:`value` is already defined in the RolloutSpec entity, there is no need to also specify it in the VerificationTemplate entity.
     * 
     */
    public Output<Optional<List<VerificationTemplateArg>>> args() {
        return Codegen.optional(this.args);
    }
    /**
     * List of verification metrics.
     * 
     */
    @Export(name="metrics", refs={List.class,VerificationTemplateMetric.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VerificationTemplateMetric>> metrics;

    /**
     * @return List of verification metrics.
     * 
     */
    public Output<Optional<List<VerificationTemplateMetric>>> metrics() {
        return Codegen.optional(this.metrics);
    }
    /**
     * Identifier name for Ocean CD Verification Template. Must be unique.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier name for Ocean CD Verification Template. Must be unique.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VerificationTemplate(String name) {
        this(name, VerificationTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VerificationTemplate(String name, @Nullable VerificationTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VerificationTemplate(String name, @Nullable VerificationTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("spotinst:oceancd/verificationTemplate:VerificationTemplate", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private VerificationTemplate(String name, Output<String> id, @Nullable VerificationTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("spotinst:oceancd/verificationTemplate:VerificationTemplate", name, state, makeResourceOptions(options, id));
    }

    private static VerificationTemplateArgs makeArgs(@Nullable VerificationTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? VerificationTemplateArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VerificationTemplate get(String name, Output<String> id, @Nullable VerificationTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VerificationTemplate(name, id, state, options);
    }
}

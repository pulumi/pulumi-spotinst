// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.gcp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ElastigroupScheduledTask {
    /**
     * @return A valid cron expression. The cron is running in UTC time zone and is in [Unix cron format](https://en.wikipedia.org/wiki/Cron).
     * 
     */
    private @Nullable String cronExpression;
    /**
     * @return Setting the task to being enabled or disabled.
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return The maximum number of instances the group should have.
     * 
     * Usage:
     * 
     */
    private @Nullable String maxCapacity;
    /**
     * @return The minimum number of instances the group should have.
     * 
     */
    private @Nullable String minCapacity;
    /**
     * @return The desired number of instances the group should have.
     * 
     */
    private @Nullable String targetCapacity;
    /**
     * @return The task type to run. Valid values: `&#34;setCapacity&#34;`.
     * 
     */
    private String taskType;

    private ElastigroupScheduledTask() {}
    /**
     * @return A valid cron expression. The cron is running in UTC time zone and is in [Unix cron format](https://en.wikipedia.org/wiki/Cron).
     * 
     */
    public Optional<String> cronExpression() {
        return Optional.ofNullable(this.cronExpression);
    }
    /**
     * @return Setting the task to being enabled or disabled.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return The maximum number of instances the group should have.
     * 
     * Usage:
     * 
     */
    public Optional<String> maxCapacity() {
        return Optional.ofNullable(this.maxCapacity);
    }
    /**
     * @return The minimum number of instances the group should have.
     * 
     */
    public Optional<String> minCapacity() {
        return Optional.ofNullable(this.minCapacity);
    }
    /**
     * @return The desired number of instances the group should have.
     * 
     */
    public Optional<String> targetCapacity() {
        return Optional.ofNullable(this.targetCapacity);
    }
    /**
     * @return The task type to run. Valid values: `&#34;setCapacity&#34;`.
     * 
     */
    public String taskType() {
        return this.taskType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ElastigroupScheduledTask defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cronExpression;
        private @Nullable Boolean isEnabled;
        private @Nullable String maxCapacity;
        private @Nullable String minCapacity;
        private @Nullable String targetCapacity;
        private String taskType;
        public Builder() {}
        public Builder(ElastigroupScheduledTask defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cronExpression = defaults.cronExpression;
    	      this.isEnabled = defaults.isEnabled;
    	      this.maxCapacity = defaults.maxCapacity;
    	      this.minCapacity = defaults.minCapacity;
    	      this.targetCapacity = defaults.targetCapacity;
    	      this.taskType = defaults.taskType;
        }

        @CustomType.Setter
        public Builder cronExpression(@Nullable String cronExpression) {

            this.cronExpression = cronExpression;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {

            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder maxCapacity(@Nullable String maxCapacity) {

            this.maxCapacity = maxCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder minCapacity(@Nullable String minCapacity) {

            this.minCapacity = minCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder targetCapacity(@Nullable String targetCapacity) {

            this.targetCapacity = targetCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder taskType(String taskType) {
            if (taskType == null) {
              throw new MissingRequiredPropertyException("ElastigroupScheduledTask", "taskType");
            }
            this.taskType = taskType;
            return this;
        }
        public ElastigroupScheduledTask build() {
            final var _resultValue = new ElastigroupScheduledTask();
            _resultValue.cronExpression = cronExpression;
            _resultValue.isEnabled = isEnabled;
            _resultValue.maxCapacity = maxCapacity;
            _resultValue.minCapacity = minCapacity;
            _resultValue.targetCapacity = targetCapacity;
            _resultValue.taskType = taskType;
            return _resultValue;
        }
    }
}

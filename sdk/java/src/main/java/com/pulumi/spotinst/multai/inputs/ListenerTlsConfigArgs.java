// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.multai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ListenerTlsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListenerTlsConfigArgs Empty = new ListenerTlsConfigArgs();

    @Import(name="certificateIds", required=true)
    private Output<List<String>> certificateIds;

    public Output<List<String>> certificateIds() {
        return this.certificateIds;
    }

    @Import(name="cipherSuites", required=true)
    private Output<List<String>> cipherSuites;

    public Output<List<String>> cipherSuites() {
        return this.cipherSuites;
    }

    @Import(name="maxVersion", required=true)
    private Output<String> maxVersion;

    public Output<String> maxVersion() {
        return this.maxVersion;
    }

    @Import(name="minVersion", required=true)
    private Output<String> minVersion;

    public Output<String> minVersion() {
        return this.minVersion;
    }

    @Import(name="preferServerCipherSuites", required=true)
    private Output<Boolean> preferServerCipherSuites;

    public Output<Boolean> preferServerCipherSuites() {
        return this.preferServerCipherSuites;
    }

    @Import(name="sessionTicketsDisabled", required=true)
    private Output<Boolean> sessionTicketsDisabled;

    public Output<Boolean> sessionTicketsDisabled() {
        return this.sessionTicketsDisabled;
    }

    private ListenerTlsConfigArgs() {}

    private ListenerTlsConfigArgs(ListenerTlsConfigArgs $) {
        this.certificateIds = $.certificateIds;
        this.cipherSuites = $.cipherSuites;
        this.maxVersion = $.maxVersion;
        this.minVersion = $.minVersion;
        this.preferServerCipherSuites = $.preferServerCipherSuites;
        this.sessionTicketsDisabled = $.sessionTicketsDisabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListenerTlsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListenerTlsConfigArgs $;

        public Builder() {
            $ = new ListenerTlsConfigArgs();
        }

        public Builder(ListenerTlsConfigArgs defaults) {
            $ = new ListenerTlsConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder certificateIds(Output<List<String>> certificateIds) {
            $.certificateIds = certificateIds;
            return this;
        }

        public Builder certificateIds(List<String> certificateIds) {
            return certificateIds(Output.of(certificateIds));
        }

        public Builder certificateIds(String... certificateIds) {
            return certificateIds(List.of(certificateIds));
        }

        public Builder cipherSuites(Output<List<String>> cipherSuites) {
            $.cipherSuites = cipherSuites;
            return this;
        }

        public Builder cipherSuites(List<String> cipherSuites) {
            return cipherSuites(Output.of(cipherSuites));
        }

        public Builder cipherSuites(String... cipherSuites) {
            return cipherSuites(List.of(cipherSuites));
        }

        public Builder maxVersion(Output<String> maxVersion) {
            $.maxVersion = maxVersion;
            return this;
        }

        public Builder maxVersion(String maxVersion) {
            return maxVersion(Output.of(maxVersion));
        }

        public Builder minVersion(Output<String> minVersion) {
            $.minVersion = minVersion;
            return this;
        }

        public Builder minVersion(String minVersion) {
            return minVersion(Output.of(minVersion));
        }

        public Builder preferServerCipherSuites(Output<Boolean> preferServerCipherSuites) {
            $.preferServerCipherSuites = preferServerCipherSuites;
            return this;
        }

        public Builder preferServerCipherSuites(Boolean preferServerCipherSuites) {
            return preferServerCipherSuites(Output.of(preferServerCipherSuites));
        }

        public Builder sessionTicketsDisabled(Output<Boolean> sessionTicketsDisabled) {
            $.sessionTicketsDisabled = sessionTicketsDisabled;
            return this;
        }

        public Builder sessionTicketsDisabled(Boolean sessionTicketsDisabled) {
            return sessionTicketsDisabled(Output.of(sessionTicketsDisabled));
        }

        public ListenerTlsConfigArgs build() {
            $.certificateIds = Objects.requireNonNull($.certificateIds, "expected parameter 'certificateIds' to be non-null");
            $.cipherSuites = Objects.requireNonNull($.cipherSuites, "expected parameter 'cipherSuites' to be non-null");
            $.maxVersion = Objects.requireNonNull($.maxVersion, "expected parameter 'maxVersion' to be non-null");
            $.minVersion = Objects.requireNonNull($.minVersion, "expected parameter 'minVersion' to be non-null");
            $.preferServerCipherSuites = Objects.requireNonNull($.preferServerCipherSuites, "expected parameter 'preferServerCipherSuites' to be non-null");
            $.sessionTicketsDisabled = Objects.requireNonNull($.sessionTicketsDisabled, "expected parameter 'sessionTicketsDisabled' to be non-null");
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.ecs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.spotinst.Utilities;
import com.pulumi.spotinst.ecs.OceanLaunchSpecArgs;
import com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecState;
import com.pulumi.spotinst.ecs.outputs.OceanLaunchSpecAttribute;
import com.pulumi.spotinst.ecs.outputs.OceanLaunchSpecAutoscaleHeadroom;
import com.pulumi.spotinst.ecs.outputs.OceanLaunchSpecBlockDeviceMapping;
import com.pulumi.spotinst.ecs.outputs.OceanLaunchSpecImage;
import com.pulumi.spotinst.ecs.outputs.OceanLaunchSpecInstanceMetadataOptions;
import com.pulumi.spotinst.ecs.outputs.OceanLaunchSpecSchedulingTask;
import com.pulumi.spotinst.ecs.outputs.OceanLaunchSpecStrategy;
import com.pulumi.spotinst.ecs.outputs.OceanLaunchSpecTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a custom Spotinst Ocean ECS Launch Spec resource.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.spotinst.ecs.OceanLaunchSpec;
 * import com.pulumi.spotinst.ecs.OceanLaunchSpecArgs;
 * import com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecBlockDeviceMappingArgs;
 * import com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecBlockDeviceMappingEbsArgs;
 * import com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSizeArgs;
 * import com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecAttributeArgs;
 * import com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecInstanceMetadataOptionsArgs;
 * import com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecAutoscaleHeadroomArgs;
 * import com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecStrategyArgs;
 * import com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecTagArgs;
 * import com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecImageArgs;
 * import com.pulumi.spotinst.ecs.inputs.OceanLaunchSpecSchedulingTaskArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new OceanLaunchSpec("example", OceanLaunchSpecArgs.builder()
 *             .oceanId("o-123456")
 *             .imageId("ami-123456")
 *             .userData("echo hello world")
 *             .iamInstanceProfile("iam-profile")
 *             .subnetIds("subnet-12345")
 *             .securityGroupIds("awseb-12345")
 *             .restrictScaleDown(true)
 *             .instanceTypes(            
 *                 "m3.large",
 *                 "m3.xlarge",
 *                 "m3.2xlarge",
 *                 "m4.large",
 *                 "m4.xlarge",
 *                 "m4.4xlarge",
 *                 "m4.2xlarge",
 *                 "m4.10xlarge",
 *                 "m4.16xlarge",
 *                 "m5.large",
 *                 "m5.xlarge",
 *                 "m5.2xlarge",
 *                 "m5.4xlarge",
 *                 "m5.12xlarge",
 *                 "m5.24xlarge")
 *             .preferredSpotTypes(            
 *                 "m3.large",
 *                 "m3.xlarge",
 *                 "m3.2xlarge",
 *                 "m4.large",
 *                 "m4.xlarge")
 *             .blockDeviceMappings(OceanLaunchSpecBlockDeviceMappingArgs.builder()
 *                 .deviceName("/dev/xvda1")
 *                 .ebs(OceanLaunchSpecBlockDeviceMappingEbsArgs.builder()
 *                     .deleteOnTermination("true")
 *                     .encrypted("false")
 *                     .volumeType("gp2")
 *                     .volumeSize(50)
 *                     .throughput(500)
 *                     .dynamicVolumeSize(OceanLaunchSpecBlockDeviceMappingEbsDynamicVolumeSizeArgs.builder()
 *                         .baseSize(50)
 *                         .resource("CPU")
 *                         .sizePerResourceUnit(20)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .attributes(OceanLaunchSpecAttributeArgs.builder()
 *                 .key("fakeKey")
 *                 .value("fakeValue")
 *                 .build())
 *             .instanceMetadataOptions(OceanLaunchSpecInstanceMetadataOptionsArgs.builder()
 *                 .httpTokens("required")
 *                 .httpPutResponseHopLimit(10)
 *                 .build())
 *             .autoscaleHeadrooms(OceanLaunchSpecAutoscaleHeadroomArgs.builder()
 *                 .numOfUnits(5)
 *                 .cpuPerUnit(1000)
 *                 .memoryPerUnit(2048)
 *                 .build())
 *             .strategies(OceanLaunchSpecStrategyArgs.builder()
 *                 .spotPercentage(50)
 *                 .build())
 *             .tags(OceanLaunchSpecTagArgs.builder()
 *                 .key("Env")
 *                 .value("production")
 *                 .build())
 *             .images(            
 *                 OceanLaunchSpecImageArgs.builder()
 *                     .imageId("ami-12345")
 *                     .build(),
 *                 OceanLaunchSpecImageArgs.builder()
 *                     .imageId("ami-67890")
 *                     .build())
 *             .schedulingTasks(OceanLaunchSpecSchedulingTaskArgs.builder()
 *                 .isEnabled(true)
 *                 .cronExpression("0 1 * * *")
 *                 .taskType("manualHeadroomUpdate")
 *                 .taskHeadrooms(OceanLaunchSpecSchedulingTaskTaskHeadroomArgs.builder()
 *                     .numOfUnits(5)
 *                     .cpuPerUnit(1000)
 *                     .memoryPerUnit(2048)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="spotinst:ecs/oceanLaunchSpec:OceanLaunchSpec")
public class OceanLaunchSpec extends com.pulumi.resources.CustomResource {
    /**
     * Optionally adds labels to instances launched in an Ocean cluster.
     * 
     */
    @Export(name="attributes", refs={List.class,OceanLaunchSpecAttribute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanLaunchSpecAttribute>> attributes;

    /**
     * @return Optionally adds labels to instances launched in an Ocean cluster.
     * 
     */
    public Output<Optional<List<OceanLaunchSpecAttribute>>> attributes() {
        return Codegen.optional(this.attributes);
    }
    /**
     * Set custom headroom per launch spec. provide list of headrooms object.
     * 
     */
    @Export(name="autoscaleHeadrooms", refs={List.class,OceanLaunchSpecAutoscaleHeadroom.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanLaunchSpecAutoscaleHeadroom>> autoscaleHeadrooms;

    /**
     * @return Set custom headroom per launch spec. provide list of headrooms object.
     * 
     */
    public Output<Optional<List<OceanLaunchSpecAutoscaleHeadroom>>> autoscaleHeadrooms() {
        return Codegen.optional(this.autoscaleHeadrooms);
    }
    /**
     * Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.
     * 
     */
    @Export(name="blockDeviceMappings", refs={List.class,OceanLaunchSpecBlockDeviceMapping.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanLaunchSpecBlockDeviceMapping>> blockDeviceMappings;

    /**
     * @return Object. Array list of block devices that are exposed to the instance, specify either virtual devices and EBS volumes.
     * 
     */
    public Output<Optional<List<OceanLaunchSpecBlockDeviceMapping>>> blockDeviceMappings() {
        return Codegen.optional(this.blockDeviceMappings);
    }
    /**
     * The ARN or name of an IAM instance profile to associate with launched instances.
     * 
     */
    @Export(name="iamInstanceProfile", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> iamInstanceProfile;

    /**
     * @return The ARN or name of an IAM instance profile to associate with launched instances.
     * 
     */
    public Output<Optional<String>> iamInstanceProfile() {
        return Codegen.optional(this.iamInstanceProfile);
    }
    /**
     * ID of the image used to launch the instances.
     * 
     */
    @Export(name="imageId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> imageId;

    /**
     * @return ID of the image used to launch the instances.
     * 
     */
    public Output<Optional<String>> imageId() {
        return Codegen.optional(this.imageId);
    }
    /**
     * You can configure VNG with either the imageId or images objects, but not both simultaneously. For each architecture type (amd64, arm64) only one AMI is allowed. Valid values: null, or an array with at least one element
     * 
     */
    @Export(name="images", refs={List.class,OceanLaunchSpecImage.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanLaunchSpecImage>> images;

    /**
     * @return You can configure VNG with either the imageId or images objects, but not both simultaneously. For each architecture type (amd64, arm64) only one AMI is allowed. Valid values: null, or an array with at least one element
     * 
     */
    public Output<Optional<List<OceanLaunchSpecImage>>> images() {
        return Codegen.optional(this.images);
    }
    /**
     * Ocean instance metadata options object for IMDSv2.
     * 
     */
    @Export(name="instanceMetadataOptions", refs={OceanLaunchSpecInstanceMetadataOptions.class}, tree="[0]")
    private Output</* @Nullable */ OceanLaunchSpecInstanceMetadataOptions> instanceMetadataOptions;

    /**
     * @return Ocean instance metadata options object for IMDSv2.
     * 
     */
    public Output<Optional<OceanLaunchSpecInstanceMetadataOptions>> instanceMetadataOptions() {
        return Codegen.optional(this.instanceMetadataOptions);
    }
    /**
     * A list of instance types allowed to be provisioned for pods pending under the specified launch specification. The list overrides the list defined for the Ocean cluster.
     * 
     */
    @Export(name="instanceTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> instanceTypes;

    /**
     * @return A list of instance types allowed to be provisioned for pods pending under the specified launch specification. The list overrides the list defined for the Ocean cluster.
     * 
     */
    public Output<Optional<List<String>>> instanceTypes() {
        return Codegen.optional(this.instanceTypes);
    }
    /**
     * The Ocean Launch Specification name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The Ocean Launch Specification name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Ocean cluster ID .
     * 
     */
    @Export(name="oceanId", refs={String.class}, tree="[0]")
    private Output<String> oceanId;

    /**
     * @return The Ocean cluster ID .
     * 
     */
    public Output<String> oceanId() {
        return this.oceanId;
    }
    /**
     * When Ocean scales up instances, it takes your preferred types into consideration while maintaining a variety of machine types running for optimized distribution.
     * 
     */
    @Export(name="preferredSpotTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> preferredSpotTypes;

    /**
     * @return When Ocean scales up instances, it takes your preferred types into consideration while maintaining a variety of machine types running for optimized distribution.
     * 
     */
    public Output<Optional<List<String>>> preferredSpotTypes() {
        return Codegen.optional(this.preferredSpotTypes);
    }
    /**
     * Boolean. When set to `true`, VNG nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.
     * 
     */
    @Export(name="restrictScaleDown", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> restrictScaleDown;

    /**
     * @return Boolean. When set to `true`, VNG nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.
     * 
     */
    public Output<Optional<Boolean>> restrictScaleDown() {
        return Codegen.optional(this.restrictScaleDown);
    }
    /**
     * Used to define scheduled tasks such as a manual headroom update.
     * 
     */
    @Export(name="schedulingTasks", refs={List.class,OceanLaunchSpecSchedulingTask.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanLaunchSpecSchedulingTask>> schedulingTasks;

    /**
     * @return Used to define scheduled tasks such as a manual headroom update.
     * 
     */
    public Output<Optional<List<OceanLaunchSpecSchedulingTask>>> schedulingTasks() {
        return Codegen.optional(this.schedulingTasks);
    }
    /**
     * One or more security group ids.
     * 
     */
    @Export(name="securityGroupIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> securityGroupIds;

    /**
     * @return One or more security group ids.
     * 
     */
    public Output<Optional<List<String>>> securityGroupIds() {
        return Codegen.optional(this.securityGroupIds);
    }
    /**
     * Similar to a strategy for an Ocean cluster, but applying only to a virtual node group.
     * 
     */
    @Export(name="strategies", refs={List.class,OceanLaunchSpecStrategy.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanLaunchSpecStrategy>> strategies;

    /**
     * @return Similar to a strategy for an Ocean cluster, but applying only to a virtual node group.
     * 
     */
    public Output<Optional<List<OceanLaunchSpecStrategy>>> strategies() {
        return Codegen.optional(this.strategies);
    }
    /**
     * Set subnets in launchSpec. Each element in the array should be a subnet ID.
     * 
     */
    @Export(name="subnetIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> subnetIds;

    /**
     * @return Set subnets in launchSpec. Each element in the array should be a subnet ID.
     * 
     */
    public Output<Optional<List<String>>> subnetIds() {
        return Codegen.optional(this.subnetIds);
    }
    /**
     * A key/value mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={List.class,OceanLaunchSpecTag.class}, tree="[0,1]")
    private Output</* @Nullable */ List<OceanLaunchSpecTag>> tags;

    /**
     * @return A key/value mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<List<OceanLaunchSpecTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Base64-encoded MIME user data to make available to the instances.
     * 
     */
    @Export(name="userData", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userData;

    /**
     * @return Base64-encoded MIME user data to make available to the instances.
     * 
     */
    public Output<Optional<String>> userData() {
        return Codegen.optional(this.userData);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OceanLaunchSpec(java.lang.String name) {
        this(name, OceanLaunchSpecArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OceanLaunchSpec(java.lang.String name, OceanLaunchSpecArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OceanLaunchSpec(java.lang.String name, OceanLaunchSpecArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("spotinst:ecs/oceanLaunchSpec:OceanLaunchSpec", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private OceanLaunchSpec(java.lang.String name, Output<java.lang.String> id, @Nullable OceanLaunchSpecState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("spotinst:ecs/oceanLaunchSpec:OceanLaunchSpec", name, state, makeResourceOptions(options, id), false);
    }

    private static OceanLaunchSpecArgs makeArgs(OceanLaunchSpecArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? OceanLaunchSpecArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OceanLaunchSpec get(java.lang.String name, Output<java.lang.String> id, @Nullable OceanLaunchSpecState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OceanLaunchSpec(name, id, state, options);
    }
}

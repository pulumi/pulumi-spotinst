// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.spotinst.inputs.StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfigurationArgs;
import com.pulumi.spotinst.inputs.StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroupArgs;
import com.pulumi.spotinst.inputs.StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroupArgs;
import com.pulumi.spotinst.inputs.StatefulNodeAzureNetworkNetworkInterfacePublicIpArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StatefulNodeAzureNetworkNetworkInterfaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final StatefulNodeAzureNetworkNetworkInterfaceArgs Empty = new StatefulNodeAzureNetworkNetworkInterfaceArgs();

    @Import(name="additionalIpConfigurations")
    private @Nullable Output<List<StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfigurationArgs>> additionalIpConfigurations;

    public Optional<Output<List<StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfigurationArgs>>> additionalIpConfigurations() {
        return Optional.ofNullable(this.additionalIpConfigurations);
    }

    @Import(name="applicationSecurityGroups")
    private @Nullable Output<List<StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroupArgs>> applicationSecurityGroups;

    public Optional<Output<List<StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroupArgs>>> applicationSecurityGroups() {
        return Optional.ofNullable(this.applicationSecurityGroups);
    }

    @Import(name="assignPublicIp")
    private @Nullable Output<Boolean> assignPublicIp;

    public Optional<Output<Boolean>> assignPublicIp() {
        return Optional.ofNullable(this.assignPublicIp);
    }

    @Import(name="enableIpForwarding")
    private @Nullable Output<Boolean> enableIpForwarding;

    public Optional<Output<Boolean>> enableIpForwarding() {
        return Optional.ofNullable(this.enableIpForwarding);
    }

    @Import(name="isPrimary", required=true)
    private Output<Boolean> isPrimary;

    public Output<Boolean> isPrimary() {
        return this.isPrimary;
    }

    @Import(name="networkSecurityGroups")
    private @Nullable Output<List<StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroupArgs>> networkSecurityGroups;

    public Optional<Output<List<StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroupArgs>>> networkSecurityGroups() {
        return Optional.ofNullable(this.networkSecurityGroups);
    }

    @Import(name="privateIpAddresses")
    private @Nullable Output<List<String>> privateIpAddresses;

    public Optional<Output<List<String>>> privateIpAddresses() {
        return Optional.ofNullable(this.privateIpAddresses);
    }

    @Import(name="publicIpSku")
    private @Nullable Output<String> publicIpSku;

    public Optional<Output<String>> publicIpSku() {
        return Optional.ofNullable(this.publicIpSku);
    }

    @Import(name="publicIps")
    private @Nullable Output<List<StatefulNodeAzureNetworkNetworkInterfacePublicIpArgs>> publicIps;

    public Optional<Output<List<StatefulNodeAzureNetworkNetworkInterfacePublicIpArgs>>> publicIps() {
        return Optional.ofNullable(this.publicIps);
    }

    @Import(name="subnetName", required=true)
    private Output<String> subnetName;

    public Output<String> subnetName() {
        return this.subnetName;
    }

    private StatefulNodeAzureNetworkNetworkInterfaceArgs() {}

    private StatefulNodeAzureNetworkNetworkInterfaceArgs(StatefulNodeAzureNetworkNetworkInterfaceArgs $) {
        this.additionalIpConfigurations = $.additionalIpConfigurations;
        this.applicationSecurityGroups = $.applicationSecurityGroups;
        this.assignPublicIp = $.assignPublicIp;
        this.enableIpForwarding = $.enableIpForwarding;
        this.isPrimary = $.isPrimary;
        this.networkSecurityGroups = $.networkSecurityGroups;
        this.privateIpAddresses = $.privateIpAddresses;
        this.publicIpSku = $.publicIpSku;
        this.publicIps = $.publicIps;
        this.subnetName = $.subnetName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StatefulNodeAzureNetworkNetworkInterfaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StatefulNodeAzureNetworkNetworkInterfaceArgs $;

        public Builder() {
            $ = new StatefulNodeAzureNetworkNetworkInterfaceArgs();
        }

        public Builder(StatefulNodeAzureNetworkNetworkInterfaceArgs defaults) {
            $ = new StatefulNodeAzureNetworkNetworkInterfaceArgs(Objects.requireNonNull(defaults));
        }

        public Builder additionalIpConfigurations(@Nullable Output<List<StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfigurationArgs>> additionalIpConfigurations) {
            $.additionalIpConfigurations = additionalIpConfigurations;
            return this;
        }

        public Builder additionalIpConfigurations(List<StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfigurationArgs> additionalIpConfigurations) {
            return additionalIpConfigurations(Output.of(additionalIpConfigurations));
        }

        public Builder additionalIpConfigurations(StatefulNodeAzureNetworkNetworkInterfaceAdditionalIpConfigurationArgs... additionalIpConfigurations) {
            return additionalIpConfigurations(List.of(additionalIpConfigurations));
        }

        public Builder applicationSecurityGroups(@Nullable Output<List<StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroupArgs>> applicationSecurityGroups) {
            $.applicationSecurityGroups = applicationSecurityGroups;
            return this;
        }

        public Builder applicationSecurityGroups(List<StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroupArgs> applicationSecurityGroups) {
            return applicationSecurityGroups(Output.of(applicationSecurityGroups));
        }

        public Builder applicationSecurityGroups(StatefulNodeAzureNetworkNetworkInterfaceApplicationSecurityGroupArgs... applicationSecurityGroups) {
            return applicationSecurityGroups(List.of(applicationSecurityGroups));
        }

        public Builder assignPublicIp(@Nullable Output<Boolean> assignPublicIp) {
            $.assignPublicIp = assignPublicIp;
            return this;
        }

        public Builder assignPublicIp(Boolean assignPublicIp) {
            return assignPublicIp(Output.of(assignPublicIp));
        }

        public Builder enableIpForwarding(@Nullable Output<Boolean> enableIpForwarding) {
            $.enableIpForwarding = enableIpForwarding;
            return this;
        }

        public Builder enableIpForwarding(Boolean enableIpForwarding) {
            return enableIpForwarding(Output.of(enableIpForwarding));
        }

        public Builder isPrimary(Output<Boolean> isPrimary) {
            $.isPrimary = isPrimary;
            return this;
        }

        public Builder isPrimary(Boolean isPrimary) {
            return isPrimary(Output.of(isPrimary));
        }

        public Builder networkSecurityGroups(@Nullable Output<List<StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroupArgs>> networkSecurityGroups) {
            $.networkSecurityGroups = networkSecurityGroups;
            return this;
        }

        public Builder networkSecurityGroups(List<StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroupArgs> networkSecurityGroups) {
            return networkSecurityGroups(Output.of(networkSecurityGroups));
        }

        public Builder networkSecurityGroups(StatefulNodeAzureNetworkNetworkInterfaceNetworkSecurityGroupArgs... networkSecurityGroups) {
            return networkSecurityGroups(List.of(networkSecurityGroups));
        }

        public Builder privateIpAddresses(@Nullable Output<List<String>> privateIpAddresses) {
            $.privateIpAddresses = privateIpAddresses;
            return this;
        }

        public Builder privateIpAddresses(List<String> privateIpAddresses) {
            return privateIpAddresses(Output.of(privateIpAddresses));
        }

        public Builder privateIpAddresses(String... privateIpAddresses) {
            return privateIpAddresses(List.of(privateIpAddresses));
        }

        public Builder publicIpSku(@Nullable Output<String> publicIpSku) {
            $.publicIpSku = publicIpSku;
            return this;
        }

        public Builder publicIpSku(String publicIpSku) {
            return publicIpSku(Output.of(publicIpSku));
        }

        public Builder publicIps(@Nullable Output<List<StatefulNodeAzureNetworkNetworkInterfacePublicIpArgs>> publicIps) {
            $.publicIps = publicIps;
            return this;
        }

        public Builder publicIps(List<StatefulNodeAzureNetworkNetworkInterfacePublicIpArgs> publicIps) {
            return publicIps(Output.of(publicIps));
        }

        public Builder publicIps(StatefulNodeAzureNetworkNetworkInterfacePublicIpArgs... publicIps) {
            return publicIps(List.of(publicIps));
        }

        public Builder subnetName(Output<String> subnetName) {
            $.subnetName = subnetName;
            return this;
        }

        public Builder subnetName(String subnetName) {
            return subnetName(Output.of(subnetName));
        }

        public StatefulNodeAzureNetworkNetworkInterfaceArgs build() {
            if ($.isPrimary == null) {
                throw new MissingRequiredPropertyException("StatefulNodeAzureNetworkNetworkInterfaceArgs", "isPrimary");
            }
            if ($.subnetName == null) {
                throw new MissingRequiredPropertyException("StatefulNodeAzureNetworkNetworkInterfaceArgs", "subnetName");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.spotinst.inputs.OceanRightSizingRuleAttachWorkloadNamespaceLabelArgs;
import com.pulumi.spotinst.inputs.OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanRightSizingRuleAttachWorkloadNamespaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanRightSizingRuleAttachWorkloadNamespaceArgs Empty = new OceanRightSizingRuleAttachWorkloadNamespaceArgs();

    /**
     * A set of key-value label pairs used to automatically apply this rule to all workloads in the cluster that match these labels.
     * 
     * &lt;a id=&#34;attachWorkloads&#34;&gt;&lt;/a&gt;
     * 
     */
    @Import(name="labels")
    private @Nullable Output<List<OceanRightSizingRuleAttachWorkloadNamespaceLabelArgs>> labels;

    /**
     * @return A set of key-value label pairs used to automatically apply this rule to all workloads in the cluster that match these labels.
     * 
     * &lt;a id=&#34;attachWorkloads&#34;&gt;&lt;/a&gt;
     * 
     */
    public Optional<Output<List<OceanRightSizingRuleAttachWorkloadNamespaceLabelArgs>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    @Import(name="namespaceName", required=true)
    private Output<String> namespaceName;

    public Output<String> namespaceName() {
        return this.namespaceName;
    }

    @Import(name="workloads")
    private @Nullable Output<List<OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs>> workloads;

    public Optional<Output<List<OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs>>> workloads() {
        return Optional.ofNullable(this.workloads);
    }

    private OceanRightSizingRuleAttachWorkloadNamespaceArgs() {}

    private OceanRightSizingRuleAttachWorkloadNamespaceArgs(OceanRightSizingRuleAttachWorkloadNamespaceArgs $) {
        this.labels = $.labels;
        this.namespaceName = $.namespaceName;
        this.workloads = $.workloads;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanRightSizingRuleAttachWorkloadNamespaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanRightSizingRuleAttachWorkloadNamespaceArgs $;

        public Builder() {
            $ = new OceanRightSizingRuleAttachWorkloadNamespaceArgs();
        }

        public Builder(OceanRightSizingRuleAttachWorkloadNamespaceArgs defaults) {
            $ = new OceanRightSizingRuleAttachWorkloadNamespaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param labels A set of key-value label pairs used to automatically apply this rule to all workloads in the cluster that match these labels.
         * 
         * &lt;a id=&#34;attachWorkloads&#34;&gt;&lt;/a&gt;
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<List<OceanRightSizingRuleAttachWorkloadNamespaceLabelArgs>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels A set of key-value label pairs used to automatically apply this rule to all workloads in the cluster that match these labels.
         * 
         * &lt;a id=&#34;attachWorkloads&#34;&gt;&lt;/a&gt;
         * 
         * @return builder
         * 
         */
        public Builder labels(List<OceanRightSizingRuleAttachWorkloadNamespaceLabelArgs> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param labels A set of key-value label pairs used to automatically apply this rule to all workloads in the cluster that match these labels.
         * 
         * &lt;a id=&#34;attachWorkloads&#34;&gt;&lt;/a&gt;
         * 
         * @return builder
         * 
         */
        public Builder labels(OceanRightSizingRuleAttachWorkloadNamespaceLabelArgs... labels) {
            return labels(List.of(labels));
        }

        public Builder namespaceName(Output<String> namespaceName) {
            $.namespaceName = namespaceName;
            return this;
        }

        public Builder namespaceName(String namespaceName) {
            return namespaceName(Output.of(namespaceName));
        }

        public Builder workloads(@Nullable Output<List<OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs>> workloads) {
            $.workloads = workloads;
            return this;
        }

        public Builder workloads(List<OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs> workloads) {
            return workloads(Output.of(workloads));
        }

        public Builder workloads(OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs... workloads) {
            return workloads(List.of(workloads));
        }

        public OceanRightSizingRuleAttachWorkloadNamespaceArgs build() {
            if ($.namespaceName == null) {
                throw new MissingRequiredPropertyException("OceanRightSizingRuleAttachWorkloadNamespaceArgs", "namespaceName");
            }
            return $;
        }
    }

}

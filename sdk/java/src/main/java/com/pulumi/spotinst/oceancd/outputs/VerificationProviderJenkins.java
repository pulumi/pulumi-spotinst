// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.oceancd.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class VerificationProviderJenkins {
    /**
     * @return The Jenkins server’s access apiToken.
     * 
     */
    private String apiToken;
    /**
     * @return The address of the Jenkins server within the cluster.
     * 
     */
    private String baseUrl;
    /**
     * @return The Jenkins server’s access username.
     * 
     */
    private String username;

    private VerificationProviderJenkins() {}
    /**
     * @return The Jenkins server’s access apiToken.
     * 
     */
    public String apiToken() {
        return this.apiToken;
    }
    /**
     * @return The address of the Jenkins server within the cluster.
     * 
     */
    public String baseUrl() {
        return this.baseUrl;
    }
    /**
     * @return The Jenkins server’s access username.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VerificationProviderJenkins defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiToken;
        private String baseUrl;
        private String username;
        public Builder() {}
        public Builder(VerificationProviderJenkins defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiToken = defaults.apiToken;
    	      this.baseUrl = defaults.baseUrl;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder apiToken(String apiToken) {
            if (apiToken == null) {
              throw new MissingRequiredPropertyException("VerificationProviderJenkins", "apiToken");
            }
            this.apiToken = apiToken;
            return this;
        }
        @CustomType.Setter
        public Builder baseUrl(String baseUrl) {
            if (baseUrl == null) {
              throw new MissingRequiredPropertyException("VerificationProviderJenkins", "baseUrl");
            }
            this.baseUrl = baseUrl;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("VerificationProviderJenkins", "username");
            }
            this.username = username;
            return this;
        }
        public VerificationProviderJenkins build() {
            final var _resultValue = new VerificationProviderJenkins();
            _resultValue.apiToken = apiToken;
            _resultValue.baseUrl = baseUrl;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}

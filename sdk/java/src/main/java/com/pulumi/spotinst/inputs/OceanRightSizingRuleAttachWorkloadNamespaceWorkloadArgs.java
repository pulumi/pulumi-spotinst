// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs Empty = new OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs();

    @Import(name="regexName")
    private @Nullable Output<String> regexName;

    public Optional<Output<String>> regexName() {
        return Optional.ofNullable(this.regexName);
    }

    @Import(name="workloadName")
    private @Nullable Output<String> workloadName;

    public Optional<Output<String>> workloadName() {
        return Optional.ofNullable(this.workloadName);
    }

    @Import(name="workloadType", required=true)
    private Output<String> workloadType;

    public Output<String> workloadType() {
        return this.workloadType;
    }

    private OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs() {}

    private OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs(OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs $) {
        this.regexName = $.regexName;
        this.workloadName = $.workloadName;
        this.workloadType = $.workloadType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs $;

        public Builder() {
            $ = new OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs();
        }

        public Builder(OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs defaults) {
            $ = new OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs(Objects.requireNonNull(defaults));
        }

        public Builder regexName(@Nullable Output<String> regexName) {
            $.regexName = regexName;
            return this;
        }

        public Builder regexName(String regexName) {
            return regexName(Output.of(regexName));
        }

        public Builder workloadName(@Nullable Output<String> workloadName) {
            $.workloadName = workloadName;
            return this;
        }

        public Builder workloadName(String workloadName) {
            return workloadName(Output.of(workloadName));
        }

        public Builder workloadType(Output<String> workloadType) {
            $.workloadType = workloadType;
            return this;
        }

        public Builder workloadType(String workloadType) {
            return workloadType(Output.of(workloadType));
        }

        public OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs build() {
            if ($.workloadType == null) {
                throw new MissingRequiredPropertyException("OceanRightSizingRuleAttachWorkloadNamespaceWorkloadArgs", "workloadType");
            }
            return $;
        }
    }

}

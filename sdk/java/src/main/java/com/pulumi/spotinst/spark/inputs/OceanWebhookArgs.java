// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.spark.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanWebhookArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanWebhookArgs Empty = new OceanWebhookArgs();

    /**
     * - List of ports allowed to use on the host network - if empty default is `25554`.
     * 
     */
    @Import(name="hostNetworkPorts")
    private @Nullable Output<List<Integer>> hostNetworkPorts;

    /**
     * @return - List of ports allowed to use on the host network - if empty default is `25554`.
     * 
     */
    public Optional<Output<List<Integer>>> hostNetworkPorts() {
        return Optional.ofNullable(this.hostNetworkPorts);
    }

    /**
     * - Enable/disable host networking for the Spark Operator. Host networking can be useful when using custom CNI plugins like Calico on EKS.
     * 
     */
    @Import(name="useHostNetwork")
    private @Nullable Output<Boolean> useHostNetwork;

    /**
     * @return - Enable/disable host networking for the Spark Operator. Host networking can be useful when using custom CNI plugins like Calico on EKS.
     * 
     */
    public Optional<Output<Boolean>> useHostNetwork() {
        return Optional.ofNullable(this.useHostNetwork);
    }

    private OceanWebhookArgs() {}

    private OceanWebhookArgs(OceanWebhookArgs $) {
        this.hostNetworkPorts = $.hostNetworkPorts;
        this.useHostNetwork = $.useHostNetwork;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanWebhookArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanWebhookArgs $;

        public Builder() {
            $ = new OceanWebhookArgs();
        }

        public Builder(OceanWebhookArgs defaults) {
            $ = new OceanWebhookArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostNetworkPorts - List of ports allowed to use on the host network - if empty default is `25554`.
         * 
         * @return builder
         * 
         */
        public Builder hostNetworkPorts(@Nullable Output<List<Integer>> hostNetworkPorts) {
            $.hostNetworkPorts = hostNetworkPorts;
            return this;
        }

        /**
         * @param hostNetworkPorts - List of ports allowed to use on the host network - if empty default is `25554`.
         * 
         * @return builder
         * 
         */
        public Builder hostNetworkPorts(List<Integer> hostNetworkPorts) {
            return hostNetworkPorts(Output.of(hostNetworkPorts));
        }

        /**
         * @param hostNetworkPorts - List of ports allowed to use on the host network - if empty default is `25554`.
         * 
         * @return builder
         * 
         */
        public Builder hostNetworkPorts(Integer... hostNetworkPorts) {
            return hostNetworkPorts(List.of(hostNetworkPorts));
        }

        /**
         * @param useHostNetwork - Enable/disable host networking for the Spark Operator. Host networking can be useful when using custom CNI plugins like Calico on EKS.
         * 
         * @return builder
         * 
         */
        public Builder useHostNetwork(@Nullable Output<Boolean> useHostNetwork) {
            $.useHostNetwork = useHostNetwork;
            return this;
        }

        /**
         * @param useHostNetwork - Enable/disable host networking for the Spark Operator. Host networking can be useful when using custom CNI plugins like Calico on EKS.
         * 
         * @return builder
         * 
         */
        public Builder useHostNetwork(Boolean useHostNetwork) {
            return useHostNetwork(Output.of(useHostNetwork));
        }

        public OceanWebhookArgs build() {
            return $;
        }
    }

}

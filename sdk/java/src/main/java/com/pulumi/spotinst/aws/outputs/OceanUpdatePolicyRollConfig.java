// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OceanUpdatePolicyRollConfig {
    /**
     * @return Default: 50. Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
     * 
     */
    private @Nullable Integer batchMinHealthyPercentage;
    /**
     * @return Sets the percentage of the instances to deploy in each batch.
     * 
     */
    private Integer batchSizePercentage;
    /**
     * @return List of virtual node group identifiers to be rolled.
     * 
     */
    private @Nullable List<String> launchSpecIds;
    /**
     * @return During the roll, if the parameter is set to True we honor PDB during the instance replacement.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     * &lt;a id=&#34;scheduled-task&#34;&gt;&lt;/a&gt;
     * 
     */
    private @Nullable Boolean respectPdb;

    private OceanUpdatePolicyRollConfig() {}
    /**
     * @return Default: 50. Indicates the threshold of minimum healthy instances in single batch. If the amount of healthy instances in single batch is under the threshold, the cluster roll will fail. If exists, the parameter value will be in range of 1-100. In case of null as value, the default value in the backend will be 50%. Value of param should represent the number in percentage (%) of the batch.
     * 
     */
    public Optional<Integer> batchMinHealthyPercentage() {
        return Optional.ofNullable(this.batchMinHealthyPercentage);
    }
    /**
     * @return Sets the percentage of the instances to deploy in each batch.
     * 
     */
    public Integer batchSizePercentage() {
        return this.batchSizePercentage;
    }
    /**
     * @return List of virtual node group identifiers to be rolled.
     * 
     */
    public List<String> launchSpecIds() {
        return this.launchSpecIds == null ? List.of() : this.launchSpecIds;
    }
    /**
     * @return During the roll, if the parameter is set to True we honor PDB during the instance replacement.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     * &lt;a id=&#34;scheduled-task&#34;&gt;&lt;/a&gt;
     * 
     */
    public Optional<Boolean> respectPdb() {
        return Optional.ofNullable(this.respectPdb);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OceanUpdatePolicyRollConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer batchMinHealthyPercentage;
        private Integer batchSizePercentage;
        private @Nullable List<String> launchSpecIds;
        private @Nullable Boolean respectPdb;
        public Builder() {}
        public Builder(OceanUpdatePolicyRollConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.batchMinHealthyPercentage = defaults.batchMinHealthyPercentage;
    	      this.batchSizePercentage = defaults.batchSizePercentage;
    	      this.launchSpecIds = defaults.launchSpecIds;
    	      this.respectPdb = defaults.respectPdb;
        }

        @CustomType.Setter
        public Builder batchMinHealthyPercentage(@Nullable Integer batchMinHealthyPercentage) {
            this.batchMinHealthyPercentage = batchMinHealthyPercentage;
            return this;
        }
        @CustomType.Setter
        public Builder batchSizePercentage(Integer batchSizePercentage) {
            this.batchSizePercentage = Objects.requireNonNull(batchSizePercentage);
            return this;
        }
        @CustomType.Setter
        public Builder launchSpecIds(@Nullable List<String> launchSpecIds) {
            this.launchSpecIds = launchSpecIds;
            return this;
        }
        public Builder launchSpecIds(String... launchSpecIds) {
            return launchSpecIds(List.of(launchSpecIds));
        }
        @CustomType.Setter
        public Builder respectPdb(@Nullable Boolean respectPdb) {
            this.respectPdb = respectPdb;
            return this;
        }
        public OceanUpdatePolicyRollConfig build() {
            final var o = new OceanUpdatePolicyRollConfig();
            o.batchMinHealthyPercentage = batchMinHealthyPercentage;
            o.batchSizePercentage = batchSizePercentage;
            o.launchSpecIds = launchSpecIds;
            o.respectPdb = respectPdb;
            return o;
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.organization.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class ProgrammaticUserAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProgrammaticUserAccountArgs Empty = new ProgrammaticUserAccountArgs();

    /**
     * Account ID the programmatic user will have access to.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Account ID the programmatic user will have access to.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * (Enum: `&#34;viewer&#34;, &#34;editor&#34;) Role to be associated with the
     * programmatic user for this account.
     * 
     */
    @Import(name="accountRole", required=true)
    private Output<String> accountRole;

    /**
     * @return (Enum: `&#34;viewer&#34;, &#34;editor&#34;) Role to be associated with the
     * programmatic user for this account.
     * 
     */
    public Output<String> accountRole() {
        return this.accountRole;
    }

    private ProgrammaticUserAccountArgs() {}

    private ProgrammaticUserAccountArgs(ProgrammaticUserAccountArgs $) {
        this.accountId = $.accountId;
        this.accountRole = $.accountRole;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProgrammaticUserAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProgrammaticUserAccountArgs $;

        public Builder() {
            $ = new ProgrammaticUserAccountArgs();
        }

        public Builder(ProgrammaticUserAccountArgs defaults) {
            $ = new ProgrammaticUserAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account ID the programmatic user will have access to.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account ID the programmatic user will have access to.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param accountRole (Enum: `&#34;viewer&#34;, &#34;editor&#34;) Role to be associated with the
         * programmatic user for this account.
         * 
         * @return builder
         * 
         */
        public Builder accountRole(Output<String> accountRole) {
            $.accountRole = accountRole;
            return this;
        }

        /**
         * @param accountRole (Enum: `&#34;viewer&#34;, &#34;editor&#34;) Role to be associated with the
         * programmatic user for this account.
         * 
         * @return builder
         * 
         */
        public Builder accountRole(String accountRole) {
            return accountRole(Output.of(accountRole));
        }

        public ProgrammaticUserAccountArgs build() {
            $.accountId = Objects.requireNonNull($.accountId, "expected parameter 'accountId' to be non-null");
            $.accountRole = Objects.requireNonNull($.accountRole, "expected parameter 'accountRole' to be non-null");
            return $;
        }
    }

}

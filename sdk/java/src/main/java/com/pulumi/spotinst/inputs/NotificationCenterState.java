// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.inputs.NotificationCenterComputePolicyConfigArgs;
import com.pulumi.spotinst.inputs.NotificationCenterRegisteredUserArgs;
import com.pulumi.spotinst.inputs.NotificationCenterSubscriptionArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NotificationCenterState extends com.pulumi.resources.ResourceArgs {

    public static final NotificationCenterState Empty = new NotificationCenterState();

    @Import(name="computePolicyConfig")
    private @Nullable Output<NotificationCenterComputePolicyConfigArgs> computePolicyConfig;

    public Optional<Output<NotificationCenterComputePolicyConfigArgs>> computePolicyConfig() {
        return Optional.ofNullable(this.computePolicyConfig);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="isActive")
    private @Nullable Output<Boolean> isActive;

    public Optional<Output<Boolean>> isActive() {
        return Optional.ofNullable(this.isActive);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="privacyLevel")
    private @Nullable Output<String> privacyLevel;

    public Optional<Output<String>> privacyLevel() {
        return Optional.ofNullable(this.privacyLevel);
    }

    @Import(name="registeredUsers")
    private @Nullable Output<List<NotificationCenterRegisteredUserArgs>> registeredUsers;

    public Optional<Output<List<NotificationCenterRegisteredUserArgs>>> registeredUsers() {
        return Optional.ofNullable(this.registeredUsers);
    }

    @Import(name="subscriptions")
    private @Nullable Output<List<NotificationCenterSubscriptionArgs>> subscriptions;

    public Optional<Output<List<NotificationCenterSubscriptionArgs>>> subscriptions() {
        return Optional.ofNullable(this.subscriptions);
    }

    private NotificationCenterState() {}

    private NotificationCenterState(NotificationCenterState $) {
        this.computePolicyConfig = $.computePolicyConfig;
        this.description = $.description;
        this.isActive = $.isActive;
        this.name = $.name;
        this.privacyLevel = $.privacyLevel;
        this.registeredUsers = $.registeredUsers;
        this.subscriptions = $.subscriptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotificationCenterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotificationCenterState $;

        public Builder() {
            $ = new NotificationCenterState();
        }

        public Builder(NotificationCenterState defaults) {
            $ = new NotificationCenterState(Objects.requireNonNull(defaults));
        }

        public Builder computePolicyConfig(@Nullable Output<NotificationCenterComputePolicyConfigArgs> computePolicyConfig) {
            $.computePolicyConfig = computePolicyConfig;
            return this;
        }

        public Builder computePolicyConfig(NotificationCenterComputePolicyConfigArgs computePolicyConfig) {
            return computePolicyConfig(Output.of(computePolicyConfig));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder isActive(@Nullable Output<Boolean> isActive) {
            $.isActive = isActive;
            return this;
        }

        public Builder isActive(Boolean isActive) {
            return isActive(Output.of(isActive));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder privacyLevel(@Nullable Output<String> privacyLevel) {
            $.privacyLevel = privacyLevel;
            return this;
        }

        public Builder privacyLevel(String privacyLevel) {
            return privacyLevel(Output.of(privacyLevel));
        }

        public Builder registeredUsers(@Nullable Output<List<NotificationCenterRegisteredUserArgs>> registeredUsers) {
            $.registeredUsers = registeredUsers;
            return this;
        }

        public Builder registeredUsers(List<NotificationCenterRegisteredUserArgs> registeredUsers) {
            return registeredUsers(Output.of(registeredUsers));
        }

        public Builder registeredUsers(NotificationCenterRegisteredUserArgs... registeredUsers) {
            return registeredUsers(List.of(registeredUsers));
        }

        public Builder subscriptions(@Nullable Output<List<NotificationCenterSubscriptionArgs>> subscriptions) {
            $.subscriptions = subscriptions;
            return this;
        }

        public Builder subscriptions(List<NotificationCenterSubscriptionArgs> subscriptions) {
            return subscriptions(Output.of(subscriptions));
        }

        public Builder subscriptions(NotificationCenterSubscriptionArgs... subscriptions) {
            return subscriptions(List.of(subscriptions));
        }

        public NotificationCenterState build() {
            return $;
        }
    }

}

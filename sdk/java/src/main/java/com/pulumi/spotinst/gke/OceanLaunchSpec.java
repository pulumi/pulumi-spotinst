// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.gke;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.spotinst.Utilities;
import com.pulumi.spotinst.gke.OceanLaunchSpecArgs;
import com.pulumi.spotinst.gke.inputs.OceanLaunchSpecState;
import com.pulumi.spotinst.gke.outputs.OceanLaunchSpecAutoscaleHeadroom;
import com.pulumi.spotinst.gke.outputs.OceanLaunchSpecAutoscaleHeadroomsAutomatic;
import com.pulumi.spotinst.gke.outputs.OceanLaunchSpecLabel;
import com.pulumi.spotinst.gke.outputs.OceanLaunchSpecMetadata;
import com.pulumi.spotinst.gke.outputs.OceanLaunchSpecResourceLimits;
import com.pulumi.spotinst.gke.outputs.OceanLaunchSpecSchedulingTask;
import com.pulumi.spotinst.gke.outputs.OceanLaunchSpecShieldedInstanceConfig;
import com.pulumi.spotinst.gke.outputs.OceanLaunchSpecStorage;
import com.pulumi.spotinst.gke.outputs.OceanLaunchSpecStrategy;
import com.pulumi.spotinst.gke.outputs.OceanLaunchSpecTaint;
import com.pulumi.spotinst.gke.outputs.OceanLaunchSpecUpdatePolicy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a custom Spotinst Ocean GKE Launch Spec resource.
 * 
 * &gt; This resource can be imported from GKE node pool or not. If you want to import the node pool and create the VNG from it, please provide `node_pool_name`.
 * 
 * ## Update Policy
 * 
 * * `update_policy` - (Optional)
 *   * `should_roll` - (Required) Enables the roll.
 *   * `roll_config` - (Required) Holds the roll configuration.
 *     * `batch_size_percentage` - (Required) Sets the percentage of the instances to deploy in each batch.
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="spotinst:gke/oceanLaunchSpec:OceanLaunchSpec")
public class OceanLaunchSpec extends com.pulumi.resources.CustomResource {
    /**
     * Set custom headroom per launch spec. provide list of headrooms object.
     * 
     */
    @Export(name="autoscaleHeadrooms", type=List.class, parameters={OceanLaunchSpecAutoscaleHeadroom.class})
    private Output</* @Nullable */ List<OceanLaunchSpecAutoscaleHeadroom>> autoscaleHeadrooms;

    /**
     * @return Set custom headroom per launch spec. provide list of headrooms object.
     * 
     */
    public Output<Optional<List<OceanLaunchSpecAutoscaleHeadroom>>> autoscaleHeadrooms() {
        return Codegen.optional(this.autoscaleHeadrooms);
    }
    /**
     * Set automatic headroom per launch spec.
     * 
     */
    @Export(name="autoscaleHeadroomsAutomatics", type=List.class, parameters={OceanLaunchSpecAutoscaleHeadroomsAutomatic.class})
    private Output</* @Nullable */ List<OceanLaunchSpecAutoscaleHeadroomsAutomatic>> autoscaleHeadroomsAutomatics;

    /**
     * @return Set automatic headroom per launch spec.
     * 
     */
    public Output<Optional<List<OceanLaunchSpecAutoscaleHeadroomsAutomatic>>> autoscaleHeadroomsAutomatics() {
        return Codegen.optional(this.autoscaleHeadroomsAutomatics);
    }
    /**
     * List of supported machine types for the Launch Spec.
     * 
     */
    @Export(name="instanceTypes", type=List.class, parameters={String.class})
    private Output<List<String>> instanceTypes;

    /**
     * @return List of supported machine types for the Launch Spec.
     * 
     */
    public Output<List<String>> instanceTypes() {
        return this.instanceTypes;
    }
    /**
     * Optionally adds labels to instances launched in an Ocean cluster.
     * 
     */
    @Export(name="labels", type=List.class, parameters={OceanLaunchSpecLabel.class})
    private Output<List<OceanLaunchSpecLabel>> labels;

    /**
     * @return Optionally adds labels to instances launched in an Ocean cluster.
     * 
     */
    public Output<List<OceanLaunchSpecLabel>> labels() {
        return this.labels;
    }
    /**
     * Cluster&#39;s metadata.
     * 
     */
    @Export(name="metadatas", type=List.class, parameters={OceanLaunchSpecMetadata.class})
    private Output<List<OceanLaunchSpecMetadata>> metadatas;

    /**
     * @return Cluster&#39;s metadata.
     * 
     */
    public Output<List<OceanLaunchSpecMetadata>> metadatas() {
        return this.metadatas;
    }
    /**
     * The launch specification name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The launch specification name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The node pool you wish to use in your Launch Spec.
     * 
     */
    @Export(name="nodePoolName", type=String.class, parameters={})
    private Output</* @Nullable */ String> nodePoolName;

    /**
     * @return The node pool you wish to use in your Launch Spec.
     * 
     */
    public Output<Optional<String>> nodePoolName() {
        return Codegen.optional(this.nodePoolName);
    }
    /**
     * The Ocean cluster ID.
     * 
     */
    @Export(name="oceanId", type=String.class, parameters={})
    private Output<String> oceanId;

    /**
     * @return The Ocean cluster ID.
     * 
     */
    public Output<String> oceanId() {
        return this.oceanId;
    }
    /**
     * The Ocean virtual node group resource limits object.
     * 
     */
    @Export(name="resourceLimits", type=OceanLaunchSpecResourceLimits.class, parameters={})
    private Output</* @Nullable */ OceanLaunchSpecResourceLimits> resourceLimits;

    /**
     * @return The Ocean virtual node group resource limits object.
     * 
     */
    public Output<Optional<OceanLaunchSpecResourceLimits>> resourceLimits() {
        return Codegen.optional(this.resourceLimits);
    }
    /**
     * Boolean. When set to `true`, VNG nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.
     * 
     */
    @Export(name="restrictScaleDown", type=Boolean.class, parameters={})
    private Output<Boolean> restrictScaleDown;

    /**
     * @return Boolean. When set to `true`, VNG nodes will be treated as if all pods running have the restrict-scale-down label. Therefore, Ocean will not scale nodes down unless empty.
     * 
     */
    public Output<Boolean> restrictScaleDown() {
        return this.restrictScaleDown;
    }
    /**
     * Root volume size (in GB).
     * 
     */
    @Export(name="rootVolumeSize", type=Integer.class, parameters={})
    private Output<Integer> rootVolumeSize;

    /**
     * @return Root volume size (in GB).
     * 
     */
    public Output<Integer> rootVolumeSize() {
        return this.rootVolumeSize;
    }
    /**
     * Root volume disk type. Valid values: `&#34;pd-standard&#34;`, `&#34;pd-ssd&#34;`.
     * 
     */
    @Export(name="rootVolumeType", type=String.class, parameters={})
    private Output<String> rootVolumeType;

    /**
     * @return Root volume disk type. Valid values: `&#34;pd-standard&#34;`, `&#34;pd-ssd&#34;`.
     * 
     */
    public Output<String> rootVolumeType() {
        return this.rootVolumeType;
    }
    /**
     * Used to define scheduled tasks such as a manual headroom update.
     * 
     */
    @Export(name="schedulingTasks", type=List.class, parameters={OceanLaunchSpecSchedulingTask.class})
    private Output</* @Nullable */ List<OceanLaunchSpecSchedulingTask>> schedulingTasks;

    /**
     * @return Used to define scheduled tasks such as a manual headroom update.
     * 
     */
    public Output<Optional<List<OceanLaunchSpecSchedulingTask>>> schedulingTasks() {
        return Codegen.optional(this.schedulingTasks);
    }
    /**
     * The account used by applications running on the VM to call GCP APIs.
     * 
     */
    @Export(name="serviceAccount", type=String.class, parameters={})
    private Output<String> serviceAccount;

    /**
     * @return The account used by applications running on the VM to call GCP APIs.
     * 
     */
    public Output<String> serviceAccount() {
        return this.serviceAccount;
    }
    /**
     * The Ocean shielded instance configuration object.
     * 
     */
    @Export(name="shieldedInstanceConfig", type=OceanLaunchSpecShieldedInstanceConfig.class, parameters={})
    private Output<OceanLaunchSpecShieldedInstanceConfig> shieldedInstanceConfig;

    /**
     * @return The Ocean shielded instance configuration object.
     * 
     */
    public Output<OceanLaunchSpecShieldedInstanceConfig> shieldedInstanceConfig() {
        return this.shieldedInstanceConfig;
    }
    /**
     * Image URL.
     * 
     */
    @Export(name="sourceImage", type=String.class, parameters={})
    private Output<String> sourceImage;

    /**
     * @return Image URL.
     * 
     */
    public Output<String> sourceImage() {
        return this.sourceImage;
    }
    /**
     * The Ocean virtual node group storage object.
     * 
     */
    @Export(name="storage", type=OceanLaunchSpecStorage.class, parameters={})
    private Output<OceanLaunchSpecStorage> storage;

    /**
     * @return The Ocean virtual node group storage object.
     * 
     */
    public Output<OceanLaunchSpecStorage> storage() {
        return this.storage;
    }
    /**
     * The Ocean Launch Spec Strategy object.
     * 
     */
    @Export(name="strategies", type=List.class, parameters={OceanLaunchSpecStrategy.class})
    private Output</* @Nullable */ List<OceanLaunchSpecStrategy>> strategies;

    /**
     * @return The Ocean Launch Spec Strategy object.
     * 
     */
    public Output<Optional<List<OceanLaunchSpecStrategy>>> strategies() {
        return Codegen.optional(this.strategies);
    }
    /**
     * Optionally adds labels to instances launched in an Ocean cluster.
     * 
     */
    @Export(name="taints", type=List.class, parameters={OceanLaunchSpecTaint.class})
    private Output<List<OceanLaunchSpecTaint>> taints;

    /**
     * @return Optionally adds labels to instances launched in an Ocean cluster.
     * 
     */
    public Output<List<OceanLaunchSpecTaint>> taints() {
        return this.taints;
    }
    @Export(name="updatePolicy", type=OceanLaunchSpecUpdatePolicy.class, parameters={})
    private Output</* @Nullable */ OceanLaunchSpecUpdatePolicy> updatePolicy;

    public Output<Optional<OceanLaunchSpecUpdatePolicy>> updatePolicy() {
        return Codegen.optional(this.updatePolicy);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OceanLaunchSpec(String name) {
        this(name, OceanLaunchSpecArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OceanLaunchSpec(String name, OceanLaunchSpecArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OceanLaunchSpec(String name, OceanLaunchSpecArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("spotinst:gke/oceanLaunchSpec:OceanLaunchSpec", name, args == null ? OceanLaunchSpecArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private OceanLaunchSpec(String name, Output<String> id, @Nullable OceanLaunchSpecState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("spotinst:gke/oceanLaunchSpec:OceanLaunchSpec", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OceanLaunchSpec get(String name, Output<String> id, @Nullable OceanLaunchSpecState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OceanLaunchSpec(name, id, state, options);
    }
}

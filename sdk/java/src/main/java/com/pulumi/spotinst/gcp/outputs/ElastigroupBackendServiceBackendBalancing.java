// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.gcp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ElastigroupBackendServiceBackendBalancing {
    /**
     * @return The backend balancing mode. Valid values: `RATE`, `UTILIZATION`.
     * 
     */
    private @Nullable String backendBalancingMode;
    /**
     * @return If the backendBalancingMode is set to RATE, this field is required.
     * 
     * Usage:
     * 
     */
    private @Nullable Integer maxRatePerInstance;

    private ElastigroupBackendServiceBackendBalancing() {}
    /**
     * @return The backend balancing mode. Valid values: `RATE`, `UTILIZATION`.
     * 
     */
    public Optional<String> backendBalancingMode() {
        return Optional.ofNullable(this.backendBalancingMode);
    }
    /**
     * @return If the backendBalancingMode is set to RATE, this field is required.
     * 
     * Usage:
     * 
     */
    public Optional<Integer> maxRatePerInstance() {
        return Optional.ofNullable(this.maxRatePerInstance);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ElastigroupBackendServiceBackendBalancing defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backendBalancingMode;
        private @Nullable Integer maxRatePerInstance;
        public Builder() {}
        public Builder(ElastigroupBackendServiceBackendBalancing defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendBalancingMode = defaults.backendBalancingMode;
    	      this.maxRatePerInstance = defaults.maxRatePerInstance;
        }

        @CustomType.Setter
        public Builder backendBalancingMode(@Nullable String backendBalancingMode) {

            this.backendBalancingMode = backendBalancingMode;
            return this;
        }
        @CustomType.Setter
        public Builder maxRatePerInstance(@Nullable Integer maxRatePerInstance) {

            this.maxRatePerInstance = maxRatePerInstance;
            return this;
        }
        public ElastigroupBackendServiceBackendBalancing build() {
            final var _resultValue = new ElastigroupBackendServiceBackendBalancing();
            _resultValue.backendBalancingMode = backendBalancingMode;
            _resultValue.maxRatePerInstance = maxRatePerInstance;
            return _resultValue;
        }
    }
}

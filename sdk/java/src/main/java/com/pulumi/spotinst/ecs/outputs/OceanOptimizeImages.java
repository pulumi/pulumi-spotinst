// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class OceanOptimizeImages {
    /**
     * @return String. Valid values: &#34;always&#34; &#34;never&#34; &#34;timeWindow&#34;.
     * 
     */
    private String performAt;
    /**
     * @return Boolean. Enable auto image (AMI) update for the ECS container instances. The auto update applies for ECS-Optimized AMIs.
     * 
     */
    private Boolean shouldOptimizeEcsAmi;
    /**
     * @return Array of strings. Set time windows for image update, at least one time window. Each string is in the format of ddd:hh:mm-ddd:hh:mm ddd. Time windows should not overlap.
     * 
     */
    private @Nullable List<String> timeWindows;

    private OceanOptimizeImages() {}
    /**
     * @return String. Valid values: &#34;always&#34; &#34;never&#34; &#34;timeWindow&#34;.
     * 
     */
    public String performAt() {
        return this.performAt;
    }
    /**
     * @return Boolean. Enable auto image (AMI) update for the ECS container instances. The auto update applies for ECS-Optimized AMIs.
     * 
     */
    public Boolean shouldOptimizeEcsAmi() {
        return this.shouldOptimizeEcsAmi;
    }
    /**
     * @return Array of strings. Set time windows for image update, at least one time window. Each string is in the format of ddd:hh:mm-ddd:hh:mm ddd. Time windows should not overlap.
     * 
     */
    public List<String> timeWindows() {
        return this.timeWindows == null ? List.of() : this.timeWindows;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OceanOptimizeImages defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String performAt;
        private Boolean shouldOptimizeEcsAmi;
        private @Nullable List<String> timeWindows;
        public Builder() {}
        public Builder(OceanOptimizeImages defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.performAt = defaults.performAt;
    	      this.shouldOptimizeEcsAmi = defaults.shouldOptimizeEcsAmi;
    	      this.timeWindows = defaults.timeWindows;
        }

        @CustomType.Setter
        public Builder performAt(String performAt) {
            this.performAt = Objects.requireNonNull(performAt);
            return this;
        }
        @CustomType.Setter
        public Builder shouldOptimizeEcsAmi(Boolean shouldOptimizeEcsAmi) {
            this.shouldOptimizeEcsAmi = Objects.requireNonNull(shouldOptimizeEcsAmi);
            return this;
        }
        @CustomType.Setter
        public Builder timeWindows(@Nullable List<String> timeWindows) {
            this.timeWindows = timeWindows;
            return this;
        }
        public Builder timeWindows(String... timeWindows) {
            return timeWindows(List.of(timeWindows));
        }
        public OceanOptimizeImages build() {
            final var _resultValue = new OceanOptimizeImages();
            _resultValue.performAt = performAt;
            _resultValue.shouldOptimizeEcsAmi = shouldOptimizeEcsAmi;
            _resultValue.timeWindows = timeWindows;
            return _resultValue;
        }
    }
}

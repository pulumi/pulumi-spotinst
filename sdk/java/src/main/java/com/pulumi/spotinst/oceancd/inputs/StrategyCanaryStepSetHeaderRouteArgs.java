// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.oceancd.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.spotinst.oceancd.inputs.StrategyCanaryStepSetHeaderRouteMatchArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class StrategyCanaryStepSetHeaderRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final StrategyCanaryStepSetHeaderRouteArgs Empty = new StrategyCanaryStepSetHeaderRouteArgs();

    /**
     * The name of the HeaderRoute group.
     * 
     */
    @Import(name="headerRouteName", required=true)
    private Output<String> headerRouteName;

    /**
     * @return The name of the HeaderRoute group.
     * 
     */
    public Output<String> headerRouteName() {
        return this.headerRouteName;
    }

    /**
     * The matching rules for the header route.
     * 
     */
    @Import(name="matches", required=true)
    private Output<List<StrategyCanaryStepSetHeaderRouteMatchArgs>> matches;

    /**
     * @return The matching rules for the header route.
     * 
     */
    public Output<List<StrategyCanaryStepSetHeaderRouteMatchArgs>> matches() {
        return this.matches;
    }

    private StrategyCanaryStepSetHeaderRouteArgs() {}

    private StrategyCanaryStepSetHeaderRouteArgs(StrategyCanaryStepSetHeaderRouteArgs $) {
        this.headerRouteName = $.headerRouteName;
        this.matches = $.matches;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StrategyCanaryStepSetHeaderRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StrategyCanaryStepSetHeaderRouteArgs $;

        public Builder() {
            $ = new StrategyCanaryStepSetHeaderRouteArgs();
        }

        public Builder(StrategyCanaryStepSetHeaderRouteArgs defaults) {
            $ = new StrategyCanaryStepSetHeaderRouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param headerRouteName The name of the HeaderRoute group.
         * 
         * @return builder
         * 
         */
        public Builder headerRouteName(Output<String> headerRouteName) {
            $.headerRouteName = headerRouteName;
            return this;
        }

        /**
         * @param headerRouteName The name of the HeaderRoute group.
         * 
         * @return builder
         * 
         */
        public Builder headerRouteName(String headerRouteName) {
            return headerRouteName(Output.of(headerRouteName));
        }

        /**
         * @param matches The matching rules for the header route.
         * 
         * @return builder
         * 
         */
        public Builder matches(Output<List<StrategyCanaryStepSetHeaderRouteMatchArgs>> matches) {
            $.matches = matches;
            return this;
        }

        /**
         * @param matches The matching rules for the header route.
         * 
         * @return builder
         * 
         */
        public Builder matches(List<StrategyCanaryStepSetHeaderRouteMatchArgs> matches) {
            return matches(Output.of(matches));
        }

        /**
         * @param matches The matching rules for the header route.
         * 
         * @return builder
         * 
         */
        public Builder matches(StrategyCanaryStepSetHeaderRouteMatchArgs... matches) {
            return matches(List.of(matches));
        }

        public StrategyCanaryStepSetHeaderRouteArgs build() {
            if ($.headerRouteName == null) {
                throw new MissingRequiredPropertyException("StrategyCanaryStepSetHeaderRouteArgs", "headerRouteName");
            }
            if ($.matches == null) {
                throw new MissingRequiredPropertyException("StrategyCanaryStepSetHeaderRouteArgs", "matches");
            }
            return $;
        }
    }

}

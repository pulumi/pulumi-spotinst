// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.aws.inputs.ElastigroupScalingUpPolicyStepAdjustmentActionArgs;
import java.lang.Integer;
import java.util.Objects;


public final class ElastigroupScalingUpPolicyStepAdjustmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ElastigroupScalingUpPolicyStepAdjustmentArgs Empty = new ElastigroupScalingUpPolicyStepAdjustmentArgs();

    /**
     * Action to take. Valid values: `REPLACE_SERVER`, `RESTART_SERVER`.
     * 
     */
    @Import(name="action", required=true)
    private Output<ElastigroupScalingUpPolicyStepAdjustmentActionArgs> action;

    /**
     * @return Action to take. Valid values: `REPLACE_SERVER`, `RESTART_SERVER`.
     * 
     */
    public Output<ElastigroupScalingUpPolicyStepAdjustmentActionArgs> action() {
        return this.action;
    }

    /**
     * The value against which the specified statistic is compared. If a `step_adjustment` object is defined, then it cannot be specified.
     * 
     */
    @Import(name="threshold", required=true)
    private Output<Integer> threshold;

    /**
     * @return The value against which the specified statistic is compared. If a `step_adjustment` object is defined, then it cannot be specified.
     * 
     */
    public Output<Integer> threshold() {
        return this.threshold;
    }

    private ElastigroupScalingUpPolicyStepAdjustmentArgs() {}

    private ElastigroupScalingUpPolicyStepAdjustmentArgs(ElastigroupScalingUpPolicyStepAdjustmentArgs $) {
        this.action = $.action;
        this.threshold = $.threshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ElastigroupScalingUpPolicyStepAdjustmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ElastigroupScalingUpPolicyStepAdjustmentArgs $;

        public Builder() {
            $ = new ElastigroupScalingUpPolicyStepAdjustmentArgs();
        }

        public Builder(ElastigroupScalingUpPolicyStepAdjustmentArgs defaults) {
            $ = new ElastigroupScalingUpPolicyStepAdjustmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Action to take. Valid values: `REPLACE_SERVER`, `RESTART_SERVER`.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<ElastigroupScalingUpPolicyStepAdjustmentActionArgs> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Action to take. Valid values: `REPLACE_SERVER`, `RESTART_SERVER`.
         * 
         * @return builder
         * 
         */
        public Builder action(ElastigroupScalingUpPolicyStepAdjustmentActionArgs action) {
            return action(Output.of(action));
        }

        /**
         * @param threshold The value against which the specified statistic is compared. If a `step_adjustment` object is defined, then it cannot be specified.
         * 
         * @return builder
         * 
         */
        public Builder threshold(Output<Integer> threshold) {
            $.threshold = threshold;
            return this;
        }

        /**
         * @param threshold The value against which the specified statistic is compared. If a `step_adjustment` object is defined, then it cannot be specified.
         * 
         * @return builder
         * 
         */
        public Builder threshold(Integer threshold) {
            return threshold(Output.of(threshold));
        }

        public ElastigroupScalingUpPolicyStepAdjustmentArgs build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.threshold = Objects.requireNonNull($.threshold, "expected parameter 'threshold' to be non-null");
            return $;
        }
    }

}

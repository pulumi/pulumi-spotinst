// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanLaunchSpecImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanLaunchSpecImageArgs Empty = new OceanLaunchSpecImageArgs();

    /**
     * Identifier of the image in AWS. Valid values: any string which is not empty or null.
     * 
     */
    @Import(name="imageId")
    private @Nullable Output<String> imageId;

    /**
     * @return Identifier of the image in AWS. Valid values: any string which is not empty or null.
     * 
     */
    public Optional<Output<String>> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    private OceanLaunchSpecImageArgs() {}

    private OceanLaunchSpecImageArgs(OceanLaunchSpecImageArgs $) {
        this.imageId = $.imageId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanLaunchSpecImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanLaunchSpecImageArgs $;

        public Builder() {
            $ = new OceanLaunchSpecImageArgs();
        }

        public Builder(OceanLaunchSpecImageArgs defaults) {
            $ = new OceanLaunchSpecImageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param imageId Identifier of the image in AWS. Valid values: any string which is not empty or null.
         * 
         * @return builder
         * 
         */
        public Builder imageId(@Nullable Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        /**
         * @param imageId Identifier of the image in AWS. Valid values: any string which is not empty or null.
         * 
         * @return builder
         * 
         */
        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        public OceanLaunchSpecImageArgs build() {
            return $;
        }
    }

}

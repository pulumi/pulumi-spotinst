// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.azure.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.azure.inputs.OceanNetworkNetworkInterfaceArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanNetworkArgs Empty = new OceanNetworkArgs();

    /**
     * A list of virtual network interfaces. The publicIpSku must be identical between all the network interfaces. One network interface must be set as the primary.
     * 
     */
    @Import(name="networkInterfaces")
    private @Nullable Output<List<OceanNetworkNetworkInterfaceArgs>> networkInterfaces;

    /**
     * @return A list of virtual network interfaces. The publicIpSku must be identical between all the network interfaces. One network interface must be set as the primary.
     * 
     */
    public Optional<Output<List<OceanNetworkNetworkInterfaceArgs>>> networkInterfaces() {
        return Optional.ofNullable(this.networkInterfaces);
    }

    /**
     * The Resource Group name of the Load Balancer.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The Resource Group name of the Load Balancer.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * Virtual network.
     * 
     */
    @Import(name="virtualNetworkName")
    private @Nullable Output<String> virtualNetworkName;

    /**
     * @return Virtual network.
     * 
     */
    public Optional<Output<String>> virtualNetworkName() {
        return Optional.ofNullable(this.virtualNetworkName);
    }

    private OceanNetworkArgs() {}

    private OceanNetworkArgs(OceanNetworkArgs $) {
        this.networkInterfaces = $.networkInterfaces;
        this.resourceGroupName = $.resourceGroupName;
        this.virtualNetworkName = $.virtualNetworkName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanNetworkArgs $;

        public Builder() {
            $ = new OceanNetworkArgs();
        }

        public Builder(OceanNetworkArgs defaults) {
            $ = new OceanNetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkInterfaces A list of virtual network interfaces. The publicIpSku must be identical between all the network interfaces. One network interface must be set as the primary.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaces(@Nullable Output<List<OceanNetworkNetworkInterfaceArgs>> networkInterfaces) {
            $.networkInterfaces = networkInterfaces;
            return this;
        }

        /**
         * @param networkInterfaces A list of virtual network interfaces. The publicIpSku must be identical between all the network interfaces. One network interface must be set as the primary.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaces(List<OceanNetworkNetworkInterfaceArgs> networkInterfaces) {
            return networkInterfaces(Output.of(networkInterfaces));
        }

        /**
         * @param networkInterfaces A list of virtual network interfaces. The publicIpSku must be identical between all the network interfaces. One network interface must be set as the primary.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaces(OceanNetworkNetworkInterfaceArgs... networkInterfaces) {
            return networkInterfaces(List.of(networkInterfaces));
        }

        /**
         * @param resourceGroupName The Resource Group name of the Load Balancer.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The Resource Group name of the Load Balancer.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param virtualNetworkName Virtual network.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkName(@Nullable Output<String> virtualNetworkName) {
            $.virtualNetworkName = virtualNetworkName;
            return this;
        }

        /**
         * @param virtualNetworkName Virtual network.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkName(String virtualNetworkName) {
            return virtualNetworkName(Output.of(virtualNetworkName));
        }

        public OceanNetworkArgs build() {
            return $;
        }
    }

}

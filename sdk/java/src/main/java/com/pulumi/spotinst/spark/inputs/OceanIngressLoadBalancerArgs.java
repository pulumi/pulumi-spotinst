// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.spark.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanIngressLoadBalancerArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanIngressLoadBalancerArgs Empty = new OceanIngressLoadBalancerArgs();

    /**
     * - Should a load balancer managed by Ocean for Apache Spark be provisioned for the cluster. Set this to false if you want to use an existing load balancer (only available on AWS).
     * 
     */
    @Import(name="managed")
    private @Nullable Output<Boolean> managed;

    /**
     * @return - Should a load balancer managed by Ocean for Apache Spark be provisioned for the cluster. Set this to false if you want to use an existing load balancer (only available on AWS).
     * 
     */
    public Optional<Output<Boolean>> managed() {
        return Optional.ofNullable(this.managed);
    }

    /**
     * - Annotations to add to the ingress controller load balancer service. This is useful to configure properties of the managed load balancer, like the nature of the load balancer (e.g. ELB, NLB, ALB on AWS), the security groups, or various timeouts.
     * 
     */
    @Import(name="serviceAnnotations")
    private @Nullable Output<Map<String,String>> serviceAnnotations;

    /**
     * @return - Annotations to add to the ingress controller load balancer service. This is useful to configure properties of the managed load balancer, like the nature of the load balancer (e.g. ELB, NLB, ALB on AWS), the security groups, or various timeouts.
     * 
     */
    public Optional<Output<Map<String,String>>> serviceAnnotations() {
        return Optional.ofNullable(this.serviceAnnotations);
    }

    /**
     * - The ARN of a target group that the Ocean for Apache Spark ingress controller will be bound to. Set this to use an existing load balancer with Ocean for Apache Spark. Has no effect if using a managed load balancer. Only available on AWS.
     * 
     */
    @Import(name="targetGroupArn")
    private @Nullable Output<String> targetGroupArn;

    /**
     * @return - The ARN of a target group that the Ocean for Apache Spark ingress controller will be bound to. Set this to use an existing load balancer with Ocean for Apache Spark. Has no effect if using a managed load balancer. Only available on AWS.
     * 
     */
    public Optional<Output<String>> targetGroupArn() {
        return Optional.ofNullable(this.targetGroupArn);
    }

    private OceanIngressLoadBalancerArgs() {}

    private OceanIngressLoadBalancerArgs(OceanIngressLoadBalancerArgs $) {
        this.managed = $.managed;
        this.serviceAnnotations = $.serviceAnnotations;
        this.targetGroupArn = $.targetGroupArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanIngressLoadBalancerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanIngressLoadBalancerArgs $;

        public Builder() {
            $ = new OceanIngressLoadBalancerArgs();
        }

        public Builder(OceanIngressLoadBalancerArgs defaults) {
            $ = new OceanIngressLoadBalancerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param managed - Should a load balancer managed by Ocean for Apache Spark be provisioned for the cluster. Set this to false if you want to use an existing load balancer (only available on AWS).
         * 
         * @return builder
         * 
         */
        public Builder managed(@Nullable Output<Boolean> managed) {
            $.managed = managed;
            return this;
        }

        /**
         * @param managed - Should a load balancer managed by Ocean for Apache Spark be provisioned for the cluster. Set this to false if you want to use an existing load balancer (only available on AWS).
         * 
         * @return builder
         * 
         */
        public Builder managed(Boolean managed) {
            return managed(Output.of(managed));
        }

        /**
         * @param serviceAnnotations - Annotations to add to the ingress controller load balancer service. This is useful to configure properties of the managed load balancer, like the nature of the load balancer (e.g. ELB, NLB, ALB on AWS), the security groups, or various timeouts.
         * 
         * @return builder
         * 
         */
        public Builder serviceAnnotations(@Nullable Output<Map<String,String>> serviceAnnotations) {
            $.serviceAnnotations = serviceAnnotations;
            return this;
        }

        /**
         * @param serviceAnnotations - Annotations to add to the ingress controller load balancer service. This is useful to configure properties of the managed load balancer, like the nature of the load balancer (e.g. ELB, NLB, ALB on AWS), the security groups, or various timeouts.
         * 
         * @return builder
         * 
         */
        public Builder serviceAnnotations(Map<String,String> serviceAnnotations) {
            return serviceAnnotations(Output.of(serviceAnnotations));
        }

        /**
         * @param targetGroupArn - The ARN of a target group that the Ocean for Apache Spark ingress controller will be bound to. Set this to use an existing load balancer with Ocean for Apache Spark. Has no effect if using a managed load balancer. Only available on AWS.
         * 
         * @return builder
         * 
         */
        public Builder targetGroupArn(@Nullable Output<String> targetGroupArn) {
            $.targetGroupArn = targetGroupArn;
            return this;
        }

        /**
         * @param targetGroupArn - The ARN of a target group that the Ocean for Apache Spark ingress controller will be bound to. Set this to use an existing load balancer with Ocean for Apache Spark. Has no effect if using a managed load balancer. Only available on AWS.
         * 
         * @return builder
         * 
         */
        public Builder targetGroupArn(String targetGroupArn) {
            return targetGroupArn(Output.of(targetGroupArn));
        }

        public OceanIngressLoadBalancerArgs build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.aws.inputs.SuspensionSuspensionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SuspensionState extends com.pulumi.resources.ResourceArgs {

    public static final SuspensionState Empty = new SuspensionState();

    /**
     * Elastigroup ID to apply the suspensions on.
     * 
     */
    @Import(name="groupId")
    private @Nullable Output<String> groupId;

    /**
     * @return Elastigroup ID to apply the suspensions on.
     * 
     */
    public Optional<Output<String>> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * block of single process to suspend.
     * 
     */
    @Import(name="suspensions")
    private @Nullable Output<List<SuspensionSuspensionArgs>> suspensions;

    /**
     * @return block of single process to suspend.
     * 
     */
    public Optional<Output<List<SuspensionSuspensionArgs>>> suspensions() {
        return Optional.ofNullable(this.suspensions);
    }

    private SuspensionState() {}

    private SuspensionState(SuspensionState $) {
        this.groupId = $.groupId;
        this.suspensions = $.suspensions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SuspensionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SuspensionState $;

        public Builder() {
            $ = new SuspensionState();
        }

        public Builder(SuspensionState defaults) {
            $ = new SuspensionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupId Elastigroup ID to apply the suspensions on.
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId Elastigroup ID to apply the suspensions on.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param suspensions block of single process to suspend.
         * 
         * @return builder
         * 
         */
        public Builder suspensions(@Nullable Output<List<SuspensionSuspensionArgs>> suspensions) {
            $.suspensions = suspensions;
            return this;
        }

        /**
         * @param suspensions block of single process to suspend.
         * 
         * @return builder
         * 
         */
        public Builder suspensions(List<SuspensionSuspensionArgs> suspensions) {
            return suspensions(Output.of(suspensions));
        }

        /**
         * @param suspensions block of single process to suspend.
         * 
         * @return builder
         * 
         */
        public Builder suspensions(SuspensionSuspensionArgs... suspensions) {
            return suspensions(List.of(suspensions));
        }

        public SuspensionState build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.inputs.ElastigroupAzureV3ImageArgs;
import com.pulumi.spotinst.inputs.ElastigroupAzureV3LoginArgs;
import com.pulumi.spotinst.inputs.ElastigroupAzureV3ManagedServiceIdentityArgs;
import com.pulumi.spotinst.inputs.ElastigroupAzureV3NetworkArgs;
import com.pulumi.spotinst.inputs.ElastigroupAzureV3StrategyArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ElastigroupAzureV3Args extends com.pulumi.resources.ResourceArgs {

    public static final ElastigroupAzureV3Args Empty = new ElastigroupAzureV3Args();

    /**
     * Custom init script file or text in Base64 encoded format.
     * 
     */
    @Import(name="customData")
    private @Nullable Output<String> customData;

    /**
     * @return Custom init script file or text in Base64 encoded format.
     * 
     */
    public Optional<Output<String>> customData() {
        return Optional.ofNullable(this.customData);
    }

    /**
     * The desired number of instances the group should have at any time.
     * 
     */
    @Import(name="desiredCapacity")
    private @Nullable Output<Integer> desiredCapacity;

    /**
     * @return The desired number of instances the group should have at any time.
     * 
     */
    public Optional<Output<Integer>> desiredCapacity() {
        return Optional.ofNullable(this.desiredCapacity);
    }

    @Import(name="images")
    private @Nullable Output<List<ElastigroupAzureV3ImageArgs>> images;

    public Optional<Output<List<ElastigroupAzureV3ImageArgs>>> images() {
        return Optional.ofNullable(this.images);
    }

    @Import(name="login")
    private @Nullable Output<ElastigroupAzureV3LoginArgs> login;

    public Optional<Output<ElastigroupAzureV3LoginArgs>> login() {
        return Optional.ofNullable(this.login);
    }

    /**
     * List of Managed Service Identity objects.
     * 
     */
    @Import(name="managedServiceIdentities")
    private @Nullable Output<List<ElastigroupAzureV3ManagedServiceIdentityArgs>> managedServiceIdentities;

    /**
     * @return List of Managed Service Identity objects.
     * 
     */
    public Optional<Output<List<ElastigroupAzureV3ManagedServiceIdentityArgs>>> managedServiceIdentities() {
        return Optional.ofNullable(this.managedServiceIdentities);
    }

    /**
     * The maximum number of instances the group should have at any time.
     * 
     */
    @Import(name="maxSize")
    private @Nullable Output<Integer> maxSize;

    /**
     * @return The maximum number of instances the group should have at any time.
     * 
     */
    public Optional<Output<Integer>> maxSize() {
        return Optional.ofNullable(this.maxSize);
    }

    /**
     * The minimum number of instances the group should have at any time.
     * 
     */
    @Import(name="minSize")
    private @Nullable Output<Integer> minSize;

    /**
     * @return The minimum number of instances the group should have at any time.
     * 
     */
    public Optional<Output<Integer>> minSize() {
        return Optional.ofNullable(this.minSize);
    }

    /**
     * Name of the Managed Service Identity.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Managed Service Identity.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="network", required=true)
    private Output<ElastigroupAzureV3NetworkArgs> network;

    public Output<ElastigroupAzureV3NetworkArgs> network() {
        return this.network;
    }

    /**
     * Available On-Demand sizes
     * 
     */
    @Import(name="odSizes", required=true)
    private Output<List<String>> odSizes;

    /**
     * @return Available On-Demand sizes
     * 
     */
    public Output<List<String>> odSizes() {
        return this.odSizes;
    }

    /**
     * Type of the operating system. Valid values: `&#34;Linux&#34;`, `&#34;Windows&#34;`.
     * 
     */
    @Import(name="os", required=true)
    private Output<String> os;

    /**
     * @return Type of the operating system. Valid values: `&#34;Linux&#34;`, `&#34;Windows&#34;`.
     * 
     */
    public Output<String> os() {
        return this.os;
    }

    /**
     * The region your Azure group will be created in.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return The region your Azure group will be created in.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     * Name of the Azure Resource Group where the Managed Service Identity is located.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the Azure Resource Group where the Managed Service Identity is located.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Available Low-Priority sizes.
     * 
     */
    @Import(name="spotSizes", required=true)
    private Output<List<String>> spotSizes;

    /**
     * @return Available Low-Priority sizes.
     * 
     */
    public Output<List<String>> spotSizes() {
        return this.spotSizes;
    }

    @Import(name="strategy", required=true)
    private Output<ElastigroupAzureV3StrategyArgs> strategy;

    public Output<ElastigroupAzureV3StrategyArgs> strategy() {
        return this.strategy;
    }

    private ElastigroupAzureV3Args() {}

    private ElastigroupAzureV3Args(ElastigroupAzureV3Args $) {
        this.customData = $.customData;
        this.desiredCapacity = $.desiredCapacity;
        this.images = $.images;
        this.login = $.login;
        this.managedServiceIdentities = $.managedServiceIdentities;
        this.maxSize = $.maxSize;
        this.minSize = $.minSize;
        this.name = $.name;
        this.network = $.network;
        this.odSizes = $.odSizes;
        this.os = $.os;
        this.region = $.region;
        this.resourceGroupName = $.resourceGroupName;
        this.spotSizes = $.spotSizes;
        this.strategy = $.strategy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ElastigroupAzureV3Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ElastigroupAzureV3Args $;

        public Builder() {
            $ = new ElastigroupAzureV3Args();
        }

        public Builder(ElastigroupAzureV3Args defaults) {
            $ = new ElastigroupAzureV3Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param customData Custom init script file or text in Base64 encoded format.
         * 
         * @return builder
         * 
         */
        public Builder customData(@Nullable Output<String> customData) {
            $.customData = customData;
            return this;
        }

        /**
         * @param customData Custom init script file or text in Base64 encoded format.
         * 
         * @return builder
         * 
         */
        public Builder customData(String customData) {
            return customData(Output.of(customData));
        }

        /**
         * @param desiredCapacity The desired number of instances the group should have at any time.
         * 
         * @return builder
         * 
         */
        public Builder desiredCapacity(@Nullable Output<Integer> desiredCapacity) {
            $.desiredCapacity = desiredCapacity;
            return this;
        }

        /**
         * @param desiredCapacity The desired number of instances the group should have at any time.
         * 
         * @return builder
         * 
         */
        public Builder desiredCapacity(Integer desiredCapacity) {
            return desiredCapacity(Output.of(desiredCapacity));
        }

        public Builder images(@Nullable Output<List<ElastigroupAzureV3ImageArgs>> images) {
            $.images = images;
            return this;
        }

        public Builder images(List<ElastigroupAzureV3ImageArgs> images) {
            return images(Output.of(images));
        }

        public Builder images(ElastigroupAzureV3ImageArgs... images) {
            return images(List.of(images));
        }

        public Builder login(@Nullable Output<ElastigroupAzureV3LoginArgs> login) {
            $.login = login;
            return this;
        }

        public Builder login(ElastigroupAzureV3LoginArgs login) {
            return login(Output.of(login));
        }

        /**
         * @param managedServiceIdentities List of Managed Service Identity objects.
         * 
         * @return builder
         * 
         */
        public Builder managedServiceIdentities(@Nullable Output<List<ElastigroupAzureV3ManagedServiceIdentityArgs>> managedServiceIdentities) {
            $.managedServiceIdentities = managedServiceIdentities;
            return this;
        }

        /**
         * @param managedServiceIdentities List of Managed Service Identity objects.
         * 
         * @return builder
         * 
         */
        public Builder managedServiceIdentities(List<ElastigroupAzureV3ManagedServiceIdentityArgs> managedServiceIdentities) {
            return managedServiceIdentities(Output.of(managedServiceIdentities));
        }

        /**
         * @param managedServiceIdentities List of Managed Service Identity objects.
         * 
         * @return builder
         * 
         */
        public Builder managedServiceIdentities(ElastigroupAzureV3ManagedServiceIdentityArgs... managedServiceIdentities) {
            return managedServiceIdentities(List.of(managedServiceIdentities));
        }

        /**
         * @param maxSize The maximum number of instances the group should have at any time.
         * 
         * @return builder
         * 
         */
        public Builder maxSize(@Nullable Output<Integer> maxSize) {
            $.maxSize = maxSize;
            return this;
        }

        /**
         * @param maxSize The maximum number of instances the group should have at any time.
         * 
         * @return builder
         * 
         */
        public Builder maxSize(Integer maxSize) {
            return maxSize(Output.of(maxSize));
        }

        /**
         * @param minSize The minimum number of instances the group should have at any time.
         * 
         * @return builder
         * 
         */
        public Builder minSize(@Nullable Output<Integer> minSize) {
            $.minSize = minSize;
            return this;
        }

        /**
         * @param minSize The minimum number of instances the group should have at any time.
         * 
         * @return builder
         * 
         */
        public Builder minSize(Integer minSize) {
            return minSize(Output.of(minSize));
        }

        /**
         * @param name Name of the Managed Service Identity.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Managed Service Identity.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder network(Output<ElastigroupAzureV3NetworkArgs> network) {
            $.network = network;
            return this;
        }

        public Builder network(ElastigroupAzureV3NetworkArgs network) {
            return network(Output.of(network));
        }

        /**
         * @param odSizes Available On-Demand sizes
         * 
         * @return builder
         * 
         */
        public Builder odSizes(Output<List<String>> odSizes) {
            $.odSizes = odSizes;
            return this;
        }

        /**
         * @param odSizes Available On-Demand sizes
         * 
         * @return builder
         * 
         */
        public Builder odSizes(List<String> odSizes) {
            return odSizes(Output.of(odSizes));
        }

        /**
         * @param odSizes Available On-Demand sizes
         * 
         * @return builder
         * 
         */
        public Builder odSizes(String... odSizes) {
            return odSizes(List.of(odSizes));
        }

        /**
         * @param os Type of the operating system. Valid values: `&#34;Linux&#34;`, `&#34;Windows&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder os(Output<String> os) {
            $.os = os;
            return this;
        }

        /**
         * @param os Type of the operating system. Valid values: `&#34;Linux&#34;`, `&#34;Windows&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder os(String os) {
            return os(Output.of(os));
        }

        /**
         * @param region The region your Azure group will be created in.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region your Azure group will be created in.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param resourceGroupName Name of the Azure Resource Group where the Managed Service Identity is located.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the Azure Resource Group where the Managed Service Identity is located.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param spotSizes Available Low-Priority sizes.
         * 
         * @return builder
         * 
         */
        public Builder spotSizes(Output<List<String>> spotSizes) {
            $.spotSizes = spotSizes;
            return this;
        }

        /**
         * @param spotSizes Available Low-Priority sizes.
         * 
         * @return builder
         * 
         */
        public Builder spotSizes(List<String> spotSizes) {
            return spotSizes(Output.of(spotSizes));
        }

        /**
         * @param spotSizes Available Low-Priority sizes.
         * 
         * @return builder
         * 
         */
        public Builder spotSizes(String... spotSizes) {
            return spotSizes(List.of(spotSizes));
        }

        public Builder strategy(Output<ElastigroupAzureV3StrategyArgs> strategy) {
            $.strategy = strategy;
            return this;
        }

        public Builder strategy(ElastigroupAzureV3StrategyArgs strategy) {
            return strategy(Output.of(strategy));
        }

        public ElastigroupAzureV3Args build() {
            $.network = Objects.requireNonNull($.network, "expected parameter 'network' to be non-null");
            $.odSizes = Objects.requireNonNull($.odSizes, "expected parameter 'odSizes' to be non-null");
            $.os = Objects.requireNonNull($.os, "expected parameter 'os' to be non-null");
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.spotSizes = Objects.requireNonNull($.spotSizes, "expected parameter 'spotSizes' to be non-null");
            $.strategy = Objects.requireNonNull($.strategy, "expected parameter 'strategy' to be non-null");
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.gke.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.spotinst.gke.outputs.OceanImportScheduledTaskTaskTaskParameters;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OceanImportScheduledTaskTask {
    /**
     * @return A valid cron expression. For example : &#34; * * * * * &#34;.The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of ‘frequency’ or ‘cronExpression’ should be used at a time. Required for cluster.scheduling.tasks object
     * Example: 0 1 * * *
     * 
     */
    private String cronExpression;
    /**
     * @return Describes whether the task is enabled. When true the task should run when false it should not run. Required for cluster.scheduling.tasks object.
     * 
     */
    private Boolean isEnabled;
    /**
     * @return The scheduling parameters for the cluster.
     * 
     */
    private @Nullable OceanImportScheduledTaskTaskTaskParameters taskParameters;
    /**
     * @return Valid values: &#34;clusterRoll&#34;. Required for cluster.scheduling.tasks object.
     * 
     */
    private String taskType;

    private OceanImportScheduledTaskTask() {}
    /**
     * @return A valid cron expression. For example : &#34; * * * * * &#34;.The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of ‘frequency’ or ‘cronExpression’ should be used at a time. Required for cluster.scheduling.tasks object
     * Example: 0 1 * * *
     * 
     */
    public String cronExpression() {
        return this.cronExpression;
    }
    /**
     * @return Describes whether the task is enabled. When true the task should run when false it should not run. Required for cluster.scheduling.tasks object.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return The scheduling parameters for the cluster.
     * 
     */
    public Optional<OceanImportScheduledTaskTaskTaskParameters> taskParameters() {
        return Optional.ofNullable(this.taskParameters);
    }
    /**
     * @return Valid values: &#34;clusterRoll&#34;. Required for cluster.scheduling.tasks object.
     * 
     */
    public String taskType() {
        return this.taskType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OceanImportScheduledTaskTask defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cronExpression;
        private Boolean isEnabled;
        private @Nullable OceanImportScheduledTaskTaskTaskParameters taskParameters;
        private String taskType;
        public Builder() {}
        public Builder(OceanImportScheduledTaskTask defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cronExpression = defaults.cronExpression;
    	      this.isEnabled = defaults.isEnabled;
    	      this.taskParameters = defaults.taskParameters;
    	      this.taskType = defaults.taskType;
        }

        @CustomType.Setter
        public Builder cronExpression(String cronExpression) {
            if (cronExpression == null) {
              throw new MissingRequiredPropertyException("OceanImportScheduledTaskTask", "cronExpression");
            }
            this.cronExpression = cronExpression;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            if (isEnabled == null) {
              throw new MissingRequiredPropertyException("OceanImportScheduledTaskTask", "isEnabled");
            }
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder taskParameters(@Nullable OceanImportScheduledTaskTaskTaskParameters taskParameters) {

            this.taskParameters = taskParameters;
            return this;
        }
        @CustomType.Setter
        public Builder taskType(String taskType) {
            if (taskType == null) {
              throw new MissingRequiredPropertyException("OceanImportScheduledTaskTask", "taskType");
            }
            this.taskType = taskType;
            return this;
        }
        public OceanImportScheduledTaskTask build() {
            final var _resultValue = new OceanImportScheduledTaskTask();
            _resultValue.cronExpression = cronExpression;
            _resultValue.isEnabled = isEnabled;
            _resultValue.taskParameters = taskParameters;
            _resultValue.taskType = taskType;
            return _resultValue;
        }
    }
}

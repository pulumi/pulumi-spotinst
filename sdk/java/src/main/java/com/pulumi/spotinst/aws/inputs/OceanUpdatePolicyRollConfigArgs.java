// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OceanUpdatePolicyRollConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanUpdatePolicyRollConfigArgs Empty = new OceanUpdatePolicyRollConfigArgs();

    @Import(name="batchMinHealthyPercentage")
    private @Nullable Output<Integer> batchMinHealthyPercentage;

    public Optional<Output<Integer>> batchMinHealthyPercentage() {
        return Optional.ofNullable(this.batchMinHealthyPercentage);
    }

    @Import(name="batchSizePercentage", required=true)
    private Output<Integer> batchSizePercentage;

    public Output<Integer> batchSizePercentage() {
        return this.batchSizePercentage;
    }

    @Import(name="launchSpecIds")
    private @Nullable Output<List<String>> launchSpecIds;

    public Optional<Output<List<String>>> launchSpecIds() {
        return Optional.ofNullable(this.launchSpecIds);
    }

    @Import(name="respectPdb")
    private @Nullable Output<Boolean> respectPdb;

    public Optional<Output<Boolean>> respectPdb() {
        return Optional.ofNullable(this.respectPdb);
    }

    private OceanUpdatePolicyRollConfigArgs() {}

    private OceanUpdatePolicyRollConfigArgs(OceanUpdatePolicyRollConfigArgs $) {
        this.batchMinHealthyPercentage = $.batchMinHealthyPercentage;
        this.batchSizePercentage = $.batchSizePercentage;
        this.launchSpecIds = $.launchSpecIds;
        this.respectPdb = $.respectPdb;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanUpdatePolicyRollConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanUpdatePolicyRollConfigArgs $;

        public Builder() {
            $ = new OceanUpdatePolicyRollConfigArgs();
        }

        public Builder(OceanUpdatePolicyRollConfigArgs defaults) {
            $ = new OceanUpdatePolicyRollConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder batchMinHealthyPercentage(@Nullable Output<Integer> batchMinHealthyPercentage) {
            $.batchMinHealthyPercentage = batchMinHealthyPercentage;
            return this;
        }

        public Builder batchMinHealthyPercentage(Integer batchMinHealthyPercentage) {
            return batchMinHealthyPercentage(Output.of(batchMinHealthyPercentage));
        }

        public Builder batchSizePercentage(Output<Integer> batchSizePercentage) {
            $.batchSizePercentage = batchSizePercentage;
            return this;
        }

        public Builder batchSizePercentage(Integer batchSizePercentage) {
            return batchSizePercentage(Output.of(batchSizePercentage));
        }

        public Builder launchSpecIds(@Nullable Output<List<String>> launchSpecIds) {
            $.launchSpecIds = launchSpecIds;
            return this;
        }

        public Builder launchSpecIds(List<String> launchSpecIds) {
            return launchSpecIds(Output.of(launchSpecIds));
        }

        public Builder launchSpecIds(String... launchSpecIds) {
            return launchSpecIds(List.of(launchSpecIds));
        }

        public Builder respectPdb(@Nullable Output<Boolean> respectPdb) {
            $.respectPdb = respectPdb;
            return this;
        }

        public Builder respectPdb(Boolean respectPdb) {
            return respectPdb(Output.of(respectPdb));
        }

        public OceanUpdatePolicyRollConfigArgs build() {
            if ($.batchSizePercentage == null) {
                throw new MissingRequiredPropertyException("OceanUpdatePolicyRollConfigArgs", "batchSizePercentage");
            }
            return $;
        }
    }

}

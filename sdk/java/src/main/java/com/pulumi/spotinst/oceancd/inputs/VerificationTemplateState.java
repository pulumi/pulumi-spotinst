// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.oceancd.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.spotinst.oceancd.inputs.VerificationTemplateArgArgs;
import com.pulumi.spotinst.oceancd.inputs.VerificationTemplateMetricArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VerificationTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final VerificationTemplateState Empty = new VerificationTemplateState();

    /**
     * List of verification arguments. You may specify either `value` OR `valueFrom` but not both.In case `args`:`value` is already defined in the RolloutSpec entity, there is no need to also specify it in the VerificationTemplate entity.
     * 
     */
    @Import(name="args")
    private @Nullable Output<List<VerificationTemplateArgArgs>> args;

    /**
     * @return List of verification arguments. You may specify either `value` OR `valueFrom` but not both.In case `args`:`value` is already defined in the RolloutSpec entity, there is no need to also specify it in the VerificationTemplate entity.
     * 
     */
    public Optional<Output<List<VerificationTemplateArgArgs>>> args() {
        return Optional.ofNullable(this.args);
    }

    /**
     * List of verification metrics.
     * 
     */
    @Import(name="metrics")
    private @Nullable Output<List<VerificationTemplateMetricArgs>> metrics;

    /**
     * @return List of verification metrics.
     * 
     */
    public Optional<Output<List<VerificationTemplateMetricArgs>>> metrics() {
        return Optional.ofNullable(this.metrics);
    }

    /**
     * Identifier name for Ocean CD Verification Template. Must be unique.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Identifier name for Ocean CD Verification Template. Must be unique.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private VerificationTemplateState() {}

    private VerificationTemplateState(VerificationTemplateState $) {
        this.args = $.args;
        this.metrics = $.metrics;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VerificationTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VerificationTemplateState $;

        public Builder() {
            $ = new VerificationTemplateState();
        }

        public Builder(VerificationTemplateState defaults) {
            $ = new VerificationTemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param args List of verification arguments. You may specify either `value` OR `valueFrom` but not both.In case `args`:`value` is already defined in the RolloutSpec entity, there is no need to also specify it in the VerificationTemplate entity.
         * 
         * @return builder
         * 
         */
        public Builder args(@Nullable Output<List<VerificationTemplateArgArgs>> args) {
            $.args = args;
            return this;
        }

        /**
         * @param args List of verification arguments. You may specify either `value` OR `valueFrom` but not both.In case `args`:`value` is already defined in the RolloutSpec entity, there is no need to also specify it in the VerificationTemplate entity.
         * 
         * @return builder
         * 
         */
        public Builder args(List<VerificationTemplateArgArgs> args) {
            return args(Output.of(args));
        }

        /**
         * @param args List of verification arguments. You may specify either `value` OR `valueFrom` but not both.In case `args`:`value` is already defined in the RolloutSpec entity, there is no need to also specify it in the VerificationTemplate entity.
         * 
         * @return builder
         * 
         */
        public Builder args(VerificationTemplateArgArgs... args) {
            return args(List.of(args));
        }

        /**
         * @param metrics List of verification metrics.
         * 
         * @return builder
         * 
         */
        public Builder metrics(@Nullable Output<List<VerificationTemplateMetricArgs>> metrics) {
            $.metrics = metrics;
            return this;
        }

        /**
         * @param metrics List of verification metrics.
         * 
         * @return builder
         * 
         */
        public Builder metrics(List<VerificationTemplateMetricArgs> metrics) {
            return metrics(Output.of(metrics));
        }

        /**
         * @param metrics List of verification metrics.
         * 
         * @return builder
         * 
         */
        public Builder metrics(VerificationTemplateMetricArgs... metrics) {
            return metrics(List.of(metrics));
        }

        /**
         * @param name Identifier name for Ocean CD Verification Template. Must be unique.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Identifier name for Ocean CD Verification Template. Must be unique.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public VerificationTemplateState build() {
            return $;
        }
    }

}

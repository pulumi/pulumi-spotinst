// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.spotinst.inputs.OceanRightSizingRuleDetachWorkloadNamespaceArgs;
import java.util.List;
import java.util.Objects;


public final class OceanRightSizingRuleDetachWorkloadArgs extends com.pulumi.resources.ResourceArgs {

    public static final OceanRightSizingRuleDetachWorkloadArgs Empty = new OceanRightSizingRuleDetachWorkloadArgs();

    @Import(name="namespaces", required=true)
    private Output<List<OceanRightSizingRuleDetachWorkloadNamespaceArgs>> namespaces;

    public Output<List<OceanRightSizingRuleDetachWorkloadNamespaceArgs>> namespaces() {
        return this.namespaces;
    }

    private OceanRightSizingRuleDetachWorkloadArgs() {}

    private OceanRightSizingRuleDetachWorkloadArgs(OceanRightSizingRuleDetachWorkloadArgs $) {
        this.namespaces = $.namespaces;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OceanRightSizingRuleDetachWorkloadArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OceanRightSizingRuleDetachWorkloadArgs $;

        public Builder() {
            $ = new OceanRightSizingRuleDetachWorkloadArgs();
        }

        public Builder(OceanRightSizingRuleDetachWorkloadArgs defaults) {
            $ = new OceanRightSizingRuleDetachWorkloadArgs(Objects.requireNonNull(defaults));
        }

        public Builder namespaces(Output<List<OceanRightSizingRuleDetachWorkloadNamespaceArgs>> namespaces) {
            $.namespaces = namespaces;
            return this;
        }

        public Builder namespaces(List<OceanRightSizingRuleDetachWorkloadNamespaceArgs> namespaces) {
            return namespaces(Output.of(namespaces));
        }

        public Builder namespaces(OceanRightSizingRuleDetachWorkloadNamespaceArgs... namespaces) {
            return namespaces(List.of(namespaces));
        }

        public OceanRightSizingRuleDetachWorkloadArgs build() {
            if ($.namespaces == null) {
                throw new MissingRequiredPropertyException("OceanRightSizingRuleDetachWorkloadArgs", "namespaces");
            }
            return $;
        }
    }

}

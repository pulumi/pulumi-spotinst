// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.spotinst.aws.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MrScalarScheduledTask {
    private String cron;
    private @Nullable String desiredCapacity;
    private String instanceGroupType;
    private @Nullable Boolean isEnabled;
    private @Nullable String maxCapacity;
    private @Nullable String minCapacity;
    private String taskType;

    private MrScalarScheduledTask() {}
    public String cron() {
        return this.cron;
    }
    public Optional<String> desiredCapacity() {
        return Optional.ofNullable(this.desiredCapacity);
    }
    public String instanceGroupType() {
        return this.instanceGroupType;
    }
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    public Optional<String> maxCapacity() {
        return Optional.ofNullable(this.maxCapacity);
    }
    public Optional<String> minCapacity() {
        return Optional.ofNullable(this.minCapacity);
    }
    public String taskType() {
        return this.taskType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MrScalarScheduledTask defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cron;
        private @Nullable String desiredCapacity;
        private String instanceGroupType;
        private @Nullable Boolean isEnabled;
        private @Nullable String maxCapacity;
        private @Nullable String minCapacity;
        private String taskType;
        public Builder() {}
        public Builder(MrScalarScheduledTask defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cron = defaults.cron;
    	      this.desiredCapacity = defaults.desiredCapacity;
    	      this.instanceGroupType = defaults.instanceGroupType;
    	      this.isEnabled = defaults.isEnabled;
    	      this.maxCapacity = defaults.maxCapacity;
    	      this.minCapacity = defaults.minCapacity;
    	      this.taskType = defaults.taskType;
        }

        @CustomType.Setter
        public Builder cron(String cron) {
            if (cron == null) {
              throw new MissingRequiredPropertyException("MrScalarScheduledTask", "cron");
            }
            this.cron = cron;
            return this;
        }
        @CustomType.Setter
        public Builder desiredCapacity(@Nullable String desiredCapacity) {

            this.desiredCapacity = desiredCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder instanceGroupType(String instanceGroupType) {
            if (instanceGroupType == null) {
              throw new MissingRequiredPropertyException("MrScalarScheduledTask", "instanceGroupType");
            }
            this.instanceGroupType = instanceGroupType;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {

            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder maxCapacity(@Nullable String maxCapacity) {

            this.maxCapacity = maxCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder minCapacity(@Nullable String minCapacity) {

            this.minCapacity = minCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder taskType(String taskType) {
            if (taskType == null) {
              throw new MissingRequiredPropertyException("MrScalarScheduledTask", "taskType");
            }
            this.taskType = taskType;
            return this;
        }
        public MrScalarScheduledTask build() {
            final var _resultValue = new MrScalarScheduledTask();
            _resultValue.cron = cron;
            _resultValue.desiredCapacity = desiredCapacity;
            _resultValue.instanceGroupType = instanceGroupType;
            _resultValue.isEnabled = isEnabled;
            _resultValue.maxCapacity = maxCapacity;
            _resultValue.minCapacity = minCapacity;
            _resultValue.taskType = taskType;
            return _resultValue;
        }
    }
}

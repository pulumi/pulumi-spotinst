// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Gcp.Outputs
{

    [OutputType]
    public sealed class ElastigroupScalingUpPolicy
    {
        /// <summary>
        /// Type of scaling action to take when the scaling policy is triggered. Valid values: "adjustment", "setMinTarget", "updateCapacity", "percentageAdjustment"
        /// </summary>
        public readonly string? ActionType;
        /// <summary>
        /// Value to which the action type will be adjusted. Required if using "numeric" or "percentageAdjustment" action types.
        /// </summary>
        public readonly int? Adjustment;
        /// <summary>
        /// Time (seconds) to wait after a scaling action before resuming monitoring.
        /// </summary>
        public readonly int? Cooldown;
        /// <summary>
        /// A list of dimensions describing qualities of the metric.
        /// </summary>
        public readonly ImmutableArray<Outputs.ElastigroupScalingUpPolicyDimension> Dimensions;
        /// <summary>
        /// Number of consecutive periods in which the threshold must be met in order to trigger a scaling action.
        /// </summary>
        public readonly int? EvaluationPeriods;
        /// <summary>
        /// Metric to monitor. Valid values: "Percentage CPU", "Network In", "Network Out", "Disk Read Bytes", "Disk Write Bytes", "Disk Write Operations/Sec", "Disk Read Operations/Sec".
        /// </summary>
        public readonly string MetricName;
        public readonly string Namespace;
        /// <summary>
        /// The operator used to evaluate the threshold against the current metric value. Valid values: "gt" (greater than), "get" (greater-than or equal), "lt" (less than), "lte" (less than or equal).
        /// </summary>
        public readonly string? Operator;
        /// <summary>
        /// Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.
        /// </summary>
        public readonly int? Period;
        /// <summary>
        /// Name of scaling policy.
        /// </summary>
        public readonly string PolicyName;
        public readonly string? Source;
        /// <summary>
        /// Statistic by which to evaluate the selected metric. Valid values: "AVERAGE", "SAMPLE_COUNT", "SUM", "MINIMUM", "MAXIMUM", "PERCENTILE", "COUNT".
        /// </summary>
        public readonly string? Statistic;
        /// <summary>
        /// The value at which the scaling action is triggered.
        /// </summary>
        public readonly double Threshold;
        public readonly string Unit;

        [OutputConstructor]
        private ElastigroupScalingUpPolicy(
            string? actionType,

            int? adjustment,

            int? cooldown,

            ImmutableArray<Outputs.ElastigroupScalingUpPolicyDimension> dimensions,

            int? evaluationPeriods,

            string metricName,

            string @namespace,

            string? @operator,

            int? period,

            string policyName,

            string? source,

            string? statistic,

            double threshold,

            string unit)
        {
            ActionType = actionType;
            Adjustment = adjustment;
            Cooldown = cooldown;
            Dimensions = dimensions;
            EvaluationPeriods = evaluationPeriods;
            MetricName = metricName;
            Namespace = @namespace;
            Operator = @operator;
            Period = period;
            PolicyName = policyName;
            Source = source;
            Statistic = statistic;
            Threshold = threshold;
            Unit = unit;
        }
    }
}

// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Gcp.Outputs
{

    [OutputType]
    public sealed class ElastigroupBackendService
    {
        /// <summary>
        /// Configure how traffic is distributed across instance groups.
        /// </summary>
        public readonly Outputs.ElastigroupBackendServiceBackendBalancing? BackendBalancing;
        /// <summary>
        /// Sets which location the backend services will be active. Valid values: `Regional`, `Global`.
        /// </summary>
        public readonly string? LocationType;
        /// <summary>
        /// Describes a named port and a list of ports.
        /// </summary>
        public readonly ImmutableArray<Outputs.ElastigroupBackendServiceNamedPort> NamedPorts;
        /// <summary>
        /// Use when `LocationType` is "regional". Set the traffic for the backend service to either between the instances in the vpc or to traffic from the internet. Valid values: `INTERNAL`, `EXTERNAL`.
        /// </summary>
        public readonly string? Scheme;
        /// <summary>
        /// The name of the backend service.
        /// </summary>
        public readonly string ServiceName;

        [OutputConstructor]
        private ElastigroupBackendService(
            Outputs.ElastigroupBackendServiceBackendBalancing? backendBalancing,

            string? locationType,

            ImmutableArray<Outputs.ElastigroupBackendServiceNamedPort> namedPorts,

            string? scheme,

            string serviceName)
        {
            BackendBalancing = backendBalancing;
            LocationType = locationType;
            NamedPorts = namedPorts;
            Scheme = scheme;
            ServiceName = serviceName;
        }
    }
}

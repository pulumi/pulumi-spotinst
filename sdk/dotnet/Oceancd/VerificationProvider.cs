// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Oceancd
{
    /// <summary>
    /// Manages a Spotinst OceanCD Verfification Provider resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using SpotInst = Pulumi.SpotInst;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new SpotInst.Oceancd.VerificationProvider("example", new()
    ///     {
    ///         Name = "test-verification-provider",
    ///         ClusterIds = new[]
    ///         {
    ///             "Example-Cluster-Id-1",
    ///             "Example-Cluster-Id-2",
    ///             "Example-Cluster-Id-3",
    ///         },
    ///         Datadog = new SpotInst.Oceancd.Inputs.VerificationProviderDatadogArgs
    ///         {
    ///             Address = "1024",
    ///             ApiKey = "512",
    ///             AppKey = "0",
    ///         },
    ///         CloudWatch = new SpotInst.Oceancd.Inputs.VerificationProviderCloudWatchArgs
    ///         {
    ///             IamArn = "arn:aws:iam::123456789012:role/GetMetricData",
    ///         },
    ///         Prometheus = new SpotInst.Oceancd.Inputs.VerificationProviderPrometheusArgs
    ///         {
    ///             Address = "http://localhost:9090",
    ///         },
    ///         NewRelic = new SpotInst.Oceancd.Inputs.VerificationProviderNewRelicArgs
    ///         {
    ///             PersonalApiKey = "AUO32RN20oUMD-40283",
    ///             AccountId = "account-0189718",
    ///             Region = "eu",
    ///             BaseUrlRest = "https://rest.api.newrelic.eu",
    ///             BaseUrlNerdGraph = "https://nerdgraph.api.newrelic.eu",
    ///         },
    ///         Jenkins = new SpotInst.Oceancd.Inputs.VerificationProviderJenkinsArgs
    ///         {
    ///             BaseUrl = "http://localhost:9090",
    ///             Username = "test-user",
    ///             ApiToken = "AbCDeeFFGG",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [SpotInstResourceType("spotinst:oceancd/verificationProvider:VerificationProvider")]
    public partial class VerificationProvider : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specify the credentials for CloudWatch verification provider.
        /// </summary>
        [Output("cloudWatch")]
        public Output<Outputs.VerificationProviderCloudWatch?> CloudWatch { get; private set; } = null!;

        /// <summary>
        /// List of cluster IDs that this Verification Provider will be applied to.
        /// </summary>
        [Output("clusterIds")]
        public Output<ImmutableArray<string>> ClusterIds { get; private set; } = null!;

        /// <summary>
        /// Specify the credentials for datadog verification provider.
        /// </summary>
        [Output("datadog")]
        public Output<Outputs.VerificationProviderDatadog?> Datadog { get; private set; } = null!;

        /// <summary>
        /// Specify the credentials for Jenkins verification provider.
        /// </summary>
        [Output("jenkins")]
        public Output<Outputs.VerificationProviderJenkins?> Jenkins { get; private set; } = null!;

        /// <summary>
        /// Identifier name for Ocean CD Verification Provider. Must be unique.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specify the credentials for New Relic verification provider.
        /// </summary>
        [Output("newRelic")]
        public Output<Outputs.VerificationProviderNewRelic?> NewRelic { get; private set; } = null!;

        /// <summary>
        /// Specify the credentials for prometheus verification provider.
        /// </summary>
        [Output("prometheus")]
        public Output<Outputs.VerificationProviderPrometheus?> Prometheus { get; private set; } = null!;


        /// <summary>
        /// Create a VerificationProvider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VerificationProvider(string name, VerificationProviderArgs args, CustomResourceOptions? options = null)
            : base("spotinst:oceancd/verificationProvider:VerificationProvider", name, args ?? new VerificationProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VerificationProvider(string name, Input<string> id, VerificationProviderState? state = null, CustomResourceOptions? options = null)
            : base("spotinst:oceancd/verificationProvider:VerificationProvider", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VerificationProvider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VerificationProvider Get(string name, Input<string> id, VerificationProviderState? state = null, CustomResourceOptions? options = null)
        {
            return new VerificationProvider(name, id, state, options);
        }
    }

    public sealed class VerificationProviderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specify the credentials for CloudWatch verification provider.
        /// </summary>
        [Input("cloudWatch")]
        public Input<Inputs.VerificationProviderCloudWatchArgs>? CloudWatch { get; set; }

        [Input("clusterIds", required: true)]
        private InputList<string>? _clusterIds;

        /// <summary>
        /// List of cluster IDs that this Verification Provider will be applied to.
        /// </summary>
        public InputList<string> ClusterIds
        {
            get => _clusterIds ?? (_clusterIds = new InputList<string>());
            set => _clusterIds = value;
        }

        /// <summary>
        /// Specify the credentials for datadog verification provider.
        /// </summary>
        [Input("datadog")]
        public Input<Inputs.VerificationProviderDatadogArgs>? Datadog { get; set; }

        /// <summary>
        /// Specify the credentials for Jenkins verification provider.
        /// </summary>
        [Input("jenkins")]
        public Input<Inputs.VerificationProviderJenkinsArgs>? Jenkins { get; set; }

        /// <summary>
        /// Identifier name for Ocean CD Verification Provider. Must be unique.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specify the credentials for New Relic verification provider.
        /// </summary>
        [Input("newRelic")]
        public Input<Inputs.VerificationProviderNewRelicArgs>? NewRelic { get; set; }

        /// <summary>
        /// Specify the credentials for prometheus verification provider.
        /// </summary>
        [Input("prometheus")]
        public Input<Inputs.VerificationProviderPrometheusArgs>? Prometheus { get; set; }

        public VerificationProviderArgs()
        {
        }
        public static new VerificationProviderArgs Empty => new VerificationProviderArgs();
    }

    public sealed class VerificationProviderState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specify the credentials for CloudWatch verification provider.
        /// </summary>
        [Input("cloudWatch")]
        public Input<Inputs.VerificationProviderCloudWatchGetArgs>? CloudWatch { get; set; }

        [Input("clusterIds")]
        private InputList<string>? _clusterIds;

        /// <summary>
        /// List of cluster IDs that this Verification Provider will be applied to.
        /// </summary>
        public InputList<string> ClusterIds
        {
            get => _clusterIds ?? (_clusterIds = new InputList<string>());
            set => _clusterIds = value;
        }

        /// <summary>
        /// Specify the credentials for datadog verification provider.
        /// </summary>
        [Input("datadog")]
        public Input<Inputs.VerificationProviderDatadogGetArgs>? Datadog { get; set; }

        /// <summary>
        /// Specify the credentials for Jenkins verification provider.
        /// </summary>
        [Input("jenkins")]
        public Input<Inputs.VerificationProviderJenkinsGetArgs>? Jenkins { get; set; }

        /// <summary>
        /// Identifier name for Ocean CD Verification Provider. Must be unique.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specify the credentials for New Relic verification provider.
        /// </summary>
        [Input("newRelic")]
        public Input<Inputs.VerificationProviderNewRelicGetArgs>? NewRelic { get; set; }

        /// <summary>
        /// Specify the credentials for prometheus verification provider.
        /// </summary>
        [Input("prometheus")]
        public Input<Inputs.VerificationProviderPrometheusGetArgs>? Prometheus { get; set; }

        public VerificationProviderState()
        {
        }
        public static new VerificationProviderState Empty => new VerificationProviderState();
    }
}

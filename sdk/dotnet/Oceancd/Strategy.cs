// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Oceancd
{
    /// <summary>
    /// Manages a Spotinst OceanCD Strategy resource.
    /// </summary>
    [SpotInstResourceType("spotinst:oceancd/strategy:Strategy")]
    public partial class Strategy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Represents Canary strategy. Cannot be defined when Rolling object is defined.
        /// </summary>
        [Output("canary")]
        public Output<Outputs.StrategyCanary?> Canary { get; private set; } = null!;

        /// <summary>
        /// Represents Rolling Update strategy. Cannot be defined when Canary object is defined.
        /// </summary>
        [Output("rolling")]
        public Output<Outputs.StrategyRolling?> Rolling { get; private set; } = null!;

        [Output("strategyName")]
        public Output<string> StrategyName { get; private set; } = null!;


        /// <summary>
        /// Create a Strategy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Strategy(string name, StrategyArgs args, CustomResourceOptions? options = null)
            : base("spotinst:oceancd/strategy:Strategy", name, args ?? new StrategyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Strategy(string name, Input<string> id, StrategyState? state = null, CustomResourceOptions? options = null)
            : base("spotinst:oceancd/strategy:Strategy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Strategy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Strategy Get(string name, Input<string> id, StrategyState? state = null, CustomResourceOptions? options = null)
        {
            return new Strategy(name, id, state, options);
        }
    }

    public sealed class StrategyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Represents Canary strategy. Cannot be defined when Rolling object is defined.
        /// </summary>
        [Input("canary")]
        public Input<Inputs.StrategyCanaryArgs>? Canary { get; set; }

        /// <summary>
        /// Represents Rolling Update strategy. Cannot be defined when Canary object is defined.
        /// </summary>
        [Input("rolling")]
        public Input<Inputs.StrategyRollingArgs>? Rolling { get; set; }

        [Input("strategyName", required: true)]
        public Input<string> StrategyName { get; set; } = null!;

        public StrategyArgs()
        {
        }
        public static new StrategyArgs Empty => new StrategyArgs();
    }

    public sealed class StrategyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Represents Canary strategy. Cannot be defined when Rolling object is defined.
        /// </summary>
        [Input("canary")]
        public Input<Inputs.StrategyCanaryGetArgs>? Canary { get; set; }

        /// <summary>
        /// Represents Rolling Update strategy. Cannot be defined when Canary object is defined.
        /// </summary>
        [Input("rolling")]
        public Input<Inputs.StrategyRollingGetArgs>? Rolling { get; set; }

        [Input("strategyName")]
        public Input<string>? StrategyName { get; set; }

        public StrategyState()
        {
        }
        public static new StrategyState Empty => new StrategyState();
    }
}

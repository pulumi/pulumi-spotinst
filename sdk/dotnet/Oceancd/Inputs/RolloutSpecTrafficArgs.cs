// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Oceancd.Inputs
{

    public sealed class RolloutSpecTrafficArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Holds ALB Ingress specific configuration to route traffic.
        /// </summary>
        [Input("alb")]
        public Input<Inputs.RolloutSpecTrafficAlbArgs>? Alb { get; set; }

        /// <summary>
        /// Holds specific configuration to use Ambassador to route traffic.
        /// </summary>
        [Input("ambassador")]
        public Input<Inputs.RolloutSpecTrafficAmbassadorArgs>? Ambassador { get; set; }

        /// <summary>
        /// The canary service name.
        /// </summary>
        [Input("canaryService")]
        public Input<string>? CanaryService { get; set; }

        /// <summary>
        /// Holds Istio specific configuration to route traffic.
        /// </summary>
        [Input("istio")]
        public Input<Inputs.RolloutSpecTrafficIstioArgs>? Istio { get; set; }

        /// <summary>
        /// Holds Nginx Ingress specific configuration to route traffic.
        /// </summary>
        [Input("nginx")]
        public Input<Inputs.RolloutSpecTrafficNginxArgs>? Nginx { get; set; }

        /// <summary>
        /// Holds the ping and pong services. You can use `pingPong` field only when using ALB as a traffic manager with the IP Mode approach.
        /// </summary>
        [Input("pingPong")]
        public Input<Inputs.RolloutSpecTrafficPingPongArgs>? PingPong { get; set; }

        /// <summary>
        /// Holds TrafficSplit specific configuration to route traffic.
        /// </summary>
        [Input("smi")]
        public Input<Inputs.RolloutSpecTrafficSmiArgs>? Smi { get; set; }

        /// <summary>
        /// The stable service name.
        /// </summary>
        [Input("stableService")]
        public Input<string>? StableService { get; set; }

        public RolloutSpecTrafficArgs()
        {
        }
        public static new RolloutSpecTrafficArgs Empty => new RolloutSpecTrafficArgs();
    }
}

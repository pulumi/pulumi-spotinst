// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Oceancd.Inputs
{

    public sealed class VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The metric to return, including the metric name, namespace, and dimensions.
        /// </summary>
        [Input("metric")]
        public Input<Inputs.VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatMetricArgs>? Metric { get; set; }

        /// <summary>
        /// The granularity, in seconds, of the returned data points.
        /// </summary>
        [Input("metricPeriod")]
        public Input<int>? MetricPeriod { get; set; }

        /// <summary>
        /// The statistic to return. It can include any CloudWatch statistic or extended statistic.
        /// </summary>
        [Input("stat")]
        public Input<string>? Stat { get; set; }

        /// <summary>
        /// This defines what unit you want to use when storing the metric.  Enum: `"Seconds" "Microseconds" "Milliseconds" "Bytes" "Kilobytes" "Megabytes" "Gigabytes" "Terabytes" "Bits" "Kilobits" "Megabits" "Gigabits" "Terabits" "Percent" "Count" "Bytes/Second" "Kilobytes/Second" "Megabytes/Second" "Gigabytes/Second" "Terabytes/Second" "Bits/Second" "Kilobits/Second" "Megabits/Second" "Gigabits/Second" "Terabits/Second" "Count/Second" "None"`
        /// </summary>
        [Input("unit")]
        public Input<string>? Unit { get; set; }

        public VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatArgs()
        {
        }
        public static new VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatArgs Empty => new VerificationTemplateMetricProviderCloudWatchMetricDataQueryMetricStatArgs();
    }
}

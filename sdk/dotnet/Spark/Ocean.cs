// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Spark
{
    /// <summary>
    /// Manages a Spotinst Ocean Spark resource on AWS or GCP.
    /// 
    /// ## Prerequisites
    /// 
    /// An existing Ocean cluster is required by this resource. See e.g. the `spotinst.aws.Ocean` resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using SpotInst = Pulumi.SpotInst;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new SpotInst.Spark.Ocean("example", new()
    ///     {
    ///         OceanClusterId = "ocean-cluster-id",
    ///         Ingress = new SpotInst.Spark.Inputs.OceanIngressArgs
    ///         {
    ///             Controller = new SpotInst.Spark.Inputs.OceanIngressControllerArgs
    ///             {
    ///                 Managed = true,
    ///             },
    ///             LoadBalancer = new SpotInst.Spark.Inputs.OceanIngressLoadBalancerArgs
    ///             {
    ///                 Managed = true,
    ///                 TargetGroupArn = "arn:aws:elasticloadbalancing:eu-north-1:XXXXXXXXXXXX:targetgroup/my-spark-cluster-nlb-tg/a38c2b83XXXXXXXX",
    ///                 ServiceAnnotations = 
    ///                 {
    ///                     { "service.beta.kubernetes.io/aws-load-balancer-security-groups", "sg-XXXXXXXXXXXXXXXXX" },
    ///                     { "some-service-annotation-2", "some-service-annotation-value-2" },
    ///                 },
    ///             },
    ///             CustomEndpoint = new SpotInst.Spark.Inputs.OceanIngressCustomEndpointArgs
    ///             {
    ///                 Enabled = false,
    ///                 Address = "my-spark-cluster-nlb-8cbb8da7XXXXXXXX.elb.us-east-1.amazonaws.com",
    ///             },
    ///             PrivateLink = new SpotInst.Spark.Inputs.OceanIngressPrivateLinkArgs
    ///             {
    ///                 Enabled = false,
    ///                 VpcEndpointService = "com.amazonaws.vpce.eu-north-1.vpce-svc-XXXXXXXXXXXXXXXXX",
    ///             },
    ///         },
    ///         Compute = new SpotInst.Spark.Inputs.OceanComputeArgs
    ///         {
    ///             CreateVngs = true,
    ///             UseTaints = true,
    ///         },
    ///         LogCollection = new SpotInst.Spark.Inputs.OceanLogCollectionArgs
    ///         {
    ///             CollectAppLogs = true,
    ///         },
    ///         Webhook = new SpotInst.Spark.Inputs.OceanWebhookArgs
    ///         {
    ///             UseHostNetwork = false,
    ///             HostNetworkPorts = new[]
    ///             {
    ///                 25554,
    ///             },
    ///         },
    ///         Spark = new SpotInst.Spark.Inputs.OceanSparkArgs
    ///         {
    ///             AdditionalAppNamespaces = new[]
    ///             {
    ///                 "extra-spark-app-ns-1",
    ///                 "extra-spark-app-ns-2",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["oceanSparkId"] = spotinst_ocean_spark.Example.Id,
    ///     };
    /// });
    /// ```
    /// </summary>
    [SpotInstResourceType("spotinst:spark/ocean:Ocean")]
    public partial class Ocean : global::Pulumi.CustomResource
    {
        [Output("compute")]
        public Output<Outputs.OceanCompute> Compute { get; private set; } = null!;

        [Output("ingress")]
        public Output<Outputs.OceanIngress> Ingress { get; private set; } = null!;

        [Output("logCollection")]
        public Output<Outputs.OceanLogCollection> LogCollection { get; private set; } = null!;

        /// <summary>
        /// - The ID of the Ocean cluster that Ocean for Apache Spark should be installed on.
        /// </summary>
        [Output("oceanClusterId")]
        public Output<string> OceanClusterId { get; private set; } = null!;

        [Output("spark")]
        public Output<Outputs.OceanSpark> Spark { get; private set; } = null!;

        [Output("webhook")]
        public Output<Outputs.OceanWebhook> Webhook { get; private set; } = null!;


        /// <summary>
        /// Create a Ocean resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ocean(string name, OceanArgs args, CustomResourceOptions? options = null)
            : base("spotinst:spark/ocean:Ocean", name, args ?? new OceanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ocean(string name, Input<string> id, OceanState? state = null, CustomResourceOptions? options = null)
            : base("spotinst:spark/ocean:Ocean", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ocean resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ocean Get(string name, Input<string> id, OceanState? state = null, CustomResourceOptions? options = null)
        {
            return new Ocean(name, id, state, options);
        }
    }

    public sealed class OceanArgs : global::Pulumi.ResourceArgs
    {
        [Input("compute")]
        public Input<Inputs.OceanComputeArgs>? Compute { get; set; }

        [Input("ingress")]
        public Input<Inputs.OceanIngressArgs>? Ingress { get; set; }

        [Input("logCollection")]
        public Input<Inputs.OceanLogCollectionArgs>? LogCollection { get; set; }

        /// <summary>
        /// - The ID of the Ocean cluster that Ocean for Apache Spark should be installed on.
        /// </summary>
        [Input("oceanClusterId", required: true)]
        public Input<string> OceanClusterId { get; set; } = null!;

        [Input("spark")]
        public Input<Inputs.OceanSparkArgs>? Spark { get; set; }

        [Input("webhook")]
        public Input<Inputs.OceanWebhookArgs>? Webhook { get; set; }

        public OceanArgs()
        {
        }
        public static new OceanArgs Empty => new OceanArgs();
    }

    public sealed class OceanState : global::Pulumi.ResourceArgs
    {
        [Input("compute")]
        public Input<Inputs.OceanComputeGetArgs>? Compute { get; set; }

        [Input("ingress")]
        public Input<Inputs.OceanIngressGetArgs>? Ingress { get; set; }

        [Input("logCollection")]
        public Input<Inputs.OceanLogCollectionGetArgs>? LogCollection { get; set; }

        /// <summary>
        /// - The ID of the Ocean cluster that Ocean for Apache Spark should be installed on.
        /// </summary>
        [Input("oceanClusterId")]
        public Input<string>? OceanClusterId { get; set; }

        [Input("spark")]
        public Input<Inputs.OceanSparkGetArgs>? Spark { get; set; }

        [Input("webhook")]
        public Input<Inputs.OceanWebhookGetArgs>? Webhook { get; set; }

        public OceanState()
        {
        }
        public static new OceanState Empty => new OceanState();
    }
}

// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Inputs
{

    public sealed class NotificationCenterComputePolicyConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("dynamicRules")]
        private InputList<Inputs.NotificationCenterComputePolicyConfigDynamicRuleArgs>? _dynamicRules;
        public InputList<Inputs.NotificationCenterComputePolicyConfigDynamicRuleArgs> DynamicRules
        {
            get => _dynamicRules ?? (_dynamicRules = new InputList<Inputs.NotificationCenterComputePolicyConfigDynamicRuleArgs>());
            set => _dynamicRules = value;
        }

        [Input("events", required: true)]
        private InputList<Inputs.NotificationCenterComputePolicyConfigEventArgs>? _events;
        public InputList<Inputs.NotificationCenterComputePolicyConfigEventArgs> Events
        {
            get => _events ?? (_events = new InputList<Inputs.NotificationCenterComputePolicyConfigEventArgs>());
            set => _events = value;
        }

        [Input("resourceIds")]
        private InputList<string>? _resourceIds;
        public InputList<string> ResourceIds
        {
            get => _resourceIds ?? (_resourceIds = new InputList<string>());
            set => _resourceIds = value;
        }

        [Input("shouldIncludeAllResources")]
        public Input<bool>? ShouldIncludeAllResources { get; set; }

        public NotificationCenterComputePolicyConfigArgs()
        {
        }
        public static new NotificationCenterComputePolicyConfigArgs Empty => new NotificationCenterComputePolicyConfigArgs();
    }
}

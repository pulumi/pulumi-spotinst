// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Outputs
{

    [OutputType]
    public sealed class NotificationCenterComputePolicyConfig
    {
        public readonly ImmutableArray<Outputs.NotificationCenterComputePolicyConfigDynamicRule> DynamicRules;
        public readonly ImmutableArray<Outputs.NotificationCenterComputePolicyConfigEvent> Events;
        public readonly ImmutableArray<string> ResourceIds;
        public readonly bool? ShouldIncludeAllResources;

        [OutputConstructor]
        private NotificationCenterComputePolicyConfig(
            ImmutableArray<Outputs.NotificationCenterComputePolicyConfigDynamicRule> dynamicRules,

            ImmutableArray<Outputs.NotificationCenterComputePolicyConfigEvent> events,

            ImmutableArray<string> resourceIds,

            bool? shouldIncludeAllResources)
        {
            DynamicRules = dynamicRules;
            Events = events;
            ResourceIds = resourceIds;
            ShouldIncludeAllResources = shouldIncludeAllResources;
        }
    }
}

// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Outputs
{

    [OutputType]
    public sealed class ElastigroupAzureV3NetworkNetworkInterface
    {
        public readonly ImmutableArray<Outputs.ElastigroupAzureV3NetworkNetworkInterfaceAdditionalIpConfig> AdditionalIpConfigs;
        public readonly ImmutableArray<Outputs.ElastigroupAzureV3NetworkNetworkInterfaceApplicationSecurityGroup> ApplicationSecurityGroups;
        public readonly bool AssignPublicIp;
        public readonly bool? EnableIpForwarding;
        public readonly bool IsPrimary;
        public readonly ImmutableArray<string> PrivateIpAddresses;
        public readonly string? PublicIpSku;
        public readonly ImmutableArray<Outputs.ElastigroupAzureV3NetworkNetworkInterfaceSecurityGroup> SecurityGroups;
        public readonly string SubnetName;

        [OutputConstructor]
        private ElastigroupAzureV3NetworkNetworkInterface(
            ImmutableArray<Outputs.ElastigroupAzureV3NetworkNetworkInterfaceAdditionalIpConfig> additionalIpConfigs,

            ImmutableArray<Outputs.ElastigroupAzureV3NetworkNetworkInterfaceApplicationSecurityGroup> applicationSecurityGroups,

            bool assignPublicIp,

            bool? enableIpForwarding,

            bool isPrimary,

            ImmutableArray<string> privateIpAddresses,

            string? publicIpSku,

            ImmutableArray<Outputs.ElastigroupAzureV3NetworkNetworkInterfaceSecurityGroup> securityGroups,

            string subnetName)
        {
            AdditionalIpConfigs = additionalIpConfigs;
            ApplicationSecurityGroups = applicationSecurityGroups;
            AssignPublicIp = assignPublicIp;
            EnableIpForwarding = enableIpForwarding;
            IsPrimary = isPrimary;
            PrivateIpAddresses = privateIpAddresses;
            PublicIpSku = publicIpSku;
            SecurityGroups = securityGroups;
            SubnetName = subnetName;
        }
    }
}

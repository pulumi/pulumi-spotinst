// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst
{
    /// <summary>
    /// Provides a Spotinst elastigroup Azure resource.
    /// </summary>
    [SpotInstResourceType("spotinst:index/elastigroupAzureV3:ElastigroupAzureV3")]
    public partial class ElastigroupAzureV3 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Custom init script file or text in Base64 encoded format.
        /// </summary>
        [Output("customData")]
        public Output<string?> CustomData { get; private set; } = null!;

        /// <summary>
        /// The desired number of instances the group should have at any time.
        /// </summary>
        [Output("desiredCapacity")]
        public Output<int?> DesiredCapacity { get; private set; } = null!;

        [Output("images")]
        public Output<ImmutableArray<Outputs.ElastigroupAzureV3Image>> Images { get; private set; } = null!;

        [Output("login")]
        public Output<Outputs.ElastigroupAzureV3Login?> Login { get; private set; } = null!;

        /// <summary>
        /// List of Managed Service Identity objects.
        /// </summary>
        [Output("managedServiceIdentities")]
        public Output<ImmutableArray<Outputs.ElastigroupAzureV3ManagedServiceIdentity>> ManagedServiceIdentities { get; private set; } = null!;

        /// <summary>
        /// The maximum number of instances the group should have at any time.
        /// </summary>
        [Output("maxSize")]
        public Output<int> MaxSize { get; private set; } = null!;

        /// <summary>
        /// The minimum number of instances the group should have at any time.
        /// </summary>
        [Output("minSize")]
        public Output<int> MinSize { get; private set; } = null!;

        /// <summary>
        /// Name of the Managed Service Identity.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("network")]
        public Output<Outputs.ElastigroupAzureV3Network> Network { get; private set; } = null!;

        /// <summary>
        /// Available On-Demand sizes
        /// </summary>
        [Output("odSizes")]
        public Output<ImmutableArray<string>> OdSizes { get; private set; } = null!;

        /// <summary>
        /// Type of the operating system. Valid values: `"Linux"`, `"Windows"`.
        /// </summary>
        [Output("os")]
        public Output<string> Os { get; private set; } = null!;

        /// <summary>
        /// The region your Azure group will be created in.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Name of the Azure Resource Group where the Managed Service Identity is located.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// Available Low-Priority sizes.
        /// </summary>
        [Output("spotSizes")]
        public Output<ImmutableArray<string>> SpotSizes { get; private set; } = null!;

        [Output("strategy")]
        public Output<Outputs.ElastigroupAzureV3Strategy> Strategy { get; private set; } = null!;


        /// <summary>
        /// Create a ElastigroupAzureV3 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ElastigroupAzureV3(string name, ElastigroupAzureV3Args args, CustomResourceOptions? options = null)
            : base("spotinst:index/elastigroupAzureV3:ElastigroupAzureV3", name, args ?? new ElastigroupAzureV3Args(), MakeResourceOptions(options, ""))
        {
        }

        private ElastigroupAzureV3(string name, Input<string> id, ElastigroupAzureV3State? state = null, CustomResourceOptions? options = null)
            : base("spotinst:index/elastigroupAzureV3:ElastigroupAzureV3", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ElastigroupAzureV3 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ElastigroupAzureV3 Get(string name, Input<string> id, ElastigroupAzureV3State? state = null, CustomResourceOptions? options = null)
        {
            return new ElastigroupAzureV3(name, id, state, options);
        }
    }

    public sealed class ElastigroupAzureV3Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom init script file or text in Base64 encoded format.
        /// </summary>
        [Input("customData")]
        public Input<string>? CustomData { get; set; }

        /// <summary>
        /// The desired number of instances the group should have at any time.
        /// </summary>
        [Input("desiredCapacity")]
        public Input<int>? DesiredCapacity { get; set; }

        [Input("images")]
        private InputList<Inputs.ElastigroupAzureV3ImageArgs>? _images;
        public InputList<Inputs.ElastigroupAzureV3ImageArgs> Images
        {
            get => _images ?? (_images = new InputList<Inputs.ElastigroupAzureV3ImageArgs>());
            set => _images = value;
        }

        [Input("login")]
        public Input<Inputs.ElastigroupAzureV3LoginArgs>? Login { get; set; }

        [Input("managedServiceIdentities")]
        private InputList<Inputs.ElastigroupAzureV3ManagedServiceIdentityArgs>? _managedServiceIdentities;

        /// <summary>
        /// List of Managed Service Identity objects.
        /// </summary>
        public InputList<Inputs.ElastigroupAzureV3ManagedServiceIdentityArgs> ManagedServiceIdentities
        {
            get => _managedServiceIdentities ?? (_managedServiceIdentities = new InputList<Inputs.ElastigroupAzureV3ManagedServiceIdentityArgs>());
            set => _managedServiceIdentities = value;
        }

        /// <summary>
        /// The maximum number of instances the group should have at any time.
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// The minimum number of instances the group should have at any time.
        /// </summary>
        [Input("minSize")]
        public Input<int>? MinSize { get; set; }

        /// <summary>
        /// Name of the Managed Service Identity.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("network", required: true)]
        public Input<Inputs.ElastigroupAzureV3NetworkArgs> Network { get; set; } = null!;

        [Input("odSizes", required: true)]
        private InputList<string>? _odSizes;

        /// <summary>
        /// Available On-Demand sizes
        /// </summary>
        public InputList<string> OdSizes
        {
            get => _odSizes ?? (_odSizes = new InputList<string>());
            set => _odSizes = value;
        }

        /// <summary>
        /// Type of the operating system. Valid values: `"Linux"`, `"Windows"`.
        /// </summary>
        [Input("os", required: true)]
        public Input<string> Os { get; set; } = null!;

        /// <summary>
        /// The region your Azure group will be created in.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// Name of the Azure Resource Group where the Managed Service Identity is located.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("spotSizes", required: true)]
        private InputList<string>? _spotSizes;

        /// <summary>
        /// Available Low-Priority sizes.
        /// </summary>
        public InputList<string> SpotSizes
        {
            get => _spotSizes ?? (_spotSizes = new InputList<string>());
            set => _spotSizes = value;
        }

        [Input("strategy", required: true)]
        public Input<Inputs.ElastigroupAzureV3StrategyArgs> Strategy { get; set; } = null!;

        public ElastigroupAzureV3Args()
        {
        }
        public static new ElastigroupAzureV3Args Empty => new ElastigroupAzureV3Args();
    }

    public sealed class ElastigroupAzureV3State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom init script file or text in Base64 encoded format.
        /// </summary>
        [Input("customData")]
        public Input<string>? CustomData { get; set; }

        /// <summary>
        /// The desired number of instances the group should have at any time.
        /// </summary>
        [Input("desiredCapacity")]
        public Input<int>? DesiredCapacity { get; set; }

        [Input("images")]
        private InputList<Inputs.ElastigroupAzureV3ImageGetArgs>? _images;
        public InputList<Inputs.ElastigroupAzureV3ImageGetArgs> Images
        {
            get => _images ?? (_images = new InputList<Inputs.ElastigroupAzureV3ImageGetArgs>());
            set => _images = value;
        }

        [Input("login")]
        public Input<Inputs.ElastigroupAzureV3LoginGetArgs>? Login { get; set; }

        [Input("managedServiceIdentities")]
        private InputList<Inputs.ElastigroupAzureV3ManagedServiceIdentityGetArgs>? _managedServiceIdentities;

        /// <summary>
        /// List of Managed Service Identity objects.
        /// </summary>
        public InputList<Inputs.ElastigroupAzureV3ManagedServiceIdentityGetArgs> ManagedServiceIdentities
        {
            get => _managedServiceIdentities ?? (_managedServiceIdentities = new InputList<Inputs.ElastigroupAzureV3ManagedServiceIdentityGetArgs>());
            set => _managedServiceIdentities = value;
        }

        /// <summary>
        /// The maximum number of instances the group should have at any time.
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// The minimum number of instances the group should have at any time.
        /// </summary>
        [Input("minSize")]
        public Input<int>? MinSize { get; set; }

        /// <summary>
        /// Name of the Managed Service Identity.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("network")]
        public Input<Inputs.ElastigroupAzureV3NetworkGetArgs>? Network { get; set; }

        [Input("odSizes")]
        private InputList<string>? _odSizes;

        /// <summary>
        /// Available On-Demand sizes
        /// </summary>
        public InputList<string> OdSizes
        {
            get => _odSizes ?? (_odSizes = new InputList<string>());
            set => _odSizes = value;
        }

        /// <summary>
        /// Type of the operating system. Valid values: `"Linux"`, `"Windows"`.
        /// </summary>
        [Input("os")]
        public Input<string>? Os { get; set; }

        /// <summary>
        /// The region your Azure group will be created in.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Name of the Azure Resource Group where the Managed Service Identity is located.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("spotSizes")]
        private InputList<string>? _spotSizes;

        /// <summary>
        /// Available Low-Priority sizes.
        /// </summary>
        public InputList<string> SpotSizes
        {
            get => _spotSizes ?? (_spotSizes = new InputList<string>());
            set => _spotSizes = value;
        }

        [Input("strategy")]
        public Input<Inputs.ElastigroupAzureV3StrategyGetArgs>? Strategy { get; set; }

        public ElastigroupAzureV3State()
        {
        }
        public static new ElastigroupAzureV3State Empty => new ElastigroupAzureV3State();
    }
}

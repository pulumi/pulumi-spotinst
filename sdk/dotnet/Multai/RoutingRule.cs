// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Multai
{
    [SpotInstResourceType("spotinst:multai/routingRule:RoutingRule")]
    public partial class RoutingRule : global::Pulumi.CustomResource
    {
        [Output("balancerId")]
        public Output<string> BalancerId { get; private set; } = null!;

        [Output("listenerId")]
        public Output<string> ListenerId { get; private set; } = null!;

        [Output("middlewareIds")]
        public Output<ImmutableArray<string>> MiddlewareIds { get; private set; } = null!;

        [Output("priority")]
        public Output<int?> Priority { get; private set; } = null!;

        [Output("route")]
        public Output<string> Route { get; private set; } = null!;

        [Output("strategy")]
        public Output<string?> Strategy { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.RoutingRuleTag>> Tags { get; private set; } = null!;

        [Output("targetSetIds")]
        public Output<ImmutableArray<string>> TargetSetIds { get; private set; } = null!;


        /// <summary>
        /// Create a RoutingRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RoutingRule(string name, RoutingRuleArgs args, CustomResourceOptions? options = null)
            : base("spotinst:multai/routingRule:RoutingRule", name, args ?? new RoutingRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RoutingRule(string name, Input<string> id, RoutingRuleState? state = null, CustomResourceOptions? options = null)
            : base("spotinst:multai/routingRule:RoutingRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RoutingRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RoutingRule Get(string name, Input<string> id, RoutingRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new RoutingRule(name, id, state, options);
        }
    }

    public sealed class RoutingRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("balancerId", required: true)]
        public Input<string> BalancerId { get; set; } = null!;

        [Input("listenerId", required: true)]
        public Input<string> ListenerId { get; set; } = null!;

        [Input("middlewareIds")]
        private InputList<string>? _middlewareIds;
        public InputList<string> MiddlewareIds
        {
            get => _middlewareIds ?? (_middlewareIds = new InputList<string>());
            set => _middlewareIds = value;
        }

        [Input("priority")]
        public Input<int>? Priority { get; set; }

        [Input("route", required: true)]
        public Input<string> Route { get; set; } = null!;

        [Input("strategy")]
        public Input<string>? Strategy { get; set; }

        [Input("tags")]
        private InputList<Inputs.RoutingRuleTagArgs>? _tags;
        public InputList<Inputs.RoutingRuleTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.RoutingRuleTagArgs>());
            set => _tags = value;
        }

        [Input("targetSetIds", required: true)]
        private InputList<string>? _targetSetIds;
        public InputList<string> TargetSetIds
        {
            get => _targetSetIds ?? (_targetSetIds = new InputList<string>());
            set => _targetSetIds = value;
        }

        public RoutingRuleArgs()
        {
        }
        public static new RoutingRuleArgs Empty => new RoutingRuleArgs();
    }

    public sealed class RoutingRuleState : global::Pulumi.ResourceArgs
    {
        [Input("balancerId")]
        public Input<string>? BalancerId { get; set; }

        [Input("listenerId")]
        public Input<string>? ListenerId { get; set; }

        [Input("middlewareIds")]
        private InputList<string>? _middlewareIds;
        public InputList<string> MiddlewareIds
        {
            get => _middlewareIds ?? (_middlewareIds = new InputList<string>());
            set => _middlewareIds = value;
        }

        [Input("priority")]
        public Input<int>? Priority { get; set; }

        [Input("route")]
        public Input<string>? Route { get; set; }

        [Input("strategy")]
        public Input<string>? Strategy { get; set; }

        [Input("tags")]
        private InputList<Inputs.RoutingRuleTagGetArgs>? _tags;
        public InputList<Inputs.RoutingRuleTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.RoutingRuleTagGetArgs>());
            set => _tags = value;
        }

        [Input("targetSetIds")]
        private InputList<string>? _targetSetIds;
        public InputList<string> TargetSetIds
        {
            get => _targetSetIds ?? (_targetSetIds = new InputList<string>());
            set => _targetSetIds = value;
        }

        public RoutingRuleState()
        {
        }
        public static new RoutingRuleState Empty => new RoutingRuleState();
    }
}

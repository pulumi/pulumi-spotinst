// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Azure
{
    /// <summary>
    /// Provides a Spotinst elastigroup Azure resource.
    /// 
    /// 
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-spotinst/blob/master/website/docs/r/elastigroup_azure.html.markdown.
    /// </summary>
    public partial class Elastigroup : Pulumi.CustomResource
    {
        [Output("customData")]
        public Output<string?> CustomData { get; private set; } = null!;

        /// <summary>
        /// The desired number of instances the group should have at any time.
        /// </summary>
        [Output("desiredCapacity")]
        public Output<int?> DesiredCapacity { get; private set; } = null!;

        [Output("healthCheck")]
        public Output<Outputs.ElastigroupHealthCheck?> HealthCheck { get; private set; } = null!;

        [Output("images")]
        public Output<ImmutableArray<Outputs.ElastigroupImages>> Images { get; private set; } = null!;

        [Output("integrationKubernetes")]
        public Output<Outputs.ElastigroupIntegrationKubernetes?> IntegrationKubernetes { get; private set; } = null!;

        [Output("integrationMultaiRuntime")]
        public Output<Outputs.ElastigroupIntegrationMultaiRuntime?> IntegrationMultaiRuntime { get; private set; } = null!;

        [Output("loadBalancers")]
        public Output<ImmutableArray<Outputs.ElastigroupLoadBalancers>> LoadBalancers { get; private set; } = null!;

        [Output("login")]
        public Output<Outputs.ElastigroupLogin?> Login { get; private set; } = null!;

        /// <summary>
        /// Available Low-Priority sizes.
        /// </summary>
        [Output("lowPrioritySizes")]
        public Output<ImmutableArray<string>> LowPrioritySizes { get; private set; } = null!;

        [Output("managedServiceIdentities")]
        public Output<ImmutableArray<Outputs.ElastigroupManagedServiceIdentities>> ManagedServiceIdentities { get; private set; } = null!;

        /// <summary>
        /// The maximum number of instances the group should have at any time.
        /// </summary>
        [Output("maxSize")]
        public Output<int> MaxSize { get; private set; } = null!;

        /// <summary>
        /// The minimum number of instances the group should have at any time.
        /// </summary>
        [Output("minSize")]
        public Output<int> MinSize { get; private set; } = null!;

        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("network")]
        public Output<Outputs.ElastigroupNetwork> Network { get; private set; } = null!;

        /// <summary>
        /// Available On-Demand sizes
        /// </summary>
        [Output("odSizes")]
        public Output<ImmutableArray<string>> OdSizes { get; private set; } = null!;

        /// <summary>
        /// Operation system type. Valid values: `"Linux"`, `"Windows"`.
        /// </summary>
        [Output("product")]
        public Output<string> Product { get; private set; } = null!;

        /// <summary>
        /// The region your Azure group will be created in.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The Resource Group that the user-assigned managed identity resides in.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        [Output("scalingDownPolicies")]
        public Output<ImmutableArray<Outputs.ElastigroupScalingDownPolicies>> ScalingDownPolicies { get; private set; } = null!;

        [Output("scalingUpPolicies")]
        public Output<ImmutableArray<Outputs.ElastigroupScalingUpPolicies>> ScalingUpPolicies { get; private set; } = null!;

        [Output("scheduledTasks")]
        public Output<ImmutableArray<Outputs.ElastigroupScheduledTasks>> ScheduledTasks { get; private set; } = null!;

        /// <summary>
        /// Shutdown script for the group. Value should be passed as a string encoded at Base64 only.
        /// </summary>
        [Output("shutdownScript")]
        public Output<string?> ShutdownScript { get; private set; } = null!;

        /// <summary>
        /// Describes the deployment strategy.
        /// </summary>
        [Output("strategy")]
        public Output<Outputs.ElastigroupStrategy> Strategy { get; private set; } = null!;

        [Output("updatePolicy")]
        public Output<Outputs.ElastigroupUpdatePolicy?> UpdatePolicy { get; private set; } = null!;

        /// <summary>
        /// Base64-encoded MIME user data to make available to the instances.
        /// </summary>
        [Output("userData")]
        public Output<string?> UserData { get; private set; } = null!;


        /// <summary>
        /// Create a Elastigroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Elastigroup(string name, ElastigroupArgs args, CustomResourceOptions? options = null)
            : base("spotinst:azure/elastigroup:Elastigroup", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Elastigroup(string name, Input<string> id, ElastigroupState? state = null, CustomResourceOptions? options = null)
            : base("spotinst:azure/elastigroup:Elastigroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Elastigroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Elastigroup Get(string name, Input<string> id, ElastigroupState? state = null, CustomResourceOptions? options = null)
        {
            return new Elastigroup(name, id, state, options);
        }
    }

    public sealed class ElastigroupArgs : Pulumi.ResourceArgs
    {
        [Input("customData")]
        public Input<string>? CustomData { get; set; }

        /// <summary>
        /// The desired number of instances the group should have at any time.
        /// </summary>
        [Input("desiredCapacity")]
        public Input<int>? DesiredCapacity { get; set; }

        [Input("healthCheck")]
        public Input<Inputs.ElastigroupHealthCheckArgs>? HealthCheck { get; set; }

        [Input("images")]
        private InputList<Inputs.ElastigroupImagesArgs>? _images;
        public InputList<Inputs.ElastigroupImagesArgs> Images
        {
            get => _images ?? (_images = new InputList<Inputs.ElastigroupImagesArgs>());
            set => _images = value;
        }

        [Input("integrationKubernetes")]
        public Input<Inputs.ElastigroupIntegrationKubernetesArgs>? IntegrationKubernetes { get; set; }

        [Input("integrationMultaiRuntime")]
        public Input<Inputs.ElastigroupIntegrationMultaiRuntimeArgs>? IntegrationMultaiRuntime { get; set; }

        [Input("loadBalancers")]
        private InputList<Inputs.ElastigroupLoadBalancersArgs>? _loadBalancers;
        public InputList<Inputs.ElastigroupLoadBalancersArgs> LoadBalancers
        {
            get => _loadBalancers ?? (_loadBalancers = new InputList<Inputs.ElastigroupLoadBalancersArgs>());
            set => _loadBalancers = value;
        }

        [Input("login")]
        public Input<Inputs.ElastigroupLoginArgs>? Login { get; set; }

        [Input("lowPrioritySizes", required: true)]
        private InputList<string>? _lowPrioritySizes;

        /// <summary>
        /// Available Low-Priority sizes.
        /// </summary>
        public InputList<string> LowPrioritySizes
        {
            get => _lowPrioritySizes ?? (_lowPrioritySizes = new InputList<string>());
            set => _lowPrioritySizes = value;
        }

        [Input("managedServiceIdentities")]
        private InputList<Inputs.ElastigroupManagedServiceIdentitiesArgs>? _managedServiceIdentities;
        public InputList<Inputs.ElastigroupManagedServiceIdentitiesArgs> ManagedServiceIdentities
        {
            get => _managedServiceIdentities ?? (_managedServiceIdentities = new InputList<Inputs.ElastigroupManagedServiceIdentitiesArgs>());
            set => _managedServiceIdentities = value;
        }

        /// <summary>
        /// The maximum number of instances the group should have at any time.
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// The minimum number of instances the group should have at any time.
        /// </summary>
        [Input("minSize")]
        public Input<int>? MinSize { get; set; }

        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("network", required: true)]
        public Input<Inputs.ElastigroupNetworkArgs> Network { get; set; } = null!;

        [Input("odSizes", required: true)]
        private InputList<string>? _odSizes;

        /// <summary>
        /// Available On-Demand sizes
        /// </summary>
        public InputList<string> OdSizes
        {
            get => _odSizes ?? (_odSizes = new InputList<string>());
            set => _odSizes = value;
        }

        /// <summary>
        /// Operation system type. Valid values: `"Linux"`, `"Windows"`.
        /// </summary>
        [Input("product", required: true)]
        public Input<string> Product { get; set; } = null!;

        /// <summary>
        /// The region your Azure group will be created in.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// The Resource Group that the user-assigned managed identity resides in.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("scalingDownPolicies")]
        private InputList<Inputs.ElastigroupScalingDownPoliciesArgs>? _scalingDownPolicies;
        public InputList<Inputs.ElastigroupScalingDownPoliciesArgs> ScalingDownPolicies
        {
            get => _scalingDownPolicies ?? (_scalingDownPolicies = new InputList<Inputs.ElastigroupScalingDownPoliciesArgs>());
            set => _scalingDownPolicies = value;
        }

        [Input("scalingUpPolicies")]
        private InputList<Inputs.ElastigroupScalingUpPoliciesArgs>? _scalingUpPolicies;
        public InputList<Inputs.ElastigroupScalingUpPoliciesArgs> ScalingUpPolicies
        {
            get => _scalingUpPolicies ?? (_scalingUpPolicies = new InputList<Inputs.ElastigroupScalingUpPoliciesArgs>());
            set => _scalingUpPolicies = value;
        }

        [Input("scheduledTasks")]
        private InputList<Inputs.ElastigroupScheduledTasksArgs>? _scheduledTasks;
        public InputList<Inputs.ElastigroupScheduledTasksArgs> ScheduledTasks
        {
            get => _scheduledTasks ?? (_scheduledTasks = new InputList<Inputs.ElastigroupScheduledTasksArgs>());
            set => _scheduledTasks = value;
        }

        /// <summary>
        /// Shutdown script for the group. Value should be passed as a string encoded at Base64 only.
        /// </summary>
        [Input("shutdownScript")]
        public Input<string>? ShutdownScript { get; set; }

        /// <summary>
        /// Describes the deployment strategy.
        /// </summary>
        [Input("strategy", required: true)]
        public Input<Inputs.ElastigroupStrategyArgs> Strategy { get; set; } = null!;

        [Input("updatePolicy")]
        public Input<Inputs.ElastigroupUpdatePolicyArgs>? UpdatePolicy { get; set; }

        /// <summary>
        /// Base64-encoded MIME user data to make available to the instances.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        public ElastigroupArgs()
        {
        }
    }

    public sealed class ElastigroupState : Pulumi.ResourceArgs
    {
        [Input("customData")]
        public Input<string>? CustomData { get; set; }

        /// <summary>
        /// The desired number of instances the group should have at any time.
        /// </summary>
        [Input("desiredCapacity")]
        public Input<int>? DesiredCapacity { get; set; }

        [Input("healthCheck")]
        public Input<Inputs.ElastigroupHealthCheckGetArgs>? HealthCheck { get; set; }

        [Input("images")]
        private InputList<Inputs.ElastigroupImagesGetArgs>? _images;
        public InputList<Inputs.ElastigroupImagesGetArgs> Images
        {
            get => _images ?? (_images = new InputList<Inputs.ElastigroupImagesGetArgs>());
            set => _images = value;
        }

        [Input("integrationKubernetes")]
        public Input<Inputs.ElastigroupIntegrationKubernetesGetArgs>? IntegrationKubernetes { get; set; }

        [Input("integrationMultaiRuntime")]
        public Input<Inputs.ElastigroupIntegrationMultaiRuntimeGetArgs>? IntegrationMultaiRuntime { get; set; }

        [Input("loadBalancers")]
        private InputList<Inputs.ElastigroupLoadBalancersGetArgs>? _loadBalancers;
        public InputList<Inputs.ElastigroupLoadBalancersGetArgs> LoadBalancers
        {
            get => _loadBalancers ?? (_loadBalancers = new InputList<Inputs.ElastigroupLoadBalancersGetArgs>());
            set => _loadBalancers = value;
        }

        [Input("login")]
        public Input<Inputs.ElastigroupLoginGetArgs>? Login { get; set; }

        [Input("lowPrioritySizes")]
        private InputList<string>? _lowPrioritySizes;

        /// <summary>
        /// Available Low-Priority sizes.
        /// </summary>
        public InputList<string> LowPrioritySizes
        {
            get => _lowPrioritySizes ?? (_lowPrioritySizes = new InputList<string>());
            set => _lowPrioritySizes = value;
        }

        [Input("managedServiceIdentities")]
        private InputList<Inputs.ElastigroupManagedServiceIdentitiesGetArgs>? _managedServiceIdentities;
        public InputList<Inputs.ElastigroupManagedServiceIdentitiesGetArgs> ManagedServiceIdentities
        {
            get => _managedServiceIdentities ?? (_managedServiceIdentities = new InputList<Inputs.ElastigroupManagedServiceIdentitiesGetArgs>());
            set => _managedServiceIdentities = value;
        }

        /// <summary>
        /// The maximum number of instances the group should have at any time.
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// The minimum number of instances the group should have at any time.
        /// </summary>
        [Input("minSize")]
        public Input<int>? MinSize { get; set; }

        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("network")]
        public Input<Inputs.ElastigroupNetworkGetArgs>? Network { get; set; }

        [Input("odSizes")]
        private InputList<string>? _odSizes;

        /// <summary>
        /// Available On-Demand sizes
        /// </summary>
        public InputList<string> OdSizes
        {
            get => _odSizes ?? (_odSizes = new InputList<string>());
            set => _odSizes = value;
        }

        /// <summary>
        /// Operation system type. Valid values: `"Linux"`, `"Windows"`.
        /// </summary>
        [Input("product")]
        public Input<string>? Product { get; set; }

        /// <summary>
        /// The region your Azure group will be created in.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The Resource Group that the user-assigned managed identity resides in.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("scalingDownPolicies")]
        private InputList<Inputs.ElastigroupScalingDownPoliciesGetArgs>? _scalingDownPolicies;
        public InputList<Inputs.ElastigroupScalingDownPoliciesGetArgs> ScalingDownPolicies
        {
            get => _scalingDownPolicies ?? (_scalingDownPolicies = new InputList<Inputs.ElastigroupScalingDownPoliciesGetArgs>());
            set => _scalingDownPolicies = value;
        }

        [Input("scalingUpPolicies")]
        private InputList<Inputs.ElastigroupScalingUpPoliciesGetArgs>? _scalingUpPolicies;
        public InputList<Inputs.ElastigroupScalingUpPoliciesGetArgs> ScalingUpPolicies
        {
            get => _scalingUpPolicies ?? (_scalingUpPolicies = new InputList<Inputs.ElastigroupScalingUpPoliciesGetArgs>());
            set => _scalingUpPolicies = value;
        }

        [Input("scheduledTasks")]
        private InputList<Inputs.ElastigroupScheduledTasksGetArgs>? _scheduledTasks;
        public InputList<Inputs.ElastigroupScheduledTasksGetArgs> ScheduledTasks
        {
            get => _scheduledTasks ?? (_scheduledTasks = new InputList<Inputs.ElastigroupScheduledTasksGetArgs>());
            set => _scheduledTasks = value;
        }

        /// <summary>
        /// Shutdown script for the group. Value should be passed as a string encoded at Base64 only.
        /// </summary>
        [Input("shutdownScript")]
        public Input<string>? ShutdownScript { get; set; }

        /// <summary>
        /// Describes the deployment strategy.
        /// </summary>
        [Input("strategy")]
        public Input<Inputs.ElastigroupStrategyGetArgs>? Strategy { get; set; }

        [Input("updatePolicy")]
        public Input<Inputs.ElastigroupUpdatePolicyGetArgs>? UpdatePolicy { get; set; }

        /// <summary>
        /// Base64-encoded MIME user data to make available to the instances.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        public ElastigroupState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class ElastigroupHealthCheckArgs : Pulumi.ResourceArgs
    {
        [Input("autoHealing")]
        public Input<bool>? AutoHealing { get; set; }

        [Input("gracePeriod")]
        public Input<int>? GracePeriod { get; set; }

        [Input("healthCheckType", required: true)]
        public Input<string> HealthCheckType { get; set; } = null!;

        public ElastigroupHealthCheckArgs()
        {
        }
    }

    public sealed class ElastigroupHealthCheckGetArgs : Pulumi.ResourceArgs
    {
        [Input("autoHealing")]
        public Input<bool>? AutoHealing { get; set; }

        [Input("gracePeriod")]
        public Input<int>? GracePeriod { get; set; }

        [Input("healthCheckType", required: true)]
        public Input<string> HealthCheckType { get; set; } = null!;

        public ElastigroupHealthCheckGetArgs()
        {
        }
    }

    public sealed class ElastigroupImagesArgs : Pulumi.ResourceArgs
    {
        [Input("customs")]
        private InputList<ElastigroupImagesCustomsArgs>? _customs;
        public InputList<ElastigroupImagesCustomsArgs> Customs
        {
            get => _customs ?? (_customs = new InputList<ElastigroupImagesCustomsArgs>());
            set => _customs = value;
        }

        [Input("marketplaces")]
        private InputList<ElastigroupImagesMarketplacesArgs>? _marketplaces;
        public InputList<ElastigroupImagesMarketplacesArgs> Marketplaces
        {
            get => _marketplaces ?? (_marketplaces = new InputList<ElastigroupImagesMarketplacesArgs>());
            set => _marketplaces = value;
        }

        public ElastigroupImagesArgs()
        {
        }
    }

    public sealed class ElastigroupImagesCustomsArgs : Pulumi.ResourceArgs
    {
        [Input("imageName", required: true)]
        public Input<string> ImageName { get; set; } = null!;

        /// <summary>
        /// The Resource Group that the user-assigned managed identity resides in.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ElastigroupImagesCustomsArgs()
        {
        }
    }

    public sealed class ElastigroupImagesCustomsGetArgs : Pulumi.ResourceArgs
    {
        [Input("imageName", required: true)]
        public Input<string> ImageName { get; set; } = null!;

        /// <summary>
        /// The Resource Group that the user-assigned managed identity resides in.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ElastigroupImagesCustomsGetArgs()
        {
        }
    }

    public sealed class ElastigroupImagesGetArgs : Pulumi.ResourceArgs
    {
        [Input("customs")]
        private InputList<ElastigroupImagesCustomsGetArgs>? _customs;
        public InputList<ElastigroupImagesCustomsGetArgs> Customs
        {
            get => _customs ?? (_customs = new InputList<ElastigroupImagesCustomsGetArgs>());
            set => _customs = value;
        }

        [Input("marketplaces")]
        private InputList<ElastigroupImagesMarketplacesGetArgs>? _marketplaces;
        public InputList<ElastigroupImagesMarketplacesGetArgs> Marketplaces
        {
            get => _marketplaces ?? (_marketplaces = new InputList<ElastigroupImagesMarketplacesGetArgs>());
            set => _marketplaces = value;
        }

        public ElastigroupImagesGetArgs()
        {
        }
    }

    public sealed class ElastigroupImagesMarketplacesArgs : Pulumi.ResourceArgs
    {
        [Input("offer", required: true)]
        public Input<string> Offer { get; set; } = null!;

        [Input("publisher", required: true)]
        public Input<string> Publisher { get; set; } = null!;

        [Input("sku", required: true)]
        public Input<string> Sku { get; set; } = null!;

        public ElastigroupImagesMarketplacesArgs()
        {
        }
    }

    public sealed class ElastigroupImagesMarketplacesGetArgs : Pulumi.ResourceArgs
    {
        [Input("offer", required: true)]
        public Input<string> Offer { get; set; } = null!;

        [Input("publisher", required: true)]
        public Input<string> Publisher { get; set; } = null!;

        [Input("sku", required: true)]
        public Input<string> Sku { get; set; } = null!;

        public ElastigroupImagesMarketplacesGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationKubernetesArgs : Pulumi.ResourceArgs
    {
        [Input("clusterIdentifier", required: true)]
        public Input<string> ClusterIdentifier { get; set; } = null!;

        public ElastigroupIntegrationKubernetesArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationKubernetesGetArgs : Pulumi.ResourceArgs
    {
        [Input("clusterIdentifier", required: true)]
        public Input<string> ClusterIdentifier { get; set; } = null!;

        public ElastigroupIntegrationKubernetesGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationMultaiRuntimeArgs : Pulumi.ResourceArgs
    {
        [Input("deploymentId", required: true)]
        public Input<string> DeploymentId { get; set; } = null!;

        public ElastigroupIntegrationMultaiRuntimeArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationMultaiRuntimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("deploymentId", required: true)]
        public Input<string> DeploymentId { get; set; } = null!;

        public ElastigroupIntegrationMultaiRuntimeGetArgs()
        {
        }
    }

    public sealed class ElastigroupLoadBalancersArgs : Pulumi.ResourceArgs
    {
        [Input("autoWeight")]
        public Input<bool>? AutoWeight { get; set; }

        [Input("balancerId")]
        public Input<string>? BalancerId { get; set; }

        [Input("targetSetId")]
        public Input<string>? TargetSetId { get; set; }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ElastigroupLoadBalancersArgs()
        {
        }
    }

    public sealed class ElastigroupLoadBalancersGetArgs : Pulumi.ResourceArgs
    {
        [Input("autoWeight")]
        public Input<bool>? AutoWeight { get; set; }

        [Input("balancerId")]
        public Input<string>? BalancerId { get; set; }

        [Input("targetSetId")]
        public Input<string>? TargetSetId { get; set; }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ElastigroupLoadBalancersGetArgs()
        {
        }
    }

    public sealed class ElastigroupLoginArgs : Pulumi.ResourceArgs
    {
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshPublicKey")]
        public Input<string>? SshPublicKey { get; set; }

        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        public ElastigroupLoginArgs()
        {
        }
    }

    public sealed class ElastigroupLoginGetArgs : Pulumi.ResourceArgs
    {
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sshPublicKey")]
        public Input<string>? SshPublicKey { get; set; }

        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        public ElastigroupLoginGetArgs()
        {
        }
    }

    public sealed class ElastigroupManagedServiceIdentitiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The Resource Group that the user-assigned managed identity resides in.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ElastigroupManagedServiceIdentitiesArgs()
        {
        }
    }

    public sealed class ElastigroupManagedServiceIdentitiesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The Resource Group that the user-assigned managed identity resides in.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ElastigroupManagedServiceIdentitiesGetArgs()
        {
        }
    }

    public sealed class ElastigroupNetworkAdditionalIpConfigsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("privateIpVersion")]
        public Input<string>? PrivateIpVersion { get; set; }

        public ElastigroupNetworkAdditionalIpConfigsArgs()
        {
        }
    }

    public sealed class ElastigroupNetworkAdditionalIpConfigsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("privateIpVersion")]
        public Input<string>? PrivateIpVersion { get; set; }

        public ElastigroupNetworkAdditionalIpConfigsGetArgs()
        {
        }
    }

    public sealed class ElastigroupNetworkArgs : Pulumi.ResourceArgs
    {
        [Input("additionalIpConfigs")]
        private InputList<ElastigroupNetworkAdditionalIpConfigsArgs>? _additionalIpConfigs;
        public InputList<ElastigroupNetworkAdditionalIpConfigsArgs> AdditionalIpConfigs
        {
            get => _additionalIpConfigs ?? (_additionalIpConfigs = new InputList<ElastigroupNetworkAdditionalIpConfigsArgs>());
            set => _additionalIpConfigs = value;
        }

        [Input("assignPublicIp")]
        public Input<bool>? AssignPublicIp { get; set; }

        /// <summary>
        /// The Resource Group that the user-assigned managed identity resides in.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("subnetName", required: true)]
        public Input<string> SubnetName { get; set; } = null!;

        [Input("virtualNetworkName", required: true)]
        public Input<string> VirtualNetworkName { get; set; } = null!;

        public ElastigroupNetworkArgs()
        {
        }
    }

    public sealed class ElastigroupNetworkGetArgs : Pulumi.ResourceArgs
    {
        [Input("additionalIpConfigs")]
        private InputList<ElastigroupNetworkAdditionalIpConfigsGetArgs>? _additionalIpConfigs;
        public InputList<ElastigroupNetworkAdditionalIpConfigsGetArgs> AdditionalIpConfigs
        {
            get => _additionalIpConfigs ?? (_additionalIpConfigs = new InputList<ElastigroupNetworkAdditionalIpConfigsGetArgs>());
            set => _additionalIpConfigs = value;
        }

        [Input("assignPublicIp")]
        public Input<bool>? AssignPublicIp { get; set; }

        /// <summary>
        /// The Resource Group that the user-assigned managed identity resides in.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("subnetName", required: true)]
        public Input<string> SubnetName { get; set; } = null!;

        [Input("virtualNetworkName", required: true)]
        public Input<string> VirtualNetworkName { get; set; } = null!;

        public ElastigroupNetworkGetArgs()
        {
        }
    }

    public sealed class ElastigroupScalingDownPoliciesArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputList<ElastigroupScalingDownPoliciesDimensionsArgs>? _dimensions;
        public InputList<ElastigroupScalingDownPoliciesDimensionsArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<ElastigroupScalingDownPoliciesDimensionsArgs>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit")]
        public Input<string>? Unit { get; set; }

        public ElastigroupScalingDownPoliciesArgs()
        {
        }
    }

    public sealed class ElastigroupScalingDownPoliciesDimensionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("value")]
        public Input<string>? Value { get; set; }

        public ElastigroupScalingDownPoliciesDimensionsArgs()
        {
        }
    }

    public sealed class ElastigroupScalingDownPoliciesDimensionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("value")]
        public Input<string>? Value { get; set; }

        public ElastigroupScalingDownPoliciesDimensionsGetArgs()
        {
        }
    }

    public sealed class ElastigroupScalingDownPoliciesGetArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputList<ElastigroupScalingDownPoliciesDimensionsGetArgs>? _dimensions;
        public InputList<ElastigroupScalingDownPoliciesDimensionsGetArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<ElastigroupScalingDownPoliciesDimensionsGetArgs>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit")]
        public Input<string>? Unit { get; set; }

        public ElastigroupScalingDownPoliciesGetArgs()
        {
        }
    }

    public sealed class ElastigroupScalingUpPoliciesArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputList<ElastigroupScalingUpPoliciesDimensionsArgs>? _dimensions;
        public InputList<ElastigroupScalingUpPoliciesDimensionsArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<ElastigroupScalingUpPoliciesDimensionsArgs>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit")]
        public Input<string>? Unit { get; set; }

        public ElastigroupScalingUpPoliciesArgs()
        {
        }
    }

    public sealed class ElastigroupScalingUpPoliciesDimensionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("value")]
        public Input<string>? Value { get; set; }

        public ElastigroupScalingUpPoliciesDimensionsArgs()
        {
        }
    }

    public sealed class ElastigroupScalingUpPoliciesDimensionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("value")]
        public Input<string>? Value { get; set; }

        public ElastigroupScalingUpPoliciesDimensionsGetArgs()
        {
        }
    }

    public sealed class ElastigroupScalingUpPoliciesGetArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputList<ElastigroupScalingUpPoliciesDimensionsGetArgs>? _dimensions;
        public InputList<ElastigroupScalingUpPoliciesDimensionsGetArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<ElastigroupScalingUpPoliciesDimensionsGetArgs>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit")]
        public Input<string>? Unit { get; set; }

        public ElastigroupScalingUpPoliciesGetArgs()
        {
        }
    }

    public sealed class ElastigroupScheduledTasksArgs : Pulumi.ResourceArgs
    {
        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("adjustmentPercentage")]
        public Input<string>? AdjustmentPercentage { get; set; }

        [Input("batchSizePercentage")]
        public Input<string>? BatchSizePercentage { get; set; }

        [Input("cronExpression", required: true)]
        public Input<string> CronExpression { get; set; } = null!;

        [Input("gracePeriod")]
        public Input<string>? GracePeriod { get; set; }

        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("scaleMaxCapacity")]
        public Input<string>? ScaleMaxCapacity { get; set; }

        [Input("scaleMinCapacity")]
        public Input<string>? ScaleMinCapacity { get; set; }

        [Input("scaleTargetCapacity")]
        public Input<string>? ScaleTargetCapacity { get; set; }

        [Input("taskType", required: true)]
        public Input<string> TaskType { get; set; } = null!;

        public ElastigroupScheduledTasksArgs()
        {
        }
    }

    public sealed class ElastigroupScheduledTasksGetArgs : Pulumi.ResourceArgs
    {
        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("adjustmentPercentage")]
        public Input<string>? AdjustmentPercentage { get; set; }

        [Input("batchSizePercentage")]
        public Input<string>? BatchSizePercentage { get; set; }

        [Input("cronExpression", required: true)]
        public Input<string> CronExpression { get; set; } = null!;

        [Input("gracePeriod")]
        public Input<string>? GracePeriod { get; set; }

        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("scaleMaxCapacity")]
        public Input<string>? ScaleMaxCapacity { get; set; }

        [Input("scaleMinCapacity")]
        public Input<string>? ScaleMinCapacity { get; set; }

        [Input("scaleTargetCapacity")]
        public Input<string>? ScaleTargetCapacity { get; set; }

        [Input("taskType", required: true)]
        public Input<string> TaskType { get; set; } = null!;

        public ElastigroupScheduledTasksGetArgs()
        {
        }
    }

    public sealed class ElastigroupStrategyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Time (seconds) to allow the instance to be drained from incoming TCP connections and detached from MLB before terminating it during a scale-down operation.
        /// </summary>
        [Input("drainingTimeout")]
        public Input<int>? DrainingTimeout { get; set; }

        /// <summary>
        /// Percentage of Low Priority instances to maintain. Required if `od_count` is not specified.
        /// </summary>
        [Input("lowPriorityPercentage")]
        public Input<int>? LowPriorityPercentage { get; set; }

        /// <summary>
        /// Number of On-Demand instances to maintain. Required if low_priority_percentage is not specified.
        /// </summary>
        [Input("odCount")]
        public Input<int>? OdCount { get; set; }

        public ElastigroupStrategyArgs()
        {
        }
    }

    public sealed class ElastigroupStrategyGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Time (seconds) to allow the instance to be drained from incoming TCP connections and detached from MLB before terminating it during a scale-down operation.
        /// </summary>
        [Input("drainingTimeout")]
        public Input<int>? DrainingTimeout { get; set; }

        /// <summary>
        /// Percentage of Low Priority instances to maintain. Required if `od_count` is not specified.
        /// </summary>
        [Input("lowPriorityPercentage")]
        public Input<int>? LowPriorityPercentage { get; set; }

        /// <summary>
        /// Number of On-Demand instances to maintain. Required if low_priority_percentage is not specified.
        /// </summary>
        [Input("odCount")]
        public Input<int>? OdCount { get; set; }

        public ElastigroupStrategyGetArgs()
        {
        }
    }

    public sealed class ElastigroupUpdatePolicyArgs : Pulumi.ResourceArgs
    {
        [Input("rollConfig")]
        public Input<ElastigroupUpdatePolicyRollConfigArgs>? RollConfig { get; set; }

        [Input("shouldRoll", required: true)]
        public Input<bool> ShouldRoll { get; set; } = null!;

        public ElastigroupUpdatePolicyArgs()
        {
        }
    }

    public sealed class ElastigroupUpdatePolicyGetArgs : Pulumi.ResourceArgs
    {
        [Input("rollConfig")]
        public Input<ElastigroupUpdatePolicyRollConfigGetArgs>? RollConfig { get; set; }

        [Input("shouldRoll", required: true)]
        public Input<bool> ShouldRoll { get; set; } = null!;

        public ElastigroupUpdatePolicyGetArgs()
        {
        }
    }

    public sealed class ElastigroupUpdatePolicyRollConfigArgs : Pulumi.ResourceArgs
    {
        [Input("batchSizePercentage", required: true)]
        public Input<int> BatchSizePercentage { get; set; } = null!;

        [Input("gracePeriod")]
        public Input<int>? GracePeriod { get; set; }

        [Input("healthCheckType")]
        public Input<string>? HealthCheckType { get; set; }

        public ElastigroupUpdatePolicyRollConfigArgs()
        {
        }
    }

    public sealed class ElastigroupUpdatePolicyRollConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("batchSizePercentage", required: true)]
        public Input<int> BatchSizePercentage { get; set; } = null!;

        [Input("gracePeriod")]
        public Input<int>? GracePeriod { get; set; }

        [Input("healthCheckType")]
        public Input<string>? HealthCheckType { get; set; }

        public ElastigroupUpdatePolicyRollConfigGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class ElastigroupHealthCheck
    {
        public readonly bool? AutoHealing;
        public readonly int? GracePeriod;
        public readonly string HealthCheckType;

        [OutputConstructor]
        private ElastigroupHealthCheck(
            bool? autoHealing,
            int? gracePeriod,
            string healthCheckType)
        {
            AutoHealing = autoHealing;
            GracePeriod = gracePeriod;
            HealthCheckType = healthCheckType;
        }
    }

    [OutputType]
    public sealed class ElastigroupImages
    {
        public readonly ImmutableArray<ElastigroupImagesCustoms> Customs;
        public readonly ImmutableArray<ElastigroupImagesMarketplaces> Marketplaces;

        [OutputConstructor]
        private ElastigroupImages(
            ImmutableArray<ElastigroupImagesCustoms> customs,
            ImmutableArray<ElastigroupImagesMarketplaces> marketplaces)
        {
            Customs = customs;
            Marketplaces = marketplaces;
        }
    }

    [OutputType]
    public sealed class ElastigroupImagesCustoms
    {
        public readonly string ImageName;
        /// <summary>
        /// The Resource Group that the user-assigned managed identity resides in.
        /// </summary>
        public readonly string ResourceGroupName;

        [OutputConstructor]
        private ElastigroupImagesCustoms(
            string imageName,
            string resourceGroupName)
        {
            ImageName = imageName;
            ResourceGroupName = resourceGroupName;
        }
    }

    [OutputType]
    public sealed class ElastigroupImagesMarketplaces
    {
        public readonly string Offer;
        public readonly string Publisher;
        public readonly string Sku;

        [OutputConstructor]
        private ElastigroupImagesMarketplaces(
            string offer,
            string publisher,
            string sku)
        {
            Offer = offer;
            Publisher = publisher;
            Sku = sku;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationKubernetes
    {
        public readonly string ClusterIdentifier;

        [OutputConstructor]
        private ElastigroupIntegrationKubernetes(string clusterIdentifier)
        {
            ClusterIdentifier = clusterIdentifier;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationMultaiRuntime
    {
        public readonly string DeploymentId;

        [OutputConstructor]
        private ElastigroupIntegrationMultaiRuntime(string deploymentId)
        {
            DeploymentId = deploymentId;
        }
    }

    [OutputType]
    public sealed class ElastigroupLoadBalancers
    {
        public readonly bool? AutoWeight;
        public readonly string? BalancerId;
        public readonly string? TargetSetId;
        public readonly string Type;

        [OutputConstructor]
        private ElastigroupLoadBalancers(
            bool? autoWeight,
            string? balancerId,
            string? targetSetId,
            string type)
        {
            AutoWeight = autoWeight;
            BalancerId = balancerId;
            TargetSetId = targetSetId;
            Type = type;
        }
    }

    [OutputType]
    public sealed class ElastigroupLogin
    {
        public readonly string? Password;
        public readonly string? SshPublicKey;
        public readonly string UserName;

        [OutputConstructor]
        private ElastigroupLogin(
            string? password,
            string? sshPublicKey,
            string userName)
        {
            Password = password;
            SshPublicKey = sshPublicKey;
            UserName = userName;
        }
    }

    [OutputType]
    public sealed class ElastigroupManagedServiceIdentities
    {
        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Resource Group that the user-assigned managed identity resides in.
        /// </summary>
        public readonly string ResourceGroupName;

        [OutputConstructor]
        private ElastigroupManagedServiceIdentities(
            string name,
            string resourceGroupName)
        {
            Name = name;
            ResourceGroupName = resourceGroupName;
        }
    }

    [OutputType]
    public sealed class ElastigroupNetwork
    {
        public readonly ImmutableArray<ElastigroupNetworkAdditionalIpConfigs> AdditionalIpConfigs;
        public readonly bool? AssignPublicIp;
        /// <summary>
        /// The Resource Group that the user-assigned managed identity resides in.
        /// </summary>
        public readonly string ResourceGroupName;
        public readonly string SubnetName;
        public readonly string VirtualNetworkName;

        [OutputConstructor]
        private ElastigroupNetwork(
            ImmutableArray<ElastigroupNetworkAdditionalIpConfigs> additionalIpConfigs,
            bool? assignPublicIp,
            string resourceGroupName,
            string subnetName,
            string virtualNetworkName)
        {
            AdditionalIpConfigs = additionalIpConfigs;
            AssignPublicIp = assignPublicIp;
            ResourceGroupName = resourceGroupName;
            SubnetName = subnetName;
            VirtualNetworkName = virtualNetworkName;
        }
    }

    [OutputType]
    public sealed class ElastigroupNetworkAdditionalIpConfigs
    {
        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        public readonly string Name;
        public readonly string? PrivateIpVersion;

        [OutputConstructor]
        private ElastigroupNetworkAdditionalIpConfigs(
            string name,
            string? privateIpVersion)
        {
            Name = name;
            PrivateIpVersion = privateIpVersion;
        }
    }

    [OutputType]
    public sealed class ElastigroupScalingDownPolicies
    {
        public readonly string? ActionType;
        public readonly string? Adjustment;
        public readonly int Cooldown;
        public readonly ImmutableArray<ElastigroupScalingDownPoliciesDimensions> Dimensions;
        public readonly int EvaluationPeriods;
        public readonly string? MaxTargetCapacity;
        public readonly string? Maximum;
        public readonly string MetricName;
        public readonly string? MinTargetCapacity;
        public readonly string? Minimum;
        public readonly string Namespace;
        public readonly string Operator;
        public readonly int Period;
        public readonly string PolicyName;
        public readonly string Statistic;
        public readonly string? Target;
        public readonly double Threshold;
        public readonly string? Unit;

        [OutputConstructor]
        private ElastigroupScalingDownPolicies(
            string? actionType,
            string? adjustment,
            int cooldown,
            ImmutableArray<ElastigroupScalingDownPoliciesDimensions> dimensions,
            int evaluationPeriods,
            string? maxTargetCapacity,
            string? maximum,
            string metricName,
            string? minTargetCapacity,
            string? minimum,
            string @namespace,
            string @operator,
            int period,
            string policyName,
            string statistic,
            string? target,
            double threshold,
            string? unit)
        {
            ActionType = actionType;
            Adjustment = adjustment;
            Cooldown = cooldown;
            Dimensions = dimensions;
            EvaluationPeriods = evaluationPeriods;
            MaxTargetCapacity = maxTargetCapacity;
            Maximum = maximum;
            MetricName = metricName;
            MinTargetCapacity = minTargetCapacity;
            Minimum = minimum;
            Namespace = @namespace;
            Operator = @operator;
            Period = period;
            PolicyName = policyName;
            Statistic = statistic;
            Target = target;
            Threshold = threshold;
            Unit = unit;
        }
    }

    [OutputType]
    public sealed class ElastigroupScalingDownPoliciesDimensions
    {
        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        public readonly string Name;
        public readonly string? Value;

        [OutputConstructor]
        private ElastigroupScalingDownPoliciesDimensions(
            string name,
            string? value)
        {
            Name = name;
            Value = value;
        }
    }

    [OutputType]
    public sealed class ElastigroupScalingUpPolicies
    {
        public readonly string? ActionType;
        public readonly string? Adjustment;
        public readonly int Cooldown;
        public readonly ImmutableArray<ElastigroupScalingUpPoliciesDimensions> Dimensions;
        public readonly int EvaluationPeriods;
        public readonly string? MaxTargetCapacity;
        public readonly string? Maximum;
        public readonly string MetricName;
        public readonly string? MinTargetCapacity;
        public readonly string? Minimum;
        public readonly string Namespace;
        public readonly string Operator;
        public readonly int Period;
        public readonly string PolicyName;
        public readonly string Statistic;
        public readonly string? Target;
        public readonly double Threshold;
        public readonly string? Unit;

        [OutputConstructor]
        private ElastigroupScalingUpPolicies(
            string? actionType,
            string? adjustment,
            int cooldown,
            ImmutableArray<ElastigroupScalingUpPoliciesDimensions> dimensions,
            int evaluationPeriods,
            string? maxTargetCapacity,
            string? maximum,
            string metricName,
            string? minTargetCapacity,
            string? minimum,
            string @namespace,
            string @operator,
            int period,
            string policyName,
            string statistic,
            string? target,
            double threshold,
            string? unit)
        {
            ActionType = actionType;
            Adjustment = adjustment;
            Cooldown = cooldown;
            Dimensions = dimensions;
            EvaluationPeriods = evaluationPeriods;
            MaxTargetCapacity = maxTargetCapacity;
            Maximum = maximum;
            MetricName = metricName;
            MinTargetCapacity = minTargetCapacity;
            Minimum = minimum;
            Namespace = @namespace;
            Operator = @operator;
            Period = period;
            PolicyName = policyName;
            Statistic = statistic;
            Target = target;
            Threshold = threshold;
            Unit = unit;
        }
    }

    [OutputType]
    public sealed class ElastigroupScalingUpPoliciesDimensions
    {
        /// <summary>
        /// The name of the managed identity.
        /// </summary>
        public readonly string Name;
        public readonly string? Value;

        [OutputConstructor]
        private ElastigroupScalingUpPoliciesDimensions(
            string name,
            string? value)
        {
            Name = name;
            Value = value;
        }
    }

    [OutputType]
    public sealed class ElastigroupScheduledTasks
    {
        public readonly string? Adjustment;
        public readonly string? AdjustmentPercentage;
        public readonly string? BatchSizePercentage;
        public readonly string CronExpression;
        public readonly string? GracePeriod;
        public readonly bool? IsEnabled;
        public readonly string? ScaleMaxCapacity;
        public readonly string? ScaleMinCapacity;
        public readonly string? ScaleTargetCapacity;
        public readonly string TaskType;

        [OutputConstructor]
        private ElastigroupScheduledTasks(
            string? adjustment,
            string? adjustmentPercentage,
            string? batchSizePercentage,
            string cronExpression,
            string? gracePeriod,
            bool? isEnabled,
            string? scaleMaxCapacity,
            string? scaleMinCapacity,
            string? scaleTargetCapacity,
            string taskType)
        {
            Adjustment = adjustment;
            AdjustmentPercentage = adjustmentPercentage;
            BatchSizePercentage = batchSizePercentage;
            CronExpression = cronExpression;
            GracePeriod = gracePeriod;
            IsEnabled = isEnabled;
            ScaleMaxCapacity = scaleMaxCapacity;
            ScaleMinCapacity = scaleMinCapacity;
            ScaleTargetCapacity = scaleTargetCapacity;
            TaskType = taskType;
        }
    }

    [OutputType]
    public sealed class ElastigroupStrategy
    {
        /// <summary>
        /// Time (seconds) to allow the instance to be drained from incoming TCP connections and detached from MLB before terminating it during a scale-down operation.
        /// </summary>
        public readonly int? DrainingTimeout;
        /// <summary>
        /// Percentage of Low Priority instances to maintain. Required if `od_count` is not specified.
        /// </summary>
        public readonly int? LowPriorityPercentage;
        /// <summary>
        /// Number of On-Demand instances to maintain. Required if low_priority_percentage is not specified.
        /// </summary>
        public readonly int? OdCount;

        [OutputConstructor]
        private ElastigroupStrategy(
            int? drainingTimeout,
            int? lowPriorityPercentage,
            int? odCount)
        {
            DrainingTimeout = drainingTimeout;
            LowPriorityPercentage = lowPriorityPercentage;
            OdCount = odCount;
        }
    }

    [OutputType]
    public sealed class ElastigroupUpdatePolicy
    {
        public readonly ElastigroupUpdatePolicyRollConfig? RollConfig;
        public readonly bool ShouldRoll;

        [OutputConstructor]
        private ElastigroupUpdatePolicy(
            ElastigroupUpdatePolicyRollConfig? rollConfig,
            bool shouldRoll)
        {
            RollConfig = rollConfig;
            ShouldRoll = shouldRoll;
        }
    }

    [OutputType]
    public sealed class ElastigroupUpdatePolicyRollConfig
    {
        public readonly int BatchSizePercentage;
        public readonly int? GracePeriod;
        public readonly string? HealthCheckType;

        [OutputConstructor]
        private ElastigroupUpdatePolicyRollConfig(
            int batchSizePercentage,
            int? gracePeriod,
            string? healthCheckType)
        {
            BatchSizePercentage = batchSizePercentage;
            GracePeriod = gracePeriod;
            HealthCheckType = healthCheckType;
        }
    }
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Azure
{
    /// <summary>
    /// Manages a Spotinst Ocean AKS resource.
    /// 
    /// &gt; This resource contains arguments (such as `image` and `extension`) that are automatically populated from the data reported by the Ocean AKS Connector deployed into your cluster. You can override the upstream configuration by defining the corresponding arguments.
    /// </summary>
    [SpotInstResourceType("spotinst:azure/ocean:Ocean")]
    public partial class Ocean : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The AKS identifier. A valid identifier should be formatted as `acd-nnnnnnnn` and previously used identifiers cannot be reused.
        /// </summary>
        [Output("acdIdentifier")]
        public Output<string> AcdIdentifier { get; private set; } = null!;

        /// <summary>
        /// The AKS cluster name.
        /// </summary>
        [Output("aksName")]
        public Output<string> AksName { get; private set; } = null!;

        /// <summary>
        /// Name of the Azure Resource Group where the AKS cluster is located.
        /// </summary>
        [Output("aksResourceGroupName")]
        public Output<string> AksResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// The Ocean Kubernetes Autoscaler object.
        /// </summary>
        [Output("autoscaler")]
        public Output<Outputs.OceanAutoscaler?> Autoscaler { get; private set; } = null!;

        /// <summary>
        /// A unique identifier used for connecting the Ocean SaaS platform and the Kubernetes cluster. Typically, the cluster name is used as its identifier.
        /// </summary>
        [Output("controllerClusterId")]
        public Output<string> ControllerClusterId { get; private set; } = null!;

        /// <summary>
        /// Must contain a valid Base64 encoded string.
        /// </summary>
        [Output("customData")]
        public Output<string> CustomData { get; private set; } = null!;

        /// <summary>
        /// List of Azure extension objects.
        /// </summary>
        [Output("extensions")]
        public Output<ImmutableArray<Outputs.OceanExtension>> Extensions { get; private set; } = null!;

        /// <summary>
        /// The Ocean AKS Health object.
        /// </summary>
        [Output("health")]
        public Output<Outputs.OceanHealth> Health { get; private set; } = null!;

        /// <summary>
        /// Image of VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace).
        /// </summary>
        [Output("images")]
        public Output<ImmutableArray<Outputs.OceanImage>> Images { get; private set; } = null!;

        /// <summary>
        /// Configure Load Balancer.
        /// </summary>
        [Output("loadBalancers")]
        public Output<ImmutableArray<Outputs.OceanLoadBalancer>> LoadBalancers { get; private set; } = null!;

        /// <summary>
        /// List of Managed Service Identity objects.
        /// </summary>
        [Output("managedServiceIdentities")]
        public Output<ImmutableArray<Outputs.OceanManagedServiceIdentity>> ManagedServiceIdentities { get; private set; } = null!;

        /// <summary>
        /// The maximum number of pods per node in an AKS cluster.
        /// </summary>
        [Output("maxPods")]
        public Output<int?> MaxPods { get; private set; } = null!;

        /// <summary>
        /// Name of the Load Balancer.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Define the Virtual Network and Subnet.
        /// </summary>
        [Output("network")]
        public Output<Outputs.OceanNetwork> Network { get; private set; } = null!;

        /// <summary>
        /// OS disk specifications.
        /// </summary>
        [Output("osDisk")]
        public Output<Outputs.OceanOsDisk?> OsDisk { get; private set; } = null!;

        /// <summary>
        /// The Resource Group name of the Load Balancer.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// SSH public key for admin access to Linux VMs.
        /// </summary>
        [Output("sshPublicKey")]
        public Output<string> SshPublicKey { get; private set; } = null!;

        /// <summary>
        /// The Ocean AKS strategy object.
        /// </summary>
        [Output("strategies")]
        public Output<ImmutableArray<Outputs.OceanStrategy>> Strategies { get; private set; } = null!;

        /// <summary>
        /// Unique key-value pairs that will be used to tag VMs that are launched in the cluster.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.OceanTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// Username for admin access to VMs.
        /// </summary>
        [Output("userName")]
        public Output<string> UserName { get; private set; } = null!;

        /// <summary>
        /// The types of virtual machines that may or may not be a part of the Ocean cluster.
        /// </summary>
        [Output("vmSizes")]
        public Output<ImmutableArray<Outputs.OceanVmSize>> VmSizes { get; private set; } = null!;

        /// <summary>
        /// An Array holding default Availability Zones, this configures the availability zones the Ocean may launch instances in.
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a Ocean resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ocean(string name, OceanArgs args, CustomResourceOptions? options = null)
            : base("spotinst:azure/ocean:Ocean", name, args ?? new OceanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ocean(string name, Input<string> id, OceanState? state = null, CustomResourceOptions? options = null)
            : base("spotinst:azure/ocean:Ocean", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ocean resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ocean Get(string name, Input<string> id, OceanState? state = null, CustomResourceOptions? options = null)
        {
            return new Ocean(name, id, state, options);
        }
    }

    public sealed class OceanArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AKS identifier. A valid identifier should be formatted as `acd-nnnnnnnn` and previously used identifiers cannot be reused.
        /// </summary>
        [Input("acdIdentifier", required: true)]
        public Input<string> AcdIdentifier { get; set; } = null!;

        /// <summary>
        /// The AKS cluster name.
        /// </summary>
        [Input("aksName", required: true)]
        public Input<string> AksName { get; set; } = null!;

        /// <summary>
        /// Name of the Azure Resource Group where the AKS cluster is located.
        /// </summary>
        [Input("aksResourceGroupName", required: true)]
        public Input<string> AksResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The Ocean Kubernetes Autoscaler object.
        /// </summary>
        [Input("autoscaler")]
        public Input<Inputs.OceanAutoscalerArgs>? Autoscaler { get; set; }

        /// <summary>
        /// A unique identifier used for connecting the Ocean SaaS platform and the Kubernetes cluster. Typically, the cluster name is used as its identifier.
        /// </summary>
        [Input("controllerClusterId")]
        public Input<string>? ControllerClusterId { get; set; }

        /// <summary>
        /// Must contain a valid Base64 encoded string.
        /// </summary>
        [Input("customData")]
        public Input<string>? CustomData { get; set; }

        [Input("extensions")]
        private InputList<Inputs.OceanExtensionArgs>? _extensions;

        /// <summary>
        /// List of Azure extension objects.
        /// </summary>
        public InputList<Inputs.OceanExtensionArgs> Extensions
        {
            get => _extensions ?? (_extensions = new InputList<Inputs.OceanExtensionArgs>());
            set => _extensions = value;
        }

        /// <summary>
        /// The Ocean AKS Health object.
        /// </summary>
        [Input("health")]
        public Input<Inputs.OceanHealthArgs>? Health { get; set; }

        [Input("images")]
        private InputList<Inputs.OceanImageArgs>? _images;

        /// <summary>
        /// Image of VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace).
        /// </summary>
        public InputList<Inputs.OceanImageArgs> Images
        {
            get => _images ?? (_images = new InputList<Inputs.OceanImageArgs>());
            set => _images = value;
        }

        [Input("loadBalancers")]
        private InputList<Inputs.OceanLoadBalancerArgs>? _loadBalancers;

        /// <summary>
        /// Configure Load Balancer.
        /// </summary>
        public InputList<Inputs.OceanLoadBalancerArgs> LoadBalancers
        {
            get => _loadBalancers ?? (_loadBalancers = new InputList<Inputs.OceanLoadBalancerArgs>());
            set => _loadBalancers = value;
        }

        [Input("managedServiceIdentities")]
        private InputList<Inputs.OceanManagedServiceIdentityArgs>? _managedServiceIdentities;

        /// <summary>
        /// List of Managed Service Identity objects.
        /// </summary>
        public InputList<Inputs.OceanManagedServiceIdentityArgs> ManagedServiceIdentities
        {
            get => _managedServiceIdentities ?? (_managedServiceIdentities = new InputList<Inputs.OceanManagedServiceIdentityArgs>());
            set => _managedServiceIdentities = value;
        }

        /// <summary>
        /// The maximum number of pods per node in an AKS cluster.
        /// </summary>
        [Input("maxPods")]
        public Input<int>? MaxPods { get; set; }

        /// <summary>
        /// Name of the Load Balancer.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Define the Virtual Network and Subnet.
        /// </summary>
        [Input("network")]
        public Input<Inputs.OceanNetworkArgs>? Network { get; set; }

        /// <summary>
        /// OS disk specifications.
        /// </summary>
        [Input("osDisk")]
        public Input<Inputs.OceanOsDiskArgs>? OsDisk { get; set; }

        /// <summary>
        /// The Resource Group name of the Load Balancer.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// SSH public key for admin access to Linux VMs.
        /// </summary>
        [Input("sshPublicKey", required: true)]
        public Input<string> SshPublicKey { get; set; } = null!;

        [Input("strategies")]
        private InputList<Inputs.OceanStrategyArgs>? _strategies;

        /// <summary>
        /// The Ocean AKS strategy object.
        /// </summary>
        public InputList<Inputs.OceanStrategyArgs> Strategies
        {
            get => _strategies ?? (_strategies = new InputList<Inputs.OceanStrategyArgs>());
            set => _strategies = value;
        }

        [Input("tags")]
        private InputList<Inputs.OceanTagArgs>? _tags;

        /// <summary>
        /// Unique key-value pairs that will be used to tag VMs that are launched in the cluster.
        /// </summary>
        public InputList<Inputs.OceanTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.OceanTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Username for admin access to VMs.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        [Input("vmSizes")]
        private InputList<Inputs.OceanVmSizeArgs>? _vmSizes;

        /// <summary>
        /// The types of virtual machines that may or may not be a part of the Ocean cluster.
        /// </summary>
        public InputList<Inputs.OceanVmSizeArgs> VmSizes
        {
            get => _vmSizes ?? (_vmSizes = new InputList<Inputs.OceanVmSizeArgs>());
            set => _vmSizes = value;
        }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// An Array holding default Availability Zones, this configures the availability zones the Ocean may launch instances in.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public OceanArgs()
        {
        }
        public static new OceanArgs Empty => new OceanArgs();
    }

    public sealed class OceanState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AKS identifier. A valid identifier should be formatted as `acd-nnnnnnnn` and previously used identifiers cannot be reused.
        /// </summary>
        [Input("acdIdentifier")]
        public Input<string>? AcdIdentifier { get; set; }

        /// <summary>
        /// The AKS cluster name.
        /// </summary>
        [Input("aksName")]
        public Input<string>? AksName { get; set; }

        /// <summary>
        /// Name of the Azure Resource Group where the AKS cluster is located.
        /// </summary>
        [Input("aksResourceGroupName")]
        public Input<string>? AksResourceGroupName { get; set; }

        /// <summary>
        /// The Ocean Kubernetes Autoscaler object.
        /// </summary>
        [Input("autoscaler")]
        public Input<Inputs.OceanAutoscalerGetArgs>? Autoscaler { get; set; }

        /// <summary>
        /// A unique identifier used for connecting the Ocean SaaS platform and the Kubernetes cluster. Typically, the cluster name is used as its identifier.
        /// </summary>
        [Input("controllerClusterId")]
        public Input<string>? ControllerClusterId { get; set; }

        /// <summary>
        /// Must contain a valid Base64 encoded string.
        /// </summary>
        [Input("customData")]
        public Input<string>? CustomData { get; set; }

        [Input("extensions")]
        private InputList<Inputs.OceanExtensionGetArgs>? _extensions;

        /// <summary>
        /// List of Azure extension objects.
        /// </summary>
        public InputList<Inputs.OceanExtensionGetArgs> Extensions
        {
            get => _extensions ?? (_extensions = new InputList<Inputs.OceanExtensionGetArgs>());
            set => _extensions = value;
        }

        /// <summary>
        /// The Ocean AKS Health object.
        /// </summary>
        [Input("health")]
        public Input<Inputs.OceanHealthGetArgs>? Health { get; set; }

        [Input("images")]
        private InputList<Inputs.OceanImageGetArgs>? _images;

        /// <summary>
        /// Image of VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace).
        /// </summary>
        public InputList<Inputs.OceanImageGetArgs> Images
        {
            get => _images ?? (_images = new InputList<Inputs.OceanImageGetArgs>());
            set => _images = value;
        }

        [Input("loadBalancers")]
        private InputList<Inputs.OceanLoadBalancerGetArgs>? _loadBalancers;

        /// <summary>
        /// Configure Load Balancer.
        /// </summary>
        public InputList<Inputs.OceanLoadBalancerGetArgs> LoadBalancers
        {
            get => _loadBalancers ?? (_loadBalancers = new InputList<Inputs.OceanLoadBalancerGetArgs>());
            set => _loadBalancers = value;
        }

        [Input("managedServiceIdentities")]
        private InputList<Inputs.OceanManagedServiceIdentityGetArgs>? _managedServiceIdentities;

        /// <summary>
        /// List of Managed Service Identity objects.
        /// </summary>
        public InputList<Inputs.OceanManagedServiceIdentityGetArgs> ManagedServiceIdentities
        {
            get => _managedServiceIdentities ?? (_managedServiceIdentities = new InputList<Inputs.OceanManagedServiceIdentityGetArgs>());
            set => _managedServiceIdentities = value;
        }

        /// <summary>
        /// The maximum number of pods per node in an AKS cluster.
        /// </summary>
        [Input("maxPods")]
        public Input<int>? MaxPods { get; set; }

        /// <summary>
        /// Name of the Load Balancer.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Define the Virtual Network and Subnet.
        /// </summary>
        [Input("network")]
        public Input<Inputs.OceanNetworkGetArgs>? Network { get; set; }

        /// <summary>
        /// OS disk specifications.
        /// </summary>
        [Input("osDisk")]
        public Input<Inputs.OceanOsDiskGetArgs>? OsDisk { get; set; }

        /// <summary>
        /// The Resource Group name of the Load Balancer.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        /// <summary>
        /// SSH public key for admin access to Linux VMs.
        /// </summary>
        [Input("sshPublicKey")]
        public Input<string>? SshPublicKey { get; set; }

        [Input("strategies")]
        private InputList<Inputs.OceanStrategyGetArgs>? _strategies;

        /// <summary>
        /// The Ocean AKS strategy object.
        /// </summary>
        public InputList<Inputs.OceanStrategyGetArgs> Strategies
        {
            get => _strategies ?? (_strategies = new InputList<Inputs.OceanStrategyGetArgs>());
            set => _strategies = value;
        }

        [Input("tags")]
        private InputList<Inputs.OceanTagGetArgs>? _tags;

        /// <summary>
        /// Unique key-value pairs that will be used to tag VMs that are launched in the cluster.
        /// </summary>
        public InputList<Inputs.OceanTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.OceanTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// Username for admin access to VMs.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        [Input("vmSizes")]
        private InputList<Inputs.OceanVmSizeGetArgs>? _vmSizes;

        /// <summary>
        /// The types of virtual machines that may or may not be a part of the Ocean cluster.
        /// </summary>
        public InputList<Inputs.OceanVmSizeGetArgs> VmSizes
        {
            get => _vmSizes ?? (_vmSizes = new InputList<Inputs.OceanVmSizeGetArgs>());
            set => _vmSizes = value;
        }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// An Array holding default Availability Zones, this configures the availability zones the Ocean may launch instances in.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public OceanState()
        {
        }
        public static new OceanState Empty => new OceanState();
    }
}

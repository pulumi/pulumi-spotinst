// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Ecs.Inputs
{

    public sealed class OceanAutoscalerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The auto-headroom percentage. Set a number between 0-200 to control the headroom % of the cluster. Relevant when `isAutoConfig`= true.
        /// </summary>
        [Input("autoHeadroomPercentage")]
        public Input<int>? AutoHeadroomPercentage { get; set; }

        /// <summary>
        /// Cooldown period between scaling actions.
        /// </summary>
        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        /// <summary>
        /// Auto Scaling scale down operations.
        /// </summary>
        [Input("down")]
        public Input<Inputs.OceanAutoscalerDownArgs>? Down { get; set; }

        /// <summary>
        /// When set to true, both automatic and per custom launch specification manual headroom to be saved concurrently and independently in the cluster. prerequisite: isAutoConfig must be true
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        [Input("enableAutomaticAndManualHeadroom")]
        public Input<bool>? EnableAutomaticAndManualHeadroom { get; set; }

        /// <summary>
        /// Spare resource capacity management enabling fast assignment of tasks without waiting for new resources to launch.
        /// </summary>
        [Input("headroom")]
        public Input<Inputs.OceanAutoscalerHeadroomArgs>? Headroom { get; set; }

        /// <summary>
        /// Automatically configure and optimize headroom resources.
        /// </summary>
        [Input("isAutoConfig")]
        public Input<bool>? IsAutoConfig { get; set; }

        /// <summary>
        /// Enable the Ocean ECS autoscaler.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Optionally set upper and lower bounds on the resource usage of the cluster.
        /// </summary>
        [Input("resourceLimits")]
        public Input<Inputs.OceanAutoscalerResourceLimitsArgs>? ResourceLimits { get; set; }

        /// <summary>
        /// Option to scale down non-service tasks. If not set, Ocean does not scale down standalone tasks.
        /// </summary>
        [Input("shouldScaleDownNonServiceTasks")]
        public Input<bool>? ShouldScaleDownNonServiceTasks { get; set; }

        public OceanAutoscalerArgs()
        {
        }
        public static new OceanAutoscalerArgs Empty => new OceanAutoscalerArgs();
    }
}

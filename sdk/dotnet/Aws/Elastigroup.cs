// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Aws
{
    /// <summary>
    /// Provides a Spotinst AWS group resource.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-spotinst/blob/master/website/docs/r/elastigroup_aws.html.markdown.
    /// </summary>
    public partial class Elastigroup : Pulumi.CustomResource
    {
        /// <summary>
        /// List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.
        /// Note: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:
        /// `availability_zones = ["us-east-1a:subnet-123456:ClusterI03"]`
        /// </summary>
        [Output("availabilityZones")]
        public Output<ImmutableArray<string>> AvailabilityZones { get; private set; } = null!;

        [Output("blockDevicesMode")]
        public Output<string?> BlockDevicesMode { get; private set; } = null!;

        /// <summary>
        /// The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs.
        /// </summary>
        [Output("capacityUnit")]
        public Output<string> CapacityUnit { get; private set; } = null!;

        /// <summary>
        /// Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.
        /// </summary>
        [Output("cpuCredits")]
        public Output<string?> CpuCredits { get; private set; } = null!;

        /// <summary>
        /// The group description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The desired number of instances the group should have at any time.
        /// </summary>
        [Output("desiredCapacity")]
        public Output<int?> DesiredCapacity { get; private set; } = null!;

        /// <summary>
        /// The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.
        /// </summary>
        [Output("drainingTimeout")]
        public Output<int> DrainingTimeout { get; private set; } = null!;

        [Output("ebsBlockDevices")]
        public Output<ImmutableArray<Outputs.ElastigroupEbsBlockDevices>> EbsBlockDevices { get; private set; } = null!;

        /// <summary>
        /// Enable high bandwidth connectivity between instances and AWSâ€™s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.
        /// </summary>
        [Output("ebsOptimized")]
        public Output<bool> EbsOptimized { get; private set; } = null!;

        /// <summary>
        /// A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.
        /// </summary>
        [Output("elasticIps")]
        public Output<ImmutableArray<string>> ElasticIps { get; private set; } = null!;

        [Output("elasticLoadBalancers")]
        public Output<ImmutableArray<string>> ElasticLoadBalancers { get; private set; } = null!;

        /// <summary>
        /// Indicates whether monitoring is enabled for the instance.
        /// </summary>
        [Output("enableMonitoring")]
        public Output<bool?> EnableMonitoring { get; private set; } = null!;

        [Output("ephemeralBlockDevices")]
        public Output<ImmutableArray<Outputs.ElastigroupEphemeralBlockDevices>> EphemeralBlockDevices { get; private set; } = null!;

        /// <summary>
        /// In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.
        /// </summary>
        [Output("fallbackToOndemand")]
        public Output<bool> FallbackToOndemand { get; private set; } = null!;

        /// <summary>
        /// The amount of time, in seconds, after the instance has launched to starts and check its health.
        /// </summary>
        [Output("healthCheckGracePeriod")]
        public Output<int?> HealthCheckGracePeriod { get; private set; } = null!;

        /// <summary>
        /// The service that will perform health checks for the instance. Valid values: `"ELB"`, `"HCS"`, `"TARGET_GROUP"`, `"MLB"`, `"EC2"`, `"MULTAI_TARGET_SET"`, `"MLB_RUNTIME"`, `"K8S_NODE"`, `"NOMAD_NODE"`, `"ECS_CLUSTER_INSTANCE"`.
        /// </summary>
        [Output("healthCheckType")]
        public Output<string?> HealthCheckType { get; private set; } = null!;

        /// <summary>
        /// The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).
        /// </summary>
        [Output("healthCheckUnhealthyDurationBeforeReplacement")]
        public Output<int?> HealthCheckUnhealthyDurationBeforeReplacement { get; private set; } = null!;

        /// <summary>
        /// The ARN or name of an IAM instance profile to associate with launched instances.
        /// </summary>
        [Output("iamInstanceProfile")]
        public Output<string?> IamInstanceProfile { get; private set; } = null!;

        /// <summary>
        /// The ID of the AMI used to launch the instance.
        /// </summary>
        [Output("imageId")]
        public Output<string?> ImageId { get; private set; } = null!;

        /// <summary>
        /// The type of instance determines your instance's CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).
        /// </summary>
        [Output("instanceTypesOndemand")]
        public Output<string> InstanceTypesOndemand { get; private set; } = null!;

        /// <summary>
        /// Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.
        /// </summary>
        [Output("instanceTypesPreferredSpots")]
        public Output<ImmutableArray<string>> InstanceTypesPreferredSpots { get; private set; } = null!;

        /// <summary>
        /// One or more instance types.
        /// </summary>
        [Output("instanceTypesSpots")]
        public Output<ImmutableArray<string>> InstanceTypesSpots { get; private set; } = null!;

        /// <summary>
        /// List of weights per instance type for weighted groups. Each object in the list should have the following attributes:
        /// </summary>
        [Output("instanceTypesWeights")]
        public Output<ImmutableArray<Outputs.ElastigroupInstanceTypesWeights>> InstanceTypesWeights { get; private set; } = null!;

        [Output("integrationBeanstalk")]
        public Output<Outputs.ElastigroupIntegrationBeanstalk?> IntegrationBeanstalk { get; private set; } = null!;

        [Output("integrationCodedeploy")]
        public Output<Outputs.ElastigroupIntegrationCodedeploy?> IntegrationCodedeploy { get; private set; } = null!;

        [Output("integrationDockerSwarm")]
        public Output<Outputs.ElastigroupIntegrationDockerSwarm?> IntegrationDockerSwarm { get; private set; } = null!;

        [Output("integrationEcs")]
        public Output<Outputs.ElastigroupIntegrationEcs?> IntegrationEcs { get; private set; } = null!;

        [Output("integrationGitlab")]
        public Output<Outputs.ElastigroupIntegrationGitlab?> IntegrationGitlab { get; private set; } = null!;

        [Output("integrationKubernetes")]
        public Output<Outputs.ElastigroupIntegrationKubernetes?> IntegrationKubernetes { get; private set; } = null!;

        [Output("integrationMesosphere")]
        public Output<Outputs.ElastigroupIntegrationMesosphere?> IntegrationMesosphere { get; private set; } = null!;

        [Output("integrationMultaiRuntime")]
        public Output<Outputs.ElastigroupIntegrationMultaiRuntime?> IntegrationMultaiRuntime { get; private set; } = null!;

        [Output("integrationNomad")]
        public Output<Outputs.ElastigroupIntegrationNomad?> IntegrationNomad { get; private set; } = null!;

        [Output("integrationRancher")]
        public Output<Outputs.ElastigroupIntegrationRancher?> IntegrationRancher { get; private set; } = null!;

        [Output("integrationRoute53")]
        public Output<Outputs.ElastigroupIntegrationRoute53?> IntegrationRoute53 { get; private set; } = null!;

        /// <summary>
        /// The key name that should be used for the instance.
        /// </summary>
        [Output("keyName")]
        public Output<string?> KeyName { get; private set; } = null!;

        [Output("lifetimePeriod")]
        public Output<string?> LifetimePeriod { get; private set; } = null!;

        /// <summary>
        /// The maximum number of instances the group should have at any time.
        /// </summary>
        [Output("maxSize")]
        public Output<int> MaxSize { get; private set; } = null!;

        /// <summary>
        /// The minimum number of instances the group should have at any time.
        /// </summary>
        [Output("minSize")]
        public Output<int> MinSize { get; private set; } = null!;

        [Output("multaiTargetSets")]
        public Output<ImmutableArray<Outputs.ElastigroupMultaiTargetSets>> MultaiTargetSets { get; private set; } = null!;

        /// <summary>
        /// The group name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("networkInterfaces")]
        public Output<ImmutableArray<Outputs.ElastigroupNetworkInterfaces>> NetworkInterfaces { get; private set; } = null!;

        /// <summary>
        /// Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.
        /// </summary>
        [Output("ondemandCount")]
        public Output<int?> OndemandCount { get; private set; } = null!;

        /// <summary>
        /// Select a prediction strategy. Valid values: `"balanced"`, `"costOriented"`, `"equalAzDistribution"`, `"availabilityOriented"`.    
        /// </summary>
        [Output("orientation")]
        public Output<string> Orientation { get; private set; } = null!;

        [Output("persistBlockDevices")]
        public Output<bool?> PersistBlockDevices { get; private set; } = null!;

        [Output("persistPrivateIp")]
        public Output<bool?> PersistPrivateIp { get; private set; } = null!;

        [Output("persistRootDevice")]
        public Output<bool?> PersistRootDevice { get; private set; } = null!;

        /// <summary>
        /// Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used.
        /// </summary>
        [Output("placementTenancy")]
        public Output<string?> PlacementTenancy { get; private set; } = null!;

        /// <summary>
        /// The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs. 
        /// Note: Must be a sublist of `availability_zones` and `orientation` value must not be `"equalAzDistribution"`.
        /// </summary>
        [Output("preferredAvailabilityZones")]
        public Output<ImmutableArray<string>> PreferredAvailabilityZones { get; private set; } = null!;

        [Output("privateIps")]
        public Output<ImmutableArray<string>> PrivateIps { get; private set; } = null!;

        /// <summary>
        /// Operation system type. Valid values: `"Linux/UNIX"`, `"SUSE Linux"`, `"Windows"`. 
        /// For EC2 Classic instances:  `"Linux/UNIX (Amazon VPC)"`, `"SUSE Linux (Amazon VPC)"`, `"Windows (Amazon VPC)"`.
        /// </summary>
        [Output("product")]
        public Output<string> Product { get; private set; } = null!;

        /// <summary>
        /// The AWS region your group will be created in.
        /// Note: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// Hold settings for strategy correction â€“ replacing On-Demand for Spot instances. Supported Values: `"never"`, `"always"`, `"timeWindow"`
        /// </summary>
        [Output("revertToSpot")]
        public Output<Outputs.ElastigroupRevertToSpot?> RevertToSpot { get; private set; } = null!;

        [Output("scalingDownPolicies")]
        public Output<ImmutableArray<Outputs.ElastigroupScalingDownPolicies>> ScalingDownPolicies { get; private set; } = null!;

        /// <summary>
        /// Set termination policy.
        /// </summary>
        [Output("scalingStrategies")]
        public Output<ImmutableArray<Outputs.ElastigroupScalingStrategies>> ScalingStrategies { get; private set; } = null!;

        [Output("scalingTargetPolicies")]
        public Output<ImmutableArray<Outputs.ElastigroupScalingTargetPolicies>> ScalingTargetPolicies { get; private set; } = null!;

        [Output("scalingUpPolicies")]
        public Output<ImmutableArray<Outputs.ElastigroupScalingUpPolicies>> ScalingUpPolicies { get; private set; } = null!;

        [Output("scheduledTasks")]
        public Output<ImmutableArray<Outputs.ElastigroupScheduledTasks>> ScheduledTasks { get; private set; } = null!;

        /// <summary>
        /// A list of associated security group IDS.
        /// </summary>
        [Output("securityGroups")]
        public Output<ImmutableArray<string>> SecurityGroups { get; private set; } = null!;

        /// <summary>
        /// The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
        /// </summary>
        [Output("shutdownScript")]
        public Output<string?> ShutdownScript { get; private set; } = null!;

        [Output("signals")]
        public Output<ImmutableArray<Outputs.ElastigroupSignals>> Signals { get; private set; } = null!;

        /// <summary>
        /// The percentage of Spot instances that would spin up from the `desired_capacity` number.
        /// </summary>
        [Output("spotPercentage")]
        public Output<double?> SpotPercentage { get; private set; } = null!;

        [Output("statefulDeallocation")]
        public Output<Outputs.ElastigroupStatefulDeallocation?> StatefulDeallocation { get; private set; } = null!;

        /// <summary>
        /// List of Strings of subnet identifiers.
        /// Note: When this parameter is set, `availability_zones` should be left unused.
        /// </summary>
        [Output("subnetIds")]
        public Output<ImmutableArray<string>> SubnetIds { get; private set; } = null!;

        /// <summary>
        /// A key/value mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.ElastigroupTags>> Tags { get; private set; } = null!;

        [Output("targetGroupArns")]
        public Output<ImmutableArray<string>> TargetGroupArns { get; private set; } = null!;

        [Output("updatePolicy")]
        public Output<Outputs.ElastigroupUpdatePolicy?> UpdatePolicy { get; private set; } = null!;

        /// <summary>
        /// The user data to provide when launching the instance.
        /// </summary>
        [Output("userData")]
        public Output<string?> UserData { get; private set; } = null!;

        /// <summary>
        /// In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.
        /// </summary>
        [Output("utilizeReservedInstances")]
        public Output<bool?> UtilizeReservedInstances { get; private set; } = null!;

        /// <summary>
        /// Minimum number of instances in a 'HEALTHY' status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.
        /// </summary>
        [Output("waitForCapacity")]
        public Output<int?> WaitForCapacity { get; private set; } = null!;

        /// <summary>
        /// Time (seconds) to wait for instances to report a 'HEALTHY' status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment. 
        /// </summary>
        [Output("waitForCapacityTimeout")]
        public Output<int?> WaitForCapacityTimeout { get; private set; } = null!;


        /// <summary>
        /// Create a Elastigroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Elastigroup(string name, ElastigroupArgs args, CustomResourceOptions? options = null)
            : base("spotinst:aws/elastigroup:Elastigroup", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Elastigroup(string name, Input<string> id, ElastigroupState? state = null, CustomResourceOptions? options = null)
            : base("spotinst:aws/elastigroup:Elastigroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Elastigroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Elastigroup Get(string name, Input<string> id, ElastigroupState? state = null, CustomResourceOptions? options = null)
        {
            return new Elastigroup(name, id, state, options);
        }
    }

    public sealed class ElastigroupArgs : Pulumi.ResourceArgs
    {
        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;

        /// <summary>
        /// List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.
        /// Note: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:
        /// `availability_zones = ["us-east-1a:subnet-123456:ClusterI03"]`
        /// </summary>
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("blockDevicesMode")]
        public Input<string>? BlockDevicesMode { get; set; }

        /// <summary>
        /// The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs.
        /// </summary>
        [Input("capacityUnit")]
        public Input<string>? CapacityUnit { get; set; }

        /// <summary>
        /// Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.
        /// </summary>
        [Input("cpuCredits")]
        public Input<string>? CpuCredits { get; set; }

        /// <summary>
        /// The group description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The desired number of instances the group should have at any time.
        /// </summary>
        [Input("desiredCapacity")]
        public Input<int>? DesiredCapacity { get; set; }

        /// <summary>
        /// The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.
        /// </summary>
        [Input("drainingTimeout")]
        public Input<int>? DrainingTimeout { get; set; }

        [Input("ebsBlockDevices")]
        private InputList<Inputs.ElastigroupEbsBlockDevicesArgs>? _ebsBlockDevices;
        public InputList<Inputs.ElastigroupEbsBlockDevicesArgs> EbsBlockDevices
        {
            get => _ebsBlockDevices ?? (_ebsBlockDevices = new InputList<Inputs.ElastigroupEbsBlockDevicesArgs>());
            set => _ebsBlockDevices = value;
        }

        /// <summary>
        /// Enable high bandwidth connectivity between instances and AWSâ€™s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.
        /// </summary>
        [Input("ebsOptimized")]
        public Input<bool>? EbsOptimized { get; set; }

        [Input("elasticIps")]
        private InputList<string>? _elasticIps;

        /// <summary>
        /// A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.
        /// </summary>
        public InputList<string> ElasticIps
        {
            get => _elasticIps ?? (_elasticIps = new InputList<string>());
            set => _elasticIps = value;
        }

        [Input("elasticLoadBalancers")]
        private InputList<string>? _elasticLoadBalancers;
        public InputList<string> ElasticLoadBalancers
        {
            get => _elasticLoadBalancers ?? (_elasticLoadBalancers = new InputList<string>());
            set => _elasticLoadBalancers = value;
        }

        /// <summary>
        /// Indicates whether monitoring is enabled for the instance.
        /// </summary>
        [Input("enableMonitoring")]
        public Input<bool>? EnableMonitoring { get; set; }

        [Input("ephemeralBlockDevices")]
        private InputList<Inputs.ElastigroupEphemeralBlockDevicesArgs>? _ephemeralBlockDevices;
        public InputList<Inputs.ElastigroupEphemeralBlockDevicesArgs> EphemeralBlockDevices
        {
            get => _ephemeralBlockDevices ?? (_ephemeralBlockDevices = new InputList<Inputs.ElastigroupEphemeralBlockDevicesArgs>());
            set => _ephemeralBlockDevices = value;
        }

        /// <summary>
        /// In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.
        /// </summary>
        [Input("fallbackToOndemand", required: true)]
        public Input<bool> FallbackToOndemand { get; set; } = null!;

        /// <summary>
        /// The amount of time, in seconds, after the instance has launched to starts and check its health.
        /// </summary>
        [Input("healthCheckGracePeriod")]
        public Input<int>? HealthCheckGracePeriod { get; set; }

        /// <summary>
        /// The service that will perform health checks for the instance. Valid values: `"ELB"`, `"HCS"`, `"TARGET_GROUP"`, `"MLB"`, `"EC2"`, `"MULTAI_TARGET_SET"`, `"MLB_RUNTIME"`, `"K8S_NODE"`, `"NOMAD_NODE"`, `"ECS_CLUSTER_INSTANCE"`.
        /// </summary>
        [Input("healthCheckType")]
        public Input<string>? HealthCheckType { get; set; }

        /// <summary>
        /// The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).
        /// </summary>
        [Input("healthCheckUnhealthyDurationBeforeReplacement")]
        public Input<int>? HealthCheckUnhealthyDurationBeforeReplacement { get; set; }

        /// <summary>
        /// The ARN or name of an IAM instance profile to associate with launched instances.
        /// </summary>
        [Input("iamInstanceProfile")]
        public Input<string>? IamInstanceProfile { get; set; }

        /// <summary>
        /// The ID of the AMI used to launch the instance.
        /// </summary>
        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        /// <summary>
        /// The type of instance determines your instance's CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).
        /// </summary>
        [Input("instanceTypesOndemand", required: true)]
        public Input<string> InstanceTypesOndemand { get; set; } = null!;

        [Input("instanceTypesPreferredSpots")]
        private InputList<string>? _instanceTypesPreferredSpots;

        /// <summary>
        /// Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.
        /// </summary>
        public InputList<string> InstanceTypesPreferredSpots
        {
            get => _instanceTypesPreferredSpots ?? (_instanceTypesPreferredSpots = new InputList<string>());
            set => _instanceTypesPreferredSpots = value;
        }

        [Input("instanceTypesSpots", required: true)]
        private InputList<string>? _instanceTypesSpots;

        /// <summary>
        /// One or more instance types.
        /// </summary>
        public InputList<string> InstanceTypesSpots
        {
            get => _instanceTypesSpots ?? (_instanceTypesSpots = new InputList<string>());
            set => _instanceTypesSpots = value;
        }

        [Input("instanceTypesWeights")]
        private InputList<Inputs.ElastigroupInstanceTypesWeightsArgs>? _instanceTypesWeights;

        /// <summary>
        /// List of weights per instance type for weighted groups. Each object in the list should have the following attributes:
        /// </summary>
        public InputList<Inputs.ElastigroupInstanceTypesWeightsArgs> InstanceTypesWeights
        {
            get => _instanceTypesWeights ?? (_instanceTypesWeights = new InputList<Inputs.ElastigroupInstanceTypesWeightsArgs>());
            set => _instanceTypesWeights = value;
        }

        [Input("integrationBeanstalk")]
        public Input<Inputs.ElastigroupIntegrationBeanstalkArgs>? IntegrationBeanstalk { get; set; }

        [Input("integrationCodedeploy")]
        public Input<Inputs.ElastigroupIntegrationCodedeployArgs>? IntegrationCodedeploy { get; set; }

        [Input("integrationDockerSwarm")]
        public Input<Inputs.ElastigroupIntegrationDockerSwarmArgs>? IntegrationDockerSwarm { get; set; }

        [Input("integrationEcs")]
        public Input<Inputs.ElastigroupIntegrationEcsArgs>? IntegrationEcs { get; set; }

        [Input("integrationGitlab")]
        public Input<Inputs.ElastigroupIntegrationGitlabArgs>? IntegrationGitlab { get; set; }

        [Input("integrationKubernetes")]
        public Input<Inputs.ElastigroupIntegrationKubernetesArgs>? IntegrationKubernetes { get; set; }

        [Input("integrationMesosphere")]
        public Input<Inputs.ElastigroupIntegrationMesosphereArgs>? IntegrationMesosphere { get; set; }

        [Input("integrationMultaiRuntime")]
        public Input<Inputs.ElastigroupIntegrationMultaiRuntimeArgs>? IntegrationMultaiRuntime { get; set; }

        [Input("integrationNomad")]
        public Input<Inputs.ElastigroupIntegrationNomadArgs>? IntegrationNomad { get; set; }

        [Input("integrationRancher")]
        public Input<Inputs.ElastigroupIntegrationRancherArgs>? IntegrationRancher { get; set; }

        [Input("integrationRoute53")]
        public Input<Inputs.ElastigroupIntegrationRoute53Args>? IntegrationRoute53 { get; set; }

        /// <summary>
        /// The key name that should be used for the instance.
        /// </summary>
        [Input("keyName")]
        public Input<string>? KeyName { get; set; }

        [Input("lifetimePeriod")]
        public Input<string>? LifetimePeriod { get; set; }

        /// <summary>
        /// The maximum number of instances the group should have at any time.
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// The minimum number of instances the group should have at any time.
        /// </summary>
        [Input("minSize")]
        public Input<int>? MinSize { get; set; }

        [Input("multaiTargetSets")]
        private InputList<Inputs.ElastigroupMultaiTargetSetsArgs>? _multaiTargetSets;
        public InputList<Inputs.ElastigroupMultaiTargetSetsArgs> MultaiTargetSets
        {
            get => _multaiTargetSets ?? (_multaiTargetSets = new InputList<Inputs.ElastigroupMultaiTargetSetsArgs>());
            set => _multaiTargetSets = value;
        }

        /// <summary>
        /// The group name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkInterfaces")]
        private InputList<Inputs.ElastigroupNetworkInterfacesArgs>? _networkInterfaces;
        public InputList<Inputs.ElastigroupNetworkInterfacesArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.ElastigroupNetworkInterfacesArgs>());
            set => _networkInterfaces = value;
        }

        /// <summary>
        /// Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.
        /// </summary>
        [Input("ondemandCount")]
        public Input<int>? OndemandCount { get; set; }

        /// <summary>
        /// Select a prediction strategy. Valid values: `"balanced"`, `"costOriented"`, `"equalAzDistribution"`, `"availabilityOriented"`.    
        /// </summary>
        [Input("orientation", required: true)]
        public Input<string> Orientation { get; set; } = null!;

        [Input("persistBlockDevices")]
        public Input<bool>? PersistBlockDevices { get; set; }

        [Input("persistPrivateIp")]
        public Input<bool>? PersistPrivateIp { get; set; }

        [Input("persistRootDevice")]
        public Input<bool>? PersistRootDevice { get; set; }

        /// <summary>
        /// Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used.
        /// </summary>
        [Input("placementTenancy")]
        public Input<string>? PlacementTenancy { get; set; }

        [Input("preferredAvailabilityZones")]
        private InputList<string>? _preferredAvailabilityZones;

        /// <summary>
        /// The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs. 
        /// Note: Must be a sublist of `availability_zones` and `orientation` value must not be `"equalAzDistribution"`.
        /// </summary>
        public InputList<string> PreferredAvailabilityZones
        {
            get => _preferredAvailabilityZones ?? (_preferredAvailabilityZones = new InputList<string>());
            set => _preferredAvailabilityZones = value;
        }

        [Input("privateIps")]
        private InputList<string>? _privateIps;
        public InputList<string> PrivateIps
        {
            get => _privateIps ?? (_privateIps = new InputList<string>());
            set => _privateIps = value;
        }

        /// <summary>
        /// Operation system type. Valid values: `"Linux/UNIX"`, `"SUSE Linux"`, `"Windows"`. 
        /// For EC2 Classic instances:  `"Linux/UNIX (Amazon VPC)"`, `"SUSE Linux (Amazon VPC)"`, `"Windows (Amazon VPC)"`.
        /// </summary>
        [Input("product", required: true)]
        public Input<string> Product { get; set; } = null!;

        /// <summary>
        /// The AWS region your group will be created in.
        /// Note: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Hold settings for strategy correction â€“ replacing On-Demand for Spot instances. Supported Values: `"never"`, `"always"`, `"timeWindow"`
        /// </summary>
        [Input("revertToSpot")]
        public Input<Inputs.ElastigroupRevertToSpotArgs>? RevertToSpot { get; set; }

        [Input("scalingDownPolicies")]
        private InputList<Inputs.ElastigroupScalingDownPoliciesArgs>? _scalingDownPolicies;
        public InputList<Inputs.ElastigroupScalingDownPoliciesArgs> ScalingDownPolicies
        {
            get => _scalingDownPolicies ?? (_scalingDownPolicies = new InputList<Inputs.ElastigroupScalingDownPoliciesArgs>());
            set => _scalingDownPolicies = value;
        }

        [Input("scalingStrategies")]
        private InputList<Inputs.ElastigroupScalingStrategiesArgs>? _scalingStrategies;

        /// <summary>
        /// Set termination policy.
        /// </summary>
        public InputList<Inputs.ElastigroupScalingStrategiesArgs> ScalingStrategies
        {
            get => _scalingStrategies ?? (_scalingStrategies = new InputList<Inputs.ElastigroupScalingStrategiesArgs>());
            set => _scalingStrategies = value;
        }

        [Input("scalingTargetPolicies")]
        private InputList<Inputs.ElastigroupScalingTargetPoliciesArgs>? _scalingTargetPolicies;
        public InputList<Inputs.ElastigroupScalingTargetPoliciesArgs> ScalingTargetPolicies
        {
            get => _scalingTargetPolicies ?? (_scalingTargetPolicies = new InputList<Inputs.ElastigroupScalingTargetPoliciesArgs>());
            set => _scalingTargetPolicies = value;
        }

        [Input("scalingUpPolicies")]
        private InputList<Inputs.ElastigroupScalingUpPoliciesArgs>? _scalingUpPolicies;
        public InputList<Inputs.ElastigroupScalingUpPoliciesArgs> ScalingUpPolicies
        {
            get => _scalingUpPolicies ?? (_scalingUpPolicies = new InputList<Inputs.ElastigroupScalingUpPoliciesArgs>());
            set => _scalingUpPolicies = value;
        }

        [Input("scheduledTasks")]
        private InputList<Inputs.ElastigroupScheduledTasksArgs>? _scheduledTasks;
        public InputList<Inputs.ElastigroupScheduledTasksArgs> ScheduledTasks
        {
            get => _scheduledTasks ?? (_scheduledTasks = new InputList<Inputs.ElastigroupScheduledTasksArgs>());
            set => _scheduledTasks = value;
        }

        [Input("securityGroups", required: true)]
        private InputList<string>? _securityGroups;

        /// <summary>
        /// A list of associated security group IDS.
        /// </summary>
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        /// <summary>
        /// The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
        /// </summary>
        [Input("shutdownScript")]
        public Input<string>? ShutdownScript { get; set; }

        [Input("signals")]
        private InputList<Inputs.ElastigroupSignalsArgs>? _signals;
        public InputList<Inputs.ElastigroupSignalsArgs> Signals
        {
            get => _signals ?? (_signals = new InputList<Inputs.ElastigroupSignalsArgs>());
            set => _signals = value;
        }

        /// <summary>
        /// The percentage of Spot instances that would spin up from the `desired_capacity` number.
        /// </summary>
        [Input("spotPercentage")]
        public Input<double>? SpotPercentage { get; set; }

        [Input("statefulDeallocation")]
        public Input<Inputs.ElastigroupStatefulDeallocationArgs>? StatefulDeallocation { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// List of Strings of subnet identifiers.
        /// Note: When this parameter is set, `availability_zones` should be left unused.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputList<Inputs.ElastigroupTagsArgs>? _tags;

        /// <summary>
        /// A key/value mapping of tags to assign to the resource.
        /// </summary>
        public InputList<Inputs.ElastigroupTagsArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.ElastigroupTagsArgs>());
            set => _tags = value;
        }

        [Input("targetGroupArns")]
        private InputList<string>? _targetGroupArns;
        public InputList<string> TargetGroupArns
        {
            get => _targetGroupArns ?? (_targetGroupArns = new InputList<string>());
            set => _targetGroupArns = value;
        }

        [Input("updatePolicy")]
        public Input<Inputs.ElastigroupUpdatePolicyArgs>? UpdatePolicy { get; set; }

        /// <summary>
        /// The user data to provide when launching the instance.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        /// <summary>
        /// In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.
        /// </summary>
        [Input("utilizeReservedInstances")]
        public Input<bool>? UtilizeReservedInstances { get; set; }

        /// <summary>
        /// Minimum number of instances in a 'HEALTHY' status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.
        /// </summary>
        [Input("waitForCapacity")]
        public Input<int>? WaitForCapacity { get; set; }

        /// <summary>
        /// Time (seconds) to wait for instances to report a 'HEALTHY' status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment. 
        /// </summary>
        [Input("waitForCapacityTimeout")]
        public Input<int>? WaitForCapacityTimeout { get; set; }

        public ElastigroupArgs()
        {
        }
    }

    public sealed class ElastigroupState : Pulumi.ResourceArgs
    {
        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;

        /// <summary>
        /// List of Strings of availability zones. When this parameter is set, `subnet_ids` should be left unused.
        /// Note: `availability_zones` naming syntax follows the convention `availability-zone:subnet:placement-group-name`. For example, to set an AZ in `us-east-1` with subnet `subnet-123456` and placement group `ClusterI03`, you would set:
        /// `availability_zones = ["us-east-1a:subnet-123456:ClusterI03"]`
        /// </summary>
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("blockDevicesMode")]
        public Input<string>? BlockDevicesMode { get; set; }

        /// <summary>
        /// The capacity unit to launch instances by. If not specified, when choosing the weight unit, each instance will weight as the number of its vCPUs.
        /// </summary>
        [Input("capacityUnit")]
        public Input<string>? CapacityUnit { get; set; }

        /// <summary>
        /// Controls how T3 instances are launched. Valid values: `standard`, `unlimited`.
        /// </summary>
        [Input("cpuCredits")]
        public Input<string>? CpuCredits { get; set; }

        /// <summary>
        /// The group description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The desired number of instances the group should have at any time.
        /// </summary>
        [Input("desiredCapacity")]
        public Input<int>? DesiredCapacity { get; set; }

        /// <summary>
        /// The time in seconds, the instance is allowed to run while detached from the ELB. This is to allow the instance time to be drained from incoming TCP connections before terminating it, during a scale down operation.
        /// </summary>
        [Input("drainingTimeout")]
        public Input<int>? DrainingTimeout { get; set; }

        [Input("ebsBlockDevices")]
        private InputList<Inputs.ElastigroupEbsBlockDevicesGetArgs>? _ebsBlockDevices;
        public InputList<Inputs.ElastigroupEbsBlockDevicesGetArgs> EbsBlockDevices
        {
            get => _ebsBlockDevices ?? (_ebsBlockDevices = new InputList<Inputs.ElastigroupEbsBlockDevicesGetArgs>());
            set => _ebsBlockDevices = value;
        }

        /// <summary>
        /// Enable high bandwidth connectivity between instances and AWSâ€™s Elastic Block Store (EBS). For instance types that are EBS-optimized by default this parameter will be ignored.
        /// </summary>
        [Input("ebsOptimized")]
        public Input<bool>? EbsOptimized { get; set; }

        [Input("elasticIps")]
        private InputList<string>? _elasticIps;

        /// <summary>
        /// A list of [AWS Elastic IP](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html) allocation IDs to associate to the group instances.
        /// </summary>
        public InputList<string> ElasticIps
        {
            get => _elasticIps ?? (_elasticIps = new InputList<string>());
            set => _elasticIps = value;
        }

        [Input("elasticLoadBalancers")]
        private InputList<string>? _elasticLoadBalancers;
        public InputList<string> ElasticLoadBalancers
        {
            get => _elasticLoadBalancers ?? (_elasticLoadBalancers = new InputList<string>());
            set => _elasticLoadBalancers = value;
        }

        /// <summary>
        /// Indicates whether monitoring is enabled for the instance.
        /// </summary>
        [Input("enableMonitoring")]
        public Input<bool>? EnableMonitoring { get; set; }

        [Input("ephemeralBlockDevices")]
        private InputList<Inputs.ElastigroupEphemeralBlockDevicesGetArgs>? _ephemeralBlockDevices;
        public InputList<Inputs.ElastigroupEphemeralBlockDevicesGetArgs> EphemeralBlockDevices
        {
            get => _ephemeralBlockDevices ?? (_ephemeralBlockDevices = new InputList<Inputs.ElastigroupEphemeralBlockDevicesGetArgs>());
            set => _ephemeralBlockDevices = value;
        }

        /// <summary>
        /// In a case of no Spot instances available, Elastigroup will launch on-demand instances instead.
        /// </summary>
        [Input("fallbackToOndemand")]
        public Input<bool>? FallbackToOndemand { get; set; }

        /// <summary>
        /// The amount of time, in seconds, after the instance has launched to starts and check its health.
        /// </summary>
        [Input("healthCheckGracePeriod")]
        public Input<int>? HealthCheckGracePeriod { get; set; }

        /// <summary>
        /// The service that will perform health checks for the instance. Valid values: `"ELB"`, `"HCS"`, `"TARGET_GROUP"`, `"MLB"`, `"EC2"`, `"MULTAI_TARGET_SET"`, `"MLB_RUNTIME"`, `"K8S_NODE"`, `"NOMAD_NODE"`, `"ECS_CLUSTER_INSTANCE"`.
        /// </summary>
        [Input("healthCheckType")]
        public Input<string>? HealthCheckType { get; set; }

        /// <summary>
        /// The amount of time, in seconds, that we will wait before replacing an instance that is running and became unhealthy (this is only applicable for instances that were once healthy).
        /// </summary>
        [Input("healthCheckUnhealthyDurationBeforeReplacement")]
        public Input<int>? HealthCheckUnhealthyDurationBeforeReplacement { get; set; }

        /// <summary>
        /// The ARN or name of an IAM instance profile to associate with launched instances.
        /// </summary>
        [Input("iamInstanceProfile")]
        public Input<string>? IamInstanceProfile { get; set; }

        /// <summary>
        /// The ID of the AMI used to launch the instance.
        /// </summary>
        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        /// <summary>
        /// The type of instance determines your instance's CPU capacity, memory and storage (e.g., m1.small, c1.xlarge).
        /// </summary>
        [Input("instanceTypesOndemand")]
        public Input<string>? InstanceTypesOndemand { get; set; }

        [Input("instanceTypesPreferredSpots")]
        private InputList<string>? _instanceTypesPreferredSpots;

        /// <summary>
        /// Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.
        /// </summary>
        public InputList<string> InstanceTypesPreferredSpots
        {
            get => _instanceTypesPreferredSpots ?? (_instanceTypesPreferredSpots = new InputList<string>());
            set => _instanceTypesPreferredSpots = value;
        }

        [Input("instanceTypesSpots")]
        private InputList<string>? _instanceTypesSpots;

        /// <summary>
        /// One or more instance types.
        /// </summary>
        public InputList<string> InstanceTypesSpots
        {
            get => _instanceTypesSpots ?? (_instanceTypesSpots = new InputList<string>());
            set => _instanceTypesSpots = value;
        }

        [Input("instanceTypesWeights")]
        private InputList<Inputs.ElastigroupInstanceTypesWeightsGetArgs>? _instanceTypesWeights;

        /// <summary>
        /// List of weights per instance type for weighted groups. Each object in the list should have the following attributes:
        /// </summary>
        public InputList<Inputs.ElastigroupInstanceTypesWeightsGetArgs> InstanceTypesWeights
        {
            get => _instanceTypesWeights ?? (_instanceTypesWeights = new InputList<Inputs.ElastigroupInstanceTypesWeightsGetArgs>());
            set => _instanceTypesWeights = value;
        }

        [Input("integrationBeanstalk")]
        public Input<Inputs.ElastigroupIntegrationBeanstalkGetArgs>? IntegrationBeanstalk { get; set; }

        [Input("integrationCodedeploy")]
        public Input<Inputs.ElastigroupIntegrationCodedeployGetArgs>? IntegrationCodedeploy { get; set; }

        [Input("integrationDockerSwarm")]
        public Input<Inputs.ElastigroupIntegrationDockerSwarmGetArgs>? IntegrationDockerSwarm { get; set; }

        [Input("integrationEcs")]
        public Input<Inputs.ElastigroupIntegrationEcsGetArgs>? IntegrationEcs { get; set; }

        [Input("integrationGitlab")]
        public Input<Inputs.ElastigroupIntegrationGitlabGetArgs>? IntegrationGitlab { get; set; }

        [Input("integrationKubernetes")]
        public Input<Inputs.ElastigroupIntegrationKubernetesGetArgs>? IntegrationKubernetes { get; set; }

        [Input("integrationMesosphere")]
        public Input<Inputs.ElastigroupIntegrationMesosphereGetArgs>? IntegrationMesosphere { get; set; }

        [Input("integrationMultaiRuntime")]
        public Input<Inputs.ElastigroupIntegrationMultaiRuntimeGetArgs>? IntegrationMultaiRuntime { get; set; }

        [Input("integrationNomad")]
        public Input<Inputs.ElastigroupIntegrationNomadGetArgs>? IntegrationNomad { get; set; }

        [Input("integrationRancher")]
        public Input<Inputs.ElastigroupIntegrationRancherGetArgs>? IntegrationRancher { get; set; }

        [Input("integrationRoute53")]
        public Input<Inputs.ElastigroupIntegrationRoute53GetArgs>? IntegrationRoute53 { get; set; }

        /// <summary>
        /// The key name that should be used for the instance.
        /// </summary>
        [Input("keyName")]
        public Input<string>? KeyName { get; set; }

        [Input("lifetimePeriod")]
        public Input<string>? LifetimePeriod { get; set; }

        /// <summary>
        /// The maximum number of instances the group should have at any time.
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// The minimum number of instances the group should have at any time.
        /// </summary>
        [Input("minSize")]
        public Input<int>? MinSize { get; set; }

        [Input("multaiTargetSets")]
        private InputList<Inputs.ElastigroupMultaiTargetSetsGetArgs>? _multaiTargetSets;
        public InputList<Inputs.ElastigroupMultaiTargetSetsGetArgs> MultaiTargetSets
        {
            get => _multaiTargetSets ?? (_multaiTargetSets = new InputList<Inputs.ElastigroupMultaiTargetSetsGetArgs>());
            set => _multaiTargetSets = value;
        }

        /// <summary>
        /// The group name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkInterfaces")]
        private InputList<Inputs.ElastigroupNetworkInterfacesGetArgs>? _networkInterfaces;
        public InputList<Inputs.ElastigroupNetworkInterfacesGetArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.ElastigroupNetworkInterfacesGetArgs>());
            set => _networkInterfaces = value;
        }

        /// <summary>
        /// Number of on demand instances to launch in the group. All other instances will be spot instances. When this parameter is set the `spot_percentage` parameter is being ignored.
        /// </summary>
        [Input("ondemandCount")]
        public Input<int>? OndemandCount { get; set; }

        /// <summary>
        /// Select a prediction strategy. Valid values: `"balanced"`, `"costOriented"`, `"equalAzDistribution"`, `"availabilityOriented"`.    
        /// </summary>
        [Input("orientation")]
        public Input<string>? Orientation { get; set; }

        [Input("persistBlockDevices")]
        public Input<bool>? PersistBlockDevices { get; set; }

        [Input("persistPrivateIp")]
        public Input<bool>? PersistPrivateIp { get; set; }

        [Input("persistRootDevice")]
        public Input<bool>? PersistRootDevice { get; set; }

        /// <summary>
        /// Enable dedicated tenancy. Note: There is a flat hourly fee for each region in which dedicated tenancy is used.
        /// </summary>
        [Input("placementTenancy")]
        public Input<string>? PlacementTenancy { get; set; }

        [Input("preferredAvailabilityZones")]
        private InputList<string>? _preferredAvailabilityZones;

        /// <summary>
        /// The AZs to prioritize when launching Spot instances. If no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs. 
        /// Note: Must be a sublist of `availability_zones` and `orientation` value must not be `"equalAzDistribution"`.
        /// </summary>
        public InputList<string> PreferredAvailabilityZones
        {
            get => _preferredAvailabilityZones ?? (_preferredAvailabilityZones = new InputList<string>());
            set => _preferredAvailabilityZones = value;
        }

        [Input("privateIps")]
        private InputList<string>? _privateIps;
        public InputList<string> PrivateIps
        {
            get => _privateIps ?? (_privateIps = new InputList<string>());
            set => _privateIps = value;
        }

        /// <summary>
        /// Operation system type. Valid values: `"Linux/UNIX"`, `"SUSE Linux"`, `"Windows"`. 
        /// For EC2 Classic instances:  `"Linux/UNIX (Amazon VPC)"`, `"SUSE Linux (Amazon VPC)"`, `"Windows (Amazon VPC)"`.
        /// </summary>
        [Input("product")]
        public Input<string>? Product { get; set; }

        /// <summary>
        /// The AWS region your group will be created in.
        /// Note: This parameter is required if you specify subnets (through subnet_ids). This parameter is optional if you specify Availability Zones (through availability_zones).
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Hold settings for strategy correction â€“ replacing On-Demand for Spot instances. Supported Values: `"never"`, `"always"`, `"timeWindow"`
        /// </summary>
        [Input("revertToSpot")]
        public Input<Inputs.ElastigroupRevertToSpotGetArgs>? RevertToSpot { get; set; }

        [Input("scalingDownPolicies")]
        private InputList<Inputs.ElastigroupScalingDownPoliciesGetArgs>? _scalingDownPolicies;
        public InputList<Inputs.ElastigroupScalingDownPoliciesGetArgs> ScalingDownPolicies
        {
            get => _scalingDownPolicies ?? (_scalingDownPolicies = new InputList<Inputs.ElastigroupScalingDownPoliciesGetArgs>());
            set => _scalingDownPolicies = value;
        }

        [Input("scalingStrategies")]
        private InputList<Inputs.ElastigroupScalingStrategiesGetArgs>? _scalingStrategies;

        /// <summary>
        /// Set termination policy.
        /// </summary>
        public InputList<Inputs.ElastigroupScalingStrategiesGetArgs> ScalingStrategies
        {
            get => _scalingStrategies ?? (_scalingStrategies = new InputList<Inputs.ElastigroupScalingStrategiesGetArgs>());
            set => _scalingStrategies = value;
        }

        [Input("scalingTargetPolicies")]
        private InputList<Inputs.ElastigroupScalingTargetPoliciesGetArgs>? _scalingTargetPolicies;
        public InputList<Inputs.ElastigroupScalingTargetPoliciesGetArgs> ScalingTargetPolicies
        {
            get => _scalingTargetPolicies ?? (_scalingTargetPolicies = new InputList<Inputs.ElastigroupScalingTargetPoliciesGetArgs>());
            set => _scalingTargetPolicies = value;
        }

        [Input("scalingUpPolicies")]
        private InputList<Inputs.ElastigroupScalingUpPoliciesGetArgs>? _scalingUpPolicies;
        public InputList<Inputs.ElastigroupScalingUpPoliciesGetArgs> ScalingUpPolicies
        {
            get => _scalingUpPolicies ?? (_scalingUpPolicies = new InputList<Inputs.ElastigroupScalingUpPoliciesGetArgs>());
            set => _scalingUpPolicies = value;
        }

        [Input("scheduledTasks")]
        private InputList<Inputs.ElastigroupScheduledTasksGetArgs>? _scheduledTasks;
        public InputList<Inputs.ElastigroupScheduledTasksGetArgs> ScheduledTasks
        {
            get => _scheduledTasks ?? (_scheduledTasks = new InputList<Inputs.ElastigroupScheduledTasksGetArgs>());
            set => _scheduledTasks = value;
        }

        [Input("securityGroups")]
        private InputList<string>? _securityGroups;

        /// <summary>
        /// A list of associated security group IDS.
        /// </summary>
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        /// <summary>
        /// The Base64-encoded shutdown script that executes prior to instance termination, for more information please see: [Shutdown Script](https://api.spotinst.com/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)
        /// </summary>
        [Input("shutdownScript")]
        public Input<string>? ShutdownScript { get; set; }

        [Input("signals")]
        private InputList<Inputs.ElastigroupSignalsGetArgs>? _signals;
        public InputList<Inputs.ElastigroupSignalsGetArgs> Signals
        {
            get => _signals ?? (_signals = new InputList<Inputs.ElastigroupSignalsGetArgs>());
            set => _signals = value;
        }

        /// <summary>
        /// The percentage of Spot instances that would spin up from the `desired_capacity` number.
        /// </summary>
        [Input("spotPercentage")]
        public Input<double>? SpotPercentage { get; set; }

        [Input("statefulDeallocation")]
        public Input<Inputs.ElastigroupStatefulDeallocationGetArgs>? StatefulDeallocation { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// List of Strings of subnet identifiers.
        /// Note: When this parameter is set, `availability_zones` should be left unused.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputList<Inputs.ElastigroupTagsGetArgs>? _tags;

        /// <summary>
        /// A key/value mapping of tags to assign to the resource.
        /// </summary>
        public InputList<Inputs.ElastigroupTagsGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.ElastigroupTagsGetArgs>());
            set => _tags = value;
        }

        [Input("targetGroupArns")]
        private InputList<string>? _targetGroupArns;
        public InputList<string> TargetGroupArns
        {
            get => _targetGroupArns ?? (_targetGroupArns = new InputList<string>());
            set => _targetGroupArns = value;
        }

        [Input("updatePolicy")]
        public Input<Inputs.ElastigroupUpdatePolicyGetArgs>? UpdatePolicy { get; set; }

        /// <summary>
        /// The user data to provide when launching the instance.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        /// <summary>
        /// In a case of any available reserved instances, Elastigroup will utilize them first before purchasing Spot instances.
        /// </summary>
        [Input("utilizeReservedInstances")]
        public Input<bool>? UtilizeReservedInstances { get; set; }

        /// <summary>
        /// Minimum number of instances in a 'HEALTHY' status that is required before continuing. This is ignored when updating with blue/green deployment. Cannot exceed `desired_capacity`.
        /// </summary>
        [Input("waitForCapacity")]
        public Input<int>? WaitForCapacity { get; set; }

        /// <summary>
        /// Time (seconds) to wait for instances to report a 'HEALTHY' status. Useful for plans with multiple dependencies that take some time to initialize. Leave undefined or set to `0` to indicate no wait. This is ignored when updating with blue/green deployment. 
        /// </summary>
        [Input("waitForCapacityTimeout")]
        public Input<int>? WaitForCapacityTimeout { get; set; }

        public ElastigroupState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class ElastigroupEbsBlockDevicesArgs : Pulumi.ResourceArgs
    {
        [Input("deleteOnTermination")]
        public Input<bool>? DeleteOnTermination { get; set; }

        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        [Input("encrypted")]
        public Input<bool>? Encrypted { get; set; }

        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        [Input("volumeSize")]
        public Input<int>? VolumeSize { get; set; }

        [Input("volumeType")]
        public Input<string>? VolumeType { get; set; }

        public ElastigroupEbsBlockDevicesArgs()
        {
        }
    }

    public sealed class ElastigroupEbsBlockDevicesGetArgs : Pulumi.ResourceArgs
    {
        [Input("deleteOnTermination")]
        public Input<bool>? DeleteOnTermination { get; set; }

        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        [Input("encrypted")]
        public Input<bool>? Encrypted { get; set; }

        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        [Input("volumeSize")]
        public Input<int>? VolumeSize { get; set; }

        [Input("volumeType")]
        public Input<string>? VolumeType { get; set; }

        public ElastigroupEbsBlockDevicesGetArgs()
        {
        }
    }

    public sealed class ElastigroupEphemeralBlockDevicesArgs : Pulumi.ResourceArgs
    {
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        [Input("virtualName", required: true)]
        public Input<string> VirtualName { get; set; } = null!;

        public ElastigroupEphemeralBlockDevicesArgs()
        {
        }
    }

    public sealed class ElastigroupEphemeralBlockDevicesGetArgs : Pulumi.ResourceArgs
    {
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        [Input("virtualName", required: true)]
        public Input<string> VirtualName { get; set; } = null!;

        public ElastigroupEphemeralBlockDevicesGetArgs()
        {
        }
    }

    public sealed class ElastigroupInstanceTypesWeightsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of instance type (String).
        /// </summary>
        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        /// <summary>
        /// Weight per instance type (Integer).
        /// </summary>
        [Input("weight", required: true)]
        public Input<int> Weight { get; set; } = null!;

        public ElastigroupInstanceTypesWeightsArgs()
        {
        }
    }

    public sealed class ElastigroupInstanceTypesWeightsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of instance type (String).
        /// </summary>
        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        /// <summary>
        /// Weight per instance type (Integer).
        /// </summary>
        [Input("weight", required: true)]
        public Input<int> Weight { get; set; } = null!;

        public ElastigroupInstanceTypesWeightsGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationBeanstalkArgs : Pulumi.ResourceArgs
    {
        [Input("deploymentPreferences")]
        public Input<ElastigroupIntegrationBeanstalkDeploymentPreferencesArgs>? DeploymentPreferences { get; set; }

        [Input("environmentId")]
        public Input<string>? EnvironmentId { get; set; }

        [Input("managedActions")]
        public Input<ElastigroupIntegrationBeanstalkManagedActionsArgs>? ManagedActions { get; set; }

        public ElastigroupIntegrationBeanstalkArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationBeanstalkDeploymentPreferencesArgs : Pulumi.ResourceArgs
    {
        [Input("automaticRoll")]
        public Input<bool>? AutomaticRoll { get; set; }

        [Input("batchSizePercentage")]
        public Input<int>? BatchSizePercentage { get; set; }

        [Input("gracePeriod")]
        public Input<int>? GracePeriod { get; set; }

        [Input("strategy")]
        public Input<ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategyArgs>? Strategy { get; set; }

        public ElastigroupIntegrationBeanstalkDeploymentPreferencesArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationBeanstalkDeploymentPreferencesGetArgs : Pulumi.ResourceArgs
    {
        [Input("automaticRoll")]
        public Input<bool>? AutomaticRoll { get; set; }

        [Input("batchSizePercentage")]
        public Input<int>? BatchSizePercentage { get; set; }

        [Input("gracePeriod")]
        public Input<int>? GracePeriod { get; set; }

        [Input("strategy")]
        public Input<ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategyGetArgs>? Strategy { get; set; }

        public ElastigroupIntegrationBeanstalkDeploymentPreferencesGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategyArgs : Pulumi.ResourceArgs
    {
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("shouldDrainInstances")]
        public Input<bool>? ShouldDrainInstances { get; set; }

        public ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategyArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategyGetArgs : Pulumi.ResourceArgs
    {
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("shouldDrainInstances")]
        public Input<bool>? ShouldDrainInstances { get; set; }

        public ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategyGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationBeanstalkGetArgs : Pulumi.ResourceArgs
    {
        [Input("deploymentPreferences")]
        public Input<ElastigroupIntegrationBeanstalkDeploymentPreferencesGetArgs>? DeploymentPreferences { get; set; }

        [Input("environmentId")]
        public Input<string>? EnvironmentId { get; set; }

        [Input("managedActions")]
        public Input<ElastigroupIntegrationBeanstalkManagedActionsGetArgs>? ManagedActions { get; set; }

        public ElastigroupIntegrationBeanstalkGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationBeanstalkManagedActionsArgs : Pulumi.ResourceArgs
    {
        [Input("platformUpdate")]
        public Input<ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdateArgs>? PlatformUpdate { get; set; }

        public ElastigroupIntegrationBeanstalkManagedActionsArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationBeanstalkManagedActionsGetArgs : Pulumi.ResourceArgs
    {
        [Input("platformUpdate")]
        public Input<ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdateGetArgs>? PlatformUpdate { get; set; }

        public ElastigroupIntegrationBeanstalkManagedActionsGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdateArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// In the event of a fallback to On-Demand instances, select the time period to revert back to Spot. Supported Arguments â€“ always (default), timeWindow, never. For timeWindow or never to be valid the group must have availabilityOriented OR persistence defined.
        /// </summary>
        [Input("performAt")]
        public Input<string>? PerformAt { get; set; }

        [Input("timeWindow")]
        public Input<string>? TimeWindow { get; set; }

        [Input("updateLevel")]
        public Input<string>? UpdateLevel { get; set; }

        public ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdateArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdateGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// In the event of a fallback to On-Demand instances, select the time period to revert back to Spot. Supported Arguments â€“ always (default), timeWindow, never. For timeWindow or never to be valid the group must have availabilityOriented OR persistence defined.
        /// </summary>
        [Input("performAt")]
        public Input<string>? PerformAt { get; set; }

        [Input("timeWindow")]
        public Input<string>? TimeWindow { get; set; }

        [Input("updateLevel")]
        public Input<string>? UpdateLevel { get; set; }

        public ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdateGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationCodedeployArgs : Pulumi.ResourceArgs
    {
        [Input("cleanupOnFailure", required: true)]
        public Input<bool> CleanupOnFailure { get; set; } = null!;

        [Input("deploymentGroups", required: true)]
        private InputList<ElastigroupIntegrationCodedeployDeploymentGroupsArgs>? _deploymentGroups;
        public InputList<ElastigroupIntegrationCodedeployDeploymentGroupsArgs> DeploymentGroups
        {
            get => _deploymentGroups ?? (_deploymentGroups = new InputList<ElastigroupIntegrationCodedeployDeploymentGroupsArgs>());
            set => _deploymentGroups = value;
        }

        [Input("terminateInstanceOnFailure", required: true)]
        public Input<bool> TerminateInstanceOnFailure { get; set; } = null!;

        public ElastigroupIntegrationCodedeployArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationCodedeployDeploymentGroupsArgs : Pulumi.ResourceArgs
    {
        [Input("applicationName", required: true)]
        public Input<string> ApplicationName { get; set; } = null!;

        [Input("deploymentGroupName", required: true)]
        public Input<string> DeploymentGroupName { get; set; } = null!;

        public ElastigroupIntegrationCodedeployDeploymentGroupsArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationCodedeployDeploymentGroupsGetArgs : Pulumi.ResourceArgs
    {
        [Input("applicationName", required: true)]
        public Input<string> ApplicationName { get; set; } = null!;

        [Input("deploymentGroupName", required: true)]
        public Input<string> DeploymentGroupName { get; set; } = null!;

        public ElastigroupIntegrationCodedeployDeploymentGroupsGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationCodedeployGetArgs : Pulumi.ResourceArgs
    {
        [Input("cleanupOnFailure", required: true)]
        public Input<bool> CleanupOnFailure { get; set; } = null!;

        [Input("deploymentGroups", required: true)]
        private InputList<ElastigroupIntegrationCodedeployDeploymentGroupsGetArgs>? _deploymentGroups;
        public InputList<ElastigroupIntegrationCodedeployDeploymentGroupsGetArgs> DeploymentGroups
        {
            get => _deploymentGroups ?? (_deploymentGroups = new InputList<ElastigroupIntegrationCodedeployDeploymentGroupsGetArgs>());
            set => _deploymentGroups = value;
        }

        [Input("terminateInstanceOnFailure", required: true)]
        public Input<bool> TerminateInstanceOnFailure { get; set; } = null!;

        public ElastigroupIntegrationCodedeployGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationDockerSwarmArgs : Pulumi.ResourceArgs
    {
        [Input("autoscaleCooldown")]
        public Input<int>? AutoscaleCooldown { get; set; }

        [Input("autoscaleDown")]
        public Input<ElastigroupIntegrationDockerSwarmAutoscaleDownArgs>? AutoscaleDown { get; set; }

        [Input("autoscaleHeadroom")]
        public Input<ElastigroupIntegrationDockerSwarmAutoscaleHeadroomArgs>? AutoscaleHeadroom { get; set; }

        [Input("autoscaleIsEnabled")]
        public Input<bool>? AutoscaleIsEnabled { get; set; }

        [Input("masterHost", required: true)]
        public Input<string> MasterHost { get; set; } = null!;

        [Input("masterPort", required: true)]
        public Input<int> MasterPort { get; set; } = null!;

        public ElastigroupIntegrationDockerSwarmArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationDockerSwarmAutoscaleDownArgs : Pulumi.ResourceArgs
    {
        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        public ElastigroupIntegrationDockerSwarmAutoscaleDownArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationDockerSwarmAutoscaleDownGetArgs : Pulumi.ResourceArgs
    {
        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        public ElastigroupIntegrationDockerSwarmAutoscaleDownGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationDockerSwarmAutoscaleHeadroomArgs : Pulumi.ResourceArgs
    {
        [Input("cpuPerUnit")]
        public Input<int>? CpuPerUnit { get; set; }

        [Input("memoryPerUnit")]
        public Input<int>? MemoryPerUnit { get; set; }

        [Input("numOfUnits")]
        public Input<int>? NumOfUnits { get; set; }

        public ElastigroupIntegrationDockerSwarmAutoscaleHeadroomArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationDockerSwarmAutoscaleHeadroomGetArgs : Pulumi.ResourceArgs
    {
        [Input("cpuPerUnit")]
        public Input<int>? CpuPerUnit { get; set; }

        [Input("memoryPerUnit")]
        public Input<int>? MemoryPerUnit { get; set; }

        [Input("numOfUnits")]
        public Input<int>? NumOfUnits { get; set; }

        public ElastigroupIntegrationDockerSwarmAutoscaleHeadroomGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationDockerSwarmGetArgs : Pulumi.ResourceArgs
    {
        [Input("autoscaleCooldown")]
        public Input<int>? AutoscaleCooldown { get; set; }

        [Input("autoscaleDown")]
        public Input<ElastigroupIntegrationDockerSwarmAutoscaleDownGetArgs>? AutoscaleDown { get; set; }

        [Input("autoscaleHeadroom")]
        public Input<ElastigroupIntegrationDockerSwarmAutoscaleHeadroomGetArgs>? AutoscaleHeadroom { get; set; }

        [Input("autoscaleIsEnabled")]
        public Input<bool>? AutoscaleIsEnabled { get; set; }

        [Input("masterHost", required: true)]
        public Input<string> MasterHost { get; set; } = null!;

        [Input("masterPort", required: true)]
        public Input<int> MasterPort { get; set; } = null!;

        public ElastigroupIntegrationDockerSwarmGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationEcsArgs : Pulumi.ResourceArgs
    {
        [Input("autoscaleAttributes")]
        private InputList<ElastigroupIntegrationEcsAutoscaleAttributesArgs>? _autoscaleAttributes;
        public InputList<ElastigroupIntegrationEcsAutoscaleAttributesArgs> AutoscaleAttributes
        {
            get => _autoscaleAttributes ?? (_autoscaleAttributes = new InputList<ElastigroupIntegrationEcsAutoscaleAttributesArgs>());
            set => _autoscaleAttributes = value;
        }

        [Input("autoscaleCooldown")]
        public Input<int>? AutoscaleCooldown { get; set; }

        [Input("autoscaleDown")]
        public Input<ElastigroupIntegrationEcsAutoscaleDownArgs>? AutoscaleDown { get; set; }

        [Input("autoscaleHeadroom")]
        public Input<ElastigroupIntegrationEcsAutoscaleHeadroomArgs>? AutoscaleHeadroom { get; set; }

        [Input("autoscaleIsAutoConfig")]
        public Input<bool>? AutoscaleIsAutoConfig { get; set; }

        [Input("autoscaleIsEnabled")]
        public Input<bool>? AutoscaleIsEnabled { get; set; }

        [Input("autoscaleScaleDownNonServiceTasks")]
        public Input<bool>? AutoscaleScaleDownNonServiceTasks { get; set; }

        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        public ElastigroupIntegrationEcsArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationEcsAutoscaleAttributesArgs : Pulumi.ResourceArgs
    {
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public ElastigroupIntegrationEcsAutoscaleAttributesArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationEcsAutoscaleAttributesGetArgs : Pulumi.ResourceArgs
    {
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public ElastigroupIntegrationEcsAutoscaleAttributesGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationEcsAutoscaleDownArgs : Pulumi.ResourceArgs
    {
        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("maxScaleDownPercentage")]
        public Input<int>? MaxScaleDownPercentage { get; set; }

        public ElastigroupIntegrationEcsAutoscaleDownArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationEcsAutoscaleDownGetArgs : Pulumi.ResourceArgs
    {
        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("maxScaleDownPercentage")]
        public Input<int>? MaxScaleDownPercentage { get; set; }

        public ElastigroupIntegrationEcsAutoscaleDownGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationEcsAutoscaleHeadroomArgs : Pulumi.ResourceArgs
    {
        [Input("cpuPerUnit")]
        public Input<int>? CpuPerUnit { get; set; }

        [Input("memoryPerUnit")]
        public Input<int>? MemoryPerUnit { get; set; }

        [Input("numOfUnits")]
        public Input<int>? NumOfUnits { get; set; }

        public ElastigroupIntegrationEcsAutoscaleHeadroomArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationEcsAutoscaleHeadroomGetArgs : Pulumi.ResourceArgs
    {
        [Input("cpuPerUnit")]
        public Input<int>? CpuPerUnit { get; set; }

        [Input("memoryPerUnit")]
        public Input<int>? MemoryPerUnit { get; set; }

        [Input("numOfUnits")]
        public Input<int>? NumOfUnits { get; set; }

        public ElastigroupIntegrationEcsAutoscaleHeadroomGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationEcsGetArgs : Pulumi.ResourceArgs
    {
        [Input("autoscaleAttributes")]
        private InputList<ElastigroupIntegrationEcsAutoscaleAttributesGetArgs>? _autoscaleAttributes;
        public InputList<ElastigroupIntegrationEcsAutoscaleAttributesGetArgs> AutoscaleAttributes
        {
            get => _autoscaleAttributes ?? (_autoscaleAttributes = new InputList<ElastigroupIntegrationEcsAutoscaleAttributesGetArgs>());
            set => _autoscaleAttributes = value;
        }

        [Input("autoscaleCooldown")]
        public Input<int>? AutoscaleCooldown { get; set; }

        [Input("autoscaleDown")]
        public Input<ElastigroupIntegrationEcsAutoscaleDownGetArgs>? AutoscaleDown { get; set; }

        [Input("autoscaleHeadroom")]
        public Input<ElastigroupIntegrationEcsAutoscaleHeadroomGetArgs>? AutoscaleHeadroom { get; set; }

        [Input("autoscaleIsAutoConfig")]
        public Input<bool>? AutoscaleIsAutoConfig { get; set; }

        [Input("autoscaleIsEnabled")]
        public Input<bool>? AutoscaleIsEnabled { get; set; }

        [Input("autoscaleScaleDownNonServiceTasks")]
        public Input<bool>? AutoscaleScaleDownNonServiceTasks { get; set; }

        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        public ElastigroupIntegrationEcsGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationGitlabArgs : Pulumi.ResourceArgs
    {
        [Input("runner")]
        public Input<ElastigroupIntegrationGitlabRunnerArgs>? Runner { get; set; }

        public ElastigroupIntegrationGitlabArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationGitlabGetArgs : Pulumi.ResourceArgs
    {
        [Input("runner")]
        public Input<ElastigroupIntegrationGitlabRunnerGetArgs>? Runner { get; set; }

        public ElastigroupIntegrationGitlabGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationGitlabRunnerArgs : Pulumi.ResourceArgs
    {
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        public ElastigroupIntegrationGitlabRunnerArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationGitlabRunnerGetArgs : Pulumi.ResourceArgs
    {
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        public ElastigroupIntegrationGitlabRunnerGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationKubernetesArgs : Pulumi.ResourceArgs
    {
        [Input("apiServer")]
        public Input<string>? ApiServer { get; set; }

        [Input("autoscaleCooldown")]
        public Input<int>? AutoscaleCooldown { get; set; }

        [Input("autoscaleDown")]
        public Input<ElastigroupIntegrationKubernetesAutoscaleDownArgs>? AutoscaleDown { get; set; }

        [Input("autoscaleHeadroom")]
        public Input<ElastigroupIntegrationKubernetesAutoscaleHeadroomArgs>? AutoscaleHeadroom { get; set; }

        [Input("autoscaleIsAutoConfig")]
        public Input<bool>? AutoscaleIsAutoConfig { get; set; }

        [Input("autoscaleIsEnabled")]
        public Input<bool>? AutoscaleIsEnabled { get; set; }

        [Input("autoscaleLabels")]
        private InputList<ElastigroupIntegrationKubernetesAutoscaleLabelsArgs>? _autoscaleLabels;
        public InputList<ElastigroupIntegrationKubernetesAutoscaleLabelsArgs> AutoscaleLabels
        {
            get => _autoscaleLabels ?? (_autoscaleLabels = new InputList<ElastigroupIntegrationKubernetesAutoscaleLabelsArgs>());
            set => _autoscaleLabels = value;
        }

        [Input("clusterIdentifier")]
        public Input<string>? ClusterIdentifier { get; set; }

        [Input("integrationMode")]
        public Input<string>? IntegrationMode { get; set; }

        [Input("token")]
        public Input<string>? Token { get; set; }

        public ElastigroupIntegrationKubernetesArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationKubernetesAutoscaleDownArgs : Pulumi.ResourceArgs
    {
        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        public ElastigroupIntegrationKubernetesAutoscaleDownArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationKubernetesAutoscaleDownGetArgs : Pulumi.ResourceArgs
    {
        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        public ElastigroupIntegrationKubernetesAutoscaleDownGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationKubernetesAutoscaleHeadroomArgs : Pulumi.ResourceArgs
    {
        [Input("cpuPerUnit")]
        public Input<int>? CpuPerUnit { get; set; }

        [Input("memoryPerUnit")]
        public Input<int>? MemoryPerUnit { get; set; }

        [Input("numOfUnits")]
        public Input<int>? NumOfUnits { get; set; }

        public ElastigroupIntegrationKubernetesAutoscaleHeadroomArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationKubernetesAutoscaleHeadroomGetArgs : Pulumi.ResourceArgs
    {
        [Input("cpuPerUnit")]
        public Input<int>? CpuPerUnit { get; set; }

        [Input("memoryPerUnit")]
        public Input<int>? MemoryPerUnit { get; set; }

        [Input("numOfUnits")]
        public Input<int>? NumOfUnits { get; set; }

        public ElastigroupIntegrationKubernetesAutoscaleHeadroomGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationKubernetesAutoscaleLabelsArgs : Pulumi.ResourceArgs
    {
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public ElastigroupIntegrationKubernetesAutoscaleLabelsArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationKubernetesAutoscaleLabelsGetArgs : Pulumi.ResourceArgs
    {
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public ElastigroupIntegrationKubernetesAutoscaleLabelsGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationKubernetesGetArgs : Pulumi.ResourceArgs
    {
        [Input("apiServer")]
        public Input<string>? ApiServer { get; set; }

        [Input("autoscaleCooldown")]
        public Input<int>? AutoscaleCooldown { get; set; }

        [Input("autoscaleDown")]
        public Input<ElastigroupIntegrationKubernetesAutoscaleDownGetArgs>? AutoscaleDown { get; set; }

        [Input("autoscaleHeadroom")]
        public Input<ElastigroupIntegrationKubernetesAutoscaleHeadroomGetArgs>? AutoscaleHeadroom { get; set; }

        [Input("autoscaleIsAutoConfig")]
        public Input<bool>? AutoscaleIsAutoConfig { get; set; }

        [Input("autoscaleIsEnabled")]
        public Input<bool>? AutoscaleIsEnabled { get; set; }

        [Input("autoscaleLabels")]
        private InputList<ElastigroupIntegrationKubernetesAutoscaleLabelsGetArgs>? _autoscaleLabels;
        public InputList<ElastigroupIntegrationKubernetesAutoscaleLabelsGetArgs> AutoscaleLabels
        {
            get => _autoscaleLabels ?? (_autoscaleLabels = new InputList<ElastigroupIntegrationKubernetesAutoscaleLabelsGetArgs>());
            set => _autoscaleLabels = value;
        }

        [Input("clusterIdentifier")]
        public Input<string>? ClusterIdentifier { get; set; }

        [Input("integrationMode")]
        public Input<string>? IntegrationMode { get; set; }

        [Input("token")]
        public Input<string>? Token { get; set; }

        public ElastigroupIntegrationKubernetesGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationMesosphereArgs : Pulumi.ResourceArgs
    {
        [Input("apiServer", required: true)]
        public Input<string> ApiServer { get; set; } = null!;

        public ElastigroupIntegrationMesosphereArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationMesosphereGetArgs : Pulumi.ResourceArgs
    {
        [Input("apiServer", required: true)]
        public Input<string> ApiServer { get; set; } = null!;

        public ElastigroupIntegrationMesosphereGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationMultaiRuntimeArgs : Pulumi.ResourceArgs
    {
        [Input("deploymentId", required: true)]
        public Input<string> DeploymentId { get; set; } = null!;

        public ElastigroupIntegrationMultaiRuntimeArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationMultaiRuntimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("deploymentId", required: true)]
        public Input<string> DeploymentId { get; set; } = null!;

        public ElastigroupIntegrationMultaiRuntimeGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationNomadArgs : Pulumi.ResourceArgs
    {
        [Input("aclToken")]
        public Input<string>? AclToken { get; set; }

        [Input("autoscaleConstraints")]
        private InputList<ElastigroupIntegrationNomadAutoscaleConstraintsArgs>? _autoscaleConstraints;
        public InputList<ElastigroupIntegrationNomadAutoscaleConstraintsArgs> AutoscaleConstraints
        {
            get => _autoscaleConstraints ?? (_autoscaleConstraints = new InputList<ElastigroupIntegrationNomadAutoscaleConstraintsArgs>());
            set => _autoscaleConstraints = value;
        }

        [Input("autoscaleCooldown")]
        public Input<int>? AutoscaleCooldown { get; set; }

        [Input("autoscaleDown")]
        public Input<ElastigroupIntegrationNomadAutoscaleDownArgs>? AutoscaleDown { get; set; }

        [Input("autoscaleHeadroom")]
        public Input<ElastigroupIntegrationNomadAutoscaleHeadroomArgs>? AutoscaleHeadroom { get; set; }

        [Input("autoscaleIsEnabled")]
        public Input<bool>? AutoscaleIsEnabled { get; set; }

        [Input("masterHost", required: true)]
        public Input<string> MasterHost { get; set; } = null!;

        [Input("masterPort", required: true)]
        public Input<int> MasterPort { get; set; } = null!;

        public ElastigroupIntegrationNomadArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationNomadAutoscaleConstraintsArgs : Pulumi.ResourceArgs
    {
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public ElastigroupIntegrationNomadAutoscaleConstraintsArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationNomadAutoscaleConstraintsGetArgs : Pulumi.ResourceArgs
    {
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public ElastigroupIntegrationNomadAutoscaleConstraintsGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationNomadAutoscaleDownArgs : Pulumi.ResourceArgs
    {
        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        public ElastigroupIntegrationNomadAutoscaleDownArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationNomadAutoscaleDownGetArgs : Pulumi.ResourceArgs
    {
        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        public ElastigroupIntegrationNomadAutoscaleDownGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationNomadAutoscaleHeadroomArgs : Pulumi.ResourceArgs
    {
        [Input("cpuPerUnit")]
        public Input<int>? CpuPerUnit { get; set; }

        [Input("memoryPerUnit")]
        public Input<int>? MemoryPerUnit { get; set; }

        [Input("numOfUnits")]
        public Input<int>? NumOfUnits { get; set; }

        public ElastigroupIntegrationNomadAutoscaleHeadroomArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationNomadAutoscaleHeadroomGetArgs : Pulumi.ResourceArgs
    {
        [Input("cpuPerUnit")]
        public Input<int>? CpuPerUnit { get; set; }

        [Input("memoryPerUnit")]
        public Input<int>? MemoryPerUnit { get; set; }

        [Input("numOfUnits")]
        public Input<int>? NumOfUnits { get; set; }

        public ElastigroupIntegrationNomadAutoscaleHeadroomGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationNomadGetArgs : Pulumi.ResourceArgs
    {
        [Input("aclToken")]
        public Input<string>? AclToken { get; set; }

        [Input("autoscaleConstraints")]
        private InputList<ElastigroupIntegrationNomadAutoscaleConstraintsGetArgs>? _autoscaleConstraints;
        public InputList<ElastigroupIntegrationNomadAutoscaleConstraintsGetArgs> AutoscaleConstraints
        {
            get => _autoscaleConstraints ?? (_autoscaleConstraints = new InputList<ElastigroupIntegrationNomadAutoscaleConstraintsGetArgs>());
            set => _autoscaleConstraints = value;
        }

        [Input("autoscaleCooldown")]
        public Input<int>? AutoscaleCooldown { get; set; }

        [Input("autoscaleDown")]
        public Input<ElastigroupIntegrationNomadAutoscaleDownGetArgs>? AutoscaleDown { get; set; }

        [Input("autoscaleHeadroom")]
        public Input<ElastigroupIntegrationNomadAutoscaleHeadroomGetArgs>? AutoscaleHeadroom { get; set; }

        [Input("autoscaleIsEnabled")]
        public Input<bool>? AutoscaleIsEnabled { get; set; }

        [Input("masterHost", required: true)]
        public Input<string> MasterHost { get; set; } = null!;

        [Input("masterPort", required: true)]
        public Input<int> MasterPort { get; set; } = null!;

        public ElastigroupIntegrationNomadGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationRancherArgs : Pulumi.ResourceArgs
    {
        [Input("accessKey", required: true)]
        public Input<string> AccessKey { get; set; } = null!;

        [Input("masterHost", required: true)]
        public Input<string> MasterHost { get; set; } = null!;

        [Input("secretKey", required: true)]
        public Input<string> SecretKey { get; set; } = null!;

        [Input("version")]
        public Input<string>? Version { get; set; }

        public ElastigroupIntegrationRancherArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationRancherGetArgs : Pulumi.ResourceArgs
    {
        [Input("accessKey", required: true)]
        public Input<string> AccessKey { get; set; } = null!;

        [Input("masterHost", required: true)]
        public Input<string> MasterHost { get; set; } = null!;

        [Input("secretKey", required: true)]
        public Input<string> SecretKey { get; set; } = null!;

        [Input("version")]
        public Input<string>? Version { get; set; }

        public ElastigroupIntegrationRancherGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationRoute53Args : Pulumi.ResourceArgs
    {
        [Input("domains", required: true)]
        private InputList<ElastigroupIntegrationRoute53DomainsArgs>? _domains;
        public InputList<ElastigroupIntegrationRoute53DomainsArgs> Domains
        {
            get => _domains ?? (_domains = new InputList<ElastigroupIntegrationRoute53DomainsArgs>());
            set => _domains = value;
        }

        public ElastigroupIntegrationRoute53Args()
        {
        }
    }

    public sealed class ElastigroupIntegrationRoute53DomainsArgs : Pulumi.ResourceArgs
    {
        [Input("hostedZoneId", required: true)]
        public Input<string> HostedZoneId { get; set; } = null!;

        [Input("recordSets", required: true)]
        private InputList<ElastigroupIntegrationRoute53DomainsRecordSetsArgs>? _recordSets;
        public InputList<ElastigroupIntegrationRoute53DomainsRecordSetsArgs> RecordSets
        {
            get => _recordSets ?? (_recordSets = new InputList<ElastigroupIntegrationRoute53DomainsRecordSetsArgs>());
            set => _recordSets = value;
        }

        [Input("spotinstAcctId")]
        public Input<string>? SpotinstAcctId { get; set; }

        public ElastigroupIntegrationRoute53DomainsArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationRoute53DomainsGetArgs : Pulumi.ResourceArgs
    {
        [Input("hostedZoneId", required: true)]
        public Input<string> HostedZoneId { get; set; } = null!;

        [Input("recordSets", required: true)]
        private InputList<ElastigroupIntegrationRoute53DomainsRecordSetsGetArgs>? _recordSets;
        public InputList<ElastigroupIntegrationRoute53DomainsRecordSetsGetArgs> RecordSets
        {
            get => _recordSets ?? (_recordSets = new InputList<ElastigroupIntegrationRoute53DomainsRecordSetsGetArgs>());
            set => _recordSets = value;
        }

        [Input("spotinstAcctId")]
        public Input<string>? SpotinstAcctId { get; set; }

        public ElastigroupIntegrationRoute53DomainsGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationRoute53DomainsRecordSetsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The group name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("usePublicIp")]
        public Input<bool>? UsePublicIp { get; set; }

        public ElastigroupIntegrationRoute53DomainsRecordSetsArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationRoute53DomainsRecordSetsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The group name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("usePublicIp")]
        public Input<bool>? UsePublicIp { get; set; }

        public ElastigroupIntegrationRoute53DomainsRecordSetsGetArgs()
        {
        }
    }

    public sealed class ElastigroupIntegrationRoute53GetArgs : Pulumi.ResourceArgs
    {
        [Input("domains", required: true)]
        private InputList<ElastigroupIntegrationRoute53DomainsGetArgs>? _domains;
        public InputList<ElastigroupIntegrationRoute53DomainsGetArgs> Domains
        {
            get => _domains ?? (_domains = new InputList<ElastigroupIntegrationRoute53DomainsGetArgs>());
            set => _domains = value;
        }

        public ElastigroupIntegrationRoute53GetArgs()
        {
        }
    }

    public sealed class ElastigroupMultaiTargetSetsArgs : Pulumi.ResourceArgs
    {
        [Input("balancerId", required: true)]
        public Input<string> BalancerId { get; set; } = null!;

        [Input("targetSetId", required: true)]
        public Input<string> TargetSetId { get; set; } = null!;

        public ElastigroupMultaiTargetSetsArgs()
        {
        }
    }

    public sealed class ElastigroupMultaiTargetSetsGetArgs : Pulumi.ResourceArgs
    {
        [Input("balancerId", required: true)]
        public Input<string> BalancerId { get; set; } = null!;

        [Input("targetSetId", required: true)]
        public Input<string> TargetSetId { get; set; } = null!;

        public ElastigroupMultaiTargetSetsGetArgs()
        {
        }
    }

    public sealed class ElastigroupNetworkInterfacesArgs : Pulumi.ResourceArgs
    {
        [Input("associateIpv6Address")]
        public Input<bool>? AssociateIpv6Address { get; set; }

        [Input("associatePublicIpAddress")]
        public Input<bool>? AssociatePublicIpAddress { get; set; }

        [Input("deleteOnTermination")]
        public Input<bool>? DeleteOnTermination { get; set; }

        /// <summary>
        /// The group description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("deviceIndex", required: true)]
        public Input<string> DeviceIndex { get; set; } = null!;

        [Input("networkInterfaceId")]
        public Input<string>? NetworkInterfaceId { get; set; }

        [Input("privateIpAddress")]
        public Input<string>? PrivateIpAddress { get; set; }

        [Input("secondaryPrivateIpAddressCount")]
        public Input<string>? SecondaryPrivateIpAddressCount { get; set; }

        public ElastigroupNetworkInterfacesArgs()
        {
        }
    }

    public sealed class ElastigroupNetworkInterfacesGetArgs : Pulumi.ResourceArgs
    {
        [Input("associateIpv6Address")]
        public Input<bool>? AssociateIpv6Address { get; set; }

        [Input("associatePublicIpAddress")]
        public Input<bool>? AssociatePublicIpAddress { get; set; }

        [Input("deleteOnTermination")]
        public Input<bool>? DeleteOnTermination { get; set; }

        /// <summary>
        /// The group description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("deviceIndex", required: true)]
        public Input<string> DeviceIndex { get; set; } = null!;

        [Input("networkInterfaceId")]
        public Input<string>? NetworkInterfaceId { get; set; }

        [Input("privateIpAddress")]
        public Input<string>? PrivateIpAddress { get; set; }

        [Input("secondaryPrivateIpAddressCount")]
        public Input<string>? SecondaryPrivateIpAddressCount { get; set; }

        public ElastigroupNetworkInterfacesGetArgs()
        {
        }
    }

    public sealed class ElastigroupRevertToSpotArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// In the event of a fallback to On-Demand instances, select the time period to revert back to Spot. Supported Arguments â€“ always (default), timeWindow, never. For timeWindow or never to be valid the group must have availabilityOriented OR persistence defined.
        /// </summary>
        [Input("performAt", required: true)]
        public Input<string> PerformAt { get; set; } = null!;

        [Input("timeWindows")]
        private InputList<string>? _timeWindows;

        /// <summary>
        /// Specify a list of time windows for to execute revertToSpot strategy. Time window format: `ddd:hh:mm-ddd:hh:mm`. Example: `Mon:03:00-Wed:02:30`
        /// </summary>
        public InputList<string> TimeWindows
        {
            get => _timeWindows ?? (_timeWindows = new InputList<string>());
            set => _timeWindows = value;
        }

        public ElastigroupRevertToSpotArgs()
        {
        }
    }

    public sealed class ElastigroupRevertToSpotGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// In the event of a fallback to On-Demand instances, select the time period to revert back to Spot. Supported Arguments â€“ always (default), timeWindow, never. For timeWindow or never to be valid the group must have availabilityOriented OR persistence defined.
        /// </summary>
        [Input("performAt", required: true)]
        public Input<string> PerformAt { get; set; } = null!;

        [Input("timeWindows")]
        private InputList<string>? _timeWindows;

        /// <summary>
        /// Specify a list of time windows for to execute revertToSpot strategy. Time window format: `ddd:hh:mm-ddd:hh:mm`. Example: `Mon:03:00-Wed:02:30`
        /// </summary>
        public InputList<string> TimeWindows
        {
            get => _timeWindows ?? (_timeWindows = new InputList<string>());
            set => _timeWindows = value;
        }

        public ElastigroupRevertToSpotGetArgs()
        {
        }
    }

    public sealed class ElastigroupScalingDownPoliciesArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputList<ElastigroupScalingDownPoliciesDimensionsArgs>? _dimensions;
        public InputList<ElastigroupScalingDownPoliciesDimensionsArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<ElastigroupScalingDownPoliciesDimensionsArgs>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("source")]
        public Input<string>? Source { get; set; }

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit", required: true)]
        public Input<string> Unit { get; set; } = null!;

        public ElastigroupScalingDownPoliciesArgs()
        {
        }
    }

    public sealed class ElastigroupScalingDownPoliciesDimensionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The group name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("value")]
        public Input<string>? Value { get; set; }

        public ElastigroupScalingDownPoliciesDimensionsArgs()
        {
        }
    }

    public sealed class ElastigroupScalingDownPoliciesDimensionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The group name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("value")]
        public Input<string>? Value { get; set; }

        public ElastigroupScalingDownPoliciesDimensionsGetArgs()
        {
        }
    }

    public sealed class ElastigroupScalingDownPoliciesGetArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputList<ElastigroupScalingDownPoliciesDimensionsGetArgs>? _dimensions;
        public InputList<ElastigroupScalingDownPoliciesDimensionsGetArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<ElastigroupScalingDownPoliciesDimensionsGetArgs>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("source")]
        public Input<string>? Source { get; set; }

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit", required: true)]
        public Input<string> Unit { get; set; } = null!;

        public ElastigroupScalingDownPoliciesGetArgs()
        {
        }
    }

    public sealed class ElastigroupScalingStrategiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specify whether to terminate instances at the end of each billing hour.
        /// </summary>
        [Input("terminateAtEndOfBillingHour")]
        public Input<bool>? TerminateAtEndOfBillingHour { get; set; }

        /// <summary>
        /// - Determines whether to terminate the newest instances when performing a scaling action. Valid values: `"default"`, `"newestInstance"`.
        /// </summary>
        [Input("terminationPolicy")]
        public Input<string>? TerminationPolicy { get; set; }

        public ElastigroupScalingStrategiesArgs()
        {
        }
    }

    public sealed class ElastigroupScalingStrategiesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specify whether to terminate instances at the end of each billing hour.
        /// </summary>
        [Input("terminateAtEndOfBillingHour")]
        public Input<bool>? TerminateAtEndOfBillingHour { get; set; }

        /// <summary>
        /// - Determines whether to terminate the newest instances when performing a scaling action. Valid values: `"default"`, `"newestInstance"`.
        /// </summary>
        [Input("terminationPolicy")]
        public Input<string>? TerminationPolicy { get; set; }

        public ElastigroupScalingStrategiesGetArgs()
        {
        }
    }

    public sealed class ElastigroupScalingTargetPoliciesArgs : Pulumi.ResourceArgs
    {
        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputList<ElastigroupScalingTargetPoliciesDimensionsArgs>? _dimensions;
        public InputList<ElastigroupScalingTargetPoliciesDimensionsArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<ElastigroupScalingTargetPoliciesDimensionsArgs>());
            set => _dimensions = value;
        }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("predictiveMode")]
        public Input<string>? PredictiveMode { get; set; }

        [Input("source")]
        public Input<string>? Source { get; set; }

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target", required: true)]
        public Input<double> Target { get; set; } = null!;

        [Input("unit", required: true)]
        public Input<string> Unit { get; set; } = null!;

        public ElastigroupScalingTargetPoliciesArgs()
        {
        }
    }

    public sealed class ElastigroupScalingTargetPoliciesDimensionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The group name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("value")]
        public Input<string>? Value { get; set; }

        public ElastigroupScalingTargetPoliciesDimensionsArgs()
        {
        }
    }

    public sealed class ElastigroupScalingTargetPoliciesDimensionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The group name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("value")]
        public Input<string>? Value { get; set; }

        public ElastigroupScalingTargetPoliciesDimensionsGetArgs()
        {
        }
    }

    public sealed class ElastigroupScalingTargetPoliciesGetArgs : Pulumi.ResourceArgs
    {
        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputList<ElastigroupScalingTargetPoliciesDimensionsGetArgs>? _dimensions;
        public InputList<ElastigroupScalingTargetPoliciesDimensionsGetArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<ElastigroupScalingTargetPoliciesDimensionsGetArgs>());
            set => _dimensions = value;
        }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("predictiveMode")]
        public Input<string>? PredictiveMode { get; set; }

        [Input("source")]
        public Input<string>? Source { get; set; }

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target", required: true)]
        public Input<double> Target { get; set; } = null!;

        [Input("unit", required: true)]
        public Input<string> Unit { get; set; } = null!;

        public ElastigroupScalingTargetPoliciesGetArgs()
        {
        }
    }

    public sealed class ElastigroupScalingUpPoliciesArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputList<ElastigroupScalingUpPoliciesDimensionsArgs>? _dimensions;
        public InputList<ElastigroupScalingUpPoliciesDimensionsArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<ElastigroupScalingUpPoliciesDimensionsArgs>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("source")]
        public Input<string>? Source { get; set; }

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit", required: true)]
        public Input<string> Unit { get; set; } = null!;

        public ElastigroupScalingUpPoliciesArgs()
        {
        }
    }

    public sealed class ElastigroupScalingUpPoliciesDimensionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The group name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("value")]
        public Input<string>? Value { get; set; }

        public ElastigroupScalingUpPoliciesDimensionsArgs()
        {
        }
    }

    public sealed class ElastigroupScalingUpPoliciesDimensionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The group name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("value")]
        public Input<string>? Value { get; set; }

        public ElastigroupScalingUpPoliciesDimensionsGetArgs()
        {
        }
    }

    public sealed class ElastigroupScalingUpPoliciesGetArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputList<ElastigroupScalingUpPoliciesDimensionsGetArgs>? _dimensions;
        public InputList<ElastigroupScalingUpPoliciesDimensionsGetArgs> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<ElastigroupScalingUpPoliciesDimensionsGetArgs>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("source")]
        public Input<string>? Source { get; set; }

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit", required: true)]
        public Input<string> Unit { get; set; } = null!;

        public ElastigroupScalingUpPoliciesGetArgs()
        {
        }
    }

    public sealed class ElastigroupScheduledTasksArgs : Pulumi.ResourceArgs
    {
        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("adjustmentPercentage")]
        public Input<string>? AdjustmentPercentage { get; set; }

        [Input("batchSizePercentage")]
        public Input<string>? BatchSizePercentage { get; set; }

        [Input("cronExpression")]
        public Input<string>? CronExpression { get; set; }

        [Input("frequency")]
        public Input<string>? Frequency { get; set; }

        [Input("gracePeriod")]
        public Input<string>? GracePeriod { get; set; }

        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("maxCapacity")]
        public Input<string>? MaxCapacity { get; set; }

        [Input("minCapacity")]
        public Input<string>? MinCapacity { get; set; }

        [Input("scaleMaxCapacity")]
        public Input<string>? ScaleMaxCapacity { get; set; }

        [Input("scaleMinCapacity")]
        public Input<string>? ScaleMinCapacity { get; set; }

        [Input("scaleTargetCapacity")]
        public Input<string>? ScaleTargetCapacity { get; set; }

        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        [Input("targetCapacity")]
        public Input<string>? TargetCapacity { get; set; }

        [Input("taskType", required: true)]
        public Input<string> TaskType { get; set; } = null!;

        public ElastigroupScheduledTasksArgs()
        {
        }
    }

    public sealed class ElastigroupScheduledTasksGetArgs : Pulumi.ResourceArgs
    {
        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("adjustmentPercentage")]
        public Input<string>? AdjustmentPercentage { get; set; }

        [Input("batchSizePercentage")]
        public Input<string>? BatchSizePercentage { get; set; }

        [Input("cronExpression")]
        public Input<string>? CronExpression { get; set; }

        [Input("frequency")]
        public Input<string>? Frequency { get; set; }

        [Input("gracePeriod")]
        public Input<string>? GracePeriod { get; set; }

        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("maxCapacity")]
        public Input<string>? MaxCapacity { get; set; }

        [Input("minCapacity")]
        public Input<string>? MinCapacity { get; set; }

        [Input("scaleMaxCapacity")]
        public Input<string>? ScaleMaxCapacity { get; set; }

        [Input("scaleMinCapacity")]
        public Input<string>? ScaleMinCapacity { get; set; }

        [Input("scaleTargetCapacity")]
        public Input<string>? ScaleTargetCapacity { get; set; }

        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        [Input("targetCapacity")]
        public Input<string>? TargetCapacity { get; set; }

        [Input("taskType", required: true)]
        public Input<string> TaskType { get; set; } = null!;

        public ElastigroupScheduledTasksGetArgs()
        {
        }
    }

    public sealed class ElastigroupSignalsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The group name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        public ElastigroupSignalsArgs()
        {
        }
    }

    public sealed class ElastigroupSignalsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The group name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        public ElastigroupSignalsGetArgs()
        {
        }
    }

    public sealed class ElastigroupStatefulDeallocationArgs : Pulumi.ResourceArgs
    {
        [Input("shouldDeleteImages")]
        public Input<bool>? ShouldDeleteImages { get; set; }

        [Input("shouldDeleteNetworkInterfaces")]
        public Input<bool>? ShouldDeleteNetworkInterfaces { get; set; }

        [Input("shouldDeleteSnapshots")]
        public Input<bool>? ShouldDeleteSnapshots { get; set; }

        [Input("shouldDeleteVolumes")]
        public Input<bool>? ShouldDeleteVolumes { get; set; }

        public ElastigroupStatefulDeallocationArgs()
        {
        }
    }

    public sealed class ElastigroupStatefulDeallocationGetArgs : Pulumi.ResourceArgs
    {
        [Input("shouldDeleteImages")]
        public Input<bool>? ShouldDeleteImages { get; set; }

        [Input("shouldDeleteNetworkInterfaces")]
        public Input<bool>? ShouldDeleteNetworkInterfaces { get; set; }

        [Input("shouldDeleteSnapshots")]
        public Input<bool>? ShouldDeleteSnapshots { get; set; }

        [Input("shouldDeleteVolumes")]
        public Input<bool>? ShouldDeleteVolumes { get; set; }

        public ElastigroupStatefulDeallocationGetArgs()
        {
        }
    }

    public sealed class ElastigroupTagsArgs : Pulumi.ResourceArgs
    {
        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public ElastigroupTagsArgs()
        {
        }
    }

    public sealed class ElastigroupTagsGetArgs : Pulumi.ResourceArgs
    {
        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public ElastigroupTagsGetArgs()
        {
        }
    }

    public sealed class ElastigroupUpdatePolicyArgs : Pulumi.ResourceArgs
    {
        [Input("autoApplyTags")]
        public Input<bool>? AutoApplyTags { get; set; }

        [Input("rollConfig")]
        public Input<ElastigroupUpdatePolicyRollConfigArgs>? RollConfig { get; set; }

        [Input("shouldResumeStateful", required: true)]
        public Input<bool> ShouldResumeStateful { get; set; } = null!;

        [Input("shouldRoll", required: true)]
        public Input<bool> ShouldRoll { get; set; } = null!;

        public ElastigroupUpdatePolicyArgs()
        {
        }
    }

    public sealed class ElastigroupUpdatePolicyGetArgs : Pulumi.ResourceArgs
    {
        [Input("autoApplyTags")]
        public Input<bool>? AutoApplyTags { get; set; }

        [Input("rollConfig")]
        public Input<ElastigroupUpdatePolicyRollConfigGetArgs>? RollConfig { get; set; }

        [Input("shouldResumeStateful", required: true)]
        public Input<bool> ShouldResumeStateful { get; set; } = null!;

        [Input("shouldRoll", required: true)]
        public Input<bool> ShouldRoll { get; set; } = null!;

        public ElastigroupUpdatePolicyGetArgs()
        {
        }
    }

    public sealed class ElastigroupUpdatePolicyRollConfigArgs : Pulumi.ResourceArgs
    {
        [Input("batchSizePercentage", required: true)]
        public Input<int> BatchSizePercentage { get; set; } = null!;

        [Input("gracePeriod")]
        public Input<int>? GracePeriod { get; set; }

        /// <summary>
        /// The service that will perform health checks for the instance. Valid values: `"ELB"`, `"HCS"`, `"TARGET_GROUP"`, `"MLB"`, `"EC2"`, `"MULTAI_TARGET_SET"`, `"MLB_RUNTIME"`, `"K8S_NODE"`, `"NOMAD_NODE"`, `"ECS_CLUSTER_INSTANCE"`.
        /// </summary>
        [Input("healthCheckType")]
        public Input<string>? HealthCheckType { get; set; }

        [Input("strategy")]
        public Input<ElastigroupUpdatePolicyRollConfigStrategyArgs>? Strategy { get; set; }

        [Input("waitForRollPercentage")]
        public Input<int>? WaitForRollPercentage { get; set; }

        [Input("waitForRollTimeout")]
        public Input<int>? WaitForRollTimeout { get; set; }

        public ElastigroupUpdatePolicyRollConfigArgs()
        {
        }
    }

    public sealed class ElastigroupUpdatePolicyRollConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("batchSizePercentage", required: true)]
        public Input<int> BatchSizePercentage { get; set; } = null!;

        [Input("gracePeriod")]
        public Input<int>? GracePeriod { get; set; }

        /// <summary>
        /// The service that will perform health checks for the instance. Valid values: `"ELB"`, `"HCS"`, `"TARGET_GROUP"`, `"MLB"`, `"EC2"`, `"MULTAI_TARGET_SET"`, `"MLB_RUNTIME"`, `"K8S_NODE"`, `"NOMAD_NODE"`, `"ECS_CLUSTER_INSTANCE"`.
        /// </summary>
        [Input("healthCheckType")]
        public Input<string>? HealthCheckType { get; set; }

        [Input("strategy")]
        public Input<ElastigroupUpdatePolicyRollConfigStrategyGetArgs>? Strategy { get; set; }

        [Input("waitForRollPercentage")]
        public Input<int>? WaitForRollPercentage { get; set; }

        [Input("waitForRollTimeout")]
        public Input<int>? WaitForRollTimeout { get; set; }

        public ElastigroupUpdatePolicyRollConfigGetArgs()
        {
        }
    }

    public sealed class ElastigroupUpdatePolicyRollConfigStrategyArgs : Pulumi.ResourceArgs
    {
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        [Input("batchMinHealthyPercentage")]
        public Input<int>? BatchMinHealthyPercentage { get; set; }

        [Input("shouldDrainInstances")]
        public Input<bool>? ShouldDrainInstances { get; set; }

        public ElastigroupUpdatePolicyRollConfigStrategyArgs()
        {
        }
    }

    public sealed class ElastigroupUpdatePolicyRollConfigStrategyGetArgs : Pulumi.ResourceArgs
    {
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        [Input("batchMinHealthyPercentage")]
        public Input<int>? BatchMinHealthyPercentage { get; set; }

        [Input("shouldDrainInstances")]
        public Input<bool>? ShouldDrainInstances { get; set; }

        public ElastigroupUpdatePolicyRollConfigStrategyGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class ElastigroupEbsBlockDevices
    {
        public readonly bool DeleteOnTermination;
        public readonly string DeviceName;
        public readonly bool Encrypted;
        public readonly int? Iops;
        public readonly string? KmsKeyId;
        public readonly string? SnapshotId;
        public readonly int? VolumeSize;
        public readonly string VolumeType;

        [OutputConstructor]
        private ElastigroupEbsBlockDevices(
            bool deleteOnTermination,
            string deviceName,
            bool encrypted,
            int? iops,
            string? kmsKeyId,
            string? snapshotId,
            int? volumeSize,
            string volumeType)
        {
            DeleteOnTermination = deleteOnTermination;
            DeviceName = deviceName;
            Encrypted = encrypted;
            Iops = iops;
            KmsKeyId = kmsKeyId;
            SnapshotId = snapshotId;
            VolumeSize = volumeSize;
            VolumeType = volumeType;
        }
    }

    [OutputType]
    public sealed class ElastigroupEphemeralBlockDevices
    {
        public readonly string DeviceName;
        public readonly string VirtualName;

        [OutputConstructor]
        private ElastigroupEphemeralBlockDevices(
            string deviceName,
            string virtualName)
        {
            DeviceName = deviceName;
            VirtualName = virtualName;
        }
    }

    [OutputType]
    public sealed class ElastigroupInstanceTypesWeights
    {
        /// <summary>
        /// Name of instance type (String).
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// Weight per instance type (Integer).
        /// </summary>
        public readonly int Weight;

        [OutputConstructor]
        private ElastigroupInstanceTypesWeights(
            string instanceType,
            int weight)
        {
            InstanceType = instanceType;
            Weight = weight;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationBeanstalk
    {
        public readonly ElastigroupIntegrationBeanstalkDeploymentPreferences? DeploymentPreferences;
        public readonly string? EnvironmentId;
        public readonly ElastigroupIntegrationBeanstalkManagedActions? ManagedActions;

        [OutputConstructor]
        private ElastigroupIntegrationBeanstalk(
            ElastigroupIntegrationBeanstalkDeploymentPreferences? deploymentPreferences,
            string? environmentId,
            ElastigroupIntegrationBeanstalkManagedActions? managedActions)
        {
            DeploymentPreferences = deploymentPreferences;
            EnvironmentId = environmentId;
            ManagedActions = managedActions;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationBeanstalkDeploymentPreferences
    {
        public readonly bool? AutomaticRoll;
        public readonly int? BatchSizePercentage;
        public readonly int? GracePeriod;
        public readonly ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategy? Strategy;

        [OutputConstructor]
        private ElastigroupIntegrationBeanstalkDeploymentPreferences(
            bool? automaticRoll,
            int? batchSizePercentage,
            int? gracePeriod,
            ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategy? strategy)
        {
            AutomaticRoll = automaticRoll;
            BatchSizePercentage = batchSizePercentage;
            GracePeriod = gracePeriod;
            Strategy = strategy;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategy
    {
        public readonly string? Action;
        public readonly bool? ShouldDrainInstances;

        [OutputConstructor]
        private ElastigroupIntegrationBeanstalkDeploymentPreferencesStrategy(
            string? action,
            bool? shouldDrainInstances)
        {
            Action = action;
            ShouldDrainInstances = shouldDrainInstances;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationBeanstalkManagedActions
    {
        public readonly ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdate? PlatformUpdate;

        [OutputConstructor]
        private ElastigroupIntegrationBeanstalkManagedActions(ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdate? platformUpdate)
        {
            PlatformUpdate = platformUpdate;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdate
    {
        /// <summary>
        /// In the event of a fallback to On-Demand instances, select the time period to revert back to Spot. Supported Arguments â€“ always (default), timeWindow, never. For timeWindow or never to be valid the group must have availabilityOriented OR persistence defined.
        /// </summary>
        public readonly string? PerformAt;
        public readonly string? TimeWindow;
        public readonly string? UpdateLevel;

        [OutputConstructor]
        private ElastigroupIntegrationBeanstalkManagedActionsPlatformUpdate(
            string? performAt,
            string? timeWindow,
            string? updateLevel)
        {
            PerformAt = performAt;
            TimeWindow = timeWindow;
            UpdateLevel = updateLevel;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationCodedeploy
    {
        public readonly bool CleanupOnFailure;
        public readonly ImmutableArray<ElastigroupIntegrationCodedeployDeploymentGroups> DeploymentGroups;
        public readonly bool TerminateInstanceOnFailure;

        [OutputConstructor]
        private ElastigroupIntegrationCodedeploy(
            bool cleanupOnFailure,
            ImmutableArray<ElastigroupIntegrationCodedeployDeploymentGroups> deploymentGroups,
            bool terminateInstanceOnFailure)
        {
            CleanupOnFailure = cleanupOnFailure;
            DeploymentGroups = deploymentGroups;
            TerminateInstanceOnFailure = terminateInstanceOnFailure;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationCodedeployDeploymentGroups
    {
        public readonly string ApplicationName;
        public readonly string DeploymentGroupName;

        [OutputConstructor]
        private ElastigroupIntegrationCodedeployDeploymentGroups(
            string applicationName,
            string deploymentGroupName)
        {
            ApplicationName = applicationName;
            DeploymentGroupName = deploymentGroupName;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationDockerSwarm
    {
        public readonly int? AutoscaleCooldown;
        public readonly ElastigroupIntegrationDockerSwarmAutoscaleDown? AutoscaleDown;
        public readonly ElastigroupIntegrationDockerSwarmAutoscaleHeadroom? AutoscaleHeadroom;
        public readonly bool? AutoscaleIsEnabled;
        public readonly string MasterHost;
        public readonly int MasterPort;

        [OutputConstructor]
        private ElastigroupIntegrationDockerSwarm(
            int? autoscaleCooldown,
            ElastigroupIntegrationDockerSwarmAutoscaleDown? autoscaleDown,
            ElastigroupIntegrationDockerSwarmAutoscaleHeadroom? autoscaleHeadroom,
            bool? autoscaleIsEnabled,
            string masterHost,
            int masterPort)
        {
            AutoscaleCooldown = autoscaleCooldown;
            AutoscaleDown = autoscaleDown;
            AutoscaleHeadroom = autoscaleHeadroom;
            AutoscaleIsEnabled = autoscaleIsEnabled;
            MasterHost = masterHost;
            MasterPort = masterPort;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationDockerSwarmAutoscaleDown
    {
        public readonly int? EvaluationPeriods;

        [OutputConstructor]
        private ElastigroupIntegrationDockerSwarmAutoscaleDown(int? evaluationPeriods)
        {
            EvaluationPeriods = evaluationPeriods;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationDockerSwarmAutoscaleHeadroom
    {
        public readonly int? CpuPerUnit;
        public readonly int? MemoryPerUnit;
        public readonly int? NumOfUnits;

        [OutputConstructor]
        private ElastigroupIntegrationDockerSwarmAutoscaleHeadroom(
            int? cpuPerUnit,
            int? memoryPerUnit,
            int? numOfUnits)
        {
            CpuPerUnit = cpuPerUnit;
            MemoryPerUnit = memoryPerUnit;
            NumOfUnits = numOfUnits;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationEcs
    {
        public readonly ImmutableArray<ElastigroupIntegrationEcsAutoscaleAttributes> AutoscaleAttributes;
        public readonly int? AutoscaleCooldown;
        public readonly ElastigroupIntegrationEcsAutoscaleDown? AutoscaleDown;
        public readonly ElastigroupIntegrationEcsAutoscaleHeadroom? AutoscaleHeadroom;
        public readonly bool? AutoscaleIsAutoConfig;
        public readonly bool? AutoscaleIsEnabled;
        public readonly bool? AutoscaleScaleDownNonServiceTasks;
        public readonly string ClusterName;

        [OutputConstructor]
        private ElastigroupIntegrationEcs(
            ImmutableArray<ElastigroupIntegrationEcsAutoscaleAttributes> autoscaleAttributes,
            int? autoscaleCooldown,
            ElastigroupIntegrationEcsAutoscaleDown? autoscaleDown,
            ElastigroupIntegrationEcsAutoscaleHeadroom? autoscaleHeadroom,
            bool? autoscaleIsAutoConfig,
            bool? autoscaleIsEnabled,
            bool? autoscaleScaleDownNonServiceTasks,
            string clusterName)
        {
            AutoscaleAttributes = autoscaleAttributes;
            AutoscaleCooldown = autoscaleCooldown;
            AutoscaleDown = autoscaleDown;
            AutoscaleHeadroom = autoscaleHeadroom;
            AutoscaleIsAutoConfig = autoscaleIsAutoConfig;
            AutoscaleIsEnabled = autoscaleIsEnabled;
            AutoscaleScaleDownNonServiceTasks = autoscaleScaleDownNonServiceTasks;
            ClusterName = clusterName;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationEcsAutoscaleAttributes
    {
        public readonly string Key;
        public readonly string Value;

        [OutputConstructor]
        private ElastigroupIntegrationEcsAutoscaleAttributes(
            string key,
            string value)
        {
            Key = key;
            Value = value;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationEcsAutoscaleDown
    {
        public readonly int? EvaluationPeriods;
        public readonly int? MaxScaleDownPercentage;

        [OutputConstructor]
        private ElastigroupIntegrationEcsAutoscaleDown(
            int? evaluationPeriods,
            int? maxScaleDownPercentage)
        {
            EvaluationPeriods = evaluationPeriods;
            MaxScaleDownPercentage = maxScaleDownPercentage;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationEcsAutoscaleHeadroom
    {
        public readonly int? CpuPerUnit;
        public readonly int? MemoryPerUnit;
        public readonly int? NumOfUnits;

        [OutputConstructor]
        private ElastigroupIntegrationEcsAutoscaleHeadroom(
            int? cpuPerUnit,
            int? memoryPerUnit,
            int? numOfUnits)
        {
            CpuPerUnit = cpuPerUnit;
            MemoryPerUnit = memoryPerUnit;
            NumOfUnits = numOfUnits;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationGitlab
    {
        public readonly ElastigroupIntegrationGitlabRunner? Runner;

        [OutputConstructor]
        private ElastigroupIntegrationGitlab(ElastigroupIntegrationGitlabRunner? runner)
        {
            Runner = runner;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationGitlabRunner
    {
        public readonly bool? IsEnabled;

        [OutputConstructor]
        private ElastigroupIntegrationGitlabRunner(bool? isEnabled)
        {
            IsEnabled = isEnabled;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationKubernetes
    {
        public readonly string? ApiServer;
        public readonly int? AutoscaleCooldown;
        public readonly ElastigroupIntegrationKubernetesAutoscaleDown? AutoscaleDown;
        public readonly ElastigroupIntegrationKubernetesAutoscaleHeadroom? AutoscaleHeadroom;
        public readonly bool? AutoscaleIsAutoConfig;
        public readonly bool? AutoscaleIsEnabled;
        public readonly ImmutableArray<ElastigroupIntegrationKubernetesAutoscaleLabels> AutoscaleLabels;
        public readonly string? ClusterIdentifier;
        public readonly string? IntegrationMode;
        public readonly string? Token;

        [OutputConstructor]
        private ElastigroupIntegrationKubernetes(
            string? apiServer,
            int? autoscaleCooldown,
            ElastigroupIntegrationKubernetesAutoscaleDown? autoscaleDown,
            ElastigroupIntegrationKubernetesAutoscaleHeadroom? autoscaleHeadroom,
            bool? autoscaleIsAutoConfig,
            bool? autoscaleIsEnabled,
            ImmutableArray<ElastigroupIntegrationKubernetesAutoscaleLabels> autoscaleLabels,
            string? clusterIdentifier,
            string? integrationMode,
            string? token)
        {
            ApiServer = apiServer;
            AutoscaleCooldown = autoscaleCooldown;
            AutoscaleDown = autoscaleDown;
            AutoscaleHeadroom = autoscaleHeadroom;
            AutoscaleIsAutoConfig = autoscaleIsAutoConfig;
            AutoscaleIsEnabled = autoscaleIsEnabled;
            AutoscaleLabels = autoscaleLabels;
            ClusterIdentifier = clusterIdentifier;
            IntegrationMode = integrationMode;
            Token = token;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationKubernetesAutoscaleDown
    {
        public readonly int? EvaluationPeriods;

        [OutputConstructor]
        private ElastigroupIntegrationKubernetesAutoscaleDown(int? evaluationPeriods)
        {
            EvaluationPeriods = evaluationPeriods;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationKubernetesAutoscaleHeadroom
    {
        public readonly int? CpuPerUnit;
        public readonly int? MemoryPerUnit;
        public readonly int? NumOfUnits;

        [OutputConstructor]
        private ElastigroupIntegrationKubernetesAutoscaleHeadroom(
            int? cpuPerUnit,
            int? memoryPerUnit,
            int? numOfUnits)
        {
            CpuPerUnit = cpuPerUnit;
            MemoryPerUnit = memoryPerUnit;
            NumOfUnits = numOfUnits;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationKubernetesAutoscaleLabels
    {
        public readonly string Key;
        public readonly string Value;

        [OutputConstructor]
        private ElastigroupIntegrationKubernetesAutoscaleLabels(
            string key,
            string value)
        {
            Key = key;
            Value = value;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationMesosphere
    {
        public readonly string ApiServer;

        [OutputConstructor]
        private ElastigroupIntegrationMesosphere(string apiServer)
        {
            ApiServer = apiServer;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationMultaiRuntime
    {
        public readonly string DeploymentId;

        [OutputConstructor]
        private ElastigroupIntegrationMultaiRuntime(string deploymentId)
        {
            DeploymentId = deploymentId;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationNomad
    {
        public readonly string? AclToken;
        public readonly ImmutableArray<ElastigroupIntegrationNomadAutoscaleConstraints> AutoscaleConstraints;
        public readonly int? AutoscaleCooldown;
        public readonly ElastigroupIntegrationNomadAutoscaleDown? AutoscaleDown;
        public readonly ElastigroupIntegrationNomadAutoscaleHeadroom? AutoscaleHeadroom;
        public readonly bool? AutoscaleIsEnabled;
        public readonly string MasterHost;
        public readonly int MasterPort;

        [OutputConstructor]
        private ElastigroupIntegrationNomad(
            string? aclToken,
            ImmutableArray<ElastigroupIntegrationNomadAutoscaleConstraints> autoscaleConstraints,
            int? autoscaleCooldown,
            ElastigroupIntegrationNomadAutoscaleDown? autoscaleDown,
            ElastigroupIntegrationNomadAutoscaleHeadroom? autoscaleHeadroom,
            bool? autoscaleIsEnabled,
            string masterHost,
            int masterPort)
        {
            AclToken = aclToken;
            AutoscaleConstraints = autoscaleConstraints;
            AutoscaleCooldown = autoscaleCooldown;
            AutoscaleDown = autoscaleDown;
            AutoscaleHeadroom = autoscaleHeadroom;
            AutoscaleIsEnabled = autoscaleIsEnabled;
            MasterHost = masterHost;
            MasterPort = masterPort;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationNomadAutoscaleConstraints
    {
        public readonly string Key;
        public readonly string Value;

        [OutputConstructor]
        private ElastigroupIntegrationNomadAutoscaleConstraints(
            string key,
            string value)
        {
            Key = key;
            Value = value;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationNomadAutoscaleDown
    {
        public readonly int? EvaluationPeriods;

        [OutputConstructor]
        private ElastigroupIntegrationNomadAutoscaleDown(int? evaluationPeriods)
        {
            EvaluationPeriods = evaluationPeriods;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationNomadAutoscaleHeadroom
    {
        public readonly int? CpuPerUnit;
        public readonly int? MemoryPerUnit;
        public readonly int? NumOfUnits;

        [OutputConstructor]
        private ElastigroupIntegrationNomadAutoscaleHeadroom(
            int? cpuPerUnit,
            int? memoryPerUnit,
            int? numOfUnits)
        {
            CpuPerUnit = cpuPerUnit;
            MemoryPerUnit = memoryPerUnit;
            NumOfUnits = numOfUnits;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationRancher
    {
        public readonly string AccessKey;
        public readonly string MasterHost;
        public readonly string SecretKey;
        public readonly string? Version;

        [OutputConstructor]
        private ElastigroupIntegrationRancher(
            string accessKey,
            string masterHost,
            string secretKey,
            string? version)
        {
            AccessKey = accessKey;
            MasterHost = masterHost;
            SecretKey = secretKey;
            Version = version;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationRoute53
    {
        public readonly ImmutableArray<ElastigroupIntegrationRoute53Domains> Domains;

        [OutputConstructor]
        private ElastigroupIntegrationRoute53(ImmutableArray<ElastigroupIntegrationRoute53Domains> domains)
        {
            Domains = domains;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationRoute53Domains
    {
        public readonly string HostedZoneId;
        public readonly ImmutableArray<ElastigroupIntegrationRoute53DomainsRecordSets> RecordSets;
        public readonly string? SpotinstAcctId;

        [OutputConstructor]
        private ElastigroupIntegrationRoute53Domains(
            string hostedZoneId,
            ImmutableArray<ElastigroupIntegrationRoute53DomainsRecordSets> recordSets,
            string? spotinstAcctId)
        {
            HostedZoneId = hostedZoneId;
            RecordSets = recordSets;
            SpotinstAcctId = spotinstAcctId;
        }
    }

    [OutputType]
    public sealed class ElastigroupIntegrationRoute53DomainsRecordSets
    {
        /// <summary>
        /// The group name.
        /// </summary>
        public readonly string Name;
        public readonly bool? UsePublicIp;

        [OutputConstructor]
        private ElastigroupIntegrationRoute53DomainsRecordSets(
            string name,
            bool? usePublicIp)
        {
            Name = name;
            UsePublicIp = usePublicIp;
        }
    }

    [OutputType]
    public sealed class ElastigroupMultaiTargetSets
    {
        public readonly string BalancerId;
        public readonly string TargetSetId;

        [OutputConstructor]
        private ElastigroupMultaiTargetSets(
            string balancerId,
            string targetSetId)
        {
            BalancerId = balancerId;
            TargetSetId = targetSetId;
        }
    }

    [OutputType]
    public sealed class ElastigroupNetworkInterfaces
    {
        public readonly bool? AssociateIpv6Address;
        public readonly bool? AssociatePublicIpAddress;
        public readonly bool DeleteOnTermination;
        /// <summary>
        /// The group description.
        /// </summary>
        public readonly string? Description;
        public readonly string DeviceIndex;
        public readonly string? NetworkInterfaceId;
        public readonly string? PrivateIpAddress;
        public readonly string? SecondaryPrivateIpAddressCount;

        [OutputConstructor]
        private ElastigroupNetworkInterfaces(
            bool? associateIpv6Address,
            bool? associatePublicIpAddress,
            bool deleteOnTermination,
            string? description,
            string deviceIndex,
            string? networkInterfaceId,
            string? privateIpAddress,
            string? secondaryPrivateIpAddressCount)
        {
            AssociateIpv6Address = associateIpv6Address;
            AssociatePublicIpAddress = associatePublicIpAddress;
            DeleteOnTermination = deleteOnTermination;
            Description = description;
            DeviceIndex = deviceIndex;
            NetworkInterfaceId = networkInterfaceId;
            PrivateIpAddress = privateIpAddress;
            SecondaryPrivateIpAddressCount = secondaryPrivateIpAddressCount;
        }
    }

    [OutputType]
    public sealed class ElastigroupRevertToSpot
    {
        /// <summary>
        /// In the event of a fallback to On-Demand instances, select the time period to revert back to Spot. Supported Arguments â€“ always (default), timeWindow, never. For timeWindow or never to be valid the group must have availabilityOriented OR persistence defined.
        /// </summary>
        public readonly string PerformAt;
        /// <summary>
        /// Specify a list of time windows for to execute revertToSpot strategy. Time window format: `ddd:hh:mm-ddd:hh:mm`. Example: `Mon:03:00-Wed:02:30`
        /// </summary>
        public readonly ImmutableArray<string> TimeWindows;

        [OutputConstructor]
        private ElastigroupRevertToSpot(
            string performAt,
            ImmutableArray<string> timeWindows)
        {
            PerformAt = performAt;
            TimeWindows = timeWindows;
        }
    }

    [OutputType]
    public sealed class ElastigroupScalingDownPolicies
    {
        public readonly string? ActionType;
        public readonly string? Adjustment;
        public readonly int Cooldown;
        public readonly ImmutableArray<ElastigroupScalingDownPoliciesDimensions> Dimensions;
        public readonly int EvaluationPeriods;
        public readonly bool? IsEnabled;
        public readonly string? MaxTargetCapacity;
        public readonly string? Maximum;
        public readonly string MetricName;
        public readonly string? MinTargetCapacity;
        public readonly string? Minimum;
        public readonly string Namespace;
        public readonly string Operator;
        public readonly int Period;
        public readonly string PolicyName;
        public readonly string Source;
        public readonly string Statistic;
        public readonly string? Target;
        public readonly double Threshold;
        public readonly string Unit;

        [OutputConstructor]
        private ElastigroupScalingDownPolicies(
            string? actionType,
            string? adjustment,
            int cooldown,
            ImmutableArray<ElastigroupScalingDownPoliciesDimensions> dimensions,
            int evaluationPeriods,
            bool? isEnabled,
            string? maxTargetCapacity,
            string? maximum,
            string metricName,
            string? minTargetCapacity,
            string? minimum,
            string @namespace,
            string @operator,
            int period,
            string policyName,
            string source,
            string statistic,
            string? target,
            double threshold,
            string unit)
        {
            ActionType = actionType;
            Adjustment = adjustment;
            Cooldown = cooldown;
            Dimensions = dimensions;
            EvaluationPeriods = evaluationPeriods;
            IsEnabled = isEnabled;
            MaxTargetCapacity = maxTargetCapacity;
            Maximum = maximum;
            MetricName = metricName;
            MinTargetCapacity = minTargetCapacity;
            Minimum = minimum;
            Namespace = @namespace;
            Operator = @operator;
            Period = period;
            PolicyName = policyName;
            Source = source;
            Statistic = statistic;
            Target = target;
            Threshold = threshold;
            Unit = unit;
        }
    }

    [OutputType]
    public sealed class ElastigroupScalingDownPoliciesDimensions
    {
        /// <summary>
        /// The group name.
        /// </summary>
        public readonly string Name;
        public readonly string? Value;

        [OutputConstructor]
        private ElastigroupScalingDownPoliciesDimensions(
            string name,
            string? value)
        {
            Name = name;
            Value = value;
        }
    }

    [OutputType]
    public sealed class ElastigroupScalingStrategies
    {
        /// <summary>
        /// Specify whether to terminate instances at the end of each billing hour.
        /// </summary>
        public readonly bool? TerminateAtEndOfBillingHour;
        /// <summary>
        /// - Determines whether to terminate the newest instances when performing a scaling action. Valid values: `"default"`, `"newestInstance"`.
        /// </summary>
        public readonly string? TerminationPolicy;

        [OutputConstructor]
        private ElastigroupScalingStrategies(
            bool? terminateAtEndOfBillingHour,
            string? terminationPolicy)
        {
            TerminateAtEndOfBillingHour = terminateAtEndOfBillingHour;
            TerminationPolicy = terminationPolicy;
        }
    }

    [OutputType]
    public sealed class ElastigroupScalingTargetPolicies
    {
        public readonly int Cooldown;
        public readonly ImmutableArray<ElastigroupScalingTargetPoliciesDimensions> Dimensions;
        public readonly string MetricName;
        public readonly string Namespace;
        public readonly string PolicyName;
        public readonly string? PredictiveMode;
        public readonly string Source;
        public readonly string Statistic;
        public readonly double Target;
        public readonly string Unit;

        [OutputConstructor]
        private ElastigroupScalingTargetPolicies(
            int cooldown,
            ImmutableArray<ElastigroupScalingTargetPoliciesDimensions> dimensions,
            string metricName,
            string @namespace,
            string policyName,
            string? predictiveMode,
            string source,
            string statistic,
            double target,
            string unit)
        {
            Cooldown = cooldown;
            Dimensions = dimensions;
            MetricName = metricName;
            Namespace = @namespace;
            PolicyName = policyName;
            PredictiveMode = predictiveMode;
            Source = source;
            Statistic = statistic;
            Target = target;
            Unit = unit;
        }
    }

    [OutputType]
    public sealed class ElastigroupScalingTargetPoliciesDimensions
    {
        /// <summary>
        /// The group name.
        /// </summary>
        public readonly string Name;
        public readonly string? Value;

        [OutputConstructor]
        private ElastigroupScalingTargetPoliciesDimensions(
            string name,
            string? value)
        {
            Name = name;
            Value = value;
        }
    }

    [OutputType]
    public sealed class ElastigroupScalingUpPolicies
    {
        public readonly string? ActionType;
        public readonly string? Adjustment;
        public readonly int Cooldown;
        public readonly ImmutableArray<ElastigroupScalingUpPoliciesDimensions> Dimensions;
        public readonly int EvaluationPeriods;
        public readonly bool? IsEnabled;
        public readonly string? MaxTargetCapacity;
        public readonly string? Maximum;
        public readonly string MetricName;
        public readonly string? MinTargetCapacity;
        public readonly string? Minimum;
        public readonly string Namespace;
        public readonly string Operator;
        public readonly int Period;
        public readonly string PolicyName;
        public readonly string Source;
        public readonly string Statistic;
        public readonly string? Target;
        public readonly double Threshold;
        public readonly string Unit;

        [OutputConstructor]
        private ElastigroupScalingUpPolicies(
            string? actionType,
            string? adjustment,
            int cooldown,
            ImmutableArray<ElastigroupScalingUpPoliciesDimensions> dimensions,
            int evaluationPeriods,
            bool? isEnabled,
            string? maxTargetCapacity,
            string? maximum,
            string metricName,
            string? minTargetCapacity,
            string? minimum,
            string @namespace,
            string @operator,
            int period,
            string policyName,
            string source,
            string statistic,
            string? target,
            double threshold,
            string unit)
        {
            ActionType = actionType;
            Adjustment = adjustment;
            Cooldown = cooldown;
            Dimensions = dimensions;
            EvaluationPeriods = evaluationPeriods;
            IsEnabled = isEnabled;
            MaxTargetCapacity = maxTargetCapacity;
            Maximum = maximum;
            MetricName = metricName;
            MinTargetCapacity = minTargetCapacity;
            Minimum = minimum;
            Namespace = @namespace;
            Operator = @operator;
            Period = period;
            PolicyName = policyName;
            Source = source;
            Statistic = statistic;
            Target = target;
            Threshold = threshold;
            Unit = unit;
        }
    }

    [OutputType]
    public sealed class ElastigroupScalingUpPoliciesDimensions
    {
        /// <summary>
        /// The group name.
        /// </summary>
        public readonly string Name;
        public readonly string? Value;

        [OutputConstructor]
        private ElastigroupScalingUpPoliciesDimensions(
            string name,
            string? value)
        {
            Name = name;
            Value = value;
        }
    }

    [OutputType]
    public sealed class ElastigroupScheduledTasks
    {
        public readonly string? Adjustment;
        public readonly string? AdjustmentPercentage;
        public readonly string? BatchSizePercentage;
        public readonly string? CronExpression;
        public readonly string? Frequency;
        public readonly string? GracePeriod;
        public readonly bool? IsEnabled;
        public readonly string? MaxCapacity;
        public readonly string? MinCapacity;
        public readonly string? ScaleMaxCapacity;
        public readonly string? ScaleMinCapacity;
        public readonly string? ScaleTargetCapacity;
        public readonly string? StartTime;
        public readonly string? TargetCapacity;
        public readonly string TaskType;

        [OutputConstructor]
        private ElastigroupScheduledTasks(
            string? adjustment,
            string? adjustmentPercentage,
            string? batchSizePercentage,
            string? cronExpression,
            string? frequency,
            string? gracePeriod,
            bool? isEnabled,
            string? maxCapacity,
            string? minCapacity,
            string? scaleMaxCapacity,
            string? scaleMinCapacity,
            string? scaleTargetCapacity,
            string? startTime,
            string? targetCapacity,
            string taskType)
        {
            Adjustment = adjustment;
            AdjustmentPercentage = adjustmentPercentage;
            BatchSizePercentage = batchSizePercentage;
            CronExpression = cronExpression;
            Frequency = frequency;
            GracePeriod = gracePeriod;
            IsEnabled = isEnabled;
            MaxCapacity = maxCapacity;
            MinCapacity = minCapacity;
            ScaleMaxCapacity = scaleMaxCapacity;
            ScaleMinCapacity = scaleMinCapacity;
            ScaleTargetCapacity = scaleTargetCapacity;
            StartTime = startTime;
            TargetCapacity = targetCapacity;
            TaskType = taskType;
        }
    }

    [OutputType]
    public sealed class ElastigroupSignals
    {
        /// <summary>
        /// The group name.
        /// </summary>
        public readonly string Name;
        public readonly int? Timeout;

        [OutputConstructor]
        private ElastigroupSignals(
            string name,
            int? timeout)
        {
            Name = name;
            Timeout = timeout;
        }
    }

    [OutputType]
    public sealed class ElastigroupStatefulDeallocation
    {
        public readonly bool? ShouldDeleteImages;
        public readonly bool? ShouldDeleteNetworkInterfaces;
        public readonly bool? ShouldDeleteSnapshots;
        public readonly bool? ShouldDeleteVolumes;

        [OutputConstructor]
        private ElastigroupStatefulDeallocation(
            bool? shouldDeleteImages,
            bool? shouldDeleteNetworkInterfaces,
            bool? shouldDeleteSnapshots,
            bool? shouldDeleteVolumes)
        {
            ShouldDeleteImages = shouldDeleteImages;
            ShouldDeleteNetworkInterfaces = shouldDeleteNetworkInterfaces;
            ShouldDeleteSnapshots = shouldDeleteSnapshots;
            ShouldDeleteVolumes = shouldDeleteVolumes;
        }
    }

    [OutputType]
    public sealed class ElastigroupTags
    {
        public readonly string? Key;
        public readonly string? Value;

        [OutputConstructor]
        private ElastigroupTags(
            string? key,
            string? value)
        {
            Key = key;
            Value = value;
        }
    }

    [OutputType]
    public sealed class ElastigroupUpdatePolicy
    {
        public readonly bool? AutoApplyTags;
        public readonly ElastigroupUpdatePolicyRollConfig? RollConfig;
        public readonly bool ShouldResumeStateful;
        public readonly bool ShouldRoll;

        [OutputConstructor]
        private ElastigroupUpdatePolicy(
            bool? autoApplyTags,
            ElastigroupUpdatePolicyRollConfig? rollConfig,
            bool shouldResumeStateful,
            bool shouldRoll)
        {
            AutoApplyTags = autoApplyTags;
            RollConfig = rollConfig;
            ShouldResumeStateful = shouldResumeStateful;
            ShouldRoll = shouldRoll;
        }
    }

    [OutputType]
    public sealed class ElastigroupUpdatePolicyRollConfig
    {
        public readonly int BatchSizePercentage;
        public readonly int? GracePeriod;
        /// <summary>
        /// The service that will perform health checks for the instance. Valid values: `"ELB"`, `"HCS"`, `"TARGET_GROUP"`, `"MLB"`, `"EC2"`, `"MULTAI_TARGET_SET"`, `"MLB_RUNTIME"`, `"K8S_NODE"`, `"NOMAD_NODE"`, `"ECS_CLUSTER_INSTANCE"`.
        /// </summary>
        public readonly string? HealthCheckType;
        public readonly ElastigroupUpdatePolicyRollConfigStrategy? Strategy;
        public readonly int? WaitForRollPercentage;
        public readonly int? WaitForRollTimeout;

        [OutputConstructor]
        private ElastigroupUpdatePolicyRollConfig(
            int batchSizePercentage,
            int? gracePeriod,
            string? healthCheckType,
            ElastigroupUpdatePolicyRollConfigStrategy? strategy,
            int? waitForRollPercentage,
            int? waitForRollTimeout)
        {
            BatchSizePercentage = batchSizePercentage;
            GracePeriod = gracePeriod;
            HealthCheckType = healthCheckType;
            Strategy = strategy;
            WaitForRollPercentage = waitForRollPercentage;
            WaitForRollTimeout = waitForRollTimeout;
        }
    }

    [OutputType]
    public sealed class ElastigroupUpdatePolicyRollConfigStrategy
    {
        public readonly string Action;
        public readonly int? BatchMinHealthyPercentage;
        public readonly bool? ShouldDrainInstances;

        [OutputConstructor]
        private ElastigroupUpdatePolicyRollConfigStrategy(
            string action,
            int? batchMinHealthyPercentage,
            bool? shouldDrainInstances)
        {
            Action = action;
            BatchMinHealthyPercentage = batchMinHealthyPercentage;
            ShouldDrainInstances = shouldDrainInstances;
        }
    }
    }
}

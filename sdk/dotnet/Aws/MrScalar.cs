// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Aws
{
    /// <summary>
    /// Provides a Spotinst AWS MrScaler resource.
    /// 
    /// ## Provisioning Timeout (Clone, New strategies)
    /// 
    /// * `timeout` - (Optional) The amount of time (minutes) after which the cluster is automatically terminated if it's still in provisioning status. Minimum: '15'.
    /// * `timeout_action` - (Optional) The action to take if the timeout is exceeded. Valid values: `terminate`, `terminateAndRetry`.
    /// 
    /// &lt;a id="cluster-config"&gt;&lt;/a&gt;
    /// ## Cluster Configuration (New strategy only)
    /// 
    /// * `log_uri` - (Optional) The path to the Amazon S3 location where logs for this cluster are stored.
    /// * `additional_info` - (Optional) This is meta information about third-party applications that third-party vendors use for testing purposes.
    /// * `security_config` - (Optional) The name of the security configuration applied to the cluster.
    /// * `service_role` - (Optional) The IAM role that will be assumed by the Amazon EMR service to access AWS resources on your behalf.
    /// * `job_flow_role` - (Optional) The IAM role that was specified when the job flow was launched. The EC2 instances of the job flow assume this role.
    /// * `termination_protected` - (Optional) Specifies whether the Amazon EC2 instances in the cluster are protected from termination by API calls, user intervention, or in the event of a job-flow error.
    /// * `keep_job_flow_alive` - (Optional) Specifies whether the cluster should remain available after completing all steps.
    /// 
    /// &lt;a id="task-group"&gt;&lt;/a&gt;
    /// ## Task Group (Wrap, Clone, and New strategies)
    /// 
    /// * `task_instance_types` - (Required) The MrScaler instance types for the task nodes.
    /// * `task_target` - (Required) amount of instances in task group.
    /// * `task_maximum` - (Optional) maximal amount of instances in task group.
    /// * `task_minimum` - (Optional) The minimal amount of instances in task group.
    /// * `task_lifecycle` - (Required) The MrScaler lifecycle for instances in task group. Allowed values are 'SPOT' and 'ON_DEMAND'.
    /// * `task_ebs_optimized` - (Optional) EBS Optimization setting for instances in group.
    /// * `task_ebs_block_device` - (Required) This determines the ebs configuration for your task group instances. Only a single block is allowed.
    ///     * `volumes_per_instance` - (Optional; Default 1) Amount of volumes per instance in the task group.
    ///     * `volume_type` - (Required) volume type. Allowed values are 'gp2', 'io1' and others.
    ///     * `size_in_gb` - (Required) Size of the volume, in GBs.
    ///     * `iops` - (Optional) IOPS for the volume. Required in some volume types, such as io1.
    /// 
    /// &lt;a id="core-group"&gt;&lt;/a&gt;
    /// ## Core Group (Clone, New strategies)
    /// 
    /// * `core_instance_types` - (Required) The MrScaler instance types for the core nodes.
    /// * `core_target` - (Required) amount of instances in core group.
    /// * `core_maximum` - (Optional) maximal amount of instances in core group.
    /// * `core_minimum` - (Optional) The minimal amount of instances in core group.
    /// * `core_lifecycle` - (Required) The MrScaler lifecycle for instances in core group. Allowed values are 'SPOT' and 'ON_DEMAND'.
    /// * `core_ebs_optimized` - (Optional) EBS Optimization setting for instances in group.
    /// * `core_ebs_block_device` - (Required) This determines the ebs configuration for your core group instances. Only a single block is allowed.
    ///     * `volumes_per_instance` - (Optional; Default 1) Amount of volumes per instance in the core group.
    ///     * `volume_type` - (Required) volume type. Allowed values are 'gp2', 'io1' and others.
    ///     * `size_in_gb` - (Required) Size of the volume, in GBs.
    ///     * `iops` - (Optional) IOPS for the volume. Required in some volume types, such as io1.
    /// 
    /// &lt;a id="master-group"&gt;&lt;/a&gt;
    /// ## Master Group (Clone, New strategies)
    /// 
    /// * `master_instance_types` - (Required) The MrScaler instance types for the master nodes.
    /// * `master_lifecycle` - (Required) The MrScaler lifecycle for instances in master group. Allowed values are 'SPOT' and 'ON_DEMAND'.
    /// * `master_ebs_optimized` - (Optional) EBS Optimization setting for instances in group.
    /// * `master_ebs_block_device` - (Required) This determines the ebs configuration for your master group instances. Only a single block is allowed.
    ///     * `volumes_per_instance` - (Optional; Default 1) Amount of volumes per instance in the master group.
    ///     * `volume_type` - (Required) volume type. Allowed values are 'gp2', 'io1' and others.
    ///     * `size_in_gb` - (Required) Size of the volume, in GBs.
    ///     * `iops` - (Optional) IOPS for the volume. Required in some volume types, such as io1.
    /// 
    /// &lt;a id="tags"&gt;&lt;/a&gt;
    /// ## Tags (Clone, New strategies)
    /// 
    /// * `tags` - (Optional) A list of tags to assign to the resource. You may define multiple tags.
    ///     * `key` - (Required) Tag key.
    ///     * `value` - (Required) Tag value.
    /// 
    /// &lt;a id="Optional Compute Parameters"&gt;&lt;/a&gt;  
    /// ## Optional Compute Parameters (New strategy)
    /// 
    /// * `managed_primary_security_group` - (Optional) EMR Managed Security group that will be set to the primary instance group.
    /// * `managed_replica_security_group` - (Optional) EMR Managed Security group that will be set to the replica instance group.
    /// * `service_access_security_group` - (Optional) The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.
    /// * `additional_primary_security_groups` - (Optional) A list of additional Amazon EC2 security group IDs for the master node.
    /// * `additional_replica_security_groups` - (Optional) A list of additional Amazon EC2 security group IDs for the core and task nodes.
    /// * `custom_ami_id` - (Optional) The ID of a custom Amazon EBS-backed Linux AMI if the cluster uses a custom AMI.
    /// * `repo_upgrade_on_boot` - (Optional) Applies only when `custom_ami_id` is used. Specifies the type of updates that are applied from the Amazon Linux AMI package repositories when an instance boots using the AMI. Possible values include: `SECURITY`, `NONE`.
    /// * `ec2_key_name` - (Optional) The name of an Amazon EC2 key pair that can be used to ssh to the master node.
    /// * `applications` - (Optional) A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster
    ///     * `args` - (Optional) Arguments for EMR to pass to the application.
    ///     * `name` - (Required) The application name.
    ///     * `version`- (Optional)T he version of the application.
    /// * `instance_weights` - (Optional) Describes the instance and weights. Check out [Elastigroup Weighted Instances](https://api.spotinst.com/elastigroup-for-aws/concepts/general-concepts/elastigroup-capacity-instances-or-weighted) for more info.
    ///     * `instance_type` - (Required) The type of the instance.
    ///     * `weighted_capacity` - (Required) The weight given to the associated instance type. 
    /// 
    /// &lt;a id="availability-zone"&gt;&lt;/a&gt;
    /// ## Availability Zones (Clone, New strategies)
    /// 
    /// * `availability_zones` - (Required in Clone) List of AZs and their subnet Ids. See example above for usage.
    /// 
    /// &lt;a id="configurations"&gt;&lt;/a&gt;
    /// ## Configurations (Clone, New strategies)
    /// 
    /// * `configurations_file` - (Optional) Describes path to S3 file containing description of configurations. [More Information](https://api.spotinst.com/elastigroup-for-aws/services-integrations/elastic-mapreduce/import-an-emr-cluster/advanced/)
    ///     * `bucket` - (Required) S3 Bucket name for configurations.
    ///     * `key`- (Required) S3 key for configurations.
    ///     
    /// &lt;a id="steps"&gt;&lt;/a&gt;
    /// ## Steps (Clone, New strategies)
    /// 
    /// * `steps_file` - (Optional) Steps from S3.
    ///     * `bucket` - (Required) S3 Bucket name for steps.
    ///     * `key`- (Required) S3 key for steps.
    ///     
    /// &lt;a id="boostrap-actions"&gt;&lt;/a&gt;
    /// ## Bootstrap Actions (Clone, New strategies)   
    /// 
    /// * `bootstrap_actions_file` - (Optional) Describes path to S3 file containing description of bootstrap actions. [More Information](https://api.spotinst.com/elastigroup-for-aws/services-integrations/elastic-mapreduce/import-an-emr-cluster/advanced/)
    ///     * `bucket` - (Required) S3 Bucket name for bootstrap actions.
    ///     * `key`- (Required) S3 key for bootstrap actions.
    /// 
    /// &lt;a id="scaling-policy"&gt;&lt;/a&gt;
    /// ## Scaling Policies
    /// 
    /// Possible task group scaling policies (Wrap, Clone, and New strategies):
    /// * `task_scaling_up_policy`
    /// * `task_scaling_down_policy`
    /// 
    /// Possible core group scaling policies (Clone, New strategies):
    /// * `core_scaling_up_policy`
    /// * `core_scaling_down_policy`
    /// 
    /// Each `*_scaling_*_policy` supports the following:
    /// 
    /// * `policy_name` - (Required) The name of the policy.
    /// * `metric_name` - (Required) The name of the metric, with or without spaces.
    /// * `statistic` - (Required) The metric statistics to return. For information about specific statistics go to [Statistics](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/index.html?CHAP_TerminologyandKeyConcepts.html#Statistic) in the Amazon CloudWatch Developer Guide.
    /// * `unit` - (Required) The unit for the metric.
    /// * `threshold` - (Required) The value against which the specified statistic is compared.
    /// * `adjustment` - (Optional) The number of instances to add/remove to/from the target capacity when scale is needed.
    /// * `min_target_capacity` - (Optional) Min target capacity for scale up.
    /// * `max_target_capacity` - (Optional) Max target capacity for scale down.
    /// * `namespace` - (Required) The namespace for the metric.
    /// * `operator` - (Required) The operator to use. Allowed values are : 'gt', 'gte', 'lt' , 'lte'.
    /// * `evaluation_periods` - (Required) The number of periods over which data is compared to the specified threshold.
    /// * `period` - (Required) The granularity, in seconds, of the returned datapoints. Period must be at least 60 seconds and must be a multiple of 60.
    /// * `cooldown` - (Required) The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
    /// * `dimensions` - (Optional) A mapping of dimensions describing qualities of the metric.
    /// * `minimum` - (Optional) The minimum to set when scale is needed.
    /// * `maximum` - (Optional) The maximum to set when scale is needed.
    /// * `target` - (Optional) The number of instances to set when scale is needed.
    /// * `action_type` - (Required) The type of action to perform. Allowed values are : 'adjustment', 'setMinTarget', 'setMaxTarget', 'updateCapacity', 'percentageAdjustment'
    /// 
    /// &lt;a id="scheduled-task"&gt;&lt;/a&gt;
    /// ## Scheduled Tasks
    /// 
    /// * `scheduled_task` - (Optional) An array of scheduled tasks.
    /// * `is_enabled` - (Optional) Enable/Disable the specified scheduling task.
    /// * `task_type` - (Required) The type of task to be scheduled. Valid values: `setCapacity`.
    /// * `instance_group_type` - (Required) Select the EMR instance groups to execute the scheduled task on. Valid values: `task`.
    /// * `cron` - (Required) A cron expression representing the schedule for the task.
    /// * `desired_capacity` - (Optional) New desired capacity for the elastigroup.
    /// * `min_capacity` - (Optional) New min capacity for the elastigroup.
    /// * `max_capacity` - (Optional) New max capacity for the elastigroup.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-spotinst/blob/master/website/docs/r/mrscaler_aws.html.markdown.
    /// </summary>
    public partial class MrScalar : Pulumi.CustomResource
    {
        [Output("additionalInfo")]
        public Output<string?> AdditionalInfo { get; private set; } = null!;

        [Output("additionalPrimarySecurityGroups")]
        public Output<ImmutableArray<string>> AdditionalPrimarySecurityGroups { get; private set; } = null!;

        [Output("additionalReplicaSecurityGroups")]
        public Output<ImmutableArray<string>> AdditionalReplicaSecurityGroups { get; private set; } = null!;

        [Output("applications")]
        public Output<ImmutableArray<Outputs.MrScalarApplications>> Applications { get; private set; } = null!;

        [Output("availabilityZones")]
        public Output<ImmutableArray<string>> AvailabilityZones { get; private set; } = null!;

        [Output("bootstrapActionsFiles")]
        public Output<ImmutableArray<Outputs.MrScalarBootstrapActionsFiles>> BootstrapActionsFiles { get; private set; } = null!;

        /// <summary>
        /// The MrScaler cluster id.
        /// </summary>
        [Output("clusterId")]
        public Output<string?> ClusterId { get; private set; } = null!;

        [Output("configurationsFiles")]
        public Output<ImmutableArray<Outputs.MrScalarConfigurationsFiles>> ConfigurationsFiles { get; private set; } = null!;

        [Output("coreDesiredCapacity")]
        public Output<int?> CoreDesiredCapacity { get; private set; } = null!;

        [Output("coreEbsBlockDevices")]
        public Output<ImmutableArray<Outputs.MrScalarCoreEbsBlockDevices>> CoreEbsBlockDevices { get; private set; } = null!;

        [Output("coreEbsOptimized")]
        public Output<bool?> CoreEbsOptimized { get; private set; } = null!;

        [Output("coreInstanceTypes")]
        public Output<ImmutableArray<string>> CoreInstanceTypes { get; private set; } = null!;

        [Output("coreLifecycle")]
        public Output<string?> CoreLifecycle { get; private set; } = null!;

        [Output("coreMaxSize")]
        public Output<int?> CoreMaxSize { get; private set; } = null!;

        [Output("coreMinSize")]
        public Output<int?> CoreMinSize { get; private set; } = null!;

        [Output("coreScalingDownPolicies")]
        public Output<ImmutableArray<Outputs.MrScalarCoreScalingDownPolicies>> CoreScalingDownPolicies { get; private set; } = null!;

        [Output("coreScalingUpPolicies")]
        public Output<ImmutableArray<Outputs.MrScalarCoreScalingUpPolicies>> CoreScalingUpPolicies { get; private set; } = null!;

        [Output("customAmiId")]
        public Output<string?> CustomAmiId { get; private set; } = null!;

        /// <summary>
        /// The MrScaler description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("ebsRootVolumeSize")]
        public Output<int?> EbsRootVolumeSize { get; private set; } = null!;

        [Output("ec2KeyName")]
        public Output<string?> Ec2KeyName { get; private set; } = null!;

        [Output("exposeClusterId")]
        public Output<bool?> ExposeClusterId { get; private set; } = null!;

        [Output("instanceWeights")]
        public Output<ImmutableArray<Outputs.MrScalarInstanceWeights>> InstanceWeights { get; private set; } = null!;

        [Output("jobFlowRole")]
        public Output<string?> JobFlowRole { get; private set; } = null!;

        [Output("keepJobFlowAlive")]
        public Output<bool?> KeepJobFlowAlive { get; private set; } = null!;

        [Output("logUri")]
        public Output<string?> LogUri { get; private set; } = null!;

        [Output("managedPrimarySecurityGroup")]
        public Output<string?> ManagedPrimarySecurityGroup { get; private set; } = null!;

        [Output("managedReplicaSecurityGroup")]
        public Output<string?> ManagedReplicaSecurityGroup { get; private set; } = null!;

        [Output("masterEbsBlockDevices")]
        public Output<ImmutableArray<Outputs.MrScalarMasterEbsBlockDevices>> MasterEbsBlockDevices { get; private set; } = null!;

        [Output("masterEbsOptimized")]
        public Output<bool?> MasterEbsOptimized { get; private set; } = null!;

        [Output("masterInstanceTypes")]
        public Output<ImmutableArray<string>> MasterInstanceTypes { get; private set; } = null!;

        [Output("masterLifecycle")]
        public Output<string?> MasterLifecycle { get; private set; } = null!;

        /// <summary>
        /// The MrScaler name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("outputClusterId")]
        public Output<string> OutputClusterId { get; private set; } = null!;

        [Output("provisioningTimeout")]
        public Output<Outputs.MrScalarProvisioningTimeout?> ProvisioningTimeout { get; private set; } = null!;

        /// <summary>
        /// The MrScaler region.
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        [Output("releaseLabel")]
        public Output<string?> ReleaseLabel { get; private set; } = null!;

        [Output("repoUpgradeOnBoot")]
        public Output<string?> RepoUpgradeOnBoot { get; private set; } = null!;

        [Output("retries")]
        public Output<int?> Retries { get; private set; } = null!;

        [Output("scheduledTasks")]
        public Output<ImmutableArray<Outputs.MrScalarScheduledTasks>> ScheduledTasks { get; private set; } = null!;

        [Output("securityConfig")]
        public Output<string?> SecurityConfig { get; private set; } = null!;

        [Output("serviceAccessSecurityGroup")]
        public Output<string?> ServiceAccessSecurityGroup { get; private set; } = null!;

        [Output("serviceRole")]
        public Output<string?> ServiceRole { get; private set; } = null!;

        [Output("stepsFiles")]
        public Output<ImmutableArray<Outputs.MrScalarStepsFiles>> StepsFiles { get; private set; } = null!;

        /// <summary>
        /// The MrScaler strategy. Allowed values are `new` `clone` and `wrap`.
        /// </summary>
        [Output("strategy")]
        public Output<string> Strategy { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.MrScalarTags>> Tags { get; private set; } = null!;

        [Output("taskDesiredCapacity")]
        public Output<int?> TaskDesiredCapacity { get; private set; } = null!;

        [Output("taskEbsBlockDevices")]
        public Output<ImmutableArray<Outputs.MrScalarTaskEbsBlockDevices>> TaskEbsBlockDevices { get; private set; } = null!;

        [Output("taskEbsOptimized")]
        public Output<bool?> TaskEbsOptimized { get; private set; } = null!;

        [Output("taskInstanceTypes")]
        public Output<ImmutableArray<string>> TaskInstanceTypes { get; private set; } = null!;

        [Output("taskLifecycle")]
        public Output<string?> TaskLifecycle { get; private set; } = null!;

        [Output("taskMaxSize")]
        public Output<int?> TaskMaxSize { get; private set; } = null!;

        [Output("taskMinSize")]
        public Output<int?> TaskMinSize { get; private set; } = null!;

        [Output("taskScalingDownPolicies")]
        public Output<ImmutableArray<Outputs.MrScalarTaskScalingDownPolicies>> TaskScalingDownPolicies { get; private set; } = null!;

        [Output("taskScalingUpPolicies")]
        public Output<ImmutableArray<Outputs.MrScalarTaskScalingUpPolicies>> TaskScalingUpPolicies { get; private set; } = null!;

        [Output("terminationProtected")]
        public Output<bool?> TerminationProtected { get; private set; } = null!;

        [Output("visibleToAllUsers")]
        public Output<bool?> VisibleToAllUsers { get; private set; } = null!;


        /// <summary>
        /// Create a MrScalar resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MrScalar(string name, MrScalarArgs args, CustomResourceOptions? options = null)
            : base("spotinst:aws/mrScalar:MrScalar", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private MrScalar(string name, Input<string> id, MrScalarState? state = null, CustomResourceOptions? options = null)
            : base("spotinst:aws/mrScalar:MrScalar", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MrScalar resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MrScalar Get(string name, Input<string> id, MrScalarState? state = null, CustomResourceOptions? options = null)
        {
            return new MrScalar(name, id, state, options);
        }
    }

    public sealed class MrScalarArgs : Pulumi.ResourceArgs
    {
        [Input("additionalInfo")]
        public Input<string>? AdditionalInfo { get; set; }

        [Input("additionalPrimarySecurityGroups")]
        private InputList<string>? _additionalPrimarySecurityGroups;
        public InputList<string> AdditionalPrimarySecurityGroups
        {
            get => _additionalPrimarySecurityGroups ?? (_additionalPrimarySecurityGroups = new InputList<string>());
            set => _additionalPrimarySecurityGroups = value;
        }

        [Input("additionalReplicaSecurityGroups")]
        private InputList<string>? _additionalReplicaSecurityGroups;
        public InputList<string> AdditionalReplicaSecurityGroups
        {
            get => _additionalReplicaSecurityGroups ?? (_additionalReplicaSecurityGroups = new InputList<string>());
            set => _additionalReplicaSecurityGroups = value;
        }

        [Input("applications")]
        private InputList<Inputs.MrScalarApplicationsArgs>? _applications;
        public InputList<Inputs.MrScalarApplicationsArgs> Applications
        {
            get => _applications ?? (_applications = new InputList<Inputs.MrScalarApplicationsArgs>());
            set => _applications = value;
        }

        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("bootstrapActionsFiles")]
        private InputList<Inputs.MrScalarBootstrapActionsFilesArgs>? _bootstrapActionsFiles;
        public InputList<Inputs.MrScalarBootstrapActionsFilesArgs> BootstrapActionsFiles
        {
            get => _bootstrapActionsFiles ?? (_bootstrapActionsFiles = new InputList<Inputs.MrScalarBootstrapActionsFilesArgs>());
            set => _bootstrapActionsFiles = value;
        }

        /// <summary>
        /// The MrScaler cluster id.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("configurationsFiles")]
        private InputList<Inputs.MrScalarConfigurationsFilesArgs>? _configurationsFiles;
        public InputList<Inputs.MrScalarConfigurationsFilesArgs> ConfigurationsFiles
        {
            get => _configurationsFiles ?? (_configurationsFiles = new InputList<Inputs.MrScalarConfigurationsFilesArgs>());
            set => _configurationsFiles = value;
        }

        [Input("coreDesiredCapacity")]
        public Input<int>? CoreDesiredCapacity { get; set; }

        [Input("coreEbsBlockDevices")]
        private InputList<Inputs.MrScalarCoreEbsBlockDevicesArgs>? _coreEbsBlockDevices;
        public InputList<Inputs.MrScalarCoreEbsBlockDevicesArgs> CoreEbsBlockDevices
        {
            get => _coreEbsBlockDevices ?? (_coreEbsBlockDevices = new InputList<Inputs.MrScalarCoreEbsBlockDevicesArgs>());
            set => _coreEbsBlockDevices = value;
        }

        [Input("coreEbsOptimized")]
        public Input<bool>? CoreEbsOptimized { get; set; }

        [Input("coreInstanceTypes")]
        private InputList<string>? _coreInstanceTypes;
        public InputList<string> CoreInstanceTypes
        {
            get => _coreInstanceTypes ?? (_coreInstanceTypes = new InputList<string>());
            set => _coreInstanceTypes = value;
        }

        [Input("coreLifecycle")]
        public Input<string>? CoreLifecycle { get; set; }

        [Input("coreMaxSize")]
        public Input<int>? CoreMaxSize { get; set; }

        [Input("coreMinSize")]
        public Input<int>? CoreMinSize { get; set; }

        [Input("coreScalingDownPolicies")]
        private InputList<Inputs.MrScalarCoreScalingDownPoliciesArgs>? _coreScalingDownPolicies;
        public InputList<Inputs.MrScalarCoreScalingDownPoliciesArgs> CoreScalingDownPolicies
        {
            get => _coreScalingDownPolicies ?? (_coreScalingDownPolicies = new InputList<Inputs.MrScalarCoreScalingDownPoliciesArgs>());
            set => _coreScalingDownPolicies = value;
        }

        [Input("coreScalingUpPolicies")]
        private InputList<Inputs.MrScalarCoreScalingUpPoliciesArgs>? _coreScalingUpPolicies;
        public InputList<Inputs.MrScalarCoreScalingUpPoliciesArgs> CoreScalingUpPolicies
        {
            get => _coreScalingUpPolicies ?? (_coreScalingUpPolicies = new InputList<Inputs.MrScalarCoreScalingUpPoliciesArgs>());
            set => _coreScalingUpPolicies = value;
        }

        [Input("customAmiId")]
        public Input<string>? CustomAmiId { get; set; }

        /// <summary>
        /// The MrScaler description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("ebsRootVolumeSize")]
        public Input<int>? EbsRootVolumeSize { get; set; }

        [Input("ec2KeyName")]
        public Input<string>? Ec2KeyName { get; set; }

        [Input("exposeClusterId")]
        public Input<bool>? ExposeClusterId { get; set; }

        [Input("instanceWeights")]
        private InputList<Inputs.MrScalarInstanceWeightsArgs>? _instanceWeights;
        public InputList<Inputs.MrScalarInstanceWeightsArgs> InstanceWeights
        {
            get => _instanceWeights ?? (_instanceWeights = new InputList<Inputs.MrScalarInstanceWeightsArgs>());
            set => _instanceWeights = value;
        }

        [Input("jobFlowRole")]
        public Input<string>? JobFlowRole { get; set; }

        [Input("keepJobFlowAlive")]
        public Input<bool>? KeepJobFlowAlive { get; set; }

        [Input("logUri")]
        public Input<string>? LogUri { get; set; }

        [Input("managedPrimarySecurityGroup")]
        public Input<string>? ManagedPrimarySecurityGroup { get; set; }

        [Input("managedReplicaSecurityGroup")]
        public Input<string>? ManagedReplicaSecurityGroup { get; set; }

        [Input("masterEbsBlockDevices")]
        private InputList<Inputs.MrScalarMasterEbsBlockDevicesArgs>? _masterEbsBlockDevices;
        public InputList<Inputs.MrScalarMasterEbsBlockDevicesArgs> MasterEbsBlockDevices
        {
            get => _masterEbsBlockDevices ?? (_masterEbsBlockDevices = new InputList<Inputs.MrScalarMasterEbsBlockDevicesArgs>());
            set => _masterEbsBlockDevices = value;
        }

        [Input("masterEbsOptimized")]
        public Input<bool>? MasterEbsOptimized { get; set; }

        [Input("masterInstanceTypes")]
        private InputList<string>? _masterInstanceTypes;
        public InputList<string> MasterInstanceTypes
        {
            get => _masterInstanceTypes ?? (_masterInstanceTypes = new InputList<string>());
            set => _masterInstanceTypes = value;
        }

        [Input("masterLifecycle")]
        public Input<string>? MasterLifecycle { get; set; }

        /// <summary>
        /// The MrScaler name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("provisioningTimeout")]
        public Input<Inputs.MrScalarProvisioningTimeoutArgs>? ProvisioningTimeout { get; set; }

        /// <summary>
        /// The MrScaler region.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("releaseLabel")]
        public Input<string>? ReleaseLabel { get; set; }

        [Input("repoUpgradeOnBoot")]
        public Input<string>? RepoUpgradeOnBoot { get; set; }

        [Input("retries")]
        public Input<int>? Retries { get; set; }

        [Input("scheduledTasks")]
        private InputList<Inputs.MrScalarScheduledTasksArgs>? _scheduledTasks;
        public InputList<Inputs.MrScalarScheduledTasksArgs> ScheduledTasks
        {
            get => _scheduledTasks ?? (_scheduledTasks = new InputList<Inputs.MrScalarScheduledTasksArgs>());
            set => _scheduledTasks = value;
        }

        [Input("securityConfig")]
        public Input<string>? SecurityConfig { get; set; }

        [Input("serviceAccessSecurityGroup")]
        public Input<string>? ServiceAccessSecurityGroup { get; set; }

        [Input("serviceRole")]
        public Input<string>? ServiceRole { get; set; }

        [Input("stepsFiles")]
        private InputList<Inputs.MrScalarStepsFilesArgs>? _stepsFiles;
        public InputList<Inputs.MrScalarStepsFilesArgs> StepsFiles
        {
            get => _stepsFiles ?? (_stepsFiles = new InputList<Inputs.MrScalarStepsFilesArgs>());
            set => _stepsFiles = value;
        }

        /// <summary>
        /// The MrScaler strategy. Allowed values are `new` `clone` and `wrap`.
        /// </summary>
        [Input("strategy", required: true)]
        public Input<string> Strategy { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.MrScalarTagsArgs>? _tags;
        public InputList<Inputs.MrScalarTagsArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.MrScalarTagsArgs>());
            set => _tags = value;
        }

        [Input("taskDesiredCapacity")]
        public Input<int>? TaskDesiredCapacity { get; set; }

        [Input("taskEbsBlockDevices")]
        private InputList<Inputs.MrScalarTaskEbsBlockDevicesArgs>? _taskEbsBlockDevices;
        public InputList<Inputs.MrScalarTaskEbsBlockDevicesArgs> TaskEbsBlockDevices
        {
            get => _taskEbsBlockDevices ?? (_taskEbsBlockDevices = new InputList<Inputs.MrScalarTaskEbsBlockDevicesArgs>());
            set => _taskEbsBlockDevices = value;
        }

        [Input("taskEbsOptimized")]
        public Input<bool>? TaskEbsOptimized { get; set; }

        [Input("taskInstanceTypes")]
        private InputList<string>? _taskInstanceTypes;
        public InputList<string> TaskInstanceTypes
        {
            get => _taskInstanceTypes ?? (_taskInstanceTypes = new InputList<string>());
            set => _taskInstanceTypes = value;
        }

        [Input("taskLifecycle")]
        public Input<string>? TaskLifecycle { get; set; }

        [Input("taskMaxSize")]
        public Input<int>? TaskMaxSize { get; set; }

        [Input("taskMinSize")]
        public Input<int>? TaskMinSize { get; set; }

        [Input("taskScalingDownPolicies")]
        private InputList<Inputs.MrScalarTaskScalingDownPoliciesArgs>? _taskScalingDownPolicies;
        public InputList<Inputs.MrScalarTaskScalingDownPoliciesArgs> TaskScalingDownPolicies
        {
            get => _taskScalingDownPolicies ?? (_taskScalingDownPolicies = new InputList<Inputs.MrScalarTaskScalingDownPoliciesArgs>());
            set => _taskScalingDownPolicies = value;
        }

        [Input("taskScalingUpPolicies")]
        private InputList<Inputs.MrScalarTaskScalingUpPoliciesArgs>? _taskScalingUpPolicies;
        public InputList<Inputs.MrScalarTaskScalingUpPoliciesArgs> TaskScalingUpPolicies
        {
            get => _taskScalingUpPolicies ?? (_taskScalingUpPolicies = new InputList<Inputs.MrScalarTaskScalingUpPoliciesArgs>());
            set => _taskScalingUpPolicies = value;
        }

        [Input("terminationProtected")]
        public Input<bool>? TerminationProtected { get; set; }

        [Input("visibleToAllUsers")]
        public Input<bool>? VisibleToAllUsers { get; set; }

        public MrScalarArgs()
        {
        }
    }

    public sealed class MrScalarState : Pulumi.ResourceArgs
    {
        [Input("additionalInfo")]
        public Input<string>? AdditionalInfo { get; set; }

        [Input("additionalPrimarySecurityGroups")]
        private InputList<string>? _additionalPrimarySecurityGroups;
        public InputList<string> AdditionalPrimarySecurityGroups
        {
            get => _additionalPrimarySecurityGroups ?? (_additionalPrimarySecurityGroups = new InputList<string>());
            set => _additionalPrimarySecurityGroups = value;
        }

        [Input("additionalReplicaSecurityGroups")]
        private InputList<string>? _additionalReplicaSecurityGroups;
        public InputList<string> AdditionalReplicaSecurityGroups
        {
            get => _additionalReplicaSecurityGroups ?? (_additionalReplicaSecurityGroups = new InputList<string>());
            set => _additionalReplicaSecurityGroups = value;
        }

        [Input("applications")]
        private InputList<Inputs.MrScalarApplicationsGetArgs>? _applications;
        public InputList<Inputs.MrScalarApplicationsGetArgs> Applications
        {
            get => _applications ?? (_applications = new InputList<Inputs.MrScalarApplicationsGetArgs>());
            set => _applications = value;
        }

        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("bootstrapActionsFiles")]
        private InputList<Inputs.MrScalarBootstrapActionsFilesGetArgs>? _bootstrapActionsFiles;
        public InputList<Inputs.MrScalarBootstrapActionsFilesGetArgs> BootstrapActionsFiles
        {
            get => _bootstrapActionsFiles ?? (_bootstrapActionsFiles = new InputList<Inputs.MrScalarBootstrapActionsFilesGetArgs>());
            set => _bootstrapActionsFiles = value;
        }

        /// <summary>
        /// The MrScaler cluster id.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("configurationsFiles")]
        private InputList<Inputs.MrScalarConfigurationsFilesGetArgs>? _configurationsFiles;
        public InputList<Inputs.MrScalarConfigurationsFilesGetArgs> ConfigurationsFiles
        {
            get => _configurationsFiles ?? (_configurationsFiles = new InputList<Inputs.MrScalarConfigurationsFilesGetArgs>());
            set => _configurationsFiles = value;
        }

        [Input("coreDesiredCapacity")]
        public Input<int>? CoreDesiredCapacity { get; set; }

        [Input("coreEbsBlockDevices")]
        private InputList<Inputs.MrScalarCoreEbsBlockDevicesGetArgs>? _coreEbsBlockDevices;
        public InputList<Inputs.MrScalarCoreEbsBlockDevicesGetArgs> CoreEbsBlockDevices
        {
            get => _coreEbsBlockDevices ?? (_coreEbsBlockDevices = new InputList<Inputs.MrScalarCoreEbsBlockDevicesGetArgs>());
            set => _coreEbsBlockDevices = value;
        }

        [Input("coreEbsOptimized")]
        public Input<bool>? CoreEbsOptimized { get; set; }

        [Input("coreInstanceTypes")]
        private InputList<string>? _coreInstanceTypes;
        public InputList<string> CoreInstanceTypes
        {
            get => _coreInstanceTypes ?? (_coreInstanceTypes = new InputList<string>());
            set => _coreInstanceTypes = value;
        }

        [Input("coreLifecycle")]
        public Input<string>? CoreLifecycle { get; set; }

        [Input("coreMaxSize")]
        public Input<int>? CoreMaxSize { get; set; }

        [Input("coreMinSize")]
        public Input<int>? CoreMinSize { get; set; }

        [Input("coreScalingDownPolicies")]
        private InputList<Inputs.MrScalarCoreScalingDownPoliciesGetArgs>? _coreScalingDownPolicies;
        public InputList<Inputs.MrScalarCoreScalingDownPoliciesGetArgs> CoreScalingDownPolicies
        {
            get => _coreScalingDownPolicies ?? (_coreScalingDownPolicies = new InputList<Inputs.MrScalarCoreScalingDownPoliciesGetArgs>());
            set => _coreScalingDownPolicies = value;
        }

        [Input("coreScalingUpPolicies")]
        private InputList<Inputs.MrScalarCoreScalingUpPoliciesGetArgs>? _coreScalingUpPolicies;
        public InputList<Inputs.MrScalarCoreScalingUpPoliciesGetArgs> CoreScalingUpPolicies
        {
            get => _coreScalingUpPolicies ?? (_coreScalingUpPolicies = new InputList<Inputs.MrScalarCoreScalingUpPoliciesGetArgs>());
            set => _coreScalingUpPolicies = value;
        }

        [Input("customAmiId")]
        public Input<string>? CustomAmiId { get; set; }

        /// <summary>
        /// The MrScaler description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("ebsRootVolumeSize")]
        public Input<int>? EbsRootVolumeSize { get; set; }

        [Input("ec2KeyName")]
        public Input<string>? Ec2KeyName { get; set; }

        [Input("exposeClusterId")]
        public Input<bool>? ExposeClusterId { get; set; }

        [Input("instanceWeights")]
        private InputList<Inputs.MrScalarInstanceWeightsGetArgs>? _instanceWeights;
        public InputList<Inputs.MrScalarInstanceWeightsGetArgs> InstanceWeights
        {
            get => _instanceWeights ?? (_instanceWeights = new InputList<Inputs.MrScalarInstanceWeightsGetArgs>());
            set => _instanceWeights = value;
        }

        [Input("jobFlowRole")]
        public Input<string>? JobFlowRole { get; set; }

        [Input("keepJobFlowAlive")]
        public Input<bool>? KeepJobFlowAlive { get; set; }

        [Input("logUri")]
        public Input<string>? LogUri { get; set; }

        [Input("managedPrimarySecurityGroup")]
        public Input<string>? ManagedPrimarySecurityGroup { get; set; }

        [Input("managedReplicaSecurityGroup")]
        public Input<string>? ManagedReplicaSecurityGroup { get; set; }

        [Input("masterEbsBlockDevices")]
        private InputList<Inputs.MrScalarMasterEbsBlockDevicesGetArgs>? _masterEbsBlockDevices;
        public InputList<Inputs.MrScalarMasterEbsBlockDevicesGetArgs> MasterEbsBlockDevices
        {
            get => _masterEbsBlockDevices ?? (_masterEbsBlockDevices = new InputList<Inputs.MrScalarMasterEbsBlockDevicesGetArgs>());
            set => _masterEbsBlockDevices = value;
        }

        [Input("masterEbsOptimized")]
        public Input<bool>? MasterEbsOptimized { get; set; }

        [Input("masterInstanceTypes")]
        private InputList<string>? _masterInstanceTypes;
        public InputList<string> MasterInstanceTypes
        {
            get => _masterInstanceTypes ?? (_masterInstanceTypes = new InputList<string>());
            set => _masterInstanceTypes = value;
        }

        [Input("masterLifecycle")]
        public Input<string>? MasterLifecycle { get; set; }

        /// <summary>
        /// The MrScaler name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("outputClusterId")]
        public Input<string>? OutputClusterId { get; set; }

        [Input("provisioningTimeout")]
        public Input<Inputs.MrScalarProvisioningTimeoutGetArgs>? ProvisioningTimeout { get; set; }

        /// <summary>
        /// The MrScaler region.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("releaseLabel")]
        public Input<string>? ReleaseLabel { get; set; }

        [Input("repoUpgradeOnBoot")]
        public Input<string>? RepoUpgradeOnBoot { get; set; }

        [Input("retries")]
        public Input<int>? Retries { get; set; }

        [Input("scheduledTasks")]
        private InputList<Inputs.MrScalarScheduledTasksGetArgs>? _scheduledTasks;
        public InputList<Inputs.MrScalarScheduledTasksGetArgs> ScheduledTasks
        {
            get => _scheduledTasks ?? (_scheduledTasks = new InputList<Inputs.MrScalarScheduledTasksGetArgs>());
            set => _scheduledTasks = value;
        }

        [Input("securityConfig")]
        public Input<string>? SecurityConfig { get; set; }

        [Input("serviceAccessSecurityGroup")]
        public Input<string>? ServiceAccessSecurityGroup { get; set; }

        [Input("serviceRole")]
        public Input<string>? ServiceRole { get; set; }

        [Input("stepsFiles")]
        private InputList<Inputs.MrScalarStepsFilesGetArgs>? _stepsFiles;
        public InputList<Inputs.MrScalarStepsFilesGetArgs> StepsFiles
        {
            get => _stepsFiles ?? (_stepsFiles = new InputList<Inputs.MrScalarStepsFilesGetArgs>());
            set => _stepsFiles = value;
        }

        /// <summary>
        /// The MrScaler strategy. Allowed values are `new` `clone` and `wrap`.
        /// </summary>
        [Input("strategy")]
        public Input<string>? Strategy { get; set; }

        [Input("tags")]
        private InputList<Inputs.MrScalarTagsGetArgs>? _tags;
        public InputList<Inputs.MrScalarTagsGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.MrScalarTagsGetArgs>());
            set => _tags = value;
        }

        [Input("taskDesiredCapacity")]
        public Input<int>? TaskDesiredCapacity { get; set; }

        [Input("taskEbsBlockDevices")]
        private InputList<Inputs.MrScalarTaskEbsBlockDevicesGetArgs>? _taskEbsBlockDevices;
        public InputList<Inputs.MrScalarTaskEbsBlockDevicesGetArgs> TaskEbsBlockDevices
        {
            get => _taskEbsBlockDevices ?? (_taskEbsBlockDevices = new InputList<Inputs.MrScalarTaskEbsBlockDevicesGetArgs>());
            set => _taskEbsBlockDevices = value;
        }

        [Input("taskEbsOptimized")]
        public Input<bool>? TaskEbsOptimized { get; set; }

        [Input("taskInstanceTypes")]
        private InputList<string>? _taskInstanceTypes;
        public InputList<string> TaskInstanceTypes
        {
            get => _taskInstanceTypes ?? (_taskInstanceTypes = new InputList<string>());
            set => _taskInstanceTypes = value;
        }

        [Input("taskLifecycle")]
        public Input<string>? TaskLifecycle { get; set; }

        [Input("taskMaxSize")]
        public Input<int>? TaskMaxSize { get; set; }

        [Input("taskMinSize")]
        public Input<int>? TaskMinSize { get; set; }

        [Input("taskScalingDownPolicies")]
        private InputList<Inputs.MrScalarTaskScalingDownPoliciesGetArgs>? _taskScalingDownPolicies;
        public InputList<Inputs.MrScalarTaskScalingDownPoliciesGetArgs> TaskScalingDownPolicies
        {
            get => _taskScalingDownPolicies ?? (_taskScalingDownPolicies = new InputList<Inputs.MrScalarTaskScalingDownPoliciesGetArgs>());
            set => _taskScalingDownPolicies = value;
        }

        [Input("taskScalingUpPolicies")]
        private InputList<Inputs.MrScalarTaskScalingUpPoliciesGetArgs>? _taskScalingUpPolicies;
        public InputList<Inputs.MrScalarTaskScalingUpPoliciesGetArgs> TaskScalingUpPolicies
        {
            get => _taskScalingUpPolicies ?? (_taskScalingUpPolicies = new InputList<Inputs.MrScalarTaskScalingUpPoliciesGetArgs>());
            set => _taskScalingUpPolicies = value;
        }

        [Input("terminationProtected")]
        public Input<bool>? TerminationProtected { get; set; }

        [Input("visibleToAllUsers")]
        public Input<bool>? VisibleToAllUsers { get; set; }

        public MrScalarState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class MrScalarApplicationsArgs : Pulumi.ResourceArgs
    {
        [Input("args")]
        private InputList<string>? _args;
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        /// <summary>
        /// The MrScaler name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("version")]
        public Input<string>? Version { get; set; }

        public MrScalarApplicationsArgs()
        {
        }
    }

    public sealed class MrScalarApplicationsGetArgs : Pulumi.ResourceArgs
    {
        [Input("args")]
        private InputList<string>? _args;
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        /// <summary>
        /// The MrScaler name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("version")]
        public Input<string>? Version { get; set; }

        public MrScalarApplicationsGetArgs()
        {
        }
    }

    public sealed class MrScalarBootstrapActionsFilesArgs : Pulumi.ResourceArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        public MrScalarBootstrapActionsFilesArgs()
        {
        }
    }

    public sealed class MrScalarBootstrapActionsFilesGetArgs : Pulumi.ResourceArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        public MrScalarBootstrapActionsFilesGetArgs()
        {
        }
    }

    public sealed class MrScalarConfigurationsFilesArgs : Pulumi.ResourceArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        public MrScalarConfigurationsFilesArgs()
        {
        }
    }

    public sealed class MrScalarConfigurationsFilesGetArgs : Pulumi.ResourceArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        public MrScalarConfigurationsFilesGetArgs()
        {
        }
    }

    public sealed class MrScalarCoreEbsBlockDevicesArgs : Pulumi.ResourceArgs
    {
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("sizeInGb", required: true)]
        public Input<int> SizeInGb { get; set; } = null!;

        [Input("volumeType", required: true)]
        public Input<string> VolumeType { get; set; } = null!;

        [Input("volumesPerInstance")]
        public Input<int>? VolumesPerInstance { get; set; }

        public MrScalarCoreEbsBlockDevicesArgs()
        {
        }
    }

    public sealed class MrScalarCoreEbsBlockDevicesGetArgs : Pulumi.ResourceArgs
    {
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("sizeInGb", required: true)]
        public Input<int> SizeInGb { get; set; } = null!;

        [Input("volumeType", required: true)]
        public Input<string> VolumeType { get; set; } = null!;

        [Input("volumesPerInstance")]
        public Input<int>? VolumesPerInstance { get; set; }

        public MrScalarCoreEbsBlockDevicesGetArgs()
        {
        }
    }

    public sealed class MrScalarCoreScalingDownPoliciesArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputMap<object>? _dimensions;
        public InputMap<object> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputMap<object>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit", required: true)]
        public Input<string> Unit { get; set; } = null!;

        public MrScalarCoreScalingDownPoliciesArgs()
        {
        }
    }

    public sealed class MrScalarCoreScalingDownPoliciesGetArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputMap<object>? _dimensions;
        public InputMap<object> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputMap<object>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit", required: true)]
        public Input<string> Unit { get; set; } = null!;

        public MrScalarCoreScalingDownPoliciesGetArgs()
        {
        }
    }

    public sealed class MrScalarCoreScalingUpPoliciesArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputMap<object>? _dimensions;
        public InputMap<object> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputMap<object>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit", required: true)]
        public Input<string> Unit { get; set; } = null!;

        public MrScalarCoreScalingUpPoliciesArgs()
        {
        }
    }

    public sealed class MrScalarCoreScalingUpPoliciesGetArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputMap<object>? _dimensions;
        public InputMap<object> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputMap<object>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit", required: true)]
        public Input<string> Unit { get; set; } = null!;

        public MrScalarCoreScalingUpPoliciesGetArgs()
        {
        }
    }

    public sealed class MrScalarInstanceWeightsArgs : Pulumi.ResourceArgs
    {
        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        [Input("weightedCapacity", required: true)]
        public Input<int> WeightedCapacity { get; set; } = null!;

        public MrScalarInstanceWeightsArgs()
        {
        }
    }

    public sealed class MrScalarInstanceWeightsGetArgs : Pulumi.ResourceArgs
    {
        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        [Input("weightedCapacity", required: true)]
        public Input<int> WeightedCapacity { get; set; } = null!;

        public MrScalarInstanceWeightsGetArgs()
        {
        }
    }

    public sealed class MrScalarMasterEbsBlockDevicesArgs : Pulumi.ResourceArgs
    {
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("sizeInGb", required: true)]
        public Input<int> SizeInGb { get; set; } = null!;

        [Input("volumeType", required: true)]
        public Input<string> VolumeType { get; set; } = null!;

        [Input("volumesPerInstance")]
        public Input<int>? VolumesPerInstance { get; set; }

        public MrScalarMasterEbsBlockDevicesArgs()
        {
        }
    }

    public sealed class MrScalarMasterEbsBlockDevicesGetArgs : Pulumi.ResourceArgs
    {
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("sizeInGb", required: true)]
        public Input<int> SizeInGb { get; set; } = null!;

        [Input("volumeType", required: true)]
        public Input<string> VolumeType { get; set; } = null!;

        [Input("volumesPerInstance")]
        public Input<int>? VolumesPerInstance { get; set; }

        public MrScalarMasterEbsBlockDevicesGetArgs()
        {
        }
    }

    public sealed class MrScalarProvisioningTimeoutArgs : Pulumi.ResourceArgs
    {
        [Input("timeout", required: true)]
        public Input<int> Timeout { get; set; } = null!;

        [Input("timeoutAction", required: true)]
        public Input<string> TimeoutAction { get; set; } = null!;

        public MrScalarProvisioningTimeoutArgs()
        {
        }
    }

    public sealed class MrScalarProvisioningTimeoutGetArgs : Pulumi.ResourceArgs
    {
        [Input("timeout", required: true)]
        public Input<int> Timeout { get; set; } = null!;

        [Input("timeoutAction", required: true)]
        public Input<string> TimeoutAction { get; set; } = null!;

        public MrScalarProvisioningTimeoutGetArgs()
        {
        }
    }

    public sealed class MrScalarScheduledTasksArgs : Pulumi.ResourceArgs
    {
        [Input("cron", required: true)]
        public Input<string> Cron { get; set; } = null!;

        [Input("desiredCapacity")]
        public Input<string>? DesiredCapacity { get; set; }

        [Input("instanceGroupType", required: true)]
        public Input<string> InstanceGroupType { get; set; } = null!;

        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("maxCapacity")]
        public Input<string>? MaxCapacity { get; set; }

        [Input("minCapacity")]
        public Input<string>? MinCapacity { get; set; }

        [Input("taskType", required: true)]
        public Input<string> TaskType { get; set; } = null!;

        public MrScalarScheduledTasksArgs()
        {
        }
    }

    public sealed class MrScalarScheduledTasksGetArgs : Pulumi.ResourceArgs
    {
        [Input("cron", required: true)]
        public Input<string> Cron { get; set; } = null!;

        [Input("desiredCapacity")]
        public Input<string>? DesiredCapacity { get; set; }

        [Input("instanceGroupType", required: true)]
        public Input<string> InstanceGroupType { get; set; } = null!;

        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("maxCapacity")]
        public Input<string>? MaxCapacity { get; set; }

        [Input("minCapacity")]
        public Input<string>? MinCapacity { get; set; }

        [Input("taskType", required: true)]
        public Input<string> TaskType { get; set; } = null!;

        public MrScalarScheduledTasksGetArgs()
        {
        }
    }

    public sealed class MrScalarStepsFilesArgs : Pulumi.ResourceArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        public MrScalarStepsFilesArgs()
        {
        }
    }

    public sealed class MrScalarStepsFilesGetArgs : Pulumi.ResourceArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        public MrScalarStepsFilesGetArgs()
        {
        }
    }

    public sealed class MrScalarTagsArgs : Pulumi.ResourceArgs
    {
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public MrScalarTagsArgs()
        {
        }
    }

    public sealed class MrScalarTagsGetArgs : Pulumi.ResourceArgs
    {
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public MrScalarTagsGetArgs()
        {
        }
    }

    public sealed class MrScalarTaskEbsBlockDevicesArgs : Pulumi.ResourceArgs
    {
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("sizeInGb", required: true)]
        public Input<int> SizeInGb { get; set; } = null!;

        [Input("volumeType", required: true)]
        public Input<string> VolumeType { get; set; } = null!;

        [Input("volumesPerInstance")]
        public Input<int>? VolumesPerInstance { get; set; }

        public MrScalarTaskEbsBlockDevicesArgs()
        {
        }
    }

    public sealed class MrScalarTaskEbsBlockDevicesGetArgs : Pulumi.ResourceArgs
    {
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("sizeInGb", required: true)]
        public Input<int> SizeInGb { get; set; } = null!;

        [Input("volumeType", required: true)]
        public Input<string> VolumeType { get; set; } = null!;

        [Input("volumesPerInstance")]
        public Input<int>? VolumesPerInstance { get; set; }

        public MrScalarTaskEbsBlockDevicesGetArgs()
        {
        }
    }

    public sealed class MrScalarTaskScalingDownPoliciesArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputMap<object>? _dimensions;
        public InputMap<object> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputMap<object>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit", required: true)]
        public Input<string> Unit { get; set; } = null!;

        public MrScalarTaskScalingDownPoliciesArgs()
        {
        }
    }

    public sealed class MrScalarTaskScalingDownPoliciesGetArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputMap<object>? _dimensions;
        public InputMap<object> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputMap<object>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit", required: true)]
        public Input<string> Unit { get; set; } = null!;

        public MrScalarTaskScalingDownPoliciesGetArgs()
        {
        }
    }

    public sealed class MrScalarTaskScalingUpPoliciesArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputMap<object>? _dimensions;
        public InputMap<object> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputMap<object>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit", required: true)]
        public Input<string> Unit { get; set; } = null!;

        public MrScalarTaskScalingUpPoliciesArgs()
        {
        }
    }

    public sealed class MrScalarTaskScalingUpPoliciesGetArgs : Pulumi.ResourceArgs
    {
        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("adjustment")]
        public Input<string>? Adjustment { get; set; }

        [Input("cooldown")]
        public Input<int>? Cooldown { get; set; }

        [Input("dimensions")]
        private InputMap<object>? _dimensions;
        public InputMap<object> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputMap<object>());
            set => _dimensions = value;
        }

        [Input("evaluationPeriods")]
        public Input<int>? EvaluationPeriods { get; set; }

        [Input("maxTargetCapacity")]
        public Input<string>? MaxTargetCapacity { get; set; }

        [Input("maximum")]
        public Input<string>? Maximum { get; set; }

        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        [Input("minTargetCapacity")]
        public Input<string>? MinTargetCapacity { get; set; }

        [Input("minimum")]
        public Input<string>? Minimum { get; set; }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("operator")]
        public Input<string>? Operator { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("policyName", required: true)]
        public Input<string> PolicyName { get; set; } = null!;

        [Input("statistic")]
        public Input<string>? Statistic { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        [Input("unit", required: true)]
        public Input<string> Unit { get; set; } = null!;

        public MrScalarTaskScalingUpPoliciesGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class MrScalarApplications
    {
        public readonly ImmutableArray<string> Args;
        /// <summary>
        /// The MrScaler name.
        /// </summary>
        public readonly string Name;
        public readonly string? Version;

        [OutputConstructor]
        private MrScalarApplications(
            ImmutableArray<string> args,
            string name,
            string? version)
        {
            Args = args;
            Name = name;
            Version = version;
        }
    }

    [OutputType]
    public sealed class MrScalarBootstrapActionsFiles
    {
        public readonly string Bucket;
        public readonly string Key;

        [OutputConstructor]
        private MrScalarBootstrapActionsFiles(
            string bucket,
            string key)
        {
            Bucket = bucket;
            Key = key;
        }
    }

    [OutputType]
    public sealed class MrScalarConfigurationsFiles
    {
        public readonly string Bucket;
        public readonly string Key;

        [OutputConstructor]
        private MrScalarConfigurationsFiles(
            string bucket,
            string key)
        {
            Bucket = bucket;
            Key = key;
        }
    }

    [OutputType]
    public sealed class MrScalarCoreEbsBlockDevices
    {
        public readonly int? Iops;
        public readonly int SizeInGb;
        public readonly string VolumeType;
        public readonly int? VolumesPerInstance;

        [OutputConstructor]
        private MrScalarCoreEbsBlockDevices(
            int? iops,
            int sizeInGb,
            string volumeType,
            int? volumesPerInstance)
        {
            Iops = iops;
            SizeInGb = sizeInGb;
            VolumeType = volumeType;
            VolumesPerInstance = volumesPerInstance;
        }
    }

    [OutputType]
    public sealed class MrScalarCoreScalingDownPolicies
    {
        public readonly string? ActionType;
        public readonly string? Adjustment;
        public readonly int Cooldown;
        public readonly ImmutableDictionary<string, object>? Dimensions;
        public readonly int EvaluationPeriods;
        public readonly string? MaxTargetCapacity;
        public readonly string? Maximum;
        public readonly string MetricName;
        public readonly string? MinTargetCapacity;
        public readonly string? Minimum;
        public readonly string Namespace;
        public readonly string Operator;
        public readonly int Period;
        public readonly string PolicyName;
        public readonly string Statistic;
        public readonly string? Target;
        public readonly double Threshold;
        public readonly string Unit;

        [OutputConstructor]
        private MrScalarCoreScalingDownPolicies(
            string? actionType,
            string? adjustment,
            int cooldown,
            ImmutableDictionary<string, object>? dimensions,
            int evaluationPeriods,
            string? maxTargetCapacity,
            string? maximum,
            string metricName,
            string? minTargetCapacity,
            string? minimum,
            string @namespace,
            string @operator,
            int period,
            string policyName,
            string statistic,
            string? target,
            double threshold,
            string unit)
        {
            ActionType = actionType;
            Adjustment = adjustment;
            Cooldown = cooldown;
            Dimensions = dimensions;
            EvaluationPeriods = evaluationPeriods;
            MaxTargetCapacity = maxTargetCapacity;
            Maximum = maximum;
            MetricName = metricName;
            MinTargetCapacity = minTargetCapacity;
            Minimum = minimum;
            Namespace = @namespace;
            Operator = @operator;
            Period = period;
            PolicyName = policyName;
            Statistic = statistic;
            Target = target;
            Threshold = threshold;
            Unit = unit;
        }
    }

    [OutputType]
    public sealed class MrScalarCoreScalingUpPolicies
    {
        public readonly string? ActionType;
        public readonly string? Adjustment;
        public readonly int Cooldown;
        public readonly ImmutableDictionary<string, object>? Dimensions;
        public readonly int EvaluationPeriods;
        public readonly string? MaxTargetCapacity;
        public readonly string? Maximum;
        public readonly string MetricName;
        public readonly string? MinTargetCapacity;
        public readonly string? Minimum;
        public readonly string Namespace;
        public readonly string Operator;
        public readonly int Period;
        public readonly string PolicyName;
        public readonly string Statistic;
        public readonly string? Target;
        public readonly double Threshold;
        public readonly string Unit;

        [OutputConstructor]
        private MrScalarCoreScalingUpPolicies(
            string? actionType,
            string? adjustment,
            int cooldown,
            ImmutableDictionary<string, object>? dimensions,
            int evaluationPeriods,
            string? maxTargetCapacity,
            string? maximum,
            string metricName,
            string? minTargetCapacity,
            string? minimum,
            string @namespace,
            string @operator,
            int period,
            string policyName,
            string statistic,
            string? target,
            double threshold,
            string unit)
        {
            ActionType = actionType;
            Adjustment = adjustment;
            Cooldown = cooldown;
            Dimensions = dimensions;
            EvaluationPeriods = evaluationPeriods;
            MaxTargetCapacity = maxTargetCapacity;
            Maximum = maximum;
            MetricName = metricName;
            MinTargetCapacity = minTargetCapacity;
            Minimum = minimum;
            Namespace = @namespace;
            Operator = @operator;
            Period = period;
            PolicyName = policyName;
            Statistic = statistic;
            Target = target;
            Threshold = threshold;
            Unit = unit;
        }
    }

    [OutputType]
    public sealed class MrScalarInstanceWeights
    {
        public readonly string InstanceType;
        public readonly int WeightedCapacity;

        [OutputConstructor]
        private MrScalarInstanceWeights(
            string instanceType,
            int weightedCapacity)
        {
            InstanceType = instanceType;
            WeightedCapacity = weightedCapacity;
        }
    }

    [OutputType]
    public sealed class MrScalarMasterEbsBlockDevices
    {
        public readonly int? Iops;
        public readonly int SizeInGb;
        public readonly string VolumeType;
        public readonly int? VolumesPerInstance;

        [OutputConstructor]
        private MrScalarMasterEbsBlockDevices(
            int? iops,
            int sizeInGb,
            string volumeType,
            int? volumesPerInstance)
        {
            Iops = iops;
            SizeInGb = sizeInGb;
            VolumeType = volumeType;
            VolumesPerInstance = volumesPerInstance;
        }
    }

    [OutputType]
    public sealed class MrScalarProvisioningTimeout
    {
        public readonly int Timeout;
        public readonly string TimeoutAction;

        [OutputConstructor]
        private MrScalarProvisioningTimeout(
            int timeout,
            string timeoutAction)
        {
            Timeout = timeout;
            TimeoutAction = timeoutAction;
        }
    }

    [OutputType]
    public sealed class MrScalarScheduledTasks
    {
        public readonly string Cron;
        public readonly string? DesiredCapacity;
        public readonly string InstanceGroupType;
        public readonly bool? IsEnabled;
        public readonly string? MaxCapacity;
        public readonly string? MinCapacity;
        public readonly string TaskType;

        [OutputConstructor]
        private MrScalarScheduledTasks(
            string cron,
            string? desiredCapacity,
            string instanceGroupType,
            bool? isEnabled,
            string? maxCapacity,
            string? minCapacity,
            string taskType)
        {
            Cron = cron;
            DesiredCapacity = desiredCapacity;
            InstanceGroupType = instanceGroupType;
            IsEnabled = isEnabled;
            MaxCapacity = maxCapacity;
            MinCapacity = minCapacity;
            TaskType = taskType;
        }
    }

    [OutputType]
    public sealed class MrScalarStepsFiles
    {
        public readonly string Bucket;
        public readonly string Key;

        [OutputConstructor]
        private MrScalarStepsFiles(
            string bucket,
            string key)
        {
            Bucket = bucket;
            Key = key;
        }
    }

    [OutputType]
    public sealed class MrScalarTags
    {
        public readonly string Key;
        public readonly string Value;

        [OutputConstructor]
        private MrScalarTags(
            string key,
            string value)
        {
            Key = key;
            Value = value;
        }
    }

    [OutputType]
    public sealed class MrScalarTaskEbsBlockDevices
    {
        public readonly int? Iops;
        public readonly int SizeInGb;
        public readonly string VolumeType;
        public readonly int? VolumesPerInstance;

        [OutputConstructor]
        private MrScalarTaskEbsBlockDevices(
            int? iops,
            int sizeInGb,
            string volumeType,
            int? volumesPerInstance)
        {
            Iops = iops;
            SizeInGb = sizeInGb;
            VolumeType = volumeType;
            VolumesPerInstance = volumesPerInstance;
        }
    }

    [OutputType]
    public sealed class MrScalarTaskScalingDownPolicies
    {
        public readonly string? ActionType;
        public readonly string? Adjustment;
        public readonly int Cooldown;
        public readonly ImmutableDictionary<string, object>? Dimensions;
        public readonly int EvaluationPeriods;
        public readonly string? MaxTargetCapacity;
        public readonly string? Maximum;
        public readonly string MetricName;
        public readonly string? MinTargetCapacity;
        public readonly string? Minimum;
        public readonly string Namespace;
        public readonly string Operator;
        public readonly int Period;
        public readonly string PolicyName;
        public readonly string Statistic;
        public readonly string? Target;
        public readonly double Threshold;
        public readonly string Unit;

        [OutputConstructor]
        private MrScalarTaskScalingDownPolicies(
            string? actionType,
            string? adjustment,
            int cooldown,
            ImmutableDictionary<string, object>? dimensions,
            int evaluationPeriods,
            string? maxTargetCapacity,
            string? maximum,
            string metricName,
            string? minTargetCapacity,
            string? minimum,
            string @namespace,
            string @operator,
            int period,
            string policyName,
            string statistic,
            string? target,
            double threshold,
            string unit)
        {
            ActionType = actionType;
            Adjustment = adjustment;
            Cooldown = cooldown;
            Dimensions = dimensions;
            EvaluationPeriods = evaluationPeriods;
            MaxTargetCapacity = maxTargetCapacity;
            Maximum = maximum;
            MetricName = metricName;
            MinTargetCapacity = minTargetCapacity;
            Minimum = minimum;
            Namespace = @namespace;
            Operator = @operator;
            Period = period;
            PolicyName = policyName;
            Statistic = statistic;
            Target = target;
            Threshold = threshold;
            Unit = unit;
        }
    }

    [OutputType]
    public sealed class MrScalarTaskScalingUpPolicies
    {
        public readonly string? ActionType;
        public readonly string? Adjustment;
        public readonly int Cooldown;
        public readonly ImmutableDictionary<string, object>? Dimensions;
        public readonly int EvaluationPeriods;
        public readonly string? MaxTargetCapacity;
        public readonly string? Maximum;
        public readonly string MetricName;
        public readonly string? MinTargetCapacity;
        public readonly string? Minimum;
        public readonly string Namespace;
        public readonly string Operator;
        public readonly int Period;
        public readonly string PolicyName;
        public readonly string Statistic;
        public readonly string? Target;
        public readonly double Threshold;
        public readonly string Unit;

        [OutputConstructor]
        private MrScalarTaskScalingUpPolicies(
            string? actionType,
            string? adjustment,
            int cooldown,
            ImmutableDictionary<string, object>? dimensions,
            int evaluationPeriods,
            string? maxTargetCapacity,
            string? maximum,
            string metricName,
            string? minTargetCapacity,
            string? minimum,
            string @namespace,
            string @operator,
            int period,
            string policyName,
            string statistic,
            string? target,
            double threshold,
            string unit)
        {
            ActionType = actionType;
            Adjustment = adjustment;
            Cooldown = cooldown;
            Dimensions = dimensions;
            EvaluationPeriods = evaluationPeriods;
            MaxTargetCapacity = maxTargetCapacity;
            Maximum = maximum;
            MetricName = metricName;
            MinTargetCapacity = minTargetCapacity;
            Minimum = minimum;
            Namespace = @namespace;
            Operator = @operator;
            Period = period;
            PolicyName = policyName;
            Statistic = statistic;
            Target = target;
            Threshold = threshold;
            Unit = unit;
        }
    }
    }
}

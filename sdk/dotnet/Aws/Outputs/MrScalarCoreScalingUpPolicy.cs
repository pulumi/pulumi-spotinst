// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Aws.Outputs
{

    [OutputType]
    public sealed class MrScalarCoreScalingUpPolicy
    {
        public readonly string? ActionType;
        public readonly string? Adjustment;
        public readonly int? Cooldown;
        public readonly ImmutableDictionary<string, object>? Dimensions;
        /// <summary>
        /// The number of periods over which data is compared to the specified threshold.
        /// </summary>
        public readonly int? EvaluationPeriods;
        public readonly string? MaxTargetCapacity;
        public readonly string? Maximum;
        /// <summary>
        /// The name of the metric in CloudWatch which the statement will be based on.
        /// </summary>
        public readonly string MetricName;
        public readonly string? MinTargetCapacity;
        public readonly string? Minimum;
        /// <summary>
        /// Must contain the value: `AWS/ElasticMapReduce`.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// The operator to use in order to determine if the policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`
        /// </summary>
        public readonly string? Operator;
        /// <summary>
        /// The time window in seconds over which the statistic is applied.
        /// </summary>
        public readonly int? Period;
        public readonly string PolicyName;
        /// <summary>
        /// The aggregation method of the given metric. Valid Values: `average` | `sum` | `sampleCount` | `maximum` | `minimum`
        /// </summary>
        public readonly string? Statistic;
        public readonly string? Target;
        /// <summary>
        /// The value that the specified statistic is compared to.
        /// </summary>
        public readonly double Threshold;
        /// <summary>
        /// The unit for a given metric. Valid Values: `seconds` | `microseconds` | `milliseconds` | `bytes` | `kilobytes` | `megabytes` | `gigabytes` | `terabytes` | `bits` | `kilobits` | `megabits` | `gigabits` | `terabits` | `percent` | `count` | `bytes/second` | `kilobytes/second` | `megabytes/second` | `gigabytes/second` | `terabytes/second` | `bits/second` | `kilobits/second` | `megabits/second` | `gigabits/second` | `terabits/second` | `count/second` | `none`
        /// </summary>
        public readonly string Unit;

        [OutputConstructor]
        private MrScalarCoreScalingUpPolicy(
            string? actionType,

            string? adjustment,

            int? cooldown,

            ImmutableDictionary<string, object>? dimensions,

            int? evaluationPeriods,

            string? maxTargetCapacity,

            string? maximum,

            string metricName,

            string? minTargetCapacity,

            string? minimum,

            string @namespace,

            string? @operator,

            int? period,

            string policyName,

            string? statistic,

            string? target,

            double threshold,

            string unit)
        {
            ActionType = actionType;
            Adjustment = adjustment;
            Cooldown = cooldown;
            Dimensions = dimensions;
            EvaluationPeriods = evaluationPeriods;
            MaxTargetCapacity = maxTargetCapacity;
            Maximum = maximum;
            MetricName = metricName;
            MinTargetCapacity = minTargetCapacity;
            Minimum = minimum;
            Namespace = @namespace;
            Operator = @operator;
            Period = period;
            PolicyName = policyName;
            Statistic = statistic;
            Target = target;
            Threshold = threshold;
            Unit = unit;
        }
    }
}

// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Aws.Outputs
{

    [OutputType]
    public sealed class ElastigroupUpdatePolicyRollConfigStrategyOnFailure
    {
        /// <summary>
        /// Sets the action that will take place, Accepted values are: `DETACH_OLD`, `DETACH_NEW`.
        /// </summary>
        public readonly string ActionType;
        public readonly int? BatchNum;
        /// <summary>
        /// Indicates (in seconds) the timeout to wait until instance are detached.
        /// </summary>
        public readonly int? DrainingTimeout;
        /// <summary>
        /// Decrementing the group target capacity after detaching the instances.
        /// </summary>
        public readonly bool? ShouldDecrementTargetCapacity;
        /// <summary>
        /// Indicator if the action should apply to all batches of the deployment or only the latest batch.
        /// </summary>
        public readonly bool? ShouldHandleAllBatches;

        [OutputConstructor]
        private ElastigroupUpdatePolicyRollConfigStrategyOnFailure(
            string actionType,

            int? batchNum,

            int? drainingTimeout,

            bool? shouldDecrementTargetCapacity,

            bool? shouldHandleAllBatches)
        {
            ActionType = actionType;
            BatchNum = batchNum;
            DrainingTimeout = drainingTimeout;
            ShouldDecrementTargetCapacity = shouldDecrementTargetCapacity;
            ShouldHandleAllBatches = shouldHandleAllBatches;
        }
    }
}

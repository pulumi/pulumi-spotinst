// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Aws.Outputs
{

    [OutputType]
    public sealed class OceanLaunchSpecStrategy
    {
        /// <summary>
        /// The configurable amount of time that Ocean will wait for the draining process to complete before terminating an instance. If you have not defined a draining timeout, the default of 300 seconds will be used.
        /// </summary>
        public readonly int? DrainingTimeout;
        /// <summary>
        /// Vng orientation configuration.
        /// </summary>
        public readonly Outputs.OceanLaunchSpecStrategyOrientation? Orientation;
        /// <summary>
        /// The desired percentage of the Spot instances out of all running instances for this VNG. Only available when the field is not set in the cluster directly (cluster.strategy.spotPercentage).
        /// </summary>
        public readonly int? SpotPercentage;
        /// <summary>
        /// When set as ‘true’, if savings plans commitments have available capacity, Ocean will utilize them alongside RIs (if exist) to maximize cost efficiency. If the value is set as 'null', it will automatically be inherited from the cluster level.
        /// </summary>
        public readonly bool? UtilizeCommitments;
        /// <summary>
        /// When set as ‘true’, if reserved instances exist, Ocean will utilize them before launching spot instances. If the value is set as 'null', it will automatically be inherited from the cluster level.
        /// </summary>
        public readonly bool? UtilizeReservedInstances;

        [OutputConstructor]
        private OceanLaunchSpecStrategy(
            int? drainingTimeout,

            Outputs.OceanLaunchSpecStrategyOrientation? orientation,

            int? spotPercentage,

            bool? utilizeCommitments,

            bool? utilizeReservedInstances)
        {
            DrainingTimeout = drainingTimeout;
            Orientation = orientation;
            SpotPercentage = spotPercentage;
            UtilizeCommitments = utilizeCommitments;
            UtilizeReservedInstances = utilizeReservedInstances;
        }
    }
}

// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst.Gke.Inputs
{

    public sealed class OceanImportStrategyGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The draining timeout (in seconds) before terminating the instance. If no draining timeout is defined, the default draining timeout will be used.
        /// </summary>
        [Input("drainingTimeout")]
        public Input<int>? DrainingTimeout { get; set; }

        /// <summary>
        /// Defines the desired preemptible percentage for the cluster.
        /// </summary>
        [Input("preemptiblePercentage")]
        public Input<int>? PreemptiblePercentage { get; set; }

        /// <summary>
        /// Define the provisioning model of the launched instances. Valid values: `SPOT`, `PREEMPTIBLE`.
        /// </summary>
        [Input("provisioningModel")]
        public Input<string>? ProvisioningModel { get; set; }

        /// <summary>
        /// Valid Values: `"cost", "availability", "balanced"`. Set this value to control the approach that Ocean takes when launching nodes.
        /// </summary>
        [Input("scalingOrientation")]
        public Input<string>? ScalingOrientation { get; set; }

        /// <summary>
        /// Enable committed use discounts utilization.
        /// </summary>
        [Input("shouldUtilizeCommitments")]
        public Input<bool>? ShouldUtilizeCommitments { get; set; }

        public OceanImportStrategyGetArgs()
        {
        }
        public static new OceanImportStrategyGetArgs Empty => new OceanImportStrategyGetArgs();
    }
}

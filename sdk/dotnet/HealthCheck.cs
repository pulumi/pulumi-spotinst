// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst
{
    /// <summary>
    /// Provides a Spotinst Health Check resource.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-spotinst/blob/master/website/docs/r/health_check.html.markdown.
    /// </summary>
    public partial class HealthCheck : Pulumi.CustomResource
    {
        /// <summary>
        /// Describes the check to execute.
        /// </summary>
        [Output("check")]
        public Output<Outputs.HealthCheckCheck?> Check { get; private set; } = null!;

        /// <summary>
        /// The name of the health check.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("proxyAddress")]
        public Output<string> ProxyAddress { get; private set; } = null!;

        [Output("proxyPort")]
        public Output<int?> ProxyPort { get; private set; } = null!;

        /// <summary>
        /// The ID of the resource to check.
        /// </summary>
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;


        /// <summary>
        /// Create a HealthCheck resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HealthCheck(string name, HealthCheckArgs args, CustomResourceOptions? options = null)
            : base("spotinst:index/healthCheck:HealthCheck", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private HealthCheck(string name, Input<string> id, HealthCheckState? state = null, CustomResourceOptions? options = null)
            : base("spotinst:index/healthCheck:HealthCheck", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HealthCheck resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HealthCheck Get(string name, Input<string> id, HealthCheckState? state = null, CustomResourceOptions? options = null)
        {
            return new HealthCheck(name, id, state, options);
        }
    }

    public sealed class HealthCheckArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Describes the check to execute.
        /// </summary>
        [Input("check")]
        public Input<Inputs.HealthCheckCheckArgs>? Check { get; set; }

        /// <summary>
        /// The name of the health check.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("proxyAddress", required: true)]
        public Input<string> ProxyAddress { get; set; } = null!;

        [Input("proxyPort")]
        public Input<int>? ProxyPort { get; set; }

        /// <summary>
        /// The ID of the resource to check.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        public HealthCheckArgs()
        {
        }
    }

    public sealed class HealthCheckState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Describes the check to execute.
        /// </summary>
        [Input("check")]
        public Input<Inputs.HealthCheckCheckGetArgs>? Check { get; set; }

        /// <summary>
        /// The name of the health check.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("proxyAddress")]
        public Input<string>? ProxyAddress { get; set; }

        [Input("proxyPort")]
        public Input<int>? ProxyPort { get; set; }

        /// <summary>
        /// The ID of the resource to check.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        public HealthCheckState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class HealthCheckCheckArgs : Pulumi.ResourceArgs
    {
        [Input("endPoint", required: true)]
        public Input<string> EndPoint { get; set; } = null!;

        /// <summary>
        /// The number of consecutive successful health checks that must occur before declaring an instance healthy.
        /// </summary>
        [Input("healthy", required: true)]
        public Input<int> Healthy { get; set; } = null!;

        /// <summary>
        /// The amount of time (in seconds) between each health check (minimum: 10).
        /// </summary>
        [Input("interval", required: true)]
        public Input<int> Interval { get; set; } = null!;

        /// <summary>
        /// The port of the Spotinst HCS (default: 80).
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// The protocol to use to connect with the instance. Valid values: http, https.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("timeOut", required: true)]
        public Input<int> TimeOut { get; set; } = null!;

        /// <summary>
        /// The number of consecutive failed health checks that must occur before declaring an instance unhealthy.
        /// </summary>
        [Input("unhealthy", required: true)]
        public Input<int> Unhealthy { get; set; } = null!;

        public HealthCheckCheckArgs()
        {
        }
    }

    public sealed class HealthCheckCheckGetArgs : Pulumi.ResourceArgs
    {
        [Input("endPoint", required: true)]
        public Input<string> EndPoint { get; set; } = null!;

        /// <summary>
        /// The number of consecutive successful health checks that must occur before declaring an instance healthy.
        /// </summary>
        [Input("healthy", required: true)]
        public Input<int> Healthy { get; set; } = null!;

        /// <summary>
        /// The amount of time (in seconds) between each health check (minimum: 10).
        /// </summary>
        [Input("interval", required: true)]
        public Input<int> Interval { get; set; } = null!;

        /// <summary>
        /// The port of the Spotinst HCS (default: 80).
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// The protocol to use to connect with the instance. Valid values: http, https.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("timeOut", required: true)]
        public Input<int> TimeOut { get; set; } = null!;

        /// <summary>
        /// The number of consecutive failed health checks that must occur before declaring an instance unhealthy.
        /// </summary>
        [Input("unhealthy", required: true)]
        public Input<int> Unhealthy { get; set; } = null!;

        public HealthCheckCheckGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class HealthCheckCheck
    {
        public readonly string EndPoint;
        /// <summary>
        /// The number of consecutive successful health checks that must occur before declaring an instance healthy.
        /// </summary>
        public readonly int Healthy;
        /// <summary>
        /// The amount of time (in seconds) between each health check (minimum: 10).
        /// </summary>
        public readonly int Interval;
        /// <summary>
        /// The port of the Spotinst HCS (default: 80).
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The protocol to use to connect with the instance. Valid values: http, https.
        /// </summary>
        public readonly string Protocol;
        public readonly int TimeOut;
        /// <summary>
        /// The number of consecutive failed health checks that must occur before declaring an instance unhealthy.
        /// </summary>
        public readonly int Unhealthy;

        [OutputConstructor]
        private HealthCheckCheck(
            string endPoint,
            int healthy,
            int interval,
            int port,
            string protocol,
            int timeOut,
            int unhealthy)
        {
            EndPoint = endPoint;
            Healthy = healthy;
            Interval = interval;
            Port = port;
            Protocol = protocol;
            TimeOut = timeOut;
            Unhealthy = unhealthy;
        }
    }
    }
}

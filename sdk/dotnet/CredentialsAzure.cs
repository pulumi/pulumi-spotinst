// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SpotInst
{
    /// <summary>
    /// Provides a Spotinst credential Azure resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using SpotInst = Pulumi.SpotInst;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // set credential Azure
    ///     var credential = new SpotInst.CredentialsAzure("credential", new()
    ///     {
    ///         AccountId = "act-123456",
    ///         ClientId = "redacted",
    ///         ClientSecret = "redacted",
    ///         TenantId = "redacted",
    ///         SubscriptionId = "redacted",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [SpotInstResourceType("spotinst:index/credentialsAzure:CredentialsAzure")]
    public partial class CredentialsAzure : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the account associated with your token.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Set the application ID.
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        /// <summary>
        /// Set the key secret.
        /// </summary>
        [Output("clientSecret")]
        public Output<string> ClientSecret { get; private set; } = null!;

        /// <summary>
        /// Set the subscription ID.
        /// </summary>
        [Output("subscriptionId")]
        public Output<string> SubscriptionId { get; private set; } = null!;

        /// <summary>
        /// Set the directory ID.
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;


        /// <summary>
        /// Create a CredentialsAzure resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CredentialsAzure(string name, CredentialsAzureArgs args, CustomResourceOptions? options = null)
            : base("spotinst:index/credentialsAzure:CredentialsAzure", name, args ?? new CredentialsAzureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CredentialsAzure(string name, Input<string> id, CredentialsAzureState? state = null, CustomResourceOptions? options = null)
            : base("spotinst:index/credentialsAzure:CredentialsAzure", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CredentialsAzure resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CredentialsAzure Get(string name, Input<string> id, CredentialsAzureState? state = null, CustomResourceOptions? options = null)
        {
            return new CredentialsAzure(name, id, state, options);
        }
    }

    public sealed class CredentialsAzureArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the account associated with your token.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Set the application ID.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// Set the key secret.
        /// </summary>
        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        /// <summary>
        /// Set the subscription ID.
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        /// <summary>
        /// Set the directory ID.
        /// </summary>
        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public CredentialsAzureArgs()
        {
        }
        public static new CredentialsAzureArgs Empty => new CredentialsAzureArgs();
    }

    public sealed class CredentialsAzureState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the account associated with your token.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Set the application ID.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// Set the key secret.
        /// </summary>
        [Input("clientSecret")]
        public Input<string>? ClientSecret { get; set; }

        /// <summary>
        /// Set the subscription ID.
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        /// <summary>
        /// Set the directory ID.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public CredentialsAzureState()
        {
        }
        public static new CredentialsAzureState Empty => new CredentialsAzureState();
    }
}

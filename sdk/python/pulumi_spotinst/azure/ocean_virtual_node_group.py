# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables
from . import outputs
from ._inputs import *

__all__ = ['OceanVirtualNodeGroup']


class OceanVirtualNodeGroup(pulumi.CustomResource):
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 autoscales: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupAutoscaleArgs']]]]] = None,
                 labels: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupLabelArgs']]]]] = None,
                 launch_specifications: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupLaunchSpecificationArgs']]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ocean_id: Optional[pulumi.Input[str]] = None,
                 resource_limits: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupResourceLimitArgs']]]]] = None,
                 taints: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupTaintArgs']]]]] = None,
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        Manages a Spotinst Ocean AKS Virtual Node Group resource.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_spotinst as spotinst

        example = spotinst.azure.OceanVirtualNodeGroup("example",
            autoscales=[spotinst.azure.OceanVirtualNodeGroupAutoscaleArgs(
                autoscale_headroom=spotinst.azure.OceanVirtualNodeGroupAutoscaleAutoscaleHeadroomArgs(
                    cpu_per_unit=4,
                    gpu_per_unit=8,
                    memory_per_unit=100,
                    num_of_units=16,
                ),
            )],
            labels=[spotinst.azure.OceanVirtualNodeGroupLabelArgs(
                key="label_key",
                value="label_value",
            )],
            launch_specifications=[spotinst.azure.OceanVirtualNodeGroupLaunchSpecificationArgs(
                os_disk=spotinst.azure.OceanVirtualNodeGroupLaunchSpecificationOsDiskArgs(
                    size_gb=100,
                    type="Standard_LRS",
                ),
                tags=[spotinst.azure.OceanVirtualNodeGroupLaunchSpecificationTagArgs(
                    key="label_key",
                    value="label_value",
                )],
            )],
            ocean_id="o-12345",
            resource_limits=[spotinst.azure.OceanVirtualNodeGroupResourceLimitArgs(
                max_instance_count=4,
            )],
            taints=[spotinst.azure.OceanVirtualNodeGroupTaintArgs(
                effect="NoSchedule",
                key="taint_key",
                value="taint_value",
            )])
        ```

        ```python
        import pulumi

        pulumi.export("oceanId", spotinst_ocean_aks_["example"]["id"])
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupAutoscaleArgs']]]] autoscales: .
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupLabelArgs']]]] labels: Additional labels for the virtual node group. Only custom user labels are allowed. Kubernetes built-in labels and Spot internal labels are not allowed.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupLaunchSpecificationArgs']]]] launch_specifications: .
        :param pulumi.Input[str] name: Set name for the virtual node group.
        :param pulumi.Input[str] ocean_id: The Ocean cluster ID.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupResourceLimitArgs']]]] resource_limits: .
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupTaintArgs']]]] taints: Additional taints for the virtual node group. Only custom user labels are allowed. Kubernetes built-in labels and Spot internal labels are not allowed.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['autoscales'] = autoscales
            __props__['labels'] = labels
            __props__['launch_specifications'] = launch_specifications
            __props__['name'] = name
            if ocean_id is None and not opts.urn:
                raise TypeError("Missing required property 'ocean_id'")
            __props__['ocean_id'] = ocean_id
            __props__['resource_limits'] = resource_limits
            __props__['taints'] = taints
        super(OceanVirtualNodeGroup, __self__).__init__(
            'spotinst:azure/oceanVirtualNodeGroup:OceanVirtualNodeGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            autoscales: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupAutoscaleArgs']]]]] = None,
            labels: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupLabelArgs']]]]] = None,
            launch_specifications: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupLaunchSpecificationArgs']]]]] = None,
            name: Optional[pulumi.Input[str]] = None,
            ocean_id: Optional[pulumi.Input[str]] = None,
            resource_limits: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupResourceLimitArgs']]]]] = None,
            taints: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupTaintArgs']]]]] = None) -> 'OceanVirtualNodeGroup':
        """
        Get an existing OceanVirtualNodeGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupAutoscaleArgs']]]] autoscales: .
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupLabelArgs']]]] labels: Additional labels for the virtual node group. Only custom user labels are allowed. Kubernetes built-in labels and Spot internal labels are not allowed.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupLaunchSpecificationArgs']]]] launch_specifications: .
        :param pulumi.Input[str] name: Set name for the virtual node group.
        :param pulumi.Input[str] ocean_id: The Ocean cluster ID.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupResourceLimitArgs']]]] resource_limits: .
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OceanVirtualNodeGroupTaintArgs']]]] taints: Additional taints for the virtual node group. Only custom user labels are allowed. Kubernetes built-in labels and Spot internal labels are not allowed.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["autoscales"] = autoscales
        __props__["labels"] = labels
        __props__["launch_specifications"] = launch_specifications
        __props__["name"] = name
        __props__["ocean_id"] = ocean_id
        __props__["resource_limits"] = resource_limits
        __props__["taints"] = taints
        return OceanVirtualNodeGroup(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def autoscales(self) -> pulumi.Output[Optional[Sequence['outputs.OceanVirtualNodeGroupAutoscale']]]:
        """
        .
        """
        return pulumi.get(self, "autoscales")

    @property
    @pulumi.getter
    def labels(self) -> pulumi.Output[Optional[Sequence['outputs.OceanVirtualNodeGroupLabel']]]:
        """
        Additional labels for the virtual node group. Only custom user labels are allowed. Kubernetes built-in labels and Spot internal labels are not allowed.
        """
        return pulumi.get(self, "labels")

    @property
    @pulumi.getter(name="launchSpecifications")
    def launch_specifications(self) -> pulumi.Output[Optional[Sequence['outputs.OceanVirtualNodeGroupLaunchSpecification']]]:
        """
        .
        """
        return pulumi.get(self, "launch_specifications")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Set name for the virtual node group.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="oceanId")
    def ocean_id(self) -> pulumi.Output[str]:
        """
        The Ocean cluster ID.
        """
        return pulumi.get(self, "ocean_id")

    @property
    @pulumi.getter(name="resourceLimits")
    def resource_limits(self) -> pulumi.Output[Optional[Sequence['outputs.OceanVirtualNodeGroupResourceLimit']]]:
        """
        .
        """
        return pulumi.get(self, "resource_limits")

    @property
    @pulumi.getter
    def taints(self) -> pulumi.Output[Optional[Sequence['outputs.OceanVirtualNodeGroupTaint']]]:
        """
        Additional taints for the virtual node group. Only custom user labels are allowed. Kubernetes built-in labels and Spot internal labels are not allowed.
        """
        return pulumi.get(self, "taints")

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

